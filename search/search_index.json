{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"CLI for Microsoft 365 \u00b6 Using the CLI for Microsoft 365, you can manage your Microsoft 365 tenant and SharePoint Framework projects on any platform. No matter if you are on Windows, macOS or Linux, using Bash, Cmder or PowerShell, using the CLI for Microsoft 365 you can configure Microsoft 365, manage SharePoint Framework projects and build automation scripts. Installation \u00b6 The CLI for Microsoft 365 is distributed as an NPM package. To use it, install it globally using: npm i -g @pnp/cli-microsoft365 or using yarn: yarn global add @pnp/cli-microsoft365 Getting started \u00b6 Start managing the settings of your Microsoft 365 tenant by logging in to it, using the login command, for example: m365 login To list all available commands, type in the CLI for Microsoft 365 prompt help : m365 help See the User Guide to learn more about the CLI for Microsoft 365 and its capabilities. Microsoft 365 Platform Community \u00b6 CLI for Microsoft 365 is a Microsoft 365 Platform Community (PnP) project. Microsoft 365 Platform Community is a virtual team consisting of Microsoft employees and community members focused on helping the community make the best use of Microsoft products. CLI for Microsoft 365 is an open-source project not affiliated with Microsoft and not covered by Microsoft support. If you experience any issues using the CLI, please submit an issue in the issues list . The project is built and managed publicly on GitHub at https://github.com/pnp/cli-microsoft365 and accepts community contributions. We would encourage you to try it and tell us what you think . We would also love your help! We have a number of feature requests that are a good starting point to contribute to the project. Community Discord server \u00b6 We also have a community Discord server where you can hang out, share, collaborate, and discuss more about the CLI for Microsoft 365!","title":"CLI for Microsoft 365"},{"location":"#cli-for-microsoft-365","text":"Using the CLI for Microsoft 365, you can manage your Microsoft 365 tenant and SharePoint Framework projects on any platform. No matter if you are on Windows, macOS or Linux, using Bash, Cmder or PowerShell, using the CLI for Microsoft 365 you can configure Microsoft 365, manage SharePoint Framework projects and build automation scripts.","title":"CLI for Microsoft 365"},{"location":"#installation","text":"The CLI for Microsoft 365 is distributed as an NPM package. To use it, install it globally using: npm i -g @pnp/cli-microsoft365 or using yarn: yarn global add @pnp/cli-microsoft365","title":"Installation"},{"location":"#getting-started","text":"Start managing the settings of your Microsoft 365 tenant by logging in to it, using the login command, for example: m365 login To list all available commands, type in the CLI for Microsoft 365 prompt help : m365 help See the User Guide to learn more about the CLI for Microsoft 365 and its capabilities.","title":"Getting started"},{"location":"#microsoft-365-platform-community","text":"CLI for Microsoft 365 is a Microsoft 365 Platform Community (PnP) project. Microsoft 365 Platform Community is a virtual team consisting of Microsoft employees and community members focused on helping the community make the best use of Microsoft products. CLI for Microsoft 365 is an open-source project not affiliated with Microsoft and not covered by Microsoft support. If you experience any issues using the CLI, please submit an issue in the issues list . The project is built and managed publicly on GitHub at https://github.com/pnp/cli-microsoft365 and accepts community contributions. We would encourage you to try it and tell us what you think . We would also love your help! We have a number of feature requests that are a good starting point to contribute to the project.","title":"Microsoft 365 Platform Community"},{"location":"#community-discord-server","text":"We also have a community Discord server where you can hang out, share, collaborate, and discuss more about the CLI for Microsoft 365!","title":"Community Discord server"},{"location":"_clisettings/","text":"Available settings \u00b6 Following is the list of configuration settings available in CLI for Microsoft 365. Setting name Definition Default value autoOpenLinksInBrowser Automatically open the browser for all commands which return a url and expect the user to copy paste this to the browser. For example when logging in, using m365 login in device code mode. false copyDeviceCodeToClipboard Automatically copy the device code to the clipboard when running m365 login command in device code mode false csvEscape Single character used for escaping; only apply to characters matching the quote and the escape options \" csvHeader Display the column names on the first line true csvQuote The quote characters surrounding a field. An empty quote value will preserve the original field, whether it contains quotation marks or not. csvQuoted Quote all the non-empty fields even if not required false csvQuotedEmpty Quote empty strings and overrides quoted_string on empty strings when defined false errorOutput Defines if errors should be written to stdout or stderr stderr output Defines the default output when issuing a command json printErrorsAsPlainText When output mode is set to json , print error messages as plain-text rather than JSON true prompt Prompts for missing values in required options false showHelpOnFailure Automatically display help when executing a command failed true","title":" clisettings"},{"location":"_clisettings/#available-settings","text":"Following is the list of configuration settings available in CLI for Microsoft 365. Setting name Definition Default value autoOpenLinksInBrowser Automatically open the browser for all commands which return a url and expect the user to copy paste this to the browser. For example when logging in, using m365 login in device code mode. false copyDeviceCodeToClipboard Automatically copy the device code to the clipboard when running m365 login command in device code mode false csvEscape Single character used for escaping; only apply to characters matching the quote and the escape options \" csvHeader Display the column names on the first line true csvQuote The quote characters surrounding a field. An empty quote value will preserve the original field, whether it contains quotation marks or not. csvQuoted Quote all the non-empty fields even if not required false csvQuotedEmpty Quote empty strings and overrides quoted_string on empty strings when defined false errorOutput Defines if errors should be written to stdout or stderr stderr output Defines the default output when issuing a command json printErrorsAsPlainText When output mode is set to json , print error messages as plain-text rather than JSON true prompt Prompts for missing values in required options false showHelpOnFailure Automatically display help when executing a command failed true","title":"Available settings"},{"location":"v3-upgrade-guidance/","text":"v3 Upgrade Guidance \u00b6 We recently announced that the next version of the Office 365 CLI will be v3 and is planned to be released on September 6, 2020. With this release there are a number of breaking changes, so to help you make the transition from Office 365 CLI v2 to CLI for Microsoft 365 v3 , we have listed those changes, why they have been made and what action you may need to take. New package name \u00b6 With the move to the new name, a new package has been published to npm with the name, @pnp/cli-microsoft365 As with v2, we will still provide a few variations of package. Use @pnp/cli-microsoft365@next for the latest beta version, we release beta versions on a regular basis, for you to try new features and fixes before the monthly stable release. Use @pnp/cli-microsoft365 or @pnp/cli-microsoft365@latest for the latest stable version, which we release every month. Why CLI for Microsoft 365 and not Microsoft 365 CLI ? \u00b6 This is a community-owned product, as Microsoft uses product names that begin with Microsoft and Microsoft 365 for products they own, we did not want to cause confusion between the two. What action do I need to take? If you have scripts using @pnp/office365-cli then we would encourage you to update your installed package to use the new package name, @pnp/cli-microsoft365 , this will ensure that you get all the latest updates and patches. Attention The @pnp/office365-cli package will still remain on npm, but will be deprecated following the release of v3. It will not receive any updates or fixes, therefore we would strongly recommend that you should plan to upgrade to the new package. Removal of the o365 command alias \u00b6 In Office 365 CLI v2, we provided two command aliases, o365 and later, m365 . With the release of v3, we will be removing the o365 command alias. What action do I need to take? After upgrading to v3, @pnp/cli-microsoft365 , any scripts that use the o365 alias will need to be updated to use m365 alias instead. Renaming of CLI environment variables \u00b6 In Office 365 CLI v2, we provided two environment variables, OFFICE365CLI_AADAPPID and OFFICE365CLI_TENANT . These environment variable could be updated to point the CLI to your own custom Azure Active Directory identity to use for logging into your Microsoft 365 tenant instead of using the multi-tenant PnP Management Shell identity used as the default identity. Find out more about this feature: Using your own Azure AD identity These environment variables have been renamed following the rename of the package. What action do I need to take? After upgrading to v3, @pnp/cli-microsoft365 , any scripts that make use of a custom Azure AD identity for authentication will need to update the setting of the environment variables to use the new names, CLIMICROSOFT365_AADAPPID and CLIMICROSOFT365_TENANT . Removal of the global --pretty option \u00b6 In Office 365 CLI v2, we introduced a global option to prettify the JSON output, this helped to make the output more readable when working with large JSON responses. Rather than having this feature as an explicit option, we have decided to remove this option and make the default JSON output prettified. What action do I need to take? After upgrading to v3, @pnp/cli-microsoft365 , any scripts that use the --pretty option will need to be updated and you should remove the option from the command to ensure the it works as expected. Removal of immersive mode \u00b6 In Office 365 CLI v2, we provided an immersive mode, which you could enter by executing the o365 or m365 command with no options passed, however we made the decision to remove the immersive mode from the CLI. For a couple of reasons, the first being that the usage of this mode was very low, secondly, removing this mode simplifies our code base and removes a dependency on the Vorpal library which the CLI uses behind the scenes, making the CLI much more maintainable going forwards. What action do I need to take? There is no action for you to take. Removal of --outputFile option \u00b6 In Office 365 CLI v2, we provided an option called --outputFile on certain commands. This option provided a way of saving the output of the command to a local file, this was particularly useful when using the immersive mode where it was not possible to use any shell commands. As we have removed the immersive mode in v3, the requirement for a specific option is no longer required and it is more convenient to use shell commands for this purpose. What action do I need to take? After upgrading to v3, @pnp/cli-microsoft365 , any scripts that use the --outputFile option should be updated. Remove the option and replace with a shell command to send the output to a file, for example, m365 aad o365group report activitycounts --period D7 --output json --outputFile \"o365groupactivitycounts.json\" becomes m365 aad o365group report activitycounts --period D7 --output json > \"o365groupactivitycounts.json\" Removal of deprecated aliases \u00b6 In Office 365 CLI v2, we had a number of aliases that had been deprecated but remained within the CLI for backwards compatibility. In v3, we have taken the decision to remove these aliases, they are listed below with their replacement aliases. consent > m365 cli consent --reconsent > m365 cli reconsent --completion:clink:generate > m365 cli completion clink update --completion:sh:generate > m365 cli completion sh update --completion:sh:setup > m365 cli completion sh setup accesstoken get > m365 util accesstoken get What action do I need to take? After upgrading to v3, @pnp/cli-microsoft365 , any scripts that use any of the deprecated aliases option should be updated to use their replacement aliases. Deprecation of support for options with spaces without quotes \u00b6 In Office 365 CLI v2, it was possible to specify options with spaces without quotes. For example, m365 spo site add --title My new site , going forwards into v3 we will not support this. What action do I need to take? After upgrading to v3, @pnp/cli-microsoft365 , any scripts that use option values containing spaces, must be updated to wrap the option value in quotes, for example, m365 spo site add --title My new site will become m365 spo site add --title \"My new site\" , this will ensure that the command works as expected. Renaming of --query option on spo search command \u00b6 In Office 365 CLI v2, we identified that on the spo search command the option used to pass in the search query was called --query , unfortunately when we introduced the ability to use JMESPath queries we introduced a global option with the same name and this caused the command to break. What action do I need to take? After upgrading to v3, @pnp/cli-microsoft365 , rename the --query option to --queryText when using the spo search command. Removal of -h short option on spo contenttype field set and spo hidedefaultthemes set commands \u00b6 In Office 365 CLI v2, to return usage examples of a command in your shell, you can use the --help option. We wanted to introduce a short version of this option however we had identified that two commands already had the -h short option implemented. We have taken the step to make -h short option a reserved global option in v3, which makes the CLI consistent with other CLIs such as the Azure CLI. What action do I need to take? After upgrading to v3, @pnp/cli-microsoft365 , any scripts that use the the short options on spo contenttype field set and spo hidedefaultthemes set commands should be updated to use their longer named options, --hidden and --hideDefaultTheme , respectively.","title":"v3 Upgrade Guidance"},{"location":"v3-upgrade-guidance/#v3-upgrade-guidance","text":"We recently announced that the next version of the Office 365 CLI will be v3 and is planned to be released on September 6, 2020. With this release there are a number of breaking changes, so to help you make the transition from Office 365 CLI v2 to CLI for Microsoft 365 v3 , we have listed those changes, why they have been made and what action you may need to take.","title":"v3 Upgrade Guidance"},{"location":"v3-upgrade-guidance/#new-package-name","text":"With the move to the new name, a new package has been published to npm with the name, @pnp/cli-microsoft365 As with v2, we will still provide a few variations of package. Use @pnp/cli-microsoft365@next for the latest beta version, we release beta versions on a regular basis, for you to try new features and fixes before the monthly stable release. Use @pnp/cli-microsoft365 or @pnp/cli-microsoft365@latest for the latest stable version, which we release every month.","title":"New package name"},{"location":"v3-upgrade-guidance/#why-cli-for-microsoft-365-and-not-microsoft-365-cli","text":"This is a community-owned product, as Microsoft uses product names that begin with Microsoft and Microsoft 365 for products they own, we did not want to cause confusion between the two. What action do I need to take? If you have scripts using @pnp/office365-cli then we would encourage you to update your installed package to use the new package name, @pnp/cli-microsoft365 , this will ensure that you get all the latest updates and patches. Attention The @pnp/office365-cli package will still remain on npm, but will be deprecated following the release of v3. It will not receive any updates or fixes, therefore we would strongly recommend that you should plan to upgrade to the new package.","title":"Why CLI for Microsoft 365 and not Microsoft 365 CLI?"},{"location":"v3-upgrade-guidance/#removal-of-the-o365-command-alias","text":"In Office 365 CLI v2, we provided two command aliases, o365 and later, m365 . With the release of v3, we will be removing the o365 command alias. What action do I need to take? After upgrading to v3, @pnp/cli-microsoft365 , any scripts that use the o365 alias will need to be updated to use m365 alias instead.","title":"Removal of the o365 command alias"},{"location":"v3-upgrade-guidance/#renaming-of-cli-environment-variables","text":"In Office 365 CLI v2, we provided two environment variables, OFFICE365CLI_AADAPPID and OFFICE365CLI_TENANT . These environment variable could be updated to point the CLI to your own custom Azure Active Directory identity to use for logging into your Microsoft 365 tenant instead of using the multi-tenant PnP Management Shell identity used as the default identity. Find out more about this feature: Using your own Azure AD identity These environment variables have been renamed following the rename of the package. What action do I need to take? After upgrading to v3, @pnp/cli-microsoft365 , any scripts that make use of a custom Azure AD identity for authentication will need to update the setting of the environment variables to use the new names, CLIMICROSOFT365_AADAPPID and CLIMICROSOFT365_TENANT .","title":"Renaming of CLI environment variables"},{"location":"v3-upgrade-guidance/#removal-of-the-global-pretty-option","text":"In Office 365 CLI v2, we introduced a global option to prettify the JSON output, this helped to make the output more readable when working with large JSON responses. Rather than having this feature as an explicit option, we have decided to remove this option and make the default JSON output prettified. What action do I need to take? After upgrading to v3, @pnp/cli-microsoft365 , any scripts that use the --pretty option will need to be updated and you should remove the option from the command to ensure the it works as expected.","title":"Removal of the global --pretty option"},{"location":"v3-upgrade-guidance/#removal-of-immersive-mode","text":"In Office 365 CLI v2, we provided an immersive mode, which you could enter by executing the o365 or m365 command with no options passed, however we made the decision to remove the immersive mode from the CLI. For a couple of reasons, the first being that the usage of this mode was very low, secondly, removing this mode simplifies our code base and removes a dependency on the Vorpal library which the CLI uses behind the scenes, making the CLI much more maintainable going forwards. What action do I need to take? There is no action for you to take.","title":"Removal of immersive mode"},{"location":"v3-upgrade-guidance/#removal-of-outputfile-option","text":"In Office 365 CLI v2, we provided an option called --outputFile on certain commands. This option provided a way of saving the output of the command to a local file, this was particularly useful when using the immersive mode where it was not possible to use any shell commands. As we have removed the immersive mode in v3, the requirement for a specific option is no longer required and it is more convenient to use shell commands for this purpose. What action do I need to take? After upgrading to v3, @pnp/cli-microsoft365 , any scripts that use the --outputFile option should be updated. Remove the option and replace with a shell command to send the output to a file, for example, m365 aad o365group report activitycounts --period D7 --output json --outputFile \"o365groupactivitycounts.json\" becomes m365 aad o365group report activitycounts --period D7 --output json > \"o365groupactivitycounts.json\"","title":"Removal of --outputFile option"},{"location":"v3-upgrade-guidance/#removal-of-deprecated-aliases","text":"In Office 365 CLI v2, we had a number of aliases that had been deprecated but remained within the CLI for backwards compatibility. In v3, we have taken the decision to remove these aliases, they are listed below with their replacement aliases. consent > m365 cli consent --reconsent > m365 cli reconsent --completion:clink:generate > m365 cli completion clink update --completion:sh:generate > m365 cli completion sh update --completion:sh:setup > m365 cli completion sh setup accesstoken get > m365 util accesstoken get What action do I need to take? After upgrading to v3, @pnp/cli-microsoft365 , any scripts that use any of the deprecated aliases option should be updated to use their replacement aliases.","title":"Removal of deprecated aliases"},{"location":"v3-upgrade-guidance/#deprecation-of-support-for-options-with-spaces-without-quotes","text":"In Office 365 CLI v2, it was possible to specify options with spaces without quotes. For example, m365 spo site add --title My new site , going forwards into v3 we will not support this. What action do I need to take? After upgrading to v3, @pnp/cli-microsoft365 , any scripts that use option values containing spaces, must be updated to wrap the option value in quotes, for example, m365 spo site add --title My new site will become m365 spo site add --title \"My new site\" , this will ensure that the command works as expected.","title":"Deprecation of support for options with spaces without quotes"},{"location":"v3-upgrade-guidance/#renaming-of-query-option-on-spo-search-command","text":"In Office 365 CLI v2, we identified that on the spo search command the option used to pass in the search query was called --query , unfortunately when we introduced the ability to use JMESPath queries we introduced a global option with the same name and this caused the command to break. What action do I need to take? After upgrading to v3, @pnp/cli-microsoft365 , rename the --query option to --queryText when using the spo search command.","title":"Renaming of --query option on spo search command"},{"location":"v3-upgrade-guidance/#removal-of-h-short-option-on-spo-contenttype-field-set-and-spo-hidedefaultthemes-set-commands","text":"In Office 365 CLI v2, to return usage examples of a command in your shell, you can use the --help option. We wanted to introduce a short version of this option however we had identified that two commands already had the -h short option implemented. We have taken the step to make -h short option a reserved global option in v3, which makes the CLI consistent with other CLIs such as the Azure CLI. What action do I need to take? After upgrading to v3, @pnp/cli-microsoft365 , any scripts that use the the short options on spo contenttype field set and spo hidedefaultthemes set commands should be updated to use their longer named options, --hidden and --hideDefaultTheme , respectively.","title":"Removal of -h short option on spo contenttype field set and spo hidedefaultthemes set commands"},{"location":"v4-upgrade-guidance/","text":"v4 Upgrade Guidance \u00b6 The v4 of CLI for Microsoft 365 introduces several breaking changes. To help you upgrade to the latest version of CLI for Microsoft 365, we've listed those changes along with any actions you may need to take. Changed default output to JSON \u00b6 When building scripts using CLI for Microsoft 365, you typically use the JSON output to parse the response into an object and read its properties. In older version of CLI, the default output was text and you had to explicitly request JSON output mode using the --output option. As we see increased interest in building scripts with CLI for Microsoft 365, in v4 we switched the default output to JSON. What action do I need to take? You no longer need to use --output json in your scripts to use the JSON output mode. If you want to use the text output mode as default, you can configure it by executing m365 cli config set --key output --value text . In spo listitem get changed the fields option to properties \u00b6 In the spo listitem get command we renamed the fields option to properties to better reflect the fact that the option allows you to specify not only the names of fields but also list item properties to retrieve. What action do I need to take? When using the spo listitem get command, use --properties instead of --fields to specify the list of properties to retrieve. Removed deprecated options that point to file paths \u00b6 In v3.5 we introduced in the CLI for Microsoft 365 the ability to use the @ token to pass the contents of a local file as the value of an option. With that, we no longer need separate options that let you specify a file path to pass file contents into a command. In this version, we removed the obsolete options in favor of options that support passing value both in-line and from a file using the @ token. What action do I need to take? in the outlook mail send command, replace the --bodyContentsFilePath option with --bodyContents @file.ext in the spo theme set command, replace the --filePath option with --theme @file.ext in the teams team add command, replace the --templatePath option with --template @file.ext Removed the value wrapper in some commands \u00b6 In several commands, in the JSON output mode, we're inconsistently returning the data retrieved from Microsoft 365, wrapped in a value object. In this version, we removed the value wrapper from the output and aligned the commands with other commands in the CLI for Microsoft 365. What action do I need to take? When using the following commands in JSON output mode, update the logic processing the retrieved data to expect an array of objects without the value wrapper: spo group list spo user list spo web list tenant service list tenant service message list tenant status list Removed duplicate ID property in JSON output for spo listitem commands \u00b6 In spo listitem commands, we were returning raw data from the SharePoint API, that contain the Id and ID properties. These properties lead to conflicts when trying to convert the output into an object in PowerShell. To avoid this issue, in v4 we removed the ID property from the output and kept the Id property. What action do I need to take? If you read list item IDs in scripts built using CLI for Microsoft 365, update your code to use the Id property. Separated aad o365group user list from teams user list \u00b6 In the previous versions of CLI for Microsoft 365, the teams user list command was an alias of the aad o365group user list command and you could use either name in conjunction with Teams- or Office 365 groups-specific options. This led to confusion. As the CLI for Microsoft 365 evolved, we decided to split the commands and use only options specific to each workload. What action do I need to take? In the aad o365group user list command, you can only use the --groupId option which is now required. Use this command when working with Office 365 groups. When working with Microsoft Teams teams, use the teams user list command for which you need to use the required --teamId option. Separated aad o365group get from teams team get \u00b6 In the previous version of CLI for Microsoft 365, the teams team get command was an alias of the aad o365group get command. The aad o365group get command uses the groups endpoint from Microsoft Graph to retrieve information about Office 365 groups. With the release of the teams endpoint on Microsoft Graph, which returns specific information about Microsoft Teams teams, we decided to separate the two commands to allow you to retrieve the relevant information that you need to work with both workloads. What action do I need to take? If you use the aad o365group get command to retrieve information about Office 365 groups, you don't need to change anything. If you use the teams team get command to retrieve information about Teams, verify the new type of data returned by the command. Depending on your scripts, you might need to additionally run the aad o365group get command to get additional information about the underlying Office 365 group.","title":"v4 Upgrade Guidance"},{"location":"v4-upgrade-guidance/#v4-upgrade-guidance","text":"The v4 of CLI for Microsoft 365 introduces several breaking changes. To help you upgrade to the latest version of CLI for Microsoft 365, we've listed those changes along with any actions you may need to take.","title":"v4 Upgrade Guidance"},{"location":"v4-upgrade-guidance/#changed-default-output-to-json","text":"When building scripts using CLI for Microsoft 365, you typically use the JSON output to parse the response into an object and read its properties. In older version of CLI, the default output was text and you had to explicitly request JSON output mode using the --output option. As we see increased interest in building scripts with CLI for Microsoft 365, in v4 we switched the default output to JSON. What action do I need to take? You no longer need to use --output json in your scripts to use the JSON output mode. If you want to use the text output mode as default, you can configure it by executing m365 cli config set --key output --value text .","title":"Changed default output to JSON"},{"location":"v4-upgrade-guidance/#in-spo-listitem-get-changed-the-fields-option-to-properties","text":"In the spo listitem get command we renamed the fields option to properties to better reflect the fact that the option allows you to specify not only the names of fields but also list item properties to retrieve. What action do I need to take? When using the spo listitem get command, use --properties instead of --fields to specify the list of properties to retrieve.","title":"In spo listitem get changed the fields option to properties"},{"location":"v4-upgrade-guidance/#removed-deprecated-options-that-point-to-file-paths","text":"In v3.5 we introduced in the CLI for Microsoft 365 the ability to use the @ token to pass the contents of a local file as the value of an option. With that, we no longer need separate options that let you specify a file path to pass file contents into a command. In this version, we removed the obsolete options in favor of options that support passing value both in-line and from a file using the @ token. What action do I need to take? in the outlook mail send command, replace the --bodyContentsFilePath option with --bodyContents @file.ext in the spo theme set command, replace the --filePath option with --theme @file.ext in the teams team add command, replace the --templatePath option with --template @file.ext","title":"Removed deprecated options that point to file paths"},{"location":"v4-upgrade-guidance/#removed-the-value-wrapper-in-some-commands","text":"In several commands, in the JSON output mode, we're inconsistently returning the data retrieved from Microsoft 365, wrapped in a value object. In this version, we removed the value wrapper from the output and aligned the commands with other commands in the CLI for Microsoft 365. What action do I need to take? When using the following commands in JSON output mode, update the logic processing the retrieved data to expect an array of objects without the value wrapper: spo group list spo user list spo web list tenant service list tenant service message list tenant status list","title":"Removed the value wrapper in some commands"},{"location":"v4-upgrade-guidance/#removed-duplicate-id-property-in-json-output-for-spo-listitem-commands","text":"In spo listitem commands, we were returning raw data from the SharePoint API, that contain the Id and ID properties. These properties lead to conflicts when trying to convert the output into an object in PowerShell. To avoid this issue, in v4 we removed the ID property from the output and kept the Id property. What action do I need to take? If you read list item IDs in scripts built using CLI for Microsoft 365, update your code to use the Id property.","title":"Removed duplicate ID property in JSON output for spo listitem commands"},{"location":"v4-upgrade-guidance/#separated-aad-o365group-user-list-from-teams-user-list","text":"In the previous versions of CLI for Microsoft 365, the teams user list command was an alias of the aad o365group user list command and you could use either name in conjunction with Teams- or Office 365 groups-specific options. This led to confusion. As the CLI for Microsoft 365 evolved, we decided to split the commands and use only options specific to each workload. What action do I need to take? In the aad o365group user list command, you can only use the --groupId option which is now required. Use this command when working with Office 365 groups. When working with Microsoft Teams teams, use the teams user list command for which you need to use the required --teamId option.","title":"Separated aad o365group user list from teams user list"},{"location":"v4-upgrade-guidance/#separated-aad-o365group-get-from-teams-team-get","text":"In the previous version of CLI for Microsoft 365, the teams team get command was an alias of the aad o365group get command. The aad o365group get command uses the groups endpoint from Microsoft Graph to retrieve information about Office 365 groups. With the release of the teams endpoint on Microsoft Graph, which returns specific information about Microsoft Teams teams, we decided to separate the two commands to allow you to retrieve the relevant information that you need to work with both workloads. What action do I need to take? If you use the aad o365group get command to retrieve information about Office 365 groups, you don't need to change anything. If you use the teams team get command to retrieve information about Teams, verify the new type of data returned by the command. Depending on your scripts, you might need to additionally run the aad o365group get command to get additional information about the underlying Office 365 group.","title":"Separated aad o365group get from teams team get"},{"location":"v5-upgrade-guidance/","text":"v5 Upgrade Guidance \u00b6 The v5 of CLI for Microsoft 365 introduces several breaking changes. To help you upgrade to the latest version of CLI for Microsoft 365, we've listed those changes along with any actions you may need to take. Azure-AD related commands migrated to Microsoft Graph \u00b6 In CLI for Microsoft 365 we have commands that allow you to manage Azure AD apps. Some of these commands were using the Azure AD Graph API, which has been deprecated since June 30, 2020 and which will be retired on June 30, 2022. To guarantee that the CLI for Microsoft 365 will keep working, we migrated the affected commands to use the Microsoft Graph. Here's the list of the affected commands: aad oauth2grant list aad sp get What action do I need to take? \u00b6 While the options of the commands haven't changed, the data returned by the command might be different. If you use either command in a script, please verify that the script is working as intended. Here are the differences in the data returned by the aad oauth2grant list and aad sp get commands. In aad oauth2grant list renamed clientId to spObjectId \u00b6 In the aad oauth2grant list command, we used to have the clientId option to specify the objectId of the service principal. The name was confusing and not self-explanatory, which is why we decided to rename it to spObjectId . The value of the option is the same. It's just the name of the property that changed. What action do I need to take? \u00b6 If you use the aad oauth2grant list command, replace the clientId option with spObjectId . Extended aad oauth2grant remove with confirm \u00b6 In CLI for Microsoft 365, removing an object is non-reversible. To prevent accidental removal, all remove commands include a prompt which can be suppressed using the confirm option. The aad oauth2grant remove command didn't show the prompt and used to delete the grant directly. To align the command with other commands in the CLI, we extended it with the confirm option and showing a confirmation prompt when the confirm option hasn't been specified. What action do I need to take? \u00b6 If you use the aad oauth2grant remove command in your scripts, extend it with the --confirm option to suppress the prompt and ensure that the script will run without requiring user interaction.","title":"v5 Upgrade Guidance"},{"location":"v5-upgrade-guidance/#v5-upgrade-guidance","text":"The v5 of CLI for Microsoft 365 introduces several breaking changes. To help you upgrade to the latest version of CLI for Microsoft 365, we've listed those changes along with any actions you may need to take.","title":"v5 Upgrade Guidance"},{"location":"v5-upgrade-guidance/#azure-ad-related-commands-migrated-to-microsoft-graph","text":"In CLI for Microsoft 365 we have commands that allow you to manage Azure AD apps. Some of these commands were using the Azure AD Graph API, which has been deprecated since June 30, 2020 and which will be retired on June 30, 2022. To guarantee that the CLI for Microsoft 365 will keep working, we migrated the affected commands to use the Microsoft Graph. Here's the list of the affected commands: aad oauth2grant list aad sp get","title":"Azure-AD related commands migrated to Microsoft Graph"},{"location":"v5-upgrade-guidance/#what-action-do-i-need-to-take","text":"While the options of the commands haven't changed, the data returned by the command might be different. If you use either command in a script, please verify that the script is working as intended. Here are the differences in the data returned by the aad oauth2grant list and aad sp get commands.","title":"What action do I need to take?"},{"location":"v5-upgrade-guidance/#in-aad-oauth2grant-list-renamed-clientid-to-spobjectid","text":"In the aad oauth2grant list command, we used to have the clientId option to specify the objectId of the service principal. The name was confusing and not self-explanatory, which is why we decided to rename it to spObjectId . The value of the option is the same. It's just the name of the property that changed.","title":"In aad oauth2grant list renamed clientId to spObjectId"},{"location":"v5-upgrade-guidance/#what-action-do-i-need-to-take_1","text":"If you use the aad oauth2grant list command, replace the clientId option with spObjectId .","title":"What action do I need to take?"},{"location":"v5-upgrade-guidance/#extended-aad-oauth2grant-remove-with-confirm","text":"In CLI for Microsoft 365, removing an object is non-reversible. To prevent accidental removal, all remove commands include a prompt which can be suppressed using the confirm option. The aad oauth2grant remove command didn't show the prompt and used to delete the grant directly. To align the command with other commands in the CLI, we extended it with the confirm option and showing a confirmation prompt when the confirm option hasn't been specified.","title":"Extended aad oauth2grant remove with confirm"},{"location":"v5-upgrade-guidance/#what-action-do-i-need-to-take_2","text":"If you use the aad oauth2grant remove command in your scripts, extend it with the --confirm option to suppress the prompt and ensure that the script will run without requiring user interaction.","title":"What action do I need to take?"},{"location":"v6-upgrade-guidance/","text":"v6 Upgrade Guidance \u00b6 The v6 of CLI for Microsoft 365 introduces several breaking changes. To help you upgrade to the latest version of CLI for Microsoft 365, we've listed those changes along with any actions you may need to take. Consolidated SharePoint Online site commands \u00b6 In CLI for Microsoft 365 we had several commands that were originally targeted at classic SharePoint sites. All functionality in these commands has been merged with the regular SharePoint site commands and deprecated as a result. They have therefore been removed in v6. The commands that were removed are: Command Merged with spo site classic add spo site add spo site classic list spo site list spo site classic set spo site set To fix a resulting issue with the spo site list command, the default value of the type option of that command has been removed. What action do I need to take? \u00b6 Replace references to spo site classic * commands, with the respective spo site * command. The options have not changed and the output of the commands has not changed as well. After updating the references test your scripts as there might be slight differences in how the commands behave. Removed the executeWithLimitedPermission option in the spo list list command \u00b6 In version 5 of the CLI for Microsoft 365, the spo list list command could only be executed with site owner permissions. To update this without introducing a breaking change, we temporarily added the --executeWithLimitedPermission option to be able to execute it as a site visitor or member as well. In v6 we removed this option while changing the command in such a way that you do not need to be a site owner anymore. What action do I need to take? \u00b6 Remove the references to the executeWithLimitedPermission option in your scripts. Verify that your scripts work as intended with the new data structure returned by the spo list list command. Removed deprecated aliases \u00b6 We removed several aliases to align commands with our naming convention. The following aliases were removed: Alias Command Reason aad app delete aad app remove Removed to align with the naming convention. aad app role delete aad app role remove Removed to align with the naming convention. aad o365group restore aad o365group recyclebinitem restore Renamed to better match intention and naming convention. outlook sendmail outlook mail send Renamed to better match intention and naming convention. planner plan details get planner plan get Functionality merged in a single get-command. planner task details get planner task get Functionality merged in a single get-command. teams conversationmember add teams channel member add Renamed to better match intention and naming convention. teams conversationmember list teams channel member list Renamed to better match intention and naming convention. teams conversationmember remove teams channel member remove Renamed to better match intention and naming convention. spo hubsite theme sync spo site hubsite theme sync Renamed to better match intention and naming convention. spo hubsite connect spo site hubsite connect Renamed to better match intention and naming convention. spo hubsite disconnect spo site hubsite disconnect Renamed to better match intention and naming convention. What action do I need to take? \u00b6 Replace any of the aliases mentioned above with the corresponding command name. The functionality of the command hasn't changed. In planner commands, removed the deprecated planName option \u00b6 In several planner commands we renamed the planName option to planTitle to align with the underlying API. Along with introducing the planTitle option, we deprecated the old planName option. In v6 of the CLI we removed the planName option. The following list of commands is affected by this change: planner bucket add planner bucket get planner bucket list planner bucket remove planner bucket set planner plan get planner task add planner task get planner task list planner task set What action do I need to take? \u00b6 Replace the reference to the --planName option with --planTitle . Removed the deprecated autoOpenBrowserOnLogin configuration key \u00b6 The CLI for Microsoft 365 contains commands that return a link that the user should copy and open in the browser. At first, this was only available in the login command. We introduced the autoOpenBrowserOnLogin configuration key was introduced to have the CLI automatically open the browser, so that you don't have to copy/paste the URL manually. As we introduced this functionality to other commands, we renamed this configuration key to autoOpenLinksInBrowser . In v6 of the CLI, we removed the deprecated autoOpenBrowserOnLogin key. What action do I need to take? \u00b6 If you have configured the autoOpenBrowserOnLogin key, you'll now need to configure the autoOpenLinksInBrowser key to keep the same behavior. You can do this by running the following script: m365 cli config set --key autoOpenLinksInBrowser --value true Aligned options with naming convention \u00b6 As we've been adding more commands to the CLI, we noticed that several commands were using inconsistent options names. Our naming convention states that options that refer to the last noun in the command, don't need that noun as a prefix. for example: the option --webUrl for m365 spo web list has been renamed to --url as the last noun is web . In version 6 of the CLI for Microsoft 365, we updated all these options to be consistent and make it easier for you to use the CLI. We've updated the following commands and options: Command Old option New option aad approleassignment add objectId appObjectId aad approleassignment add displayName appDisplayName aad approleassignment list objectId appObjectId aad approleassignment list displayName appDisplayName aad approleassignment remove objectId appObjectId aad approleassignment remove displayName appDisplayName aad o365group add isPrivate [isPrivate] isPrivate (changed to flag) aad o365group recyclebinitem list displayName groupDisplayName aad o365group recyclebinitem list mailNickname groupMailNickname aad o365group teamify groupId id aad policy list policyType type aad sp get displayName appDisplayName aad sp get objectId appObjectId flow disable environment environmentName flow enable environment environmentName flow export environment environmentName flow get environment environmentName flow list environment environmentName flow remove environment environmentName flow run cancel flow flowName flow run cancel environment environmentName flow run get flow flowName flow run get environment environmentName flow run list flow flowName flow run list environment environmentName flow run resubmit flow flowName flow run resubmit environment environmentName outlook message move messageId id pa connector export environment environmentName pa connector list environment environmentName pa solution reference add path projectPath spfx package generate packageName name spo app add scope appCatalogScope spo app deploy scope appCatalogScope spo app get scope appCatalogScope spo app install scope appCatalogScope spo app list scope appCatalogScope spo app remove scope appCatalogScope spo app retract scope appCatalogScope spo app uninstall scope appCatalogScope spo app upgrade scope appCatalogScope spo apppage set pageName name spo cdn policy list type cdnType spo cdn policy set type cdnType spo contenttype field set fieldId id spo customaction add url webUrl spo customaction clear url webUrl spo customaction get url webUrl spo customaction list url webUrl spo customaction remove url webUrl spo customaction set url webUrl spo feature disable featureId id spo feature disable url webUrl spo feature enable featureId id spo feature enable url webUrl spo feature list url webUrl spo field get fieldTitle title spo field remove fieldTitle title spo file checkin fileUrl url spo file checkout fileUrl url spo file sharinginfo get url fileUrl spo folder get folderUrl url spo folder remove folderUrl url spo folder rename folderUrl url spo site hubsite connect url siteUrl spo site hubsite disconnect url siteUrl spo hubsite register url siteUrl spo hubsite rights grant url hubSiteUrl spo hubsite rights revoke url hubSiteUrl spo knowledgehub set url siteUrl spo list contenttype add contentTypeId id spo list contenttype remove contentTypeId id spo list view field add fieldId id spo list view field add fieldTitle title spo list view field add fieldPosition position spo list view field remove fieldId id spo list view field remove fieldTitle title spo list view field set fieldId id spo list view field set fieldTitle title spo list view field set fieldPosition position spo list view get viewId id spo list view get viewTitle title spo list view remove viewId id spo list view remove viewTitle title spo list view set viewId id spo list view set viewTitle title spo listitem list id listId spo listitem list title listTitle spo listitem record declare id listItemId spo listitem record undeclare id listItemId spo page column get name pageName spo page column list name pageName spo page control get name pageName spo page control list name pageName spo page control set name pageName spo page section add name pageName spo page section get name pageName spo page section list name pageName spo serviceprincipal grant revoke grantId id spo serviceprincipal permissionrequest approve requestId id spo serviceprincipal permissionrequest deny requestId id spo site appcatalog add url siteUrl spo site appcatalog remove url siteUrl spo site apppermission get permissionId id spo site apppermission remove permissionId id spo site apppermission set permissionId id spo site chrome set url siteUrl spo site groupify siteUrl url spo site rename siteUrl url spo sitedesign rights grant id siteDesignId spo sitedesign rights list id siteDesignId spo sitedesign rights revoke id siteDesignId spo sitedesign task get taskId id spo sitedesign task remove taskId id spo tenant recyclebinitem remove url siteUrl spo tenant recyclebinitem restore url siteUrl spo web add webUrl url spo web get webUrl url spo web list webUrl url spo web reindex webUrl url spo web remove webUrl url spo web set webUrl url teams app app install appId id teams app app uninstall appId id teams channel get channelId id teams channel get channelName name teams channel remove channelId id teams channel remove channelName name teams channel set channelName name teams message get messageId id teams tab get tabId id teams tab get tabName name teams tab remove tabId id teams team archive teamId id teams team clone teamId id teams team remove teamId id teams team set teamId id teams team unarchive teamId id teams user app add appId id teams user app remove appId id viva connections app create appName name yammer group user add id groupId yammer group user add userId id yammer group user remove id groupId yammer group user remove userId id yammer message like set id messageId yammer user get userId id What action do I need to take? \u00b6 If you use any of the commands listed above, ensure that you use the new option names.","title":"v6 Upgrade Guidance"},{"location":"v6-upgrade-guidance/#v6-upgrade-guidance","text":"The v6 of CLI for Microsoft 365 introduces several breaking changes. To help you upgrade to the latest version of CLI for Microsoft 365, we've listed those changes along with any actions you may need to take.","title":"v6 Upgrade Guidance"},{"location":"v6-upgrade-guidance/#consolidated-sharepoint-online-site-commands","text":"In CLI for Microsoft 365 we had several commands that were originally targeted at classic SharePoint sites. All functionality in these commands has been merged with the regular SharePoint site commands and deprecated as a result. They have therefore been removed in v6. The commands that were removed are: Command Merged with spo site classic add spo site add spo site classic list spo site list spo site classic set spo site set To fix a resulting issue with the spo site list command, the default value of the type option of that command has been removed.","title":"Consolidated SharePoint Online site commands"},{"location":"v6-upgrade-guidance/#what-action-do-i-need-to-take","text":"Replace references to spo site classic * commands, with the respective spo site * command. The options have not changed and the output of the commands has not changed as well. After updating the references test your scripts as there might be slight differences in how the commands behave.","title":"What action do I need to take?"},{"location":"v6-upgrade-guidance/#removed-the-executewithlimitedpermission-option-in-the-spo-list-list-command","text":"In version 5 of the CLI for Microsoft 365, the spo list list command could only be executed with site owner permissions. To update this without introducing a breaking change, we temporarily added the --executeWithLimitedPermission option to be able to execute it as a site visitor or member as well. In v6 we removed this option while changing the command in such a way that you do not need to be a site owner anymore.","title":"Removed the executeWithLimitedPermission option in the spo list list command"},{"location":"v6-upgrade-guidance/#what-action-do-i-need-to-take_1","text":"Remove the references to the executeWithLimitedPermission option in your scripts. Verify that your scripts work as intended with the new data structure returned by the spo list list command.","title":"What action do I need to take?"},{"location":"v6-upgrade-guidance/#removed-deprecated-aliases","text":"We removed several aliases to align commands with our naming convention. The following aliases were removed: Alias Command Reason aad app delete aad app remove Removed to align with the naming convention. aad app role delete aad app role remove Removed to align with the naming convention. aad o365group restore aad o365group recyclebinitem restore Renamed to better match intention and naming convention. outlook sendmail outlook mail send Renamed to better match intention and naming convention. planner plan details get planner plan get Functionality merged in a single get-command. planner task details get planner task get Functionality merged in a single get-command. teams conversationmember add teams channel member add Renamed to better match intention and naming convention. teams conversationmember list teams channel member list Renamed to better match intention and naming convention. teams conversationmember remove teams channel member remove Renamed to better match intention and naming convention. spo hubsite theme sync spo site hubsite theme sync Renamed to better match intention and naming convention. spo hubsite connect spo site hubsite connect Renamed to better match intention and naming convention. spo hubsite disconnect spo site hubsite disconnect Renamed to better match intention and naming convention.","title":"Removed deprecated aliases"},{"location":"v6-upgrade-guidance/#what-action-do-i-need-to-take_2","text":"Replace any of the aliases mentioned above with the corresponding command name. The functionality of the command hasn't changed.","title":"What action do I need to take?"},{"location":"v6-upgrade-guidance/#in-planner-commands-removed-the-deprecated-planname-option","text":"In several planner commands we renamed the planName option to planTitle to align with the underlying API. Along with introducing the planTitle option, we deprecated the old planName option. In v6 of the CLI we removed the planName option. The following list of commands is affected by this change: planner bucket add planner bucket get planner bucket list planner bucket remove planner bucket set planner plan get planner task add planner task get planner task list planner task set","title":"In planner commands, removed the deprecated planName option"},{"location":"v6-upgrade-guidance/#what-action-do-i-need-to-take_3","text":"Replace the reference to the --planName option with --planTitle .","title":"What action do I need to take?"},{"location":"v6-upgrade-guidance/#removed-the-deprecated-autoopenbrowseronlogin-configuration-key","text":"The CLI for Microsoft 365 contains commands that return a link that the user should copy and open in the browser. At first, this was only available in the login command. We introduced the autoOpenBrowserOnLogin configuration key was introduced to have the CLI automatically open the browser, so that you don't have to copy/paste the URL manually. As we introduced this functionality to other commands, we renamed this configuration key to autoOpenLinksInBrowser . In v6 of the CLI, we removed the deprecated autoOpenBrowserOnLogin key.","title":"Removed the deprecated autoOpenBrowserOnLogin configuration key"},{"location":"v6-upgrade-guidance/#what-action-do-i-need-to-take_4","text":"If you have configured the autoOpenBrowserOnLogin key, you'll now need to configure the autoOpenLinksInBrowser key to keep the same behavior. You can do this by running the following script: m365 cli config set --key autoOpenLinksInBrowser --value true","title":"What action do I need to take?"},{"location":"v6-upgrade-guidance/#aligned-options-with-naming-convention","text":"As we've been adding more commands to the CLI, we noticed that several commands were using inconsistent options names. Our naming convention states that options that refer to the last noun in the command, don't need that noun as a prefix. for example: the option --webUrl for m365 spo web list has been renamed to --url as the last noun is web . In version 6 of the CLI for Microsoft 365, we updated all these options to be consistent and make it easier for you to use the CLI. We've updated the following commands and options: Command Old option New option aad approleassignment add objectId appObjectId aad approleassignment add displayName appDisplayName aad approleassignment list objectId appObjectId aad approleassignment list displayName appDisplayName aad approleassignment remove objectId appObjectId aad approleassignment remove displayName appDisplayName aad o365group add isPrivate [isPrivate] isPrivate (changed to flag) aad o365group recyclebinitem list displayName groupDisplayName aad o365group recyclebinitem list mailNickname groupMailNickname aad o365group teamify groupId id aad policy list policyType type aad sp get displayName appDisplayName aad sp get objectId appObjectId flow disable environment environmentName flow enable environment environmentName flow export environment environmentName flow get environment environmentName flow list environment environmentName flow remove environment environmentName flow run cancel flow flowName flow run cancel environment environmentName flow run get flow flowName flow run get environment environmentName flow run list flow flowName flow run list environment environmentName flow run resubmit flow flowName flow run resubmit environment environmentName outlook message move messageId id pa connector export environment environmentName pa connector list environment environmentName pa solution reference add path projectPath spfx package generate packageName name spo app add scope appCatalogScope spo app deploy scope appCatalogScope spo app get scope appCatalogScope spo app install scope appCatalogScope spo app list scope appCatalogScope spo app remove scope appCatalogScope spo app retract scope appCatalogScope spo app uninstall scope appCatalogScope spo app upgrade scope appCatalogScope spo apppage set pageName name spo cdn policy list type cdnType spo cdn policy set type cdnType spo contenttype field set fieldId id spo customaction add url webUrl spo customaction clear url webUrl spo customaction get url webUrl spo customaction list url webUrl spo customaction remove url webUrl spo customaction set url webUrl spo feature disable featureId id spo feature disable url webUrl spo feature enable featureId id spo feature enable url webUrl spo feature list url webUrl spo field get fieldTitle title spo field remove fieldTitle title spo file checkin fileUrl url spo file checkout fileUrl url spo file sharinginfo get url fileUrl spo folder get folderUrl url spo folder remove folderUrl url spo folder rename folderUrl url spo site hubsite connect url siteUrl spo site hubsite disconnect url siteUrl spo hubsite register url siteUrl spo hubsite rights grant url hubSiteUrl spo hubsite rights revoke url hubSiteUrl spo knowledgehub set url siteUrl spo list contenttype add contentTypeId id spo list contenttype remove contentTypeId id spo list view field add fieldId id spo list view field add fieldTitle title spo list view field add fieldPosition position spo list view field remove fieldId id spo list view field remove fieldTitle title spo list view field set fieldId id spo list view field set fieldTitle title spo list view field set fieldPosition position spo list view get viewId id spo list view get viewTitle title spo list view remove viewId id spo list view remove viewTitle title spo list view set viewId id spo list view set viewTitle title spo listitem list id listId spo listitem list title listTitle spo listitem record declare id listItemId spo listitem record undeclare id listItemId spo page column get name pageName spo page column list name pageName spo page control get name pageName spo page control list name pageName spo page control set name pageName spo page section add name pageName spo page section get name pageName spo page section list name pageName spo serviceprincipal grant revoke grantId id spo serviceprincipal permissionrequest approve requestId id spo serviceprincipal permissionrequest deny requestId id spo site appcatalog add url siteUrl spo site appcatalog remove url siteUrl spo site apppermission get permissionId id spo site apppermission remove permissionId id spo site apppermission set permissionId id spo site chrome set url siteUrl spo site groupify siteUrl url spo site rename siteUrl url spo sitedesign rights grant id siteDesignId spo sitedesign rights list id siteDesignId spo sitedesign rights revoke id siteDesignId spo sitedesign task get taskId id spo sitedesign task remove taskId id spo tenant recyclebinitem remove url siteUrl spo tenant recyclebinitem restore url siteUrl spo web add webUrl url spo web get webUrl url spo web list webUrl url spo web reindex webUrl url spo web remove webUrl url spo web set webUrl url teams app app install appId id teams app app uninstall appId id teams channel get channelId id teams channel get channelName name teams channel remove channelId id teams channel remove channelName name teams channel set channelName name teams message get messageId id teams tab get tabId id teams tab get tabName name teams tab remove tabId id teams team archive teamId id teams team clone teamId id teams team remove teamId id teams team set teamId id teams team unarchive teamId id teams user app add appId id teams user app remove appId id viva connections app create appName name yammer group user add id groupId yammer group user add userId id yammer group user remove id groupId yammer group user remove userId id yammer message like set id messageId yammer user get userId id","title":"Aligned options with naming convention"},{"location":"v6-upgrade-guidance/#what-action-do-i-need-to-take_5","text":"If you use any of the commands listed above, ensure that you use the new option names.","title":"What action do I need to take?"},{"location":"about/comparison-powershell/","text":"Comparison to SharePoint and Microsoft 365 PowerShell \u00b6 Following table lists the different CLI for Microsoft 365 commands and how they map to PowerShell cmdlets for SharePoint and Microsoft 365. PowerShell Cmdlet Source CLI for Microsoft 365 command Add-SPOGeoAdministrator Microsoft.Online.SharePoint.PowerShell Add-SPOHubSiteAssociation Microsoft.Online.SharePoint.PowerShell spo hubsite connect Add-SPOOrgAssetsLibrary Microsoft.Online.SharePoint.PowerShell Add-SPOSiteCollectionAppCatalog Microsoft.Online.SharePoint.PowerShell spo site appcatalog add Add-SPOSiteDesign Microsoft.Online.SharePoint.PowerShell spo sitedesign add Add-SPOSiteDesignTask Microsoft.Online.SharePoint.PowerShell spo sitedesign apply Add-SPOSiteScript Microsoft.Online.SharePoint.PowerShell spo sitescript add Add-SPOTenantCdnOrigin Microsoft.Online.SharePoint.PowerShell spo cdn origin add Add-SPOTheme Microsoft.Online.SharePoint.PowerShell spo theme set Add-SPOHubToHubAssociation Microsoft.Online.SharePoint.PowerShell Add-SPOSiteScriptPackage Microsoft.Online.SharePoint.PowerShell Add-SPOUser Microsoft.Online.SharePoint.PowerShell Approve-SPOTenantServicePrincipalPermissionGrant Microsoft.Online.SharePoint.PowerShell spo serviceprincipal grant add Approve-SPOTenantServicePrincipalPermissionRequest Microsoft.Online.SharePoint.PowerShell spo serviceprincipal permissionrequest approve Connect-SPOService Microsoft.Online.SharePoint.PowerShell spo login ConvertTo-SPOMigrationEncryptedPackage Microsoft.Online.SharePoint.PowerShell ConvertTo-SPOMigrationTargetedPackage Microsoft.Online.SharePoint.PowerShell Deny-SPOTenantServicePrincipalPermissionRequest Microsoft.Online.SharePoint.PowerShell spo serviceprincipal permissionrequest deny Disable-SPOTenantServicePrincipal Microsoft.Online.SharePoint.PowerShell spo serviceprincipal set Disconnect-SPOService Microsoft.Online.SharePoint.PowerShell spo logout Enable-SPOCommSite Microsoft.Online.SharePoint.PowerShell spo site commsite enable Enable-SPOTenantServicePrincipal Microsoft.Online.SharePoint.PowerShell spo serviceprincipal set Export-SPOQueryLogs Microsoft.Online.SharePoint.PowerShell Export-SPOUserInfo Microsoft.Online.SharePoint.PowerShell Export-SPOUserProfile Microsoft.Online.SharePoint.PowerShell Get-IsCommSite Microsoft.Online.SharePoint.PowerShell Get-SPOAppErrors Microsoft.Online.SharePoint.PowerShell Get-SPOAppInfo Microsoft.Online.SharePoint.PowerShell Get-SPOBrowserIdleSignOut Microsoft.Online.SharePoint.PowerShell Get-SPOBuiltDesignPackageVisibility Microsoft.Online.SharePoint.PowerShell Get-SPOBuiltInDesignPackageVisibility Microsoft.Online.SharePoint.PowerShell Get-SPOCrossGeoMovedUsers Microsoft.Online.SharePoint.PowerShell Get-SPOCrossGeoMoveReport Microsoft.Online.SharePoint.PowerShell Get-SPOCrossGeoUsers Microsoft.Online.SharePoint.PowerShell Get-SPODataEncryptionPolicy Microsoft.Online.SharePoint.PowerShell Get-SPODeletedSite Microsoft.Online.SharePoint.PowerShell spo site list Get-SPOExternalUser Microsoft.Online.SharePoint.PowerShell spo externaluser list Get-SPOGeoAdministrator Microsoft.Online.SharePoint.PowerShell Get-SPOGeoMoveCrossCompatibilityStatus Microsoft.Online.SharePoint.PowerShell Get-SPOGeoStorageQuota Microsoft.Online.SharePoint.PowerShell Get-SPOHideDefaultThemes Microsoft.Online.SharePoint.PowerShell spo hidedefaultthemes get Get-SPOHomeSite Microsoft.Online.SharePoint.PowerShell spo homesite get Get-SPOHubSite Microsoft.Online.SharePoint.PowerShell spo hubsite get , spo hubsite list Get-SPOKnowledgeHubSite Microsoft.Online.SharePoint.PowerShell Get-SPOMigrationJobProgress Microsoft.Online.SharePoint.PowerShell Get-SPOMigrationJobStatus Microsoft.Online.SharePoint.PowerShell Get-SPOMultiGeoCompanyAllowedDataLocation Microsoft.Online.SharePoint.PowerShell Get-SPOMultiGeoExperience Microsoft.Online.SharePoint.PowerShell Get-SPOOrgAssetsLibrary Microsoft.Online.SharePoint.PowerShell spo orgassetslibrary list Get-SPOOrgNewsSite Microsoft.Online.SharePoint.PowerShell Get-SPOPublicCdnOrigins Microsoft.Online.SharePoint.PowerShell Get-SPOSite Microsoft.Online.SharePoint.PowerShell spo site list Get-SPOSiteCollectionAppCatalogs Microsoft.Online.SharePoint.PowerShell Get-SPOSiteContentMoveState Microsoft.Online.SharePoint.PowerShell Get-SPOSiteDataEncryptionPolicy Microsoft.Online.SharePoint.PowerShell Get-SPOSiteDesign Microsoft.Online.SharePoint.PowerShell spo sitedesign get , spo sitedesign list Get-SPOSiteDesignRights Microsoft.Online.SharePoint.PowerShell spo sitedesign rights list Get-SPOSiteDesignRun Microsoft.Online.SharePoint.PowerShell spo sitedesign run list Get-SPOSiteDesignRunStatus Microsoft.Online.SharePoint.PowerShell spo sitedesign run status get Get-SPOSiteDesignTask Microsoft.Online.SharePoint.PowerShell spo sitedesign task get , spo sitedesign task list Get-SPOSiteGroup Microsoft.Online.SharePoint.PowerShell Get-SPOSiteRenameState Microsoft.Online.SharePoint.PowerShell Get-SPOSiteScript Microsoft.Online.SharePoint.PowerShell spo sitescript get , spo sitescript list Get-SPOSiteScriptFromList Microsoft.Online.SharePoint.PowerShell spo list sitescript get Get-SPOSiteScriptFromWeb Microsoft.Online.SharePoint.PowerShell Get-SPOSiteUserInvitations Microsoft.Online.SharePoint.PowerShell Get-SPOStorageEntity Microsoft.Online.SharePoint.PowerShell spo storageentity get , spo storageentity list Get-SPOStructuralNavigationCacheSiteState Microsoft.Online.SharePoint.PowerShell Get-SPOStructuralNavigationCacheWebState Microsoft.Online.SharePoint.PowerShell Get-SPOTenant Microsoft.Online.SharePoint.PowerShell Get-SPOTenantCdnEnabled Microsoft.Online.SharePoint.PowerShell spo cdn get Get-SPOTenantCdnOrigins Microsoft.Online.SharePoint.PowerShell spo cdn origin list Get-SPOTenantCdnPolicies Microsoft.Online.SharePoint.PowerShell spo cdn policy list Get-SPOTenantContentTypeReplicationParameters Microsoft.Online.SharePoint.PowerShell Get-SPOTenantLogEntry Microsoft.Online.SharePoint.PowerShell Get-SPOTenantLogLastAvailableTimeInUtc Microsoft.Online.SharePoint.PowerShell Get-SPOTenantOrgRelation Microsoft.Online.SharePoint.PowerShell Get-SPOTenantOrgRelationByPartner Microsoft.Online.SharePoint.PowerShell Get-SPOTenantOrgRelationByScenario Microsoft.Online.SharePoint.PowerShell Get-SPOTenantServicePrincipalPermissionGrants Microsoft.Online.SharePoint.PowerShell spo serviceprincipal grant list Get-SPOTenantServicePrincipalPermissionRequests Microsoft.Online.SharePoint.PowerShell spo serviceprincipal permissionrequest list Get-SPOTenantSyncClientRestriction Microsoft.Online.SharePoint.PowerShell Get-SPOTenantTaxonomyReplicationParameters Microsoft.Online.SharePoint.PowerShell Get-SPOTheme Microsoft.Online.SharePoint.PowerShell spo theme list Get-SPOUnifiedGroup Microsoft.Online.SharePoint.PowerShell Get-SPOUnifiedGroupMoveState Microsoft.Online.SharePoint.PowerShell Get-SPOUser Microsoft.Online.SharePoint.PowerShell spo user get , spo user list Get-SPOUserAndContentMoveState Microsoft.Online.SharePoint.PowerShell Get-SPOUserOneDriveLocation Microsoft.Online.SharePoint.PowerShell Get-SPOWebTemplate Microsoft.Online.SharePoint.PowerShell Grant-SPOHubSiteRights Microsoft.Online.SharePoint.PowerShell spo hubsite rights grant Grant-SPOSiteDesignRights Microsoft.Online.SharePoint.PowerShell spo sitedesign rights grant Invoke-SPOMigrationEncryptUploadSubmit Microsoft.Online.SharePoint.PowerShell Invoke-SPOSiteDesign Microsoft.Online.SharePoint.PowerShell spo sitedesign apply Invoke-SPOSiteSwap Microsoft.Online.SharePoint.PowerShell New-SPOMigrationEncryptionParameters Microsoft.Online.SharePoint.PowerShell New-SPOMigrationPackage Microsoft.Online.SharePoint.PowerShell New-SPOPublicCdnOrigin Microsoft.Online.SharePoint.PowerShell New-SPOSdnProvider Microsoft.Online.SharePoint.PowerShell New-SPOSite Microsoft.Online.SharePoint.PowerShell spo site add New-SPOSiteGroup Microsoft.Online.SharePoint.PowerShell New-SPOSiteSharingReportJob Microsoft.Online.SharePoint.PowerShell New-SPOTenantOrgRelation Microsoft.Online.SharePoint.PowerShell Register-SPODataEncryptionPolicy Microsoft.Online.SharePoint.PowerShell Register-SPOHubSite Microsoft.Online.SharePoint.PowerShell spo hubsite register Remove-SPODeletedSite Microsoft.Online.SharePoint.PowerShell spo tenant recyclebinitem remove Remove-SPOExternalUser Microsoft.Online.SharePoint.PowerShell Remove-SPOGeoAdministrator Microsoft.Online.SharePoint.PowerShell Remove-SPOHomeSite Microsoft.Online.SharePoint.PowerShell spo homesite remove Remove-SPOHubSiteAssociation Microsoft.Online.SharePoint.PowerShell spo hubsite disconnect Remove-SPOHubToHubAssociation Microsoft.Online.SharePoint.PowerShell Remove-SPOKnowledgeHubSite Microsoft.Online.SharePoint.PowerShell spo knowledgehub remove Remove-SPOMigrationJob Microsoft.Online.SharePoint.PowerShell Remove-SPOMultiGeoCompanyAllowedDataLocation Microsoft.Online.SharePoint.PowerShell Remove-SPOOrgAssetsLibrary Microsoft.Online.SharePoint.PowerShell spo orgassetslibrary remove Remove-SPOOrgNewsSite Microsoft.Online.SharePoint.PowerShell Remove-SPOPublicCdnOrigin Microsoft.Online.SharePoint.PowerShell Remove-SPOSdnProvider Microsoft.Online.SharePoint.PowerShell Remove-SPOSite Microsoft.Online.SharePoint.PowerShell spo site remove Remove-SPOSiteCollectionAppCatalog Microsoft.Online.SharePoint.PowerShell spo site appcatalog remove Remove-SPOSiteCollectionAppCatalogById Microsoft.Online.SharePoint.PowerShell Remove-SPOSiteDesign Microsoft.Online.SharePoint.PowerShell spo sitedesign remove Remove-SPOSiteDesignTask Microsoft.Online.SharePoint.PowerShell spo sitedesign task remove Remove-SPOSiteGroup Microsoft.Online.SharePoint.PowerShell Remove-SPOSiteScript Microsoft.Online.SharePoint.PowerShell spo sitescript remove Remove-SPOSiteSharingReportJob Microsoft.Online.SharePoint.PowerShell Remove-SPOSiteUserInvitations Microsoft.Online.SharePoint.PowerShell Remove-SPOStorageEntity Microsoft.Online.SharePoint.PowerShell spo storageentity remove Remove-SPOTenantCdnOrigin Microsoft.Online.SharePoint.PowerShell spo cdn origin remove Remove-SPOTenantOrgRelation Microsoft.Online.SharePoint.PowerShell Remove-SPOTenantSyncClientRestriction Microsoft.Online.SharePoint.PowerShell Remove-SPOTheme Microsoft.Online.SharePoint.PowerShell spo theme remove Remove-SPOUser Microsoft.Online.SharePoint.PowerShell Remove-SPOUserInfo Microsoft.Online.SharePoint.PowerShell Remove-SPOUserProfile Microsoft.Online.SharePoint.PowerShell Repair-SPOSite Microsoft.Online.SharePoint.PowerShell Request-SPOPersonalSite Microsoft.Online.SharePoint.PowerShell Request-SPOUpgradeEvaluationSite Microsoft.Online.SharePoint.PowerShell Restore-SPODataEncryptionPolicy Microsoft.Online.SharePoint.PowerShell Restore-SPODeletedSite Microsoft.Online.SharePoint.PowerShell spo tenant recyclebinitem restore Revoke-SPOHubSiteRights Microsoft.Online.SharePoint.PowerShell spo hubsite rights revoke Revoke-SPOSiteDesignRights Microsoft.Online.SharePoint.PowerShell spo sitedesign rights revoke Revoke-SPOTenantServicePrincipalPermission Microsoft.Online.SharePoint.PowerShell spo serviceprincipal grant revoke Revoke-SPOUserSession Microsoft.Online.SharePoint.PowerShell Set-SPOBrowserIdleSignOut Microsoft.Online.SharePoint.PowerShell Set-SPOBuiltDesignPackageVisibility Microsoft.Online.SharePoint.PowerShell Set-SPOBuiltInDesignPackageVisibility Microsoft.Online.SharePoint.PowerShell Set-SPOGeoStorageQuota Microsoft.Online.SharePoint.PowerShell Set-SPOHideDefaultThemes Microsoft.Online.SharePoint.PowerShell spo hidedefaultthemes set Set-SPOHomeSite Microsoft.Online.SharePoint.PowerShell spo homesite set Set-SPOHubSite Microsoft.Online.SharePoint.PowerShell spo hubsite set Set-SPOKnowledgeHubSite Microsoft.Online.SharePoint.PowerShell spo knowledgehub set Set-SPOMigrationPackageAzureSource Microsoft.Online.SharePoint.PowerShell Set-SPOMultiGeoCompanyAllowedDataLocation Microsoft.Online.SharePoint.PowerShell Set-SPOMultiGeoExperience Microsoft.Online.SharePoint.PowerShell Set-SPOOrgAssetsLibrary Microsoft.Online.SharePoint.PowerShell spo orgassetslibrary add Set-SPOOrgNewsSite Microsoft.Online.SharePoint.PowerShell Set-SPOSite Microsoft.Online.SharePoint.PowerShell Set-SPOSiteDesign Microsoft.Online.SharePoint.PowerShell spo sitedesign set Set-SPOSiteGroup Microsoft.Online.SharePoint.PowerShell Set-SPOSiteOffice365Group Microsoft.Online.SharePoint.PowerShell spo site groupify Set-SPOSiteScript Microsoft.Online.SharePoint.PowerShell Set-SPOSiteScriptPackage Microsoft.Online.SharePoint.PowerShell Set-SPOStorageEntity Microsoft.Online.SharePoint.PowerShell spo storageentity set Set-SPOStructuralNavigationCacheSiteState Microsoft.Online.SharePoint.PowerShell Set-SPOStructuralNavigationCacheWebState Microsoft.Online.SharePoint.PowerShell Set-SPOTenant Microsoft.Online.SharePoint.PowerShell spo tenant settings set Set-SPOTenantCdnEnabled Microsoft.Online.SharePoint.PowerShell spo cdn set Set-SPOTenantCdnPolicy Microsoft.Online.SharePoint.PowerShell spo cdn policy set Set-SPOTenantContentTypeReplicationParameters Microsoft.Online.SharePoint.PowerShell Set-SPOTenantSyncClientRestriction Microsoft.Online.SharePoint.PowerShell Set-SPOTenantTaxonomyReplicationParameters Microsoft.Online.SharePoint.PowerShell Set-SPOUnifiedGroup Microsoft.Online.SharePoint.PowerShell Set-SPOUser Microsoft.Online.SharePoint.PowerShell Set-SPOWebTheme Microsoft.Online.SharePoint.PowerShell Start-SPOSiteContentMove Microsoft.Online.SharePoint.PowerShell Start-SPOSiteRename Microsoft.Online.SharePoint.PowerShell spo site rename Start-SPOUnifiedGroupMove Microsoft.Online.SharePoint.PowerShell Start-SPOUserAndContentMove Microsoft.Online.SharePoint.PowerShell Stop-SPOSiteContentMove Microsoft.Online.SharePoint.PowerShell Stop-SPOUserAndContentMove Microsoft.Online.SharePoint.PowerShell Submit-SPOMigrationJob Microsoft.Online.SharePoint.PowerShell Test-SPOSite Microsoft.Online.SharePoint.PowerShell Unregister-SPOHubSite Microsoft.Online.SharePoint.PowerShell spo hubsite unregister Update-SPODataEncryptionPolicy Microsoft.Online.SharePoint.PowerShell Update-UserType Microsoft.Online.SharePoint.PowerShell Upgrade-SPOSite Microsoft.Online.SharePoint.PowerShell Verify-SPOTenantOrgRelation Microsoft.Online.SharePoint.PowerShell Add-PnPAlert PnP.PowerShell Add-PnPApp PnP.PowerShell spo app add Add-PnPApplicationCustomizer PnP.PowerShell spo customaction add Add-PnPAvailableSiteClassification PnP.PowerShell Add-PnPAzureADGroupMember PnP.PowerShell Add-PnPAzureADGroupOwner PnP.PowerShell Add-PnPContentType PnP.PowerShell spo contenttype add Add-PnPContentTypesFromContentTypeHub PnP.PowerShell Add-PnPContentTypeToDocumentSet PnP.PowerShell Add-PnPContentTypeToList PnP.PowerShell spo list contenttype add Add-PnPCustomAction PnP.PowerShell spo customaction add Add-PnPDataRowsToSiteTemplate PnP.PowerShell Add-PnPDocumentSet PnP.PowerShell Add-PnPEventReceiver PnP.PowerShell Add-PnPField PnP.PowerShell spo field add Add-PnPFieldFromXml PnP.PowerShell spo field add Add-PnPFieldToContentType PnP.PowerShell spo contenttype field set Add-PnPFile PnP.PowerShell spo file add Add-PnPFileToSiteTemplate PnP.PowerShell Add-PnPFolder PnP.PowerShell spo folder add Add-PnPGroupMember PnP.PowerShell group user add Add-PnPHtmlPublishingPageLayout PnP.PowerShell Add-PnPHubSiteAssociation PnP.PowerShell spo hubsite connect Add-PnPHubToHubAssociation PnP.PowerShell Add-PnPIndexedProperty PnP.PowerShell Add-PnPJavaScriptBlock PnP.PowerShell Add-PnPJavaScriptLink PnP.PowerShell Add-PnPListDesign PnP.PowerShell Add-PnPListFoldersToSiteTemplate PnP.PowerShell Add-PnPListItem PnP.PowerShell spo listitem add Add-PnPListItemAttachment PnP.PowerShell Add-PnPListItemComment PnP.PowerShell Add-PnPMasterPage PnP.PowerShell Add-PnPMicrosoft365GroupMember PnP.PowerShell aad o365group user add Add-PnPMicrosoft365GroupOwner PnP.PowerShell aad o365group user add Add-PnPMicrosoft365GroupToSite PnP.PowerShell aad o365group user add , site-groupify Add-PnPNavigationNode PnP.PowerShell spo navigation node add Add-PnPOrgAssetsLibrary PnP.PowerShell spo orgassetslibrary add Add-PnPOrgNewsSite PnP.PowerShell spo orgnewssite set Add-PnPPage PnP.PowerShell spo page add Add-PnPPageImageWebPart PnP.PowerShell spo page clientsidewebpart add Add-PnPPageSection PnP.PowerShell spo page section add Add-PnPPageTextPart PnP.PowerShell spo page text add Add-PnPPageWebPart PnP.PowerShell spo page clientsidewebpart add Add-PnPPlannerBucket PnP.PowerShell planner bucket add Add-PnPPlannerRoster PnP.PowerShell Add-PnPPlannerRosterMember PnP.PowerShell Add-PnPPlannerTask PnP.PowerShell planner task add Add-PnPPublishingImageRendition PnP.PowerShell Add-PnPPublishingPage PnP.PowerShell spo page add Add-PnPPublishingPageLayout PnP.PowerShell Add-PnPRoleDefinition PnP.PowerShell Add-PnPSiteClassification PnP.PowerShell Add-PnPSiteCollectionAdmin PnP.PowerShell Add-PnPSiteCollectionAppCatalog PnP.PowerShell spo site appcatalog add Add-PnPSiteDesign PnP.PowerShell spo sitedesign add Add-PnPSiteDesignFromWeb PnP.PowerShell Add-PnPSiteDesignTask PnP.PowerShell spo sitedesign apply Add-PnPSiteScript PnP.PowerShell spo sitescript add Add-PnPSiteScriptPackage PnP.PowerShell Add-PnPSiteTemplate PnP.PowerShell Add-PnPStoredCredential PnP.PowerShell Add-PnPTaxonomyField PnP.PowerShell Add-PnPTeamsChannel PnP.PowerShell teams channel add Add-PnpTeamsChannelUser PnP.PowerShell teams channel member add Add-PnPTeamsTab PnP.PowerShell teams tab add Add-PnPTeamsTeam PnP.PowerShell teams team add Add-PnPTeamsUser PnP.PowerShell teams user add Add-PnPTenantCdnOrigin PnP.PowerShell spo cdn origin add Add-PnPTenantSequence PnP.PowerShell Add-PnPTenantSequenceSite PnP.PowerShell Add-PnPTenantSequenceSubSite PnP.PowerShell Add-PnPTenantTheme PnP.PowerShell spo theme set Add-PnPTermToTerm PnP.PowerShell term-add Add-PnPView PnP.PowerShell spo list view add Add-PnPViewsFromXML PnP.PowerShell spo list view add Add-PnPVivaConnectionsDashboardACE PnP.PowerShell Add-PnPWebhookSubscription PnP.PowerShell spo list webhook add Add-PnPWebPartToWebPartPage PnP.PowerShell spo page clientsidewebpart add Add-PnPWebPartToWikiPage PnP.PowerShell Add-PnPWikiPage PnP.PowerShell Approve-PnPTenantServicePrincipalPermissionRequest PnP.PowerShell spo serviceprincipal permissionrequest approve Clear-PnPAzureADGroupMember PnP.PowerShell Clear-PnPAzureADGroupOwner PnP.PowerShell Clear-PnPDefaultColumnValues PnP.PowerShell Clear-PnPListItemAsRecord PnP.PowerShell spo listitem record undeclare Clear-PnPMicrosoft365GroupMember PnP.PowerShell aad o365group user remove Clear-PnPMicrosoft365GroupOwner PnP.PowerShell aad o365group set Clear-PnpRecycleBinItem PnP.PowerShell Clear-PnPTenantAppCatalogUrl PnP.PowerShell Clear-PnPTenantRecycleBinItem PnP.PowerShell Connect-PnPOnline PnP.PowerShell Convert-PnPFolderToSiteTemplate PnP.PowerShell Convert-PnPSiteTemplate PnP.PowerShell Convert-PnPSiteTemplateToMarkdown PnP.PowerShell ConvertTo-PnPClientSidePage PnP.PowerShell ConvertTo-PnPPage PnP.PowerShell Copy-PnPFile PnP.PowerShell spo file copy Copy-PnPFolder PnP.PowerShell spo folder copy Copy-PnPList PnP.PowerShell Copy-PnPTeamsTeam PnP.PowerShell teams team clone Deny-PnPTenantServicePrincipalPermissionRequest PnP.PowerShell spo serviceprincipal permissionrequest deny Disable-PnPFeature PnP.PowerShell spo feature disable Disable-PnPFlow PnP.PowerShell spo flow disable Disable-PnPPageScheduling PnP.PowerShell Disable-PnPSharingForNonOwnersOfSite PnP.PowerShell Disable-PnPSiteClassification PnP.PowerShell aad siteclassification disable Disable-PnPTenantServicePrincipal PnP.PowerShell spo serviceprincipal set Disconnect-PnPOnline PnP.PowerShell Enable-PnPCommSite PnP.PowerShell spo site commsite enable Enable-PnPFeature PnP.PowerShell spo feature enable Enable-PnPFlow PnP.PowerShell spo flow enable Enable-PnPPageScheduling PnP.PowerShell Enable-PnPSiteClassification PnP.PowerShell aad siteclassification enable Enable-PnPTenantServicePrincipal PnP.PowerShell spo serviceprincipal set Export-PnPFlow PnP.PowerShell spo flow export Export-PnPListToSiteTemplate PnP.PowerShell Export-PnPPage PnP.PowerShell Export-PnPPageMapping PnP.PowerShell Export-PnPTaxonomy PnP.PowerShell spo term set get Export-PnPTermGroupToXml PnP.PowerShell spo term group get Export-PnPUserInfo PnP.PowerShell spo user get Export-PnPUserProfile PnP.PowerShell spo userprofile get Find-PnPFile PnP.PowerShell Get-PnPAccessToken PnP.PowerShell util accesstoken get Get-PnPAlert PnP.PowerShell Get-PnPApp PnP.PowerShell spo app get , spo app list Get-PnPAppAuthAccessToken PnP.PowerShell Get-PnPAppErrors PnP.PowerShell Get-PnPAppInfo PnP.PowerShell spo app get , spo app list Get-PnPApplicationCustomizer PnP.PowerShell spo customaction get Get-PnPAuditing PnP.PowerShell Get-PnPAuthenticationRealm PnP.PowerShell Get-PnPAvailableLanguage PnP.PowerShell spo web installedlanguage list Get-PnPAvailableSensitivityLabel PnP.PowerShell Get-PnPAvailableSiteClassification PnP.PowerShell Get-PnPAzureADActivityReportDirectoryAudit PnP.PowerShell Get-PnPAzureADApp PnP.PowerShell aad app get Get-PnPAzureADAppPermission PnP.PowerShell Get-PnPAzureADAppSitePermission PnP.PowerShell Get-PnPAzureADGroup PnP.PowerShell aad group list Get-PnPAzureADGroupMember PnP.PowerShell Get-PnPAzureADGroupOwner PnP.PowerShell Get-PnPAzureADUser PnP.PowerShell aad user get Get-PnPAzureCertificate PnP.PowerShell Get-PnPBrowserIdleSignout PnP.PowerShell Get-PnPBuiltInDesignPackageVisibility PnP.PowerShell Get-PnPBuiltInSiteTemplateSettings PnP.PowerShell Get-PnPChangeLog PnP.PowerShell Get-PnPCompatibleHubContentTypes PnP.PowerShell Get-PnPConnection PnP.PowerShell Get-PnPContentType PnP.PowerShell spo contenttype get , spo list contenttype list Get-PnPContentTypePublishingHubUrl PnP.PowerShell spo contenttypehub get Get-PnPContentTypePublishingStatus PnP.PowerShell Get-PnPContext PnP.PowerShell Get-PnPCustomAction PnP.PowerShell spo customaction get , spo customaction list Get-PnPDefaultColumnValues PnP.PowerShell Get-PnPDeletedMicrosoft365Group PnP.PowerShell aad o365group list Get-PnPDiagnostics PnP.PowerShell Get-PnPDisableSpacesActivation PnP.PowerShell Get-PnPDocumentSetTemplate PnP.PowerShell Get-PnPEventReceiver PnP.PowerShell spo eventreceiver get Get-PnPException PnP.PowerShell Get-PnPExternalUser PnP.PowerShell spo externaluser list Get-PnPFeature PnP.PowerShell spo feature list Get-PnPField PnP.PowerShell spo field get , spo field list Get-PnPFile PnP.PowerShell spo file get , spo file list Get-PnPFileVersion PnP.PowerShell Get-PnPFlow PnP.PowerShell spo flow get , spo flow list Get-PnPFlowRun PnP.PowerShell spo flow run get , spo flow run list Get-PnPFolder PnP.PowerShell spo folder get , spo folder list Get-PnPFolderItem PnP.PowerShell spo listitem list Get-PnPFooter PnP.PowerShell Get-PnPGraphAccessToken PnP.PowerShell util accesstoken get Get-PnPGraphSubscription PnP.PowerShell Get-PnPGroup PnP.PowerShell spo group get , spo group list Get-PnPGroupMember PnP.PowerShell spo group user list Get-PnPGroupPermissions PnP.PowerShell Get-PnPHideDefaultThemes PnP.PowerShell spo hidedefaultthemes get Get-PnPHomePage PnP.PowerShell Get-PnPHomeSite PnP.PowerShell spo homesite get Get-PnPHubSite PnP.PowerShell spo hubsite get , spo hubsite list Get-PnPHubSiteChild PnP.PowerShell spo hubsite get Get-PnPIndexedPropertyKeys PnP.PowerShell Get-PnPInPlaceRecordsManagement PnP.PowerShell Get-PnPIsSiteAliasAvailable PnP.PowerShell Get-PnPJavaScriptLink PnP.PowerShell Get-PnPKnowledgeHubSite PnP.PowerShell Get-PnPLabel PnP.PowerShell spo list label get Get-PnPList PnP.PowerShell spo list get , spo list list Get-PnPListDesign PnP.PowerShell Get-PnPListInformationRightsManagement PnP.PowerShell Get-PnPListItem PnP.PowerShell spo listitem get , spo listitem list Get-PnPListItemAttachments PnP.PowerShell Get-PnPListItemComment PnP.PowerShell Get-PnPListItemPermission PnP.PowerShell Get-PnPListPermissions PnP.PowerShell spo list get Get-PnPListRecordDeclaration PnP.PowerShell Get-PnPMasterPage PnP.PowerShell Get-PnPMessageCenterAnnouncement PnP.PowerShell Get-PnPMicrosoft365Group PnP.PowerShell aad o365group get Get-PnPMicrosoft365GroupEndpoint PnP.PowerShell Get-PnPMicrosoft365GroupMember PnP.PowerShell aad o365group user list Get-PnPMicrosoft365GroupOwner PnP.PowerShell aad o365group user list Get-PnPMicrosoft365GroupSettings PnP.PowerShell Get-PnPMicrosoft365GroupSettingTemplates PnP.PowerShell Get-PnPMicrosoft365GroupTeam PnP.PowerShell Get-PnPMicrosoft365GroupYammerCommunity PnP.PowerShell yammer group list Get-PnPNavigationNode PnP.PowerShell spo navigation node list Get-PnPOrgAssetsLibrary PnP.PowerShell spo orgassetslibrary list Get-PnPOrgNewsSite PnP.PowerShell spo orgnewssite list Get-PnPPage PnP.PowerShell spo page get Get-PnPPageComponent PnP.PowerShell spo page control get , spo page control list Get-PnPPlannerBucket PnP.PowerShell planner bucket get , planner bucket list Get-PnPPlannerConfiguration PnP.PowerShell planner tenant settings list Get-PnPPlannerPlan PnP.PowerShell planner plan get , planner plan list Get-PnPPlannerRosterMember PnP.PowerShell Get-PnPPlannerRosterPlan PnP.PowerShell Get-PnPPlannerTask PnP.PowerShell planner task get , planner task list Get-PnPPlannerUserPolicy PnP.PowerShell Get-PnPPowerPlatformEnvironment PnP.PowerShell pp environment list Get-PnPPowerShellTelemetryEnabled PnP.PowerShell Get-PnPProperty PnP.PowerShell Get-PnPPropertyBag PnP.PowerShell spo propertybag get , spo propertybag list Get-PnPPublishingImageRendition PnP.PowerShell Get-PnPRecycleBinItem PnP.PowerShell spo site recyclebinitem list Get-PnPRequestAccessEmails PnP.PowerShell Get-PnPRoleDefinition PnP.PowerShell spo roledefinition get , spo roledefinition list Get-PnPSearchConfiguration PnP.PowerShell Get-PnPSearchCrawlLog PnP.PowerShell Get-PnPSearchSettings PnP.PowerShell Get-PnPServiceCurrentHealth PnP.PowerShell tenant serviceannouncement health get , tenant serviceannouncement health list Get-PnPServiceHealthIssue PnP.PowerShell tenant serviceannouncement healthissue get , tenant serviceannouncement healthissue list Get-PnPSharingForNonOwnersOfSite PnP.PowerShell Get-PnPSite PnP.PowerShell spo site get , spo site list Get-PnPSiteClassification PnP.PowerShell aad siteclassification get Get-PnPSiteClosure PnP.PowerShell Get-PnPSiteCollectionAdmin PnP.PowerShell Get-PnPSiteCollectionAppCatalogs PnP.PowerShell Get-PnPSiteCollectionTermStore PnP.PowerShell Get-PnPSiteDesign PnP.PowerShell spo sitedesign get , spo sitedesign list Get-PnPSiteDesignRights PnP.PowerShell spo sitedesign rights list Get-PnPSiteDesignRun PnP.PowerShell spo sitedesign run list Get-PnPSiteDesignRunStatus PnP.PowerShell spo sitedesign run status get Get-PnPSiteDesignTask PnP.PowerShell spo sitedesign task get , spo sitedesign task list Get-PnPSiteGroup PnP.PowerShell spo group list , spo group get Get-PnPSitePolicy PnP.PowerShell Get-PnPSiteScript PnP.PowerShell spo sitescript get , spo sitescript list Get-PnPSiteScriptFromList PnP.PowerShell spo list sitescript get Get-PnPSiteScriptFromWeb PnP.PowerShell Get-PnPSiteSearchQueryResults PnP.PowerShell spo search Get-PnPSiteSensitivityLabel PnP.PowerShell Get-PnPSiteTemplate PnP.PowerShell Get-PnPSiteUserInvitations PnP.PowerShell Get-PnPStorageEntity PnP.PowerShell spo storageentity get , spo storageentity list Get-PnPStoredCredential PnP.PowerShell Get-PnPStructuralNavigationCacheSiteState PnP.PowerShell Get-PnPStructuralNavigationCacheWebState PnP.PowerShell Get-PnPSubscribeSharePointNewsDigest PnP.PowerShell Get-PnPSubWeb PnP.PowerShell spo web list Get-PnPSyntexModel PnP.PowerShell Get-PnPSyntexModelPublication PnP.PowerShell Get-PnPTaxonomyItem PnP.PowerShell spo term get , spo term list Get-PnPTaxonomySession PnP.PowerShell Get-PnPTeamsApp PnP.PowerShell teams app list Get-PnPTeamsChannel PnP.PowerShell teams channel get , teams channel list Get-PnPTeamsChannelFilesFolder PnP.PowerShell Get-PnPTeamsChannelMessage PnP.PowerShell teams message get , teams message list Get-PnPTeamsChannelMessageReply PnP.PowerShell teams message reply list Get-PnPTeamsChannelUser PnP.PowerShell teams channel member list Get-PnPTeamsPrimaryChannel PnP.PowerShell teams channel get Get-PnPTeamsTab PnP.PowerShell teams tab list Get-PnPTeamsTeam PnP.PowerShell teams team list Get-PnPTeamsUser PnP.PowerShell teams user list Get-PnPTemporarilyDisableAppBar PnP.PowerShell Get-PnPTenant PnP.PowerShell spo tenant settings list Get-PnPTenantAppCatalogUrl PnP.PowerShell spo tenant appcatalogurl get Get-PnPTenantCdnEnabled PnP.PowerShell spo cdn get Get-PnPTenantCdnOrigin PnP.PowerShell spo cdn origin list Get-PnPTenantCdnPolicies PnP.PowerShell spo cdn policy list Get-PnPTenantDeletedSite PnP.PowerShell spo tenant recyclebinitem list Get-PnPTenantId PnP.PowerShell tenant id get Get-PnPTenantInstance PnP.PowerShell Get-PnPTenantRecycleBinItem PnP.PowerShell spo tenant recyclebinitem list Get-PnPTenantSequence PnP.PowerShell Get-PnPTenantSequenceSite PnP.PowerShell Get-PnPTenantServicePrincipal PnP.PowerShell Get-PnPTenantServicePrincipalPermissionGrants PnP.PowerShell spo serviceprincipal grant list Get-PnPTenantServicePrincipalPermissionRequests PnP.PowerShell spo serviceprincipal permissionrequest list Get-PnPTenantSite PnP.PowerShell spo site get , spo site list Get-PnPTenantSyncClientRestriction PnP.PowerShell Get-PnPTenantTemplate PnP.PowerShell Get-PnPTenantTheme PnP.PowerShell spo theme get , spo theme list Get-PnPTerm PnP.PowerShell spo term get , spo term list Get-PnPTermGroup PnP.PowerShell spo term group get , spo term group list Get-PnPTermLabel PnP.PowerShell Get-PnPTermSet PnP.PowerShell spo term set get , spo term set list Get-PnPTheme PnP.PowerShell spo theme get Get-PnPTimeZoneId PnP.PowerShell Get-PnPUnifiedAuditLog PnP.PowerShell Get-PnPUPABulkImportStatus PnP.PowerShell Get-PnPUser PnP.PowerShell spo user get , spo user list Get-PnPUserOneDriveQuota PnP.PowerShell Get-PnPUserProfileProperty PnP.PowerShell spo userprofile get Get-PnPView PnP.PowerShell spo list view get , spo list view list Get-PnPVivaConnectionsDashboardACE PnP.PowerShell Get-PnPWeb PnP.PowerShell spo web get , spo web list Get-PnPWebHeader PnP.PowerShell Get-PnPWebhookSubscriptions PnP.PowerShell spo list webhook get , spo list webhook list Get-PnPWebPart PnP.PowerShell spo page control get , spo page control list Get-PnPWebPartProperty PnP.PowerShell Get-PnPWebPartXml PnP.PowerShell Get-PnPWebTemplates PnP.PowerShell Get-PnPWikiPageContent PnP.PowerShell Grant-PnPAzureADAppSitePermission PnP.PowerShell Grant-PnPHubSiteRights PnP.PowerShell spo hubsite rights grant Grant-PnPSiteDesignRights PnP.PowerShell spo sitedesign rights grant Grant-PnPTenantServicePrincipalPermission PnP.PowerShell aad oauth2grant add Import-PnPTaxonomy PnP.PowerShell Import-PnPTermGroupFromXml PnP.PowerShell Import-PnPTermSet PnP.PowerShell Install-PnPApp PnP.PowerShell spo app install Invoke-PnPBatch PnP.PowerShell Invoke-PnPGraphMethod PnP.PowerShell request Invoke-PnPListDesign PnP.PowerShell Invoke-PnPQuery PnP.PowerShell Invoke-PnPSiteDesign PnP.PowerShell spo sitedesign apply Invoke-PnPSiteScript PnP.PowerShell Invoke-PnPSiteSwap PnP.PowerShell Invoke-PnPSiteTemplate PnP.PowerShell Invoke-PnPSPRestMethod PnP.PowerShell request Invoke-PnPTenantTemplate PnP.PowerShell Invoke-PnPWebAction PnP.PowerShell Measure-PnPList PnP.PowerShell Measure-PnPWeb PnP.PowerShell Move-PnPFile PnP.PowerShell spo file move Move-PnPFolder PnP.PowerShell spo folder move Move-PnPListItemToRecycleBin PnP.PowerShell spo spo listitem remove Move-PnPPageComponent PnP.PowerShell Move-PnpRecycleBinItem PnP.PowerShell New-PnPAzureADGroup PnP.PowerShell New-PnPAzureADUserTemporaryAccessPass PnP.PowerShell New-PnPAzureCertificate PnP.PowerShell New-PnPBatch PnP.PowerShell New-PnPExtensibilityHandlerObject PnP.PowerShell New-PnPGraphSubscription PnP.PowerShell New-PnPGroup PnP.PowerShell spo group add New-PnPList PnP.PowerShell spo list add New-PnPMicrosoft365Group PnP.PowerShell aad o365group add New-PnPMicrosoft365GroupSettings PnP.PowerShell New-PnPPersonalSite PnP.PowerShell New-PnPPlannerPlan PnP.PowerShell planner plan add New-PnPSdnProvider PnP.PowerShell New-PnPSite PnP.PowerShell spo site add New-PnPSiteCollectionTermStore PnP.PowerShell New-PnPSiteGroup PnP.PowerShell spo group add New-PnPSiteTemplate PnP.PowerShell New-PnPSiteTemplateFromFolder PnP.PowerShell New-PnPTeamsApp PnP.PowerShell teams app publish New-PnPTeamsTeam PnP.PowerShell teams team add New-PnPTenantSequence PnP.PowerShell New-PnPTenantSequenceCommunicationSite PnP.PowerShell New-PnPTenantSequenceTeamNoGroupSite PnP.PowerShell New-PnPTenantSequenceTeamNoGroupSubSite PnP.PowerShell New-PnPTenantSequenceTeamSite PnP.PowerShell New-PnPTenantSite PnP.PowerShell spo site add New-PnPTenantTemplate PnP.PowerShell New-PnPTerm PnP.PowerShell spo term add New-PnPTermGroup PnP.PowerShell spo term group add New-PnPTermLabel PnP.PowerShell New-PnPTermSet PnP.PowerShell spo term set add New-PnPUPABulkImportJob PnP.PowerShell New-PnPUser PnP.PowerShell New-PnPWeb PnP.PowerShell spo web add Publish-PnPApp PnP.PowerShell spo app deploy Publish-PnPCompanyApp PnP.PowerShell Publish-PnPContentType PnP.PowerShell Publish-PnPSyntexModel PnP.PowerShell Read-PnPSiteTemplate PnP.PowerShell Read-PnPTenantTemplate PnP.PowerShell Receive-PnPCopyMoveJobStatus PnP.PowerShell Register-PnPAppCatalogSite PnP.PowerShell spo site appcatalog add Register-PnPAzureADApp PnP.PowerShell aad app add Register-PnPHubSite PnP.PowerShell spo hubsite register Register-PnPManagementShellAccess PnP.PowerShell Remove-PnPAdaptiveScopeProperty PnP.PowerShell Remove-PnPAlert PnP.PowerShell Remove-PnPApp PnP.PowerShell spo app remove Remove-PnPApplicationCustomizer PnP.PowerShell Remove-PnPAzureADApp PnP.PowerShell aad app remove Remove-PnPAzureADAppSitePermission PnP.PowerShell Remove-PnPAzureADGroup PnP.PowerShell Remove-PnPAzureADGroupMember PnP.PowerShell Remove-PnPAzureADGroupOwner PnP.PowerShell Remove-PnPContentType PnP.PowerShell spo contenttype remove Remove-PnPContentTypeFromDocumentSet PnP.PowerShell Remove-PnPContentTypeFromList PnP.PowerShell spo list contenttype remove Remove-PnPCustomAction PnP.PowerShell spo customaction remove Remove-PnPDeletedMicrosoft365Group PnP.PowerShell aad o365group remove Remove-PnPEventReceiver PnP.PowerShell Remove-PnPExternalUser PnP.PowerShell Remove-PnPField PnP.PowerShell spo field remove Remove-PnPFieldFromContentType PnP.PowerShell spo contenttype field remove Remove-PnPFile PnP.PowerShell spo file remove Remove-PnPFileFromSiteTemplate PnP.PowerShell Remove-PnPFileVersion PnP.PowerShell Remove-PnPFlow PnP.PowerShell flow remove Remove-PnPFolder PnP.PowerShell spo folder remove Remove-PnPGraphSubscription PnP.PowerShell Remove-PnPGroup PnP.PowerShell spo group remove Remove-PnPGroupMember PnP.PowerShell spo group user remove Remove-PnPHomeSite PnP.PowerShell spo homesite remove Remove-PnPHubSiteAssociation PnP.PowerShell spo hubsite disconnect Remove-PnPHubToHubAssociation PnP.PowerShell Remove-PnPIndexedProperty PnP.PowerShell Remove-PnPJavaScriptLink PnP.PowerShell Remove-PnPKnowledgeHubSite PnP.PowerShell Remove-PnPList PnP.PowerShell spo list remove Remove-PnPListDesign PnP.PowerShell Remove-PnPListItem PnP.PowerShell spo listitem remove Remove-PnPListItemAttachment PnP.PowerShell Remove-PnPListItemComments PnP.PowerShell Remove-PnPMicrosoft365Group PnP.PowerShell aad o365group remove Remove-PnPMicrosoft365GroupMember PnP.PowerShell aad o365group user remove Remove-PnPMicrosoft365GroupOwner PnP.PowerShell Remove-PnPMicrosoft365GroupSettings PnP.PowerShell Remove-PnPNavigationNode PnP.PowerShell spo navigation node remove Remove-PnPOrgAssetsLibrary PnP.PowerShell spo orgassetslibrary remove Remove-PnPOrgNewsSite PnP.PowerShell spo orgnewssite remove Remove-PnPPage PnP.PowerShell spo page remove Remove-PnPPageComponent PnP.PowerShell Remove-PnPPlannerBucket PnP.PowerShell planner bucket remove Remove-PnPPlannerPlan PnP.PowerShell planner plan remove Remove-PnPPlannerRoster PnP.PowerShell Remove-PnPPlannerRosterMember PnP.PowerShell Remove-PnPPlannerTask PnP.PowerShell planner task remove Remove-PnPPropertyBagValue PnP.PowerShell spo propertybag remove Remove-PnPPublishingImageRendition PnP.PowerShell Remove-PnPRoleDefinition PnP.PowerShell spo roledefinition remove Remove-PnPSdnProvider PnP.PowerShell Remove-PnPSearchConfiguration PnP.PowerShell Remove-PnPSiteClassification PnP.PowerShell Remove-PnPSiteCollectionAdmin PnP.PowerShell Remove-PnPSiteCollectionAppCatalog PnP.PowerShell spo site appcatalog remove Remove-PnPSiteCollectionTermStore PnP.PowerShell Remove-PnPSiteDesign PnP.PowerShell spo sitedesign remove Remove-PnPSiteDesignTask PnP.PowerShell spo sitedesign task remove Remove-PnPSiteGroup PnP.PowerShell spo group remove Remove-PnPSiteScript PnP.PowerShell spo sitescript remove Remove-PnPSiteUserInvitations PnP.PowerShell Remove-PnPStorageEntity PnP.PowerShell spo storageentity remove Remove-PnPStoredCredential PnP.PowerShell Remove-PnPTaxonomyItem PnP.PowerShell Remove-PnPTeamsApp PnP.PowerShell teams app remove Remove-PnPTeamsChannel PnP.PowerShell teams channel remove Remove-PnPTeamsChannelUser PnP.PowerShell teams channel member remove Remove-PnPTeamsTab PnP.PowerShell teams tab remove Remove-PnPTeamsTeam PnP.PowerShell teams team remove Remove-PnPTeamsUser PnP.PowerShell aad o365group user remove Remove-PnPTenantCdnOrigin PnP.PowerShell spo cdn origin remove Remove-PnPTenantDeletedSite PnP.PowerShell Remove-PnPTenantSite PnP.PowerShell spo site remove Remove-PnPTenantSyncClientRestriction PnP.PowerShell Remove-PnPTenantTheme PnP.PowerShell spo theme remove Remove-PnPTerm PnP.PowerShell Remove-PnPTermGroup PnP.PowerShell Remove-PnPTermLabel PnP.PowerShell Remove-PnPUser PnP.PowerShell spo user remove Remove-PnPUserInfo PnP.PowerShell Remove-PnPUserProfile PnP.PowerShell Remove-PnPView PnP.PowerShell spo list view remove Remove-PnPVivaConnectionsDashboardACE PnP.PowerShell Remove-PnPWeb PnP.PowerShell spo web remove Remove-PnPWebhookSubscription PnP.PowerShell spo list webhook remove Remove-PnPWebPart PnP.PowerShell Remove-PnPWikiPage PnP.PowerShell Rename-PnPFile PnP.PowerShell spo file rename Rename-PnPFolder PnP.PowerShell spo folder rename Rename-PnPTenantSite PnP.PowerShell spo site rename Repair-PnPSite PnP.PowerShell Request-PnPAccessToken PnP.PowerShell util accesstoken get Request-PnPPersonalSite PnP.PowerShell Request-PnPReIndexList PnP.PowerShell Request-PnPReIndexWeb PnP.PowerShell spo web reindex Request-PnPSyntexClassifyAndExtract PnP.PowerShell Reset-PnPFileVersion PnP.PowerShell Reset-PnPLabel PnP.PowerShell Reset-PnPMicrosoft365GroupExpiration PnP.PowerShell Reset-PnPUserOneDriveQuotaToDefault PnP.PowerShell Resolve-PnPFolder PnP.PowerShell Restart-PnPFlowRun PnP.PowerShell flow run resubmit Restore-PnPDeletedMicrosoft365Group PnP.PowerShell aad o365group restore Restore-PnPFileVersion PnP.PowerShell Restore-PnPRecycleBinItem PnP.PowerShell spo site recyclebinitem restore Restore-PnPTenantRecycleBinItem PnP.PowerShell spo tenant recyclebinitem restore Restore-PnPTenantSite PnP.PowerShell Revoke-PnPHubSiteRights PnP.PowerShell spo hubsite rights revoke Revoke-PnPSiteDesignRights PnP.PowerShell spo sitedesign rights revoke Revoke-PnPTenantServicePrincipalPermission PnP.PowerShell spo serviceprincipal grant revoke Revoke-PnPUserSession PnP.PowerShell Save-PnPPageConversionLog PnP.PowerShell Save-PnPSiteTemplate PnP.PowerShell Save-PnPTenantTemplate PnP.PowerShell Send-PnPMail PnP.PowerShell spo mail send Set-PnPAdaptiveScopeProperty PnP.PowerShell Set-PnPApplicationCustomizer PnP.PowerShell Set-PnPAppSideLoading PnP.PowerShell Set-PnPAuditing PnP.PowerShell Set-PnPAvailablePageLayouts PnP.PowerShell Set-PnPAzureADAppSitePermission PnP.PowerShell Set-PnPAzureADGroup PnP.PowerShell Set-PnPBrowserIdleSignout PnP.PowerShell Set-PnPBuiltInDesignPackageVisibility PnP.PowerShell Set-PnPBuiltInSiteTemplateSettings PnP.PowerShell Set-PnPContentType PnP.PowerShell spo contenttype set Set-PnPContext PnP.PowerShell Set-PnPDefaultColumnValues PnP.PowerShell Set-PnPDefaultContentTypeToList PnP.PowerShell spo list contenttype default set Set-PnPDefaultPageLayout PnP.PowerShell Set-PnPDisableSpacesActivation PnP.PowerShell Set-PnPDocumentSetField PnP.PowerShell Set-PnPField PnP.PowerShell spo field set Set-PnPFileCheckedIn PnP.PowerShell spo file checkin Set-PnPFileCheckedOut PnP.PowerShell spo file checkout Set-PnPFolderPermission PnP.PowerShell spo listitem roleinheritance break , spo listitem roleinheritance reset Set-PnPFooter PnP.PowerShell Set-PnPGraphSubscription PnP.PowerShell Set-PnPGroup PnP.PowerShell spo group set Set-PnPGroupPermissions PnP.PowerShell Set-PnPHideDefaultThemes PnP.PowerShell spo hidedefaultthemes set Set-PnPHomePage PnP.PowerShell spo web set Set-PnPHomeSite PnP.PowerShell spo homesite set Set-PnPHubSite PnP.PowerShell spo hubsite set Set-PnPIndexedProperties PnP.PowerShell Set-PnPInPlaceRecordsManagement PnP.PowerShell spo site inplacerecordsmanagement set Set-PnPKnowledgeHubSite PnP.PowerShell spo knowledgehub set Set-PnPLabel PnP.PowerShell spo list label set Set-PnPList PnP.PowerShell spo list set Set-PnPListInformationRightsManagement PnP.PowerShell Set-PnPListItem PnP.PowerShell spo listitem set Set-PnPListItemAsRecord PnP.PowerShell spo listitem record declare Set-PnPListItemPermission PnP.PowerShell spo listitem roleinheritance break , spo listitem roleinheritance reset Set-PnPListPermission PnP.PowerShell spo list roleinheritance break , spo list roleinheritance reset Set-PnPListRecordDeclaration PnP.PowerShell Set-PnPMasterPage PnP.PowerShell Set-PnPMessageCenterAnnouncementAsArchived PnP.PowerShell Set-PnPMessageCenterAnnouncementAsFavorite PnP.PowerShell Set-PnPMessageCenterAnnouncementAsNotArchived PnP.PowerShell Set-PnPMessageCenterAnnouncementAsNotFavorite PnP.PowerShell Set-PnPMessageCenterAnnouncementAsRead PnP.PowerShell Set-PnPMessageCenterAnnouncementAsUnread PnP.PowerShell Set-PnPMicrosoft365Group PnP.PowerShell aad o365group set Set-PnPMicrosoft365GroupSettings PnP.PowerShell Set-PnPMinimalDownloadStrategy PnP.PowerShell Set-PnPPage PnP.PowerShell spo page set Set-PnPPageTextPart PnP.PowerShell Set-PnPPageWebPart PnP.PowerShell Set-PnPPlannerBucket PnP.PowerShell planner bucket set Set-PnPPlannerConfiguration PnP.PowerShell planner tenant settings set Set-PnPPlannerPlan PnP.PowerShell Set-PnPPlannerTask PnP.PowerShell planner task set Set-PnPPlannerUserPolicy PnP.PowerShell Set-PnPPropertyBagValue PnP.PowerShell spo propertybag set Set-PnPRequestAccessEmails PnP.PowerShell Set-PnPRoleDefinition PnP.PowerShell Set-PnPSearchConfiguration PnP.PowerShell Set-PnPSearchSettings PnP.PowerShell Set-PnPSite PnP.PowerShell spo site set Set-PnPSiteClassification PnP.PowerShell Set-PnPSiteClosure PnP.PowerShell Set-PnPSiteDesign PnP.PowerShell spo sitedesign set Set-PnPSiteGroup PnP.PowerShell spo group set Set-PnPSitePolicy PnP.PowerShell Set-PnPSiteScript PnP.PowerShell spo sitescript set Set-PnPSiteScriptPackage PnP.PowerShell spo sitescript set Set-PnPSiteSensitivityLabel PnP.PowerShell Set-PnPSiteTemplateMetadata PnP.PowerShell spo sitescript set Set-PnPStorageEntity PnP.PowerShell spo storageentity set Set-PnPStructuralNavigationCacheSiteState PnP.PowerShell Set-PnPStructuralNavigationCacheWebState PnP.PowerShell Set-PnPSubscribeSharePointNewsDigest PnP.PowerShell Set-PnPTaxonomyFieldValue PnP.PowerShell Set-PnPTeamifyPromptHidden PnP.PowerShell Set-PnPTeamsChannel PnP.PowerShell teams channel set Set-PnpTeamsChannelUser PnP.PowerShell teams channel member set Set-PnPTeamsTab PnP.PowerShell Set-PnPTeamsTeam PnP.PowerShell teams team set Set-PnPTeamsTeamArchivedState PnP.PowerShell teams team archive , teams team unarchive Set-PnPTeamsTeamPicture PnP.PowerShell Set-PnPTemporarilyDisableAppBar PnP.PowerShell Set-PnPTenant PnP.PowerShell spo tenant settings set Set-PnPTenantAppCatalogUrl PnP.PowerShell Set-PnPTenantCdnEnabled PnP.PowerShell spo cdn set Set-PnPTenantCdnPolicy PnP.PowerShell spo cdn policy set Set-PnPTenantSite PnP.PowerShell spo site set Set-PnPTenantSyncClientRestriction PnP.PowerShell Set-PnPTerm PnP.PowerShell Set-PnPTermGroup PnP.PowerShell Set-PnPTermSet PnP.PowerShell Set-PnPTheme PnP.PowerShell spo theme apply Set-PnPTraceLog PnP.PowerShell Set-PnPUserOneDriveQuota PnP.PowerShell Set-PnPUserProfileProperty PnP.PowerShell spo userprofile set Set-PnPView PnP.PowerShell spo list view set Set-PnPWeb PnP.PowerShell spo web set Set-PnPWebHeader PnP.PowerShell Set-PnPWebhookSubscription PnP.PowerShell spo list webhook set Set-PnPWebPartProperty PnP.PowerShell Set-PnPWebPermission PnP.PowerShell Set-PnPWebTheme PnP.PowerShell Set-PnPWikiPageContent PnP.PowerShell Stop-PnPFlowRun PnP.PowerShell flow run cancel Submit-PnPSearchQuery PnP.PowerShell spo search Submit-PnPTeamsChannelMessage PnP.PowerShell Sync-PnPAppToTeams PnP.PowerShell Sync-PnPSharePointUserProfilesFromAzureActiveDirectory PnP.PowerShell Test-PnPListItemIsRecord PnP.PowerShell spo listitem isrecord Test-PnPMicrosoft365GroupAliasIsUsed PnP.PowerShell Test-PnPSite PnP.PowerShell Test-PnPTenantTemplate PnP.PowerShell Uninstall-PnPApp PnP.PowerShell spo app uninstall Unpublish-PnPApp PnP.PowerShell spo app retract Unpublish-PnPContentType PnP.PowerShell Unpublish-PnPSyntexModel PnP.PowerShell Unregister-PnPHubSite PnP.PowerShell spo hubsite unregister Update-PnPApp PnP.PowerShell spo app upgrade Update-PnPAvailableSiteClassification PnP.PowerShell Update-PnPSiteClassification PnP.PowerShell aad siteclassification set Update-PnPSiteDesignFromWeb PnP.PowerShell Update-PnPTeamsApp PnP.PowerShell teams app update Update-PnPTeamsUser PnP.PowerShell aad o365group user set Update-PnPUserType PnP.PowerShell Update-PnPVivaConnectionsDashboardACE PnP.PowerShell Approve-FlowApprovalRequest Microsoft.PowerApps.PowerShell Deny-FlowApprovalRequest Microsoft.PowerApps.PowerShell Disable-Flow Microsoft.PowerApps.PowerShell flow disable Enable-Flow Microsoft.PowerApps.PowerShell flow enable Get-Flow Microsoft.PowerApps.PowerShell flow list , flow get Get-FlowApproval Microsoft.PowerApps.PowerShell Get-FlowApprovalRequest Microsoft.PowerApps.PowerShell Get-FlowEnvironment Microsoft.PowerApps.PowerShell flow environment list , flow environment get Get-FlowOwnerRole Microsoft.PowerApps.PowerShell Get-FlowRun Microsoft.PowerApps.PowerShell flow run list , flow run get Get-PowerApp Microsoft.PowerApps.PowerShell pa app list , pa app get Get-PowerAppConnection Microsoft.PowerApps.PowerShell Get-PowerAppConnectionRoleAssignment Microsoft.PowerApps.PowerShell Get-PowerAppConnector Microsoft.PowerApps.PowerShell Get-PowerAppConnectorRoleAssignment Microsoft.PowerApps.PowerShell Get-PowerAppEnvironment Microsoft.PowerApps.PowerShell pa environment list , pa environment get Get-PowerAppRoleAssignment Microsoft.PowerApps.PowerShell Get-PowerAppsNotification Microsoft.PowerApps.PowerShell Get-PowerAppVersion Microsoft.PowerApps.PowerShell Publish-PowerApp Microsoft.PowerApps.PowerShell Remove-Flow Microsoft.PowerApps.PowerShell flow remove Remove-FlowOwnerRole Microsoft.PowerApps.PowerShell Remove-PowerApp Microsoft.PowerApps.PowerShell pa app remove Remove-PowerAppConnection Microsoft.PowerApps.PowerShell Remove-PowerAppConnectionRoleAssignment Microsoft.PowerApps.PowerShell Remove-PowerAppConnector Microsoft.PowerApps.PowerShell Remove-PowerAppConnectorRoleAssignment Microsoft.PowerApps.PowerShell Remove-PowerAppRoleAssignment Microsoft.PowerApps.PowerShell Restore-PowerAppVersion Microsoft.PowerApps.PowerShell Set-FlowOwnerRole Microsoft.PowerApps.PowerShell Set-PowerAppConnectionRoleAssignment Microsoft.PowerApps.PowerShell Set-PowerAppConnectorRoleAssignment Microsoft.PowerApps.PowerShell Set-PowerAppDisplayName Microsoft.PowerApps.PowerShell Set-PowerAppRoleAssignment Microsoft.PowerApps.PowerShell Add-ConnectorToBusinessDataGroup Microsoft.PowerApps.Administration.PowerShell Add-CustomConnectorToPolicy Microsoft.PowerApps.Administration.PowerShell Add-PowerAppsAccount Microsoft.PowerApps.Administration.PowerShell Clear-AdminPowerAppApisToBypassConsent Microsoft.PowerApps.Administration.PowerShell Clear-AdminPowerAppAsFeatured Microsoft.PowerApps.Administration.PowerShell Clear-AdminPowerAppAsHero Microsoft.PowerApps.Administration.PowerShell Disable-AdminFlow Microsoft.PowerApps.Administration.PowerShell flow disable Enable-AdminFlow Microsoft.PowerApps.Administration.PowerShell flow enable Get-AdminDlpPolicy Microsoft.PowerApps.Administration.PowerShell Get-AdminFlow Microsoft.PowerApps.Administration.PowerShell Get-AdminFlowOwnerRole Microsoft.PowerApps.Administration.PowerShell Get-AdminFlowUserDetails Microsoft.PowerApps.Administration.PowerShell Get-AdminPowerApp Microsoft.PowerApps.Administration.PowerShell Get-AdminPowerAppCdsDatabaseCurrencies Microsoft.PowerApps.Administration.PowerShell Get-AdminPowerAppCdsDatabaseLanguages Microsoft.PowerApps.Administration.PowerShell Get-AdminPowerAppConnection Microsoft.PowerApps.Administration.PowerShell Get-AdminPowerAppConnectionReferences Microsoft.PowerApps.Administration.PowerShell Get-AdminPowerAppConnectionRoleAssignment Microsoft.PowerApps.Administration.PowerShell Get-AdminPowerAppConnector Microsoft.PowerApps.Administration.PowerShell Get-AdminPowerAppConnectorRoleAssignment Microsoft.PowerApps.Administration.PowerShell Get-AdminPowerAppEnvironment Microsoft.PowerApps.Administration.PowerShell Get-AdminPowerAppEnvironmentLocations Microsoft.PowerApps.Administration.PowerShell Get-AdminPowerAppEnvironmentRoleAssignment Microsoft.PowerApps.Administration.PowerShell Get-AdminPowerAppRoleAssignment Microsoft.PowerApps.Administration.PowerShell Get-AdminPowerAppsUserDetails Microsoft.PowerApps.Administration.PowerShell Get-JwtToken Microsoft.PowerApps.Administration.PowerShell Get-TenantDetailsFromGraph Microsoft.PowerApps.Administration.PowerShell Get-UsersOrGroupsFromGraph Microsoft.PowerApps.Administration.PowerShell InvokeApi Microsoft.PowerApps.Administration.PowerShell New-AdminDlpPolicy Microsoft.PowerApps.Administration.PowerShell New-AdminPowerAppCdsDatabase Microsoft.PowerApps.Administration.PowerShell New-AdminPowerAppEnvironment Microsoft.PowerApps.Administration.PowerShell Remove-AdminDlpPolicy Microsoft.PowerApps.Administration.PowerShell Remove-AdminFlow Microsoft.PowerApps.Administration.PowerShell Remove-AdminFlowApprovals Microsoft.PowerApps.Administration.PowerShell Remove-AdminFlowOwnerRole Microsoft.PowerApps.Administration.PowerShell Remove-AdminFlowUserDetails Microsoft.PowerApps.Administration.PowerShell Remove-AdminPowerApp Microsoft.PowerApps.Administration.PowerShell Remove-AdminPowerAppConnection Microsoft.PowerApps.Administration.PowerShell Remove-AdminPowerAppConnectionRoleAssignment Microsoft.PowerApps.Administration.PowerShell Remove-AdminPowerAppConnector Microsoft.PowerApps.Administration.PowerShell Remove-AdminPowerAppConnectorRoleAssignment Microsoft.PowerApps.Administration.PowerShell Remove-AdminPowerAppEnvironment Microsoft.PowerApps.Administration.PowerShell Remove-AdminPowerAppEnvironmentRoleAssignment Microsoft.PowerApps.Administration.PowerShell Remove-AdminPowerAppRoleAssignment Microsoft.PowerApps.Administration.PowerShell Remove-ConnectorFromBusinessDataGroup Microsoft.PowerApps.Administration.PowerShell Remove-CustomConnectorFromPolicy Microsoft.PowerApps.Administration.PowerShell Remove-LegacyCDSDatabase Microsoft.PowerApps.Administration.PowerShell Remove-PowerAppsAccount Microsoft.PowerApps.Administration.PowerShell ReplaceMacro Microsoft.PowerApps.Administration.PowerShell Select-CurrentEnvironment Microsoft.PowerApps.Administration.PowerShell Set-AdminDlpPolicy Microsoft.PowerApps.Administration.PowerShell Set-AdminFlowOwnerRole Microsoft.PowerApps.Administration.PowerShell Set-AdminPowerAppApisToBypassConsent Microsoft.PowerApps.Administration.PowerShell Set-AdminPowerAppAsFeatured Microsoft.PowerApps.Administration.PowerShell Set-AdminPowerAppAsHero Microsoft.PowerApps.Administration.PowerShell Set-AdminPowerAppConnectionRoleAssignment Microsoft.PowerApps.Administration.PowerShell Set-AdminPowerAppConnectorRoleAssignment Microsoft.PowerApps.Administration.PowerShell Set-AdminPowerAppEnvironmentDisplayName Microsoft.PowerApps.Administration.PowerShell Set-AdminPowerAppEnvironmentRoleAssignment Microsoft.PowerApps.Administration.PowerShell Set-AdminPowerAppOwner Microsoft.PowerApps.Administration.PowerShell Set-AdminPowerAppRoleAssignment Microsoft.PowerApps.Administration.PowerShell Test-PowerAppsAccount Microsoft.PowerApps.Administration.PowerShell Add-TeamUser MicrosoftTeams teams user add Connect-MicrosoftTeams MicrosoftTeams login Disconnect-MicrosoftTeams MicrosoftTeams logout Get-Team MicrosoftTeams teams team list Get-TeamChannel MicrosoftTeams teams channel list , teams channel get Get-TeamFunSettings MicrosoftTeams teams funsettings list Get-TeamGuestSettings MicrosoftTeams teams guestsettings list Get-TeamMemberSettings MicrosoftTeams teams membersettings list Get-TeamMessagingSettings MicrosoftTeams teams messagingsettings list Get-TeamUser MicrosoftTeams teams user list New-Team MicrosoftTeams teams team add New-TeamChannel MicrosoftTeams teams channel add Remove-Team MicrosoftTeams teams team remove Remove-TeamChannel MicrosoftTeams teams channel remove Remove-TeamUser MicrosoftTeams teams user remove Set-Team MicrosoftTeams teams team set Set-TeamChannel MicrosoftTeams teams channel set Set-TeamFunSettings MicrosoftTeams teams funsettings set Set-TeamGuestSettings MicrosoftTeams teams guestsettings set Set-TeamMemberSettings MicrosoftTeams teams membersettings set Set-TeamMessagingSettings MicrosoftTeams teams messagingsettings set Set-TeamPicture MicrosoftTeams","title":"Comparison to SharePoint and Microsoft 365 PowerShell"},{"location":"about/comparison-powershell/#comparison-to-sharepoint-and-microsoft-365-powershell","text":"Following table lists the different CLI for Microsoft 365 commands and how they map to PowerShell cmdlets for SharePoint and Microsoft 365. PowerShell Cmdlet Source CLI for Microsoft 365 command Add-SPOGeoAdministrator Microsoft.Online.SharePoint.PowerShell Add-SPOHubSiteAssociation Microsoft.Online.SharePoint.PowerShell spo hubsite connect Add-SPOOrgAssetsLibrary Microsoft.Online.SharePoint.PowerShell Add-SPOSiteCollectionAppCatalog Microsoft.Online.SharePoint.PowerShell spo site appcatalog add Add-SPOSiteDesign Microsoft.Online.SharePoint.PowerShell spo sitedesign add Add-SPOSiteDesignTask Microsoft.Online.SharePoint.PowerShell spo sitedesign apply Add-SPOSiteScript Microsoft.Online.SharePoint.PowerShell spo sitescript add Add-SPOTenantCdnOrigin Microsoft.Online.SharePoint.PowerShell spo cdn origin add Add-SPOTheme Microsoft.Online.SharePoint.PowerShell spo theme set Add-SPOHubToHubAssociation Microsoft.Online.SharePoint.PowerShell Add-SPOSiteScriptPackage Microsoft.Online.SharePoint.PowerShell Add-SPOUser Microsoft.Online.SharePoint.PowerShell Approve-SPOTenantServicePrincipalPermissionGrant Microsoft.Online.SharePoint.PowerShell spo serviceprincipal grant add Approve-SPOTenantServicePrincipalPermissionRequest Microsoft.Online.SharePoint.PowerShell spo serviceprincipal permissionrequest approve Connect-SPOService Microsoft.Online.SharePoint.PowerShell spo login ConvertTo-SPOMigrationEncryptedPackage Microsoft.Online.SharePoint.PowerShell ConvertTo-SPOMigrationTargetedPackage Microsoft.Online.SharePoint.PowerShell Deny-SPOTenantServicePrincipalPermissionRequest Microsoft.Online.SharePoint.PowerShell spo serviceprincipal permissionrequest deny Disable-SPOTenantServicePrincipal Microsoft.Online.SharePoint.PowerShell spo serviceprincipal set Disconnect-SPOService Microsoft.Online.SharePoint.PowerShell spo logout Enable-SPOCommSite Microsoft.Online.SharePoint.PowerShell spo site commsite enable Enable-SPOTenantServicePrincipal Microsoft.Online.SharePoint.PowerShell spo serviceprincipal set Export-SPOQueryLogs Microsoft.Online.SharePoint.PowerShell Export-SPOUserInfo Microsoft.Online.SharePoint.PowerShell Export-SPOUserProfile Microsoft.Online.SharePoint.PowerShell Get-IsCommSite Microsoft.Online.SharePoint.PowerShell Get-SPOAppErrors Microsoft.Online.SharePoint.PowerShell Get-SPOAppInfo Microsoft.Online.SharePoint.PowerShell Get-SPOBrowserIdleSignOut Microsoft.Online.SharePoint.PowerShell Get-SPOBuiltDesignPackageVisibility Microsoft.Online.SharePoint.PowerShell Get-SPOBuiltInDesignPackageVisibility Microsoft.Online.SharePoint.PowerShell Get-SPOCrossGeoMovedUsers Microsoft.Online.SharePoint.PowerShell Get-SPOCrossGeoMoveReport Microsoft.Online.SharePoint.PowerShell Get-SPOCrossGeoUsers Microsoft.Online.SharePoint.PowerShell Get-SPODataEncryptionPolicy Microsoft.Online.SharePoint.PowerShell Get-SPODeletedSite Microsoft.Online.SharePoint.PowerShell spo site list Get-SPOExternalUser Microsoft.Online.SharePoint.PowerShell spo externaluser list Get-SPOGeoAdministrator Microsoft.Online.SharePoint.PowerShell Get-SPOGeoMoveCrossCompatibilityStatus Microsoft.Online.SharePoint.PowerShell Get-SPOGeoStorageQuota Microsoft.Online.SharePoint.PowerShell Get-SPOHideDefaultThemes Microsoft.Online.SharePoint.PowerShell spo hidedefaultthemes get Get-SPOHomeSite Microsoft.Online.SharePoint.PowerShell spo homesite get Get-SPOHubSite Microsoft.Online.SharePoint.PowerShell spo hubsite get , spo hubsite list Get-SPOKnowledgeHubSite Microsoft.Online.SharePoint.PowerShell Get-SPOMigrationJobProgress Microsoft.Online.SharePoint.PowerShell Get-SPOMigrationJobStatus Microsoft.Online.SharePoint.PowerShell Get-SPOMultiGeoCompanyAllowedDataLocation Microsoft.Online.SharePoint.PowerShell Get-SPOMultiGeoExperience Microsoft.Online.SharePoint.PowerShell Get-SPOOrgAssetsLibrary Microsoft.Online.SharePoint.PowerShell spo orgassetslibrary list Get-SPOOrgNewsSite Microsoft.Online.SharePoint.PowerShell Get-SPOPublicCdnOrigins Microsoft.Online.SharePoint.PowerShell Get-SPOSite Microsoft.Online.SharePoint.PowerShell spo site list Get-SPOSiteCollectionAppCatalogs Microsoft.Online.SharePoint.PowerShell Get-SPOSiteContentMoveState Microsoft.Online.SharePoint.PowerShell Get-SPOSiteDataEncryptionPolicy Microsoft.Online.SharePoint.PowerShell Get-SPOSiteDesign Microsoft.Online.SharePoint.PowerShell spo sitedesign get , spo sitedesign list Get-SPOSiteDesignRights Microsoft.Online.SharePoint.PowerShell spo sitedesign rights list Get-SPOSiteDesignRun Microsoft.Online.SharePoint.PowerShell spo sitedesign run list Get-SPOSiteDesignRunStatus Microsoft.Online.SharePoint.PowerShell spo sitedesign run status get Get-SPOSiteDesignTask Microsoft.Online.SharePoint.PowerShell spo sitedesign task get , spo sitedesign task list Get-SPOSiteGroup Microsoft.Online.SharePoint.PowerShell Get-SPOSiteRenameState Microsoft.Online.SharePoint.PowerShell Get-SPOSiteScript Microsoft.Online.SharePoint.PowerShell spo sitescript get , spo sitescript list Get-SPOSiteScriptFromList Microsoft.Online.SharePoint.PowerShell spo list sitescript get Get-SPOSiteScriptFromWeb Microsoft.Online.SharePoint.PowerShell Get-SPOSiteUserInvitations Microsoft.Online.SharePoint.PowerShell Get-SPOStorageEntity Microsoft.Online.SharePoint.PowerShell spo storageentity get , spo storageentity list Get-SPOStructuralNavigationCacheSiteState Microsoft.Online.SharePoint.PowerShell Get-SPOStructuralNavigationCacheWebState Microsoft.Online.SharePoint.PowerShell Get-SPOTenant Microsoft.Online.SharePoint.PowerShell Get-SPOTenantCdnEnabled Microsoft.Online.SharePoint.PowerShell spo cdn get Get-SPOTenantCdnOrigins Microsoft.Online.SharePoint.PowerShell spo cdn origin list Get-SPOTenantCdnPolicies Microsoft.Online.SharePoint.PowerShell spo cdn policy list Get-SPOTenantContentTypeReplicationParameters Microsoft.Online.SharePoint.PowerShell Get-SPOTenantLogEntry Microsoft.Online.SharePoint.PowerShell Get-SPOTenantLogLastAvailableTimeInUtc Microsoft.Online.SharePoint.PowerShell Get-SPOTenantOrgRelation Microsoft.Online.SharePoint.PowerShell Get-SPOTenantOrgRelationByPartner Microsoft.Online.SharePoint.PowerShell Get-SPOTenantOrgRelationByScenario Microsoft.Online.SharePoint.PowerShell Get-SPOTenantServicePrincipalPermissionGrants Microsoft.Online.SharePoint.PowerShell spo serviceprincipal grant list Get-SPOTenantServicePrincipalPermissionRequests Microsoft.Online.SharePoint.PowerShell spo serviceprincipal permissionrequest list Get-SPOTenantSyncClientRestriction Microsoft.Online.SharePoint.PowerShell Get-SPOTenantTaxonomyReplicationParameters Microsoft.Online.SharePoint.PowerShell Get-SPOTheme Microsoft.Online.SharePoint.PowerShell spo theme list Get-SPOUnifiedGroup Microsoft.Online.SharePoint.PowerShell Get-SPOUnifiedGroupMoveState Microsoft.Online.SharePoint.PowerShell Get-SPOUser Microsoft.Online.SharePoint.PowerShell spo user get , spo user list Get-SPOUserAndContentMoveState Microsoft.Online.SharePoint.PowerShell Get-SPOUserOneDriveLocation Microsoft.Online.SharePoint.PowerShell Get-SPOWebTemplate Microsoft.Online.SharePoint.PowerShell Grant-SPOHubSiteRights Microsoft.Online.SharePoint.PowerShell spo hubsite rights grant Grant-SPOSiteDesignRights Microsoft.Online.SharePoint.PowerShell spo sitedesign rights grant Invoke-SPOMigrationEncryptUploadSubmit Microsoft.Online.SharePoint.PowerShell Invoke-SPOSiteDesign Microsoft.Online.SharePoint.PowerShell spo sitedesign apply Invoke-SPOSiteSwap Microsoft.Online.SharePoint.PowerShell New-SPOMigrationEncryptionParameters Microsoft.Online.SharePoint.PowerShell New-SPOMigrationPackage Microsoft.Online.SharePoint.PowerShell New-SPOPublicCdnOrigin Microsoft.Online.SharePoint.PowerShell New-SPOSdnProvider Microsoft.Online.SharePoint.PowerShell New-SPOSite Microsoft.Online.SharePoint.PowerShell spo site add New-SPOSiteGroup Microsoft.Online.SharePoint.PowerShell New-SPOSiteSharingReportJob Microsoft.Online.SharePoint.PowerShell New-SPOTenantOrgRelation Microsoft.Online.SharePoint.PowerShell Register-SPODataEncryptionPolicy Microsoft.Online.SharePoint.PowerShell Register-SPOHubSite Microsoft.Online.SharePoint.PowerShell spo hubsite register Remove-SPODeletedSite Microsoft.Online.SharePoint.PowerShell spo tenant recyclebinitem remove Remove-SPOExternalUser Microsoft.Online.SharePoint.PowerShell Remove-SPOGeoAdministrator Microsoft.Online.SharePoint.PowerShell Remove-SPOHomeSite Microsoft.Online.SharePoint.PowerShell spo homesite remove Remove-SPOHubSiteAssociation Microsoft.Online.SharePoint.PowerShell spo hubsite disconnect Remove-SPOHubToHubAssociation Microsoft.Online.SharePoint.PowerShell Remove-SPOKnowledgeHubSite Microsoft.Online.SharePoint.PowerShell spo knowledgehub remove Remove-SPOMigrationJob Microsoft.Online.SharePoint.PowerShell Remove-SPOMultiGeoCompanyAllowedDataLocation Microsoft.Online.SharePoint.PowerShell Remove-SPOOrgAssetsLibrary Microsoft.Online.SharePoint.PowerShell spo orgassetslibrary remove Remove-SPOOrgNewsSite Microsoft.Online.SharePoint.PowerShell Remove-SPOPublicCdnOrigin Microsoft.Online.SharePoint.PowerShell Remove-SPOSdnProvider Microsoft.Online.SharePoint.PowerShell Remove-SPOSite Microsoft.Online.SharePoint.PowerShell spo site remove Remove-SPOSiteCollectionAppCatalog Microsoft.Online.SharePoint.PowerShell spo site appcatalog remove Remove-SPOSiteCollectionAppCatalogById Microsoft.Online.SharePoint.PowerShell Remove-SPOSiteDesign Microsoft.Online.SharePoint.PowerShell spo sitedesign remove Remove-SPOSiteDesignTask Microsoft.Online.SharePoint.PowerShell spo sitedesign task remove Remove-SPOSiteGroup Microsoft.Online.SharePoint.PowerShell Remove-SPOSiteScript Microsoft.Online.SharePoint.PowerShell spo sitescript remove Remove-SPOSiteSharingReportJob Microsoft.Online.SharePoint.PowerShell Remove-SPOSiteUserInvitations Microsoft.Online.SharePoint.PowerShell Remove-SPOStorageEntity Microsoft.Online.SharePoint.PowerShell spo storageentity remove Remove-SPOTenantCdnOrigin Microsoft.Online.SharePoint.PowerShell spo cdn origin remove Remove-SPOTenantOrgRelation Microsoft.Online.SharePoint.PowerShell Remove-SPOTenantSyncClientRestriction Microsoft.Online.SharePoint.PowerShell Remove-SPOTheme Microsoft.Online.SharePoint.PowerShell spo theme remove Remove-SPOUser Microsoft.Online.SharePoint.PowerShell Remove-SPOUserInfo Microsoft.Online.SharePoint.PowerShell Remove-SPOUserProfile Microsoft.Online.SharePoint.PowerShell Repair-SPOSite Microsoft.Online.SharePoint.PowerShell Request-SPOPersonalSite Microsoft.Online.SharePoint.PowerShell Request-SPOUpgradeEvaluationSite Microsoft.Online.SharePoint.PowerShell Restore-SPODataEncryptionPolicy Microsoft.Online.SharePoint.PowerShell Restore-SPODeletedSite Microsoft.Online.SharePoint.PowerShell spo tenant recyclebinitem restore Revoke-SPOHubSiteRights Microsoft.Online.SharePoint.PowerShell spo hubsite rights revoke Revoke-SPOSiteDesignRights Microsoft.Online.SharePoint.PowerShell spo sitedesign rights revoke Revoke-SPOTenantServicePrincipalPermission Microsoft.Online.SharePoint.PowerShell spo serviceprincipal grant revoke Revoke-SPOUserSession Microsoft.Online.SharePoint.PowerShell Set-SPOBrowserIdleSignOut Microsoft.Online.SharePoint.PowerShell Set-SPOBuiltDesignPackageVisibility Microsoft.Online.SharePoint.PowerShell Set-SPOBuiltInDesignPackageVisibility Microsoft.Online.SharePoint.PowerShell Set-SPOGeoStorageQuota Microsoft.Online.SharePoint.PowerShell Set-SPOHideDefaultThemes Microsoft.Online.SharePoint.PowerShell spo hidedefaultthemes set Set-SPOHomeSite Microsoft.Online.SharePoint.PowerShell spo homesite set Set-SPOHubSite Microsoft.Online.SharePoint.PowerShell spo hubsite set Set-SPOKnowledgeHubSite Microsoft.Online.SharePoint.PowerShell spo knowledgehub set Set-SPOMigrationPackageAzureSource Microsoft.Online.SharePoint.PowerShell Set-SPOMultiGeoCompanyAllowedDataLocation Microsoft.Online.SharePoint.PowerShell Set-SPOMultiGeoExperience Microsoft.Online.SharePoint.PowerShell Set-SPOOrgAssetsLibrary Microsoft.Online.SharePoint.PowerShell spo orgassetslibrary add Set-SPOOrgNewsSite Microsoft.Online.SharePoint.PowerShell Set-SPOSite Microsoft.Online.SharePoint.PowerShell Set-SPOSiteDesign Microsoft.Online.SharePoint.PowerShell spo sitedesign set Set-SPOSiteGroup Microsoft.Online.SharePoint.PowerShell Set-SPOSiteOffice365Group Microsoft.Online.SharePoint.PowerShell spo site groupify Set-SPOSiteScript Microsoft.Online.SharePoint.PowerShell Set-SPOSiteScriptPackage Microsoft.Online.SharePoint.PowerShell Set-SPOStorageEntity Microsoft.Online.SharePoint.PowerShell spo storageentity set Set-SPOStructuralNavigationCacheSiteState Microsoft.Online.SharePoint.PowerShell Set-SPOStructuralNavigationCacheWebState Microsoft.Online.SharePoint.PowerShell Set-SPOTenant Microsoft.Online.SharePoint.PowerShell spo tenant settings set Set-SPOTenantCdnEnabled Microsoft.Online.SharePoint.PowerShell spo cdn set Set-SPOTenantCdnPolicy Microsoft.Online.SharePoint.PowerShell spo cdn policy set Set-SPOTenantContentTypeReplicationParameters Microsoft.Online.SharePoint.PowerShell Set-SPOTenantSyncClientRestriction Microsoft.Online.SharePoint.PowerShell Set-SPOTenantTaxonomyReplicationParameters Microsoft.Online.SharePoint.PowerShell Set-SPOUnifiedGroup Microsoft.Online.SharePoint.PowerShell Set-SPOUser Microsoft.Online.SharePoint.PowerShell Set-SPOWebTheme Microsoft.Online.SharePoint.PowerShell Start-SPOSiteContentMove Microsoft.Online.SharePoint.PowerShell Start-SPOSiteRename Microsoft.Online.SharePoint.PowerShell spo site rename Start-SPOUnifiedGroupMove Microsoft.Online.SharePoint.PowerShell Start-SPOUserAndContentMove Microsoft.Online.SharePoint.PowerShell Stop-SPOSiteContentMove Microsoft.Online.SharePoint.PowerShell Stop-SPOUserAndContentMove Microsoft.Online.SharePoint.PowerShell Submit-SPOMigrationJob Microsoft.Online.SharePoint.PowerShell Test-SPOSite Microsoft.Online.SharePoint.PowerShell Unregister-SPOHubSite Microsoft.Online.SharePoint.PowerShell spo hubsite unregister Update-SPODataEncryptionPolicy Microsoft.Online.SharePoint.PowerShell Update-UserType Microsoft.Online.SharePoint.PowerShell Upgrade-SPOSite Microsoft.Online.SharePoint.PowerShell Verify-SPOTenantOrgRelation Microsoft.Online.SharePoint.PowerShell Add-PnPAlert PnP.PowerShell Add-PnPApp PnP.PowerShell spo app add Add-PnPApplicationCustomizer PnP.PowerShell spo customaction add Add-PnPAvailableSiteClassification PnP.PowerShell Add-PnPAzureADGroupMember PnP.PowerShell Add-PnPAzureADGroupOwner PnP.PowerShell Add-PnPContentType PnP.PowerShell spo contenttype add Add-PnPContentTypesFromContentTypeHub PnP.PowerShell Add-PnPContentTypeToDocumentSet PnP.PowerShell Add-PnPContentTypeToList PnP.PowerShell spo list contenttype add Add-PnPCustomAction PnP.PowerShell spo customaction add Add-PnPDataRowsToSiteTemplate PnP.PowerShell Add-PnPDocumentSet PnP.PowerShell Add-PnPEventReceiver PnP.PowerShell Add-PnPField PnP.PowerShell spo field add Add-PnPFieldFromXml PnP.PowerShell spo field add Add-PnPFieldToContentType PnP.PowerShell spo contenttype field set Add-PnPFile PnP.PowerShell spo file add Add-PnPFileToSiteTemplate PnP.PowerShell Add-PnPFolder PnP.PowerShell spo folder add Add-PnPGroupMember PnP.PowerShell group user add Add-PnPHtmlPublishingPageLayout PnP.PowerShell Add-PnPHubSiteAssociation PnP.PowerShell spo hubsite connect Add-PnPHubToHubAssociation PnP.PowerShell Add-PnPIndexedProperty PnP.PowerShell Add-PnPJavaScriptBlock PnP.PowerShell Add-PnPJavaScriptLink PnP.PowerShell Add-PnPListDesign PnP.PowerShell Add-PnPListFoldersToSiteTemplate PnP.PowerShell Add-PnPListItem PnP.PowerShell spo listitem add Add-PnPListItemAttachment PnP.PowerShell Add-PnPListItemComment PnP.PowerShell Add-PnPMasterPage PnP.PowerShell Add-PnPMicrosoft365GroupMember PnP.PowerShell aad o365group user add Add-PnPMicrosoft365GroupOwner PnP.PowerShell aad o365group user add Add-PnPMicrosoft365GroupToSite PnP.PowerShell aad o365group user add , site-groupify Add-PnPNavigationNode PnP.PowerShell spo navigation node add Add-PnPOrgAssetsLibrary PnP.PowerShell spo orgassetslibrary add Add-PnPOrgNewsSite PnP.PowerShell spo orgnewssite set Add-PnPPage PnP.PowerShell spo page add Add-PnPPageImageWebPart PnP.PowerShell spo page clientsidewebpart add Add-PnPPageSection PnP.PowerShell spo page section add Add-PnPPageTextPart PnP.PowerShell spo page text add Add-PnPPageWebPart PnP.PowerShell spo page clientsidewebpart add Add-PnPPlannerBucket PnP.PowerShell planner bucket add Add-PnPPlannerRoster PnP.PowerShell Add-PnPPlannerRosterMember PnP.PowerShell Add-PnPPlannerTask PnP.PowerShell planner task add Add-PnPPublishingImageRendition PnP.PowerShell Add-PnPPublishingPage PnP.PowerShell spo page add Add-PnPPublishingPageLayout PnP.PowerShell Add-PnPRoleDefinition PnP.PowerShell Add-PnPSiteClassification PnP.PowerShell Add-PnPSiteCollectionAdmin PnP.PowerShell Add-PnPSiteCollectionAppCatalog PnP.PowerShell spo site appcatalog add Add-PnPSiteDesign PnP.PowerShell spo sitedesign add Add-PnPSiteDesignFromWeb PnP.PowerShell Add-PnPSiteDesignTask PnP.PowerShell spo sitedesign apply Add-PnPSiteScript PnP.PowerShell spo sitescript add Add-PnPSiteScriptPackage PnP.PowerShell Add-PnPSiteTemplate PnP.PowerShell Add-PnPStoredCredential PnP.PowerShell Add-PnPTaxonomyField PnP.PowerShell Add-PnPTeamsChannel PnP.PowerShell teams channel add Add-PnpTeamsChannelUser PnP.PowerShell teams channel member add Add-PnPTeamsTab PnP.PowerShell teams tab add Add-PnPTeamsTeam PnP.PowerShell teams team add Add-PnPTeamsUser PnP.PowerShell teams user add Add-PnPTenantCdnOrigin PnP.PowerShell spo cdn origin add Add-PnPTenantSequence PnP.PowerShell Add-PnPTenantSequenceSite PnP.PowerShell Add-PnPTenantSequenceSubSite PnP.PowerShell Add-PnPTenantTheme PnP.PowerShell spo theme set Add-PnPTermToTerm PnP.PowerShell term-add Add-PnPView PnP.PowerShell spo list view add Add-PnPViewsFromXML PnP.PowerShell spo list view add Add-PnPVivaConnectionsDashboardACE PnP.PowerShell Add-PnPWebhookSubscription PnP.PowerShell spo list webhook add Add-PnPWebPartToWebPartPage PnP.PowerShell spo page clientsidewebpart add Add-PnPWebPartToWikiPage PnP.PowerShell Add-PnPWikiPage PnP.PowerShell Approve-PnPTenantServicePrincipalPermissionRequest PnP.PowerShell spo serviceprincipal permissionrequest approve Clear-PnPAzureADGroupMember PnP.PowerShell Clear-PnPAzureADGroupOwner PnP.PowerShell Clear-PnPDefaultColumnValues PnP.PowerShell Clear-PnPListItemAsRecord PnP.PowerShell spo listitem record undeclare Clear-PnPMicrosoft365GroupMember PnP.PowerShell aad o365group user remove Clear-PnPMicrosoft365GroupOwner PnP.PowerShell aad o365group set Clear-PnpRecycleBinItem PnP.PowerShell Clear-PnPTenantAppCatalogUrl PnP.PowerShell Clear-PnPTenantRecycleBinItem PnP.PowerShell Connect-PnPOnline PnP.PowerShell Convert-PnPFolderToSiteTemplate PnP.PowerShell Convert-PnPSiteTemplate PnP.PowerShell Convert-PnPSiteTemplateToMarkdown PnP.PowerShell ConvertTo-PnPClientSidePage PnP.PowerShell ConvertTo-PnPPage PnP.PowerShell Copy-PnPFile PnP.PowerShell spo file copy Copy-PnPFolder PnP.PowerShell spo folder copy Copy-PnPList PnP.PowerShell Copy-PnPTeamsTeam PnP.PowerShell teams team clone Deny-PnPTenantServicePrincipalPermissionRequest PnP.PowerShell spo serviceprincipal permissionrequest deny Disable-PnPFeature PnP.PowerShell spo feature disable Disable-PnPFlow PnP.PowerShell spo flow disable Disable-PnPPageScheduling PnP.PowerShell Disable-PnPSharingForNonOwnersOfSite PnP.PowerShell Disable-PnPSiteClassification PnP.PowerShell aad siteclassification disable Disable-PnPTenantServicePrincipal PnP.PowerShell spo serviceprincipal set Disconnect-PnPOnline PnP.PowerShell Enable-PnPCommSite PnP.PowerShell spo site commsite enable Enable-PnPFeature PnP.PowerShell spo feature enable Enable-PnPFlow PnP.PowerShell spo flow enable Enable-PnPPageScheduling PnP.PowerShell Enable-PnPSiteClassification PnP.PowerShell aad siteclassification enable Enable-PnPTenantServicePrincipal PnP.PowerShell spo serviceprincipal set Export-PnPFlow PnP.PowerShell spo flow export Export-PnPListToSiteTemplate PnP.PowerShell Export-PnPPage PnP.PowerShell Export-PnPPageMapping PnP.PowerShell Export-PnPTaxonomy PnP.PowerShell spo term set get Export-PnPTermGroupToXml PnP.PowerShell spo term group get Export-PnPUserInfo PnP.PowerShell spo user get Export-PnPUserProfile PnP.PowerShell spo userprofile get Find-PnPFile PnP.PowerShell Get-PnPAccessToken PnP.PowerShell util accesstoken get Get-PnPAlert PnP.PowerShell Get-PnPApp PnP.PowerShell spo app get , spo app list Get-PnPAppAuthAccessToken PnP.PowerShell Get-PnPAppErrors PnP.PowerShell Get-PnPAppInfo PnP.PowerShell spo app get , spo app list Get-PnPApplicationCustomizer PnP.PowerShell spo customaction get Get-PnPAuditing PnP.PowerShell Get-PnPAuthenticationRealm PnP.PowerShell Get-PnPAvailableLanguage PnP.PowerShell spo web installedlanguage list Get-PnPAvailableSensitivityLabel PnP.PowerShell Get-PnPAvailableSiteClassification PnP.PowerShell Get-PnPAzureADActivityReportDirectoryAudit PnP.PowerShell Get-PnPAzureADApp PnP.PowerShell aad app get Get-PnPAzureADAppPermission PnP.PowerShell Get-PnPAzureADAppSitePermission PnP.PowerShell Get-PnPAzureADGroup PnP.PowerShell aad group list Get-PnPAzureADGroupMember PnP.PowerShell Get-PnPAzureADGroupOwner PnP.PowerShell Get-PnPAzureADUser PnP.PowerShell aad user get Get-PnPAzureCertificate PnP.PowerShell Get-PnPBrowserIdleSignout PnP.PowerShell Get-PnPBuiltInDesignPackageVisibility PnP.PowerShell Get-PnPBuiltInSiteTemplateSettings PnP.PowerShell Get-PnPChangeLog PnP.PowerShell Get-PnPCompatibleHubContentTypes PnP.PowerShell Get-PnPConnection PnP.PowerShell Get-PnPContentType PnP.PowerShell spo contenttype get , spo list contenttype list Get-PnPContentTypePublishingHubUrl PnP.PowerShell spo contenttypehub get Get-PnPContentTypePublishingStatus PnP.PowerShell Get-PnPContext PnP.PowerShell Get-PnPCustomAction PnP.PowerShell spo customaction get , spo customaction list Get-PnPDefaultColumnValues PnP.PowerShell Get-PnPDeletedMicrosoft365Group PnP.PowerShell aad o365group list Get-PnPDiagnostics PnP.PowerShell Get-PnPDisableSpacesActivation PnP.PowerShell Get-PnPDocumentSetTemplate PnP.PowerShell Get-PnPEventReceiver PnP.PowerShell spo eventreceiver get Get-PnPException PnP.PowerShell Get-PnPExternalUser PnP.PowerShell spo externaluser list Get-PnPFeature PnP.PowerShell spo feature list Get-PnPField PnP.PowerShell spo field get , spo field list Get-PnPFile PnP.PowerShell spo file get , spo file list Get-PnPFileVersion PnP.PowerShell Get-PnPFlow PnP.PowerShell spo flow get , spo flow list Get-PnPFlowRun PnP.PowerShell spo flow run get , spo flow run list Get-PnPFolder PnP.PowerShell spo folder get , spo folder list Get-PnPFolderItem PnP.PowerShell spo listitem list Get-PnPFooter PnP.PowerShell Get-PnPGraphAccessToken PnP.PowerShell util accesstoken get Get-PnPGraphSubscription PnP.PowerShell Get-PnPGroup PnP.PowerShell spo group get , spo group list Get-PnPGroupMember PnP.PowerShell spo group user list Get-PnPGroupPermissions PnP.PowerShell Get-PnPHideDefaultThemes PnP.PowerShell spo hidedefaultthemes get Get-PnPHomePage PnP.PowerShell Get-PnPHomeSite PnP.PowerShell spo homesite get Get-PnPHubSite PnP.PowerShell spo hubsite get , spo hubsite list Get-PnPHubSiteChild PnP.PowerShell spo hubsite get Get-PnPIndexedPropertyKeys PnP.PowerShell Get-PnPInPlaceRecordsManagement PnP.PowerShell Get-PnPIsSiteAliasAvailable PnP.PowerShell Get-PnPJavaScriptLink PnP.PowerShell Get-PnPKnowledgeHubSite PnP.PowerShell Get-PnPLabel PnP.PowerShell spo list label get Get-PnPList PnP.PowerShell spo list get , spo list list Get-PnPListDesign PnP.PowerShell Get-PnPListInformationRightsManagement PnP.PowerShell Get-PnPListItem PnP.PowerShell spo listitem get , spo listitem list Get-PnPListItemAttachments PnP.PowerShell Get-PnPListItemComment PnP.PowerShell Get-PnPListItemPermission PnP.PowerShell Get-PnPListPermissions PnP.PowerShell spo list get Get-PnPListRecordDeclaration PnP.PowerShell Get-PnPMasterPage PnP.PowerShell Get-PnPMessageCenterAnnouncement PnP.PowerShell Get-PnPMicrosoft365Group PnP.PowerShell aad o365group get Get-PnPMicrosoft365GroupEndpoint PnP.PowerShell Get-PnPMicrosoft365GroupMember PnP.PowerShell aad o365group user list Get-PnPMicrosoft365GroupOwner PnP.PowerShell aad o365group user list Get-PnPMicrosoft365GroupSettings PnP.PowerShell Get-PnPMicrosoft365GroupSettingTemplates PnP.PowerShell Get-PnPMicrosoft365GroupTeam PnP.PowerShell Get-PnPMicrosoft365GroupYammerCommunity PnP.PowerShell yammer group list Get-PnPNavigationNode PnP.PowerShell spo navigation node list Get-PnPOrgAssetsLibrary PnP.PowerShell spo orgassetslibrary list Get-PnPOrgNewsSite PnP.PowerShell spo orgnewssite list Get-PnPPage PnP.PowerShell spo page get Get-PnPPageComponent PnP.PowerShell spo page control get , spo page control list Get-PnPPlannerBucket PnP.PowerShell planner bucket get , planner bucket list Get-PnPPlannerConfiguration PnP.PowerShell planner tenant settings list Get-PnPPlannerPlan PnP.PowerShell planner plan get , planner plan list Get-PnPPlannerRosterMember PnP.PowerShell Get-PnPPlannerRosterPlan PnP.PowerShell Get-PnPPlannerTask PnP.PowerShell planner task get , planner task list Get-PnPPlannerUserPolicy PnP.PowerShell Get-PnPPowerPlatformEnvironment PnP.PowerShell pp environment list Get-PnPPowerShellTelemetryEnabled PnP.PowerShell Get-PnPProperty PnP.PowerShell Get-PnPPropertyBag PnP.PowerShell spo propertybag get , spo propertybag list Get-PnPPublishingImageRendition PnP.PowerShell Get-PnPRecycleBinItem PnP.PowerShell spo site recyclebinitem list Get-PnPRequestAccessEmails PnP.PowerShell Get-PnPRoleDefinition PnP.PowerShell spo roledefinition get , spo roledefinition list Get-PnPSearchConfiguration PnP.PowerShell Get-PnPSearchCrawlLog PnP.PowerShell Get-PnPSearchSettings PnP.PowerShell Get-PnPServiceCurrentHealth PnP.PowerShell tenant serviceannouncement health get , tenant serviceannouncement health list Get-PnPServiceHealthIssue PnP.PowerShell tenant serviceannouncement healthissue get , tenant serviceannouncement healthissue list Get-PnPSharingForNonOwnersOfSite PnP.PowerShell Get-PnPSite PnP.PowerShell spo site get , spo site list Get-PnPSiteClassification PnP.PowerShell aad siteclassification get Get-PnPSiteClosure PnP.PowerShell Get-PnPSiteCollectionAdmin PnP.PowerShell Get-PnPSiteCollectionAppCatalogs PnP.PowerShell Get-PnPSiteCollectionTermStore PnP.PowerShell Get-PnPSiteDesign PnP.PowerShell spo sitedesign get , spo sitedesign list Get-PnPSiteDesignRights PnP.PowerShell spo sitedesign rights list Get-PnPSiteDesignRun PnP.PowerShell spo sitedesign run list Get-PnPSiteDesignRunStatus PnP.PowerShell spo sitedesign run status get Get-PnPSiteDesignTask PnP.PowerShell spo sitedesign task get , spo sitedesign task list Get-PnPSiteGroup PnP.PowerShell spo group list , spo group get Get-PnPSitePolicy PnP.PowerShell Get-PnPSiteScript PnP.PowerShell spo sitescript get , spo sitescript list Get-PnPSiteScriptFromList PnP.PowerShell spo list sitescript get Get-PnPSiteScriptFromWeb PnP.PowerShell Get-PnPSiteSearchQueryResults PnP.PowerShell spo search Get-PnPSiteSensitivityLabel PnP.PowerShell Get-PnPSiteTemplate PnP.PowerShell Get-PnPSiteUserInvitations PnP.PowerShell Get-PnPStorageEntity PnP.PowerShell spo storageentity get , spo storageentity list Get-PnPStoredCredential PnP.PowerShell Get-PnPStructuralNavigationCacheSiteState PnP.PowerShell Get-PnPStructuralNavigationCacheWebState PnP.PowerShell Get-PnPSubscribeSharePointNewsDigest PnP.PowerShell Get-PnPSubWeb PnP.PowerShell spo web list Get-PnPSyntexModel PnP.PowerShell Get-PnPSyntexModelPublication PnP.PowerShell Get-PnPTaxonomyItem PnP.PowerShell spo term get , spo term list Get-PnPTaxonomySession PnP.PowerShell Get-PnPTeamsApp PnP.PowerShell teams app list Get-PnPTeamsChannel PnP.PowerShell teams channel get , teams channel list Get-PnPTeamsChannelFilesFolder PnP.PowerShell Get-PnPTeamsChannelMessage PnP.PowerShell teams message get , teams message list Get-PnPTeamsChannelMessageReply PnP.PowerShell teams message reply list Get-PnPTeamsChannelUser PnP.PowerShell teams channel member list Get-PnPTeamsPrimaryChannel PnP.PowerShell teams channel get Get-PnPTeamsTab PnP.PowerShell teams tab list Get-PnPTeamsTeam PnP.PowerShell teams team list Get-PnPTeamsUser PnP.PowerShell teams user list Get-PnPTemporarilyDisableAppBar PnP.PowerShell Get-PnPTenant PnP.PowerShell spo tenant settings list Get-PnPTenantAppCatalogUrl PnP.PowerShell spo tenant appcatalogurl get Get-PnPTenantCdnEnabled PnP.PowerShell spo cdn get Get-PnPTenantCdnOrigin PnP.PowerShell spo cdn origin list Get-PnPTenantCdnPolicies PnP.PowerShell spo cdn policy list Get-PnPTenantDeletedSite PnP.PowerShell spo tenant recyclebinitem list Get-PnPTenantId PnP.PowerShell tenant id get Get-PnPTenantInstance PnP.PowerShell Get-PnPTenantRecycleBinItem PnP.PowerShell spo tenant recyclebinitem list Get-PnPTenantSequence PnP.PowerShell Get-PnPTenantSequenceSite PnP.PowerShell Get-PnPTenantServicePrincipal PnP.PowerShell Get-PnPTenantServicePrincipalPermissionGrants PnP.PowerShell spo serviceprincipal grant list Get-PnPTenantServicePrincipalPermissionRequests PnP.PowerShell spo serviceprincipal permissionrequest list Get-PnPTenantSite PnP.PowerShell spo site get , spo site list Get-PnPTenantSyncClientRestriction PnP.PowerShell Get-PnPTenantTemplate PnP.PowerShell Get-PnPTenantTheme PnP.PowerShell spo theme get , spo theme list Get-PnPTerm PnP.PowerShell spo term get , spo term list Get-PnPTermGroup PnP.PowerShell spo term group get , spo term group list Get-PnPTermLabel PnP.PowerShell Get-PnPTermSet PnP.PowerShell spo term set get , spo term set list Get-PnPTheme PnP.PowerShell spo theme get Get-PnPTimeZoneId PnP.PowerShell Get-PnPUnifiedAuditLog PnP.PowerShell Get-PnPUPABulkImportStatus PnP.PowerShell Get-PnPUser PnP.PowerShell spo user get , spo user list Get-PnPUserOneDriveQuota PnP.PowerShell Get-PnPUserProfileProperty PnP.PowerShell spo userprofile get Get-PnPView PnP.PowerShell spo list view get , spo list view list Get-PnPVivaConnectionsDashboardACE PnP.PowerShell Get-PnPWeb PnP.PowerShell spo web get , spo web list Get-PnPWebHeader PnP.PowerShell Get-PnPWebhookSubscriptions PnP.PowerShell spo list webhook get , spo list webhook list Get-PnPWebPart PnP.PowerShell spo page control get , spo page control list Get-PnPWebPartProperty PnP.PowerShell Get-PnPWebPartXml PnP.PowerShell Get-PnPWebTemplates PnP.PowerShell Get-PnPWikiPageContent PnP.PowerShell Grant-PnPAzureADAppSitePermission PnP.PowerShell Grant-PnPHubSiteRights PnP.PowerShell spo hubsite rights grant Grant-PnPSiteDesignRights PnP.PowerShell spo sitedesign rights grant Grant-PnPTenantServicePrincipalPermission PnP.PowerShell aad oauth2grant add Import-PnPTaxonomy PnP.PowerShell Import-PnPTermGroupFromXml PnP.PowerShell Import-PnPTermSet PnP.PowerShell Install-PnPApp PnP.PowerShell spo app install Invoke-PnPBatch PnP.PowerShell Invoke-PnPGraphMethod PnP.PowerShell request Invoke-PnPListDesign PnP.PowerShell Invoke-PnPQuery PnP.PowerShell Invoke-PnPSiteDesign PnP.PowerShell spo sitedesign apply Invoke-PnPSiteScript PnP.PowerShell Invoke-PnPSiteSwap PnP.PowerShell Invoke-PnPSiteTemplate PnP.PowerShell Invoke-PnPSPRestMethod PnP.PowerShell request Invoke-PnPTenantTemplate PnP.PowerShell Invoke-PnPWebAction PnP.PowerShell Measure-PnPList PnP.PowerShell Measure-PnPWeb PnP.PowerShell Move-PnPFile PnP.PowerShell spo file move Move-PnPFolder PnP.PowerShell spo folder move Move-PnPListItemToRecycleBin PnP.PowerShell spo spo listitem remove Move-PnPPageComponent PnP.PowerShell Move-PnpRecycleBinItem PnP.PowerShell New-PnPAzureADGroup PnP.PowerShell New-PnPAzureADUserTemporaryAccessPass PnP.PowerShell New-PnPAzureCertificate PnP.PowerShell New-PnPBatch PnP.PowerShell New-PnPExtensibilityHandlerObject PnP.PowerShell New-PnPGraphSubscription PnP.PowerShell New-PnPGroup PnP.PowerShell spo group add New-PnPList PnP.PowerShell spo list add New-PnPMicrosoft365Group PnP.PowerShell aad o365group add New-PnPMicrosoft365GroupSettings PnP.PowerShell New-PnPPersonalSite PnP.PowerShell New-PnPPlannerPlan PnP.PowerShell planner plan add New-PnPSdnProvider PnP.PowerShell New-PnPSite PnP.PowerShell spo site add New-PnPSiteCollectionTermStore PnP.PowerShell New-PnPSiteGroup PnP.PowerShell spo group add New-PnPSiteTemplate PnP.PowerShell New-PnPSiteTemplateFromFolder PnP.PowerShell New-PnPTeamsApp PnP.PowerShell teams app publish New-PnPTeamsTeam PnP.PowerShell teams team add New-PnPTenantSequence PnP.PowerShell New-PnPTenantSequenceCommunicationSite PnP.PowerShell New-PnPTenantSequenceTeamNoGroupSite PnP.PowerShell New-PnPTenantSequenceTeamNoGroupSubSite PnP.PowerShell New-PnPTenantSequenceTeamSite PnP.PowerShell New-PnPTenantSite PnP.PowerShell spo site add New-PnPTenantTemplate PnP.PowerShell New-PnPTerm PnP.PowerShell spo term add New-PnPTermGroup PnP.PowerShell spo term group add New-PnPTermLabel PnP.PowerShell New-PnPTermSet PnP.PowerShell spo term set add New-PnPUPABulkImportJob PnP.PowerShell New-PnPUser PnP.PowerShell New-PnPWeb PnP.PowerShell spo web add Publish-PnPApp PnP.PowerShell spo app deploy Publish-PnPCompanyApp PnP.PowerShell Publish-PnPContentType PnP.PowerShell Publish-PnPSyntexModel PnP.PowerShell Read-PnPSiteTemplate PnP.PowerShell Read-PnPTenantTemplate PnP.PowerShell Receive-PnPCopyMoveJobStatus PnP.PowerShell Register-PnPAppCatalogSite PnP.PowerShell spo site appcatalog add Register-PnPAzureADApp PnP.PowerShell aad app add Register-PnPHubSite PnP.PowerShell spo hubsite register Register-PnPManagementShellAccess PnP.PowerShell Remove-PnPAdaptiveScopeProperty PnP.PowerShell Remove-PnPAlert PnP.PowerShell Remove-PnPApp PnP.PowerShell spo app remove Remove-PnPApplicationCustomizer PnP.PowerShell Remove-PnPAzureADApp PnP.PowerShell aad app remove Remove-PnPAzureADAppSitePermission PnP.PowerShell Remove-PnPAzureADGroup PnP.PowerShell Remove-PnPAzureADGroupMember PnP.PowerShell Remove-PnPAzureADGroupOwner PnP.PowerShell Remove-PnPContentType PnP.PowerShell spo contenttype remove Remove-PnPContentTypeFromDocumentSet PnP.PowerShell Remove-PnPContentTypeFromList PnP.PowerShell spo list contenttype remove Remove-PnPCustomAction PnP.PowerShell spo customaction remove Remove-PnPDeletedMicrosoft365Group PnP.PowerShell aad o365group remove Remove-PnPEventReceiver PnP.PowerShell Remove-PnPExternalUser PnP.PowerShell Remove-PnPField PnP.PowerShell spo field remove Remove-PnPFieldFromContentType PnP.PowerShell spo contenttype field remove Remove-PnPFile PnP.PowerShell spo file remove Remove-PnPFileFromSiteTemplate PnP.PowerShell Remove-PnPFileVersion PnP.PowerShell Remove-PnPFlow PnP.PowerShell flow remove Remove-PnPFolder PnP.PowerShell spo folder remove Remove-PnPGraphSubscription PnP.PowerShell Remove-PnPGroup PnP.PowerShell spo group remove Remove-PnPGroupMember PnP.PowerShell spo group user remove Remove-PnPHomeSite PnP.PowerShell spo homesite remove Remove-PnPHubSiteAssociation PnP.PowerShell spo hubsite disconnect Remove-PnPHubToHubAssociation PnP.PowerShell Remove-PnPIndexedProperty PnP.PowerShell Remove-PnPJavaScriptLink PnP.PowerShell Remove-PnPKnowledgeHubSite PnP.PowerShell Remove-PnPList PnP.PowerShell spo list remove Remove-PnPListDesign PnP.PowerShell Remove-PnPListItem PnP.PowerShell spo listitem remove Remove-PnPListItemAttachment PnP.PowerShell Remove-PnPListItemComments PnP.PowerShell Remove-PnPMicrosoft365Group PnP.PowerShell aad o365group remove Remove-PnPMicrosoft365GroupMember PnP.PowerShell aad o365group user remove Remove-PnPMicrosoft365GroupOwner PnP.PowerShell Remove-PnPMicrosoft365GroupSettings PnP.PowerShell Remove-PnPNavigationNode PnP.PowerShell spo navigation node remove Remove-PnPOrgAssetsLibrary PnP.PowerShell spo orgassetslibrary remove Remove-PnPOrgNewsSite PnP.PowerShell spo orgnewssite remove Remove-PnPPage PnP.PowerShell spo page remove Remove-PnPPageComponent PnP.PowerShell Remove-PnPPlannerBucket PnP.PowerShell planner bucket remove Remove-PnPPlannerPlan PnP.PowerShell planner plan remove Remove-PnPPlannerRoster PnP.PowerShell Remove-PnPPlannerRosterMember PnP.PowerShell Remove-PnPPlannerTask PnP.PowerShell planner task remove Remove-PnPPropertyBagValue PnP.PowerShell spo propertybag remove Remove-PnPPublishingImageRendition PnP.PowerShell Remove-PnPRoleDefinition PnP.PowerShell spo roledefinition remove Remove-PnPSdnProvider PnP.PowerShell Remove-PnPSearchConfiguration PnP.PowerShell Remove-PnPSiteClassification PnP.PowerShell Remove-PnPSiteCollectionAdmin PnP.PowerShell Remove-PnPSiteCollectionAppCatalog PnP.PowerShell spo site appcatalog remove Remove-PnPSiteCollectionTermStore PnP.PowerShell Remove-PnPSiteDesign PnP.PowerShell spo sitedesign remove Remove-PnPSiteDesignTask PnP.PowerShell spo sitedesign task remove Remove-PnPSiteGroup PnP.PowerShell spo group remove Remove-PnPSiteScript PnP.PowerShell spo sitescript remove Remove-PnPSiteUserInvitations PnP.PowerShell Remove-PnPStorageEntity PnP.PowerShell spo storageentity remove Remove-PnPStoredCredential PnP.PowerShell Remove-PnPTaxonomyItem PnP.PowerShell Remove-PnPTeamsApp PnP.PowerShell teams app remove Remove-PnPTeamsChannel PnP.PowerShell teams channel remove Remove-PnPTeamsChannelUser PnP.PowerShell teams channel member remove Remove-PnPTeamsTab PnP.PowerShell teams tab remove Remove-PnPTeamsTeam PnP.PowerShell teams team remove Remove-PnPTeamsUser PnP.PowerShell aad o365group user remove Remove-PnPTenantCdnOrigin PnP.PowerShell spo cdn origin remove Remove-PnPTenantDeletedSite PnP.PowerShell Remove-PnPTenantSite PnP.PowerShell spo site remove Remove-PnPTenantSyncClientRestriction PnP.PowerShell Remove-PnPTenantTheme PnP.PowerShell spo theme remove Remove-PnPTerm PnP.PowerShell Remove-PnPTermGroup PnP.PowerShell Remove-PnPTermLabel PnP.PowerShell Remove-PnPUser PnP.PowerShell spo user remove Remove-PnPUserInfo PnP.PowerShell Remove-PnPUserProfile PnP.PowerShell Remove-PnPView PnP.PowerShell spo list view remove Remove-PnPVivaConnectionsDashboardACE PnP.PowerShell Remove-PnPWeb PnP.PowerShell spo web remove Remove-PnPWebhookSubscription PnP.PowerShell spo list webhook remove Remove-PnPWebPart PnP.PowerShell Remove-PnPWikiPage PnP.PowerShell Rename-PnPFile PnP.PowerShell spo file rename Rename-PnPFolder PnP.PowerShell spo folder rename Rename-PnPTenantSite PnP.PowerShell spo site rename Repair-PnPSite PnP.PowerShell Request-PnPAccessToken PnP.PowerShell util accesstoken get Request-PnPPersonalSite PnP.PowerShell Request-PnPReIndexList PnP.PowerShell Request-PnPReIndexWeb PnP.PowerShell spo web reindex Request-PnPSyntexClassifyAndExtract PnP.PowerShell Reset-PnPFileVersion PnP.PowerShell Reset-PnPLabel PnP.PowerShell Reset-PnPMicrosoft365GroupExpiration PnP.PowerShell Reset-PnPUserOneDriveQuotaToDefault PnP.PowerShell Resolve-PnPFolder PnP.PowerShell Restart-PnPFlowRun PnP.PowerShell flow run resubmit Restore-PnPDeletedMicrosoft365Group PnP.PowerShell aad o365group restore Restore-PnPFileVersion PnP.PowerShell Restore-PnPRecycleBinItem PnP.PowerShell spo site recyclebinitem restore Restore-PnPTenantRecycleBinItem PnP.PowerShell spo tenant recyclebinitem restore Restore-PnPTenantSite PnP.PowerShell Revoke-PnPHubSiteRights PnP.PowerShell spo hubsite rights revoke Revoke-PnPSiteDesignRights PnP.PowerShell spo sitedesign rights revoke Revoke-PnPTenantServicePrincipalPermission PnP.PowerShell spo serviceprincipal grant revoke Revoke-PnPUserSession PnP.PowerShell Save-PnPPageConversionLog PnP.PowerShell Save-PnPSiteTemplate PnP.PowerShell Save-PnPTenantTemplate PnP.PowerShell Send-PnPMail PnP.PowerShell spo mail send Set-PnPAdaptiveScopeProperty PnP.PowerShell Set-PnPApplicationCustomizer PnP.PowerShell Set-PnPAppSideLoading PnP.PowerShell Set-PnPAuditing PnP.PowerShell Set-PnPAvailablePageLayouts PnP.PowerShell Set-PnPAzureADAppSitePermission PnP.PowerShell Set-PnPAzureADGroup PnP.PowerShell Set-PnPBrowserIdleSignout PnP.PowerShell Set-PnPBuiltInDesignPackageVisibility PnP.PowerShell Set-PnPBuiltInSiteTemplateSettings PnP.PowerShell Set-PnPContentType PnP.PowerShell spo contenttype set Set-PnPContext PnP.PowerShell Set-PnPDefaultColumnValues PnP.PowerShell Set-PnPDefaultContentTypeToList PnP.PowerShell spo list contenttype default set Set-PnPDefaultPageLayout PnP.PowerShell Set-PnPDisableSpacesActivation PnP.PowerShell Set-PnPDocumentSetField PnP.PowerShell Set-PnPField PnP.PowerShell spo field set Set-PnPFileCheckedIn PnP.PowerShell spo file checkin Set-PnPFileCheckedOut PnP.PowerShell spo file checkout Set-PnPFolderPermission PnP.PowerShell spo listitem roleinheritance break , spo listitem roleinheritance reset Set-PnPFooter PnP.PowerShell Set-PnPGraphSubscription PnP.PowerShell Set-PnPGroup PnP.PowerShell spo group set Set-PnPGroupPermissions PnP.PowerShell Set-PnPHideDefaultThemes PnP.PowerShell spo hidedefaultthemes set Set-PnPHomePage PnP.PowerShell spo web set Set-PnPHomeSite PnP.PowerShell spo homesite set Set-PnPHubSite PnP.PowerShell spo hubsite set Set-PnPIndexedProperties PnP.PowerShell Set-PnPInPlaceRecordsManagement PnP.PowerShell spo site inplacerecordsmanagement set Set-PnPKnowledgeHubSite PnP.PowerShell spo knowledgehub set Set-PnPLabel PnP.PowerShell spo list label set Set-PnPList PnP.PowerShell spo list set Set-PnPListInformationRightsManagement PnP.PowerShell Set-PnPListItem PnP.PowerShell spo listitem set Set-PnPListItemAsRecord PnP.PowerShell spo listitem record declare Set-PnPListItemPermission PnP.PowerShell spo listitem roleinheritance break , spo listitem roleinheritance reset Set-PnPListPermission PnP.PowerShell spo list roleinheritance break , spo list roleinheritance reset Set-PnPListRecordDeclaration PnP.PowerShell Set-PnPMasterPage PnP.PowerShell Set-PnPMessageCenterAnnouncementAsArchived PnP.PowerShell Set-PnPMessageCenterAnnouncementAsFavorite PnP.PowerShell Set-PnPMessageCenterAnnouncementAsNotArchived PnP.PowerShell Set-PnPMessageCenterAnnouncementAsNotFavorite PnP.PowerShell Set-PnPMessageCenterAnnouncementAsRead PnP.PowerShell Set-PnPMessageCenterAnnouncementAsUnread PnP.PowerShell Set-PnPMicrosoft365Group PnP.PowerShell aad o365group set Set-PnPMicrosoft365GroupSettings PnP.PowerShell Set-PnPMinimalDownloadStrategy PnP.PowerShell Set-PnPPage PnP.PowerShell spo page set Set-PnPPageTextPart PnP.PowerShell Set-PnPPageWebPart PnP.PowerShell Set-PnPPlannerBucket PnP.PowerShell planner bucket set Set-PnPPlannerConfiguration PnP.PowerShell planner tenant settings set Set-PnPPlannerPlan PnP.PowerShell Set-PnPPlannerTask PnP.PowerShell planner task set Set-PnPPlannerUserPolicy PnP.PowerShell Set-PnPPropertyBagValue PnP.PowerShell spo propertybag set Set-PnPRequestAccessEmails PnP.PowerShell Set-PnPRoleDefinition PnP.PowerShell Set-PnPSearchConfiguration PnP.PowerShell Set-PnPSearchSettings PnP.PowerShell Set-PnPSite PnP.PowerShell spo site set Set-PnPSiteClassification PnP.PowerShell Set-PnPSiteClosure PnP.PowerShell Set-PnPSiteDesign PnP.PowerShell spo sitedesign set Set-PnPSiteGroup PnP.PowerShell spo group set Set-PnPSitePolicy PnP.PowerShell Set-PnPSiteScript PnP.PowerShell spo sitescript set Set-PnPSiteScriptPackage PnP.PowerShell spo sitescript set Set-PnPSiteSensitivityLabel PnP.PowerShell Set-PnPSiteTemplateMetadata PnP.PowerShell spo sitescript set Set-PnPStorageEntity PnP.PowerShell spo storageentity set Set-PnPStructuralNavigationCacheSiteState PnP.PowerShell Set-PnPStructuralNavigationCacheWebState PnP.PowerShell Set-PnPSubscribeSharePointNewsDigest PnP.PowerShell Set-PnPTaxonomyFieldValue PnP.PowerShell Set-PnPTeamifyPromptHidden PnP.PowerShell Set-PnPTeamsChannel PnP.PowerShell teams channel set Set-PnpTeamsChannelUser PnP.PowerShell teams channel member set Set-PnPTeamsTab PnP.PowerShell Set-PnPTeamsTeam PnP.PowerShell teams team set Set-PnPTeamsTeamArchivedState PnP.PowerShell teams team archive , teams team unarchive Set-PnPTeamsTeamPicture PnP.PowerShell Set-PnPTemporarilyDisableAppBar PnP.PowerShell Set-PnPTenant PnP.PowerShell spo tenant settings set Set-PnPTenantAppCatalogUrl PnP.PowerShell Set-PnPTenantCdnEnabled PnP.PowerShell spo cdn set Set-PnPTenantCdnPolicy PnP.PowerShell spo cdn policy set Set-PnPTenantSite PnP.PowerShell spo site set Set-PnPTenantSyncClientRestriction PnP.PowerShell Set-PnPTerm PnP.PowerShell Set-PnPTermGroup PnP.PowerShell Set-PnPTermSet PnP.PowerShell Set-PnPTheme PnP.PowerShell spo theme apply Set-PnPTraceLog PnP.PowerShell Set-PnPUserOneDriveQuota PnP.PowerShell Set-PnPUserProfileProperty PnP.PowerShell spo userprofile set Set-PnPView PnP.PowerShell spo list view set Set-PnPWeb PnP.PowerShell spo web set Set-PnPWebHeader PnP.PowerShell Set-PnPWebhookSubscription PnP.PowerShell spo list webhook set Set-PnPWebPartProperty PnP.PowerShell Set-PnPWebPermission PnP.PowerShell Set-PnPWebTheme PnP.PowerShell Set-PnPWikiPageContent PnP.PowerShell Stop-PnPFlowRun PnP.PowerShell flow run cancel Submit-PnPSearchQuery PnP.PowerShell spo search Submit-PnPTeamsChannelMessage PnP.PowerShell Sync-PnPAppToTeams PnP.PowerShell Sync-PnPSharePointUserProfilesFromAzureActiveDirectory PnP.PowerShell Test-PnPListItemIsRecord PnP.PowerShell spo listitem isrecord Test-PnPMicrosoft365GroupAliasIsUsed PnP.PowerShell Test-PnPSite PnP.PowerShell Test-PnPTenantTemplate PnP.PowerShell Uninstall-PnPApp PnP.PowerShell spo app uninstall Unpublish-PnPApp PnP.PowerShell spo app retract Unpublish-PnPContentType PnP.PowerShell Unpublish-PnPSyntexModel PnP.PowerShell Unregister-PnPHubSite PnP.PowerShell spo hubsite unregister Update-PnPApp PnP.PowerShell spo app upgrade Update-PnPAvailableSiteClassification PnP.PowerShell Update-PnPSiteClassification PnP.PowerShell aad siteclassification set Update-PnPSiteDesignFromWeb PnP.PowerShell Update-PnPTeamsApp PnP.PowerShell teams app update Update-PnPTeamsUser PnP.PowerShell aad o365group user set Update-PnPUserType PnP.PowerShell Update-PnPVivaConnectionsDashboardACE PnP.PowerShell Approve-FlowApprovalRequest Microsoft.PowerApps.PowerShell Deny-FlowApprovalRequest Microsoft.PowerApps.PowerShell Disable-Flow Microsoft.PowerApps.PowerShell flow disable Enable-Flow Microsoft.PowerApps.PowerShell flow enable Get-Flow Microsoft.PowerApps.PowerShell flow list , flow get Get-FlowApproval Microsoft.PowerApps.PowerShell Get-FlowApprovalRequest Microsoft.PowerApps.PowerShell Get-FlowEnvironment Microsoft.PowerApps.PowerShell flow environment list , flow environment get Get-FlowOwnerRole Microsoft.PowerApps.PowerShell Get-FlowRun Microsoft.PowerApps.PowerShell flow run list , flow run get Get-PowerApp Microsoft.PowerApps.PowerShell pa app list , pa app get Get-PowerAppConnection Microsoft.PowerApps.PowerShell Get-PowerAppConnectionRoleAssignment Microsoft.PowerApps.PowerShell Get-PowerAppConnector Microsoft.PowerApps.PowerShell Get-PowerAppConnectorRoleAssignment Microsoft.PowerApps.PowerShell Get-PowerAppEnvironment Microsoft.PowerApps.PowerShell pa environment list , pa environment get Get-PowerAppRoleAssignment Microsoft.PowerApps.PowerShell Get-PowerAppsNotification Microsoft.PowerApps.PowerShell Get-PowerAppVersion Microsoft.PowerApps.PowerShell Publish-PowerApp Microsoft.PowerApps.PowerShell Remove-Flow Microsoft.PowerApps.PowerShell flow remove Remove-FlowOwnerRole Microsoft.PowerApps.PowerShell Remove-PowerApp Microsoft.PowerApps.PowerShell pa app remove Remove-PowerAppConnection Microsoft.PowerApps.PowerShell Remove-PowerAppConnectionRoleAssignment Microsoft.PowerApps.PowerShell Remove-PowerAppConnector Microsoft.PowerApps.PowerShell Remove-PowerAppConnectorRoleAssignment Microsoft.PowerApps.PowerShell Remove-PowerAppRoleAssignment Microsoft.PowerApps.PowerShell Restore-PowerAppVersion Microsoft.PowerApps.PowerShell Set-FlowOwnerRole Microsoft.PowerApps.PowerShell Set-PowerAppConnectionRoleAssignment Microsoft.PowerApps.PowerShell Set-PowerAppConnectorRoleAssignment Microsoft.PowerApps.PowerShell Set-PowerAppDisplayName Microsoft.PowerApps.PowerShell Set-PowerAppRoleAssignment Microsoft.PowerApps.PowerShell Add-ConnectorToBusinessDataGroup Microsoft.PowerApps.Administration.PowerShell Add-CustomConnectorToPolicy Microsoft.PowerApps.Administration.PowerShell Add-PowerAppsAccount Microsoft.PowerApps.Administration.PowerShell Clear-AdminPowerAppApisToBypassConsent Microsoft.PowerApps.Administration.PowerShell Clear-AdminPowerAppAsFeatured Microsoft.PowerApps.Administration.PowerShell Clear-AdminPowerAppAsHero Microsoft.PowerApps.Administration.PowerShell Disable-AdminFlow Microsoft.PowerApps.Administration.PowerShell flow disable Enable-AdminFlow Microsoft.PowerApps.Administration.PowerShell flow enable Get-AdminDlpPolicy Microsoft.PowerApps.Administration.PowerShell Get-AdminFlow Microsoft.PowerApps.Administration.PowerShell Get-AdminFlowOwnerRole Microsoft.PowerApps.Administration.PowerShell Get-AdminFlowUserDetails Microsoft.PowerApps.Administration.PowerShell Get-AdminPowerApp Microsoft.PowerApps.Administration.PowerShell Get-AdminPowerAppCdsDatabaseCurrencies Microsoft.PowerApps.Administration.PowerShell Get-AdminPowerAppCdsDatabaseLanguages Microsoft.PowerApps.Administration.PowerShell Get-AdminPowerAppConnection Microsoft.PowerApps.Administration.PowerShell Get-AdminPowerAppConnectionReferences Microsoft.PowerApps.Administration.PowerShell Get-AdminPowerAppConnectionRoleAssignment Microsoft.PowerApps.Administration.PowerShell Get-AdminPowerAppConnector Microsoft.PowerApps.Administration.PowerShell Get-AdminPowerAppConnectorRoleAssignment Microsoft.PowerApps.Administration.PowerShell Get-AdminPowerAppEnvironment Microsoft.PowerApps.Administration.PowerShell Get-AdminPowerAppEnvironmentLocations Microsoft.PowerApps.Administration.PowerShell Get-AdminPowerAppEnvironmentRoleAssignment Microsoft.PowerApps.Administration.PowerShell Get-AdminPowerAppRoleAssignment Microsoft.PowerApps.Administration.PowerShell Get-AdminPowerAppsUserDetails Microsoft.PowerApps.Administration.PowerShell Get-JwtToken Microsoft.PowerApps.Administration.PowerShell Get-TenantDetailsFromGraph Microsoft.PowerApps.Administration.PowerShell Get-UsersOrGroupsFromGraph Microsoft.PowerApps.Administration.PowerShell InvokeApi Microsoft.PowerApps.Administration.PowerShell New-AdminDlpPolicy Microsoft.PowerApps.Administration.PowerShell New-AdminPowerAppCdsDatabase Microsoft.PowerApps.Administration.PowerShell New-AdminPowerAppEnvironment Microsoft.PowerApps.Administration.PowerShell Remove-AdminDlpPolicy Microsoft.PowerApps.Administration.PowerShell Remove-AdminFlow Microsoft.PowerApps.Administration.PowerShell Remove-AdminFlowApprovals Microsoft.PowerApps.Administration.PowerShell Remove-AdminFlowOwnerRole Microsoft.PowerApps.Administration.PowerShell Remove-AdminFlowUserDetails Microsoft.PowerApps.Administration.PowerShell Remove-AdminPowerApp Microsoft.PowerApps.Administration.PowerShell Remove-AdminPowerAppConnection Microsoft.PowerApps.Administration.PowerShell Remove-AdminPowerAppConnectionRoleAssignment Microsoft.PowerApps.Administration.PowerShell Remove-AdminPowerAppConnector Microsoft.PowerApps.Administration.PowerShell Remove-AdminPowerAppConnectorRoleAssignment Microsoft.PowerApps.Administration.PowerShell Remove-AdminPowerAppEnvironment Microsoft.PowerApps.Administration.PowerShell Remove-AdminPowerAppEnvironmentRoleAssignment Microsoft.PowerApps.Administration.PowerShell Remove-AdminPowerAppRoleAssignment Microsoft.PowerApps.Administration.PowerShell Remove-ConnectorFromBusinessDataGroup Microsoft.PowerApps.Administration.PowerShell Remove-CustomConnectorFromPolicy Microsoft.PowerApps.Administration.PowerShell Remove-LegacyCDSDatabase Microsoft.PowerApps.Administration.PowerShell Remove-PowerAppsAccount Microsoft.PowerApps.Administration.PowerShell ReplaceMacro Microsoft.PowerApps.Administration.PowerShell Select-CurrentEnvironment Microsoft.PowerApps.Administration.PowerShell Set-AdminDlpPolicy Microsoft.PowerApps.Administration.PowerShell Set-AdminFlowOwnerRole Microsoft.PowerApps.Administration.PowerShell Set-AdminPowerAppApisToBypassConsent Microsoft.PowerApps.Administration.PowerShell Set-AdminPowerAppAsFeatured Microsoft.PowerApps.Administration.PowerShell Set-AdminPowerAppAsHero Microsoft.PowerApps.Administration.PowerShell Set-AdminPowerAppConnectionRoleAssignment Microsoft.PowerApps.Administration.PowerShell Set-AdminPowerAppConnectorRoleAssignment Microsoft.PowerApps.Administration.PowerShell Set-AdminPowerAppEnvironmentDisplayName Microsoft.PowerApps.Administration.PowerShell Set-AdminPowerAppEnvironmentRoleAssignment Microsoft.PowerApps.Administration.PowerShell Set-AdminPowerAppOwner Microsoft.PowerApps.Administration.PowerShell Set-AdminPowerAppRoleAssignment Microsoft.PowerApps.Administration.PowerShell Test-PowerAppsAccount Microsoft.PowerApps.Administration.PowerShell Add-TeamUser MicrosoftTeams teams user add Connect-MicrosoftTeams MicrosoftTeams login Disconnect-MicrosoftTeams MicrosoftTeams logout Get-Team MicrosoftTeams teams team list Get-TeamChannel MicrosoftTeams teams channel list , teams channel get Get-TeamFunSettings MicrosoftTeams teams funsettings list Get-TeamGuestSettings MicrosoftTeams teams guestsettings list Get-TeamMemberSettings MicrosoftTeams teams membersettings list Get-TeamMessagingSettings MicrosoftTeams teams messagingsettings list Get-TeamUser MicrosoftTeams teams user list New-Team MicrosoftTeams teams team add New-TeamChannel MicrosoftTeams teams channel add Remove-Team MicrosoftTeams teams team remove Remove-TeamChannel MicrosoftTeams teams channel remove Remove-TeamUser MicrosoftTeams teams user remove Set-Team MicrosoftTeams teams team set Set-TeamChannel MicrosoftTeams teams channel set Set-TeamFunSettings MicrosoftTeams teams funsettings set Set-TeamGuestSettings MicrosoftTeams teams guestsettings set Set-TeamMemberSettings MicrosoftTeams teams membersettings set Set-TeamMessagingSettings MicrosoftTeams teams messagingsettings set Set-TeamPicture MicrosoftTeams","title":"Comparison to SharePoint and Microsoft 365 PowerShell"},{"location":"about/license/","text":"License \u00b6 Copyright (c) Microsoft Corporation. All rights reserved. MIT License Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"License"},{"location":"about/license/#license","text":"Copyright (c) Microsoft Corporation. All rights reserved. MIT License Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"License"},{"location":"about/release-notes/","text":"Release notes \u00b6 v6.0.0 \u00b6 New commands \u00b6 Azure Active Directory: aad app list - retrieves a list of Azure AD app registrations #3742 aad user guest add - invites an external user to the organization #3298 Outlook: outlook message get - retrieves specified message #3868 Power Platform: pp card remove - removes the specified Microsoft Power Platform card in the specified Power Platform environment #3781 Changes \u00b6 removed deprecated options for 'spo listitem list' command #3365 removed 'aad app delete' and 'aad app role delete' alias #3134 removed executeWithLimitedPermission option from spo list list #3408 removed references and alias for deprecated planner task details get #3435 removed references and alias for deprecated planner plan details get #3435 removed deprecated options for 'spo listitem list' command #3365 removed deprecated planName options #3363 removed default type of spo site list #3526 removed deprecated spo site classic verb commands #3458 aligned commands' options with naming convention #2696 removed the setting autoOpenBrowserOnLogin to follow new settings autoOpenLinksInBrowser #3163 removed deprecated options for 'teams team remove', 'teams team archive', and 'teams team unarchive' command #3502 updated classic references to spo site list #3522 removed unnecessary aliases #3644 added upgrade guidance #3481 added confirm option to 'spo roleinheritance break and reset' commands #3658 removed secret option from 'aad app add' command #3136 removed name option from 'spo field set' command #3419 renamed 'spo hubsite disconnect' to 'spo site hubsite disconnect' #3878 renamed 'spo hubsite connect' to 'spo site hubsite connect' #3877 removed deprecated options #3840 added root folder support for 'spo folder roleinheritance break' and 'spo folder roleinheritance reset' #3823 expanded the user guide with info about escaping in PowerShell #3638 updated 'spo roledefinition list' output with readable values #3824 renamed 'spo hubsite theme sync' to 'spo site hubsite theme sync' #3881 extended 'spo list webhook set' command with clientState option #3861 extended 'spo folder list' command with recursive option #2767 added role requirements for spo hubsite register and unregister docs #3965 v5.9.0 \u00b6 New commands \u00b6 Power Platform: pp card get - gets a specific Microsoft Power Platform card in the specified Power Platform environment #3770 pp card list - lists Microsoft Power Platform cards in the specified Power Platform environment #3767 pp dataverse table list - lists dataverse tables in a given environment #3653 pp gateway get - gets information about the specified gateway #3653 pp solution get - gets a specific solution in a given environment #3722 pp solution list - lists solutions in a given environment #3711 pp tenant settings list - lists the global Power Platform tenant settings #3657 pp environment get - gets information about the specified Power Platform environment. #3710 SharePoint: spo eventreceiver remove - removes event receivers for the specified web, site, or list. #3307 spo file roleassignment add - adds role assignment to a file #3702 spo file roleassignment remove - removes a role assignment from a file #3693 spo file roleinheritance break - breaks inheritance of file #3593 spo file roleinheritance reset - restores the role inheritance of a file #3595 spo folder roleassignment remove - removes a role assignment from the specified folder #3701 spo folder roleinheritance break - breaks the role inheritance of a folder #3598 spo folder roleinheritance reset - restores the role inheritance of a folder #3603 spo listitem roleassignment add - adds a role assignment to a listitem #3539 spo web roleinheritance break - break role inheritance of subsite #3547 To Do: todo list get - returns a specific Microsoft To Do task list #3847 todo task get - returns a specific task from a Microsoft To Do task list #3846 Changes \u00b6 removed barrels #3736 fixed examples for web roleassignment 'verb' that mentioned list roleassignment 'verb' instead #3706 extended 'teams channel list' command with support for filtering shared teams channels #3690 extended 'spo folder get' command with support to get folder by id #3605 fixed docs not ending on an empty line #3700 fixed incorrect docs titles #3699 extended spfx doctor command with support for version 1.16.0-beta.1 #3633 added additional vscode settings #3084 added tracking shell to telemetry #3769 updated example in 'spo folder roleinheritance reset' docs #3751 fixed 'spo hubsite' docs typos #3762 updated health status monitoring sample #3713 fixed 'spo folder roleinheritance reset' and 'spo file roleinheritance reset' commands #3750 fixed issue with upgrading SPFx projects to v1.14 #3665 extended spfx doctor to allow specifying version of SPFx to check compatibility for #3780 replaced recycleFile() in spo file copy and spo file move #3370 updated docs with our community Discord server #3707 added eslint rule to validate method naming #3749 fixed formatting in pp documentation #3815 extended 'spo group list' with associated groups output #3546 extended 'teams channel add' command with support for adding shared channels #3691 fixed pagination for 'pp dataverse table list' command #3803 extended 'spo list contenttype' with option 'listUrl' #3810 updated the Microsoft Graph sample to include a 'm365 request' section #3712 extended 'spo list webhook' with option 'listUrl' #3812 extended 'todo task set' with extra options #3835 fixed 'outlook mail send' command for wrong validation message #3833 fixed documentation for eventreceiver get and eventreceiver remove #3852 removed odata output from 'planner bucket get' #3825 updated GitHub actions #3799 enabled @typescript-eslint/explicit-function-return-type #3777 added tags to samples #3640 fixed options overriding aad app add with manifest #3555 added 'listUrl' to spo roleinheritance break and -reset #3809 extended 'outlook mail send' command with attachments support #3832 added cookie consent to MKDocs #3832 extended 'todo task add' with extra options #3832 extended spo contenttype with list options 'listUrl' and 'listId' #3806 extended 'status' command to log extra info #3818 added validating output format #2988 included response output: Planner bucket & Planner plan #3773 updated GitHub actions to Node@16 #3870 added support for upgrading SPFx projects to v1.16.0-beta.2 #3937 made id option required for command spo list webhook get and set #3860 included docs response output for 'tenant' commands #3926 fixed global options for spo list webhook get and set docs #3946 extended spo listitem with listUrl #3814 extended spo field add and spo field set with listId and listUrl #3807 extended spo listitem with listUrl #3813 v5.8.0 \u00b6 New commands \u00b6 global: request - executes the specified web request using CLI for Microsoft 365 #3512 OneNote: onenote notebook list - retrieves a list of notebooks #3097 Microsoft Graph: graph changelog list - retrieves an overview of specific API-level changes in Microsoft Graph v1.0 and beta #2061 SharePoint: spo contenttype set - updates existing content type #3613 spo listitem roleassignment remove - removes a role assignment from a listitem #3543 spo roledefinition add - adds a new roledefinition to web #3271 spo web roleassignment add - adds a role assignment to web permissions #3549 spo web roleassignment remove - removes a role assignment from web permissions #3550 Changes \u00b6 replaced validation with optionsets #3218 added support for upgrading SPFx projects to v1.16.0-beta.1 #3628 fixed command completion in PowerShell #3394 fixed spo listitem roleinheritance docs #3597 set default output in CLI runtime #3445 fixed using unknown flags in 'aad user list' #3059 fixed ensure site assets library sample #3616 removed PowerShell examples from adaptive card docs #3631 added additional validation options for 'planner task get' #3433 added gulp-cli checks to spfx doctor #3541 extended spfx project doctor with support for 1.16.0-beta.1 #3634 fixed typo's in docs #3652 added 'report environment script' sample #3651 resolved file creation suggestion for PS and CMD #3497 added ability to send emails from a specified account or mailbox #3589 fixed rendering code fences in md #3636 fixed status command to show correct connection status #3260 fixed missing quotes in spfx project upgrade to 1.16.0-beta.1 #3660 refactored commandAction to async/await #3430 extended 'outlook mail send' with cc, bcc, and importance #3544 fixed 'spo site apppermissions add/set' assigning the wrong owner permissions #3630 fixed links in 'GitHub Actions' docs #3694 fixed outlook mail send docs title #3695 added shared channel support to teams channel member command docs #3692 v5.7.0 \u00b6 New commands \u00b6 Bookings: booking business get - retrieves the specified Microsoft Bookings business #3534 booking business list - Lists all Microsoft Bookings businesses that are created for the tenant #3532 SharePoint: spo list roleassignment add - adds a role assignment to list permissions #3300 spo list roleassignment remove - removes a role assignment from list permissions #3542 spo web roleinheritance reset - restores role inheritance of subsite #3548 Search: search externalConnections remove - allows the administrator to remove a specific external connection used in Microsoft Search #3170 Changes \u00b6 fixed docs 'aad app add', 'aad app set' #3588 added dark theme support for Team page #3582 added testing on Node@18 #3255 refactored command configuration #3409 extended docs with a Team page #2166 removed chatUtil.convertParticipantStringToArray from code. Only split by comma #3340 extended 'aad app add' command with admin consent process. #2563 updated MkDocs, extends docs with tag support and dark mode. #3416 extended spfx doctor with support for SPFx v1.15.2 #3558 fixed booking commands links in release notes #3602 fixed release notes links #3611 fixed broken links to completion page in docs #3586 v5.6.0 \u00b6 New commands \u00b6 SharePoint: spo file rename - renames a file #1763 Changes \u00b6 fixed 'spo site apppermission add' and 'spo site apppermission set' permission option #3353 extended 'spo group get' with support for returning associated groups #3545 extended 'spfx project upgrade' with support for upgrading SPFx projects to v1.15.2 #3556 extended 'spfx project doctor' with support for validating SPFx projects to v1.15.2 #3560 v5.5.0 \u00b6 New commands \u00b6 Planner: planner plan remove - removes the Microsoft Planner plan #3336 planner tenant settings set - sets Microsoft Planner configuration of the tenant #3356 Search: search externalconnection get - allows the administrator to get a specific external connection for use in Microsoft Search #3169 SharePoint: spo roledefinition get - gets specified role definition from web #3270 spo group set - updates a group in the specified site #3499 spo group add - creates group in the specified site #3493 Teams: teams cache remove - removes the Microsoft Teams client cache #3205 Changes \u00b6 fixed login issue #3431 fixed issue with wrong _global.md reference breaking the docs and cli help #3425 combined planner plan get with planner plan details get #3344 extended spfx doctor command with support for SPFx v1.15.0 #3432 extended spfx project doctor command with support for SPFx v1.15.0 #3440 solved 'spo listitem set' issues with Number and Single Line of Text #3405 fixed flow export command with support for illegal file characters #3404 fixed planner plan remove docs #3473 fixed upgrading non-React SPFx projects to v1.15.0 #3475 fixed sample script referencing deprecated task details get #3467 upgraded SPFx fast serve helper to v1.15 #3446 removed unnecessary undefined checks from several commands #3420 added @meId and @meUserName tokens #3056 extended spo hubsite get options. #3378 fixed planTitle inconsistency in planner commands. #3342 fixed API issue for broken Power Apps commands #3207 fixed 'spo listitem list' and 'spo listitem get' commands #3391 extended planner plan add with more options #3345 updated 'planner task get docs' #3495 extended \"teams team remove, archive, and unarchive\" with extra options #3483 fixed spo field set command options inconsistency #3418 extended 'spo hubsite get' command. #3454 consolidated spo site list and spo site classic list commands. #3456 extended aad o365group recyclebinitem restore command with extra options. #3428 fixed samples contain an invalid condition check. #3511 updated spo customaction to get by title or id. #3463 updated spo customaction to remove by title or id. #3464 consolidated spo site set and spo site classic set commands. #3450 updated spo tenant appcatalog add reference to deprecated spo site classic add command. #3459 updated the status command to show correct connection status. #3260 updated 'teams tab get' provide shorthand options. #3509 added sample script on listing external users in site groups across all site collections. #3521 fixed 'spo field get' and 'spo field remove' commands. #3515 v5.4.0 \u00b6 New commands \u00b6 Azure Active Directory: aad o365group recyclebinitem remove - permanently deletes a Microsoft 365 Group from the recycle bin in the current tenant #1982 Planner: planner task checklistitem add - adds a new checklist item to a Planner task #3280 planner task checklistitem list - lists the checklist items of a Planner task #3280 planner task checklistitem remove - removes a checklist item from a Planner task #3282 planner task reference remove - removes a reference from a Microsoft Planner task #3285 planner task remove - removes a Microsoft Planner task #3227 planner tenant settings list - lists the Microsoft Planner configuration of the tenant #3255 SharePoint Online: spo eventreceiver list - lists all event receivers attached to the specified site, web or list #3305 spo roledefinition remove - removes the role definition from the specified site #3272 Changes \u00b6 fixed 'planner task get' #3324 extended spo list view add command with viewQuery option #1862 updated planner task list options docs #3347 updated PowerShell comparison docs #3332 added short options to planner bucket commands #3343 fixed spo listitem roleinheritance break docs option description formatting #3358 added support for upgrading SPFx projects to v1.15.0-rc.0 #3376 fixed listTitle option values with single quote #3357 fixed planner documentation inconsistency #3338 fixed invalid ISO date pattern with 7 milliseconds digits #3372 fixed documentation for spo file checkout #3388 fixed issue with mkdocs serve because of pygments version #3389 fixed spo listitem list options #3361 added aadGroup utils class #3267 combined planner task details get with planner task get #3257 fixed the documentation of the m365 file list command #3368 fixed error with the teams team get --name command parameter #3395 fixed gateway timeout on flow export #3393 extended 'aad app set' with support for multiple identifier URIs #3333 fixed bug with spo list list throwing access denied #3373 fixed --includeAssociatedSites doesn't include associated sites in the result #3400 extended 'spo list get' with PrincipalTypeString #3379 added more options to planner task add #3246 added priority option to planner task add and set #3383 added support for upgrading SPFx projects to v1.15.0 #3427 v5.3.0 \u00b6 New commands \u00b6 Apps: app open - returns deep link of the current AD app to open the Azure portal on the Azure AD app registration management page #2940 Planner: planner task reference add - adds a new reference to a Planner task #3283 planner task reference list - retrieve the references associated to a Planner task #3284 planner bucket get - retrieves a planner bucket #3226 planner bucket remove - removes a Microsoft Planner bucket from a plan #2742 Power Platform: pp gateway list - returns a list of gateways for which the user is an admin #3276 SharePoint Online: spo eventreceiver get - retrieves specific event receiver for a web, site or list #3308 spo field list - retrieves columns for the specified list or site #2695 spo list roleinheritance break - breaks role inheritance on list or library #3198 spo list roleinheritance reset - restores role inheritance on list or library #3220 spo list view add - adds a new view to a SharePoint list #1834 spo listitem roleinheritance break - breaks inheritance of list item #3199 spo listitem roleinheritance reset - restores the role inheritance of list item, file, or folder #3238 spo roledefinition list - gets list of role definitions for the specified site #3237 Search: search externalConnections list - lists external connections defined in Microsoft Search #2790 Tenant: tenant security alerts list - gets the security alerts for a tenant #2635 Changes \u00b6 added 'add multiple tasks in Planner' sample #2245 removed testing on Node@12 #3212 extended 'planner task get' #3229 extended 'sp approleassignment' with more properties #2462 fixed invalid channel ID in docs #3278 added app only token check to planner commands #3265 added Planner utilities class #3268 extended 'aad app add' and 'aad app set' with certificates #3115 , #3116 fixes documentation app open in wrong place #3316 extended teams channel member with check for private channel #3254 updated documentation titles #3310 follow the order of properties as defined in defaultProperties #2008 added Examples section for New Command template #3105 fixed 'documentation about using the @ token in PowerShell' #3239 v5.2.0 \u00b6 New commands \u00b6 Azure Active Directory: aad user signin list - retrieves the Azure AD user sign-ins for your tenant #2910 Planner: planner bucket set - updates a Microsoft Planner bucket #3230 Power Platform: pp environment list - lists Microsoft Power Platform environments #3061 pp managementapp list - lists management applications for Power Platform #2977 Teams: teams channel member remove - remove the specified member from the specified Microsoft Teams private team channel #3175 teams channel member set - updates the role of the specified member in the specified Microsoft Teams private team channel #3177 teams channel membership list - lists users for the specified Microsoft Teams channel #3176 teams chat get - gets a Microsoft Teams chat conversation by id, participants or chat name #3017 Changes \u00b6 replaced markshell with a plain-text output #3142 fixed restoring group associated with site #3101 fixed default output in spfx project upgrade #3060 fixed removing modern sites #3186 moved mocha settings to .mocharc.json #3180 extended app get with debug information #3165 fixed showing deprecation messages #3151 added the autoOpenLinksInBrowser setting and implemented it in login and reconsent #3118 fixed 'spo file checkout' validation messages #3201 extended spo tenant settings with options to enable B2B integration #3110 fixed 'teams channel membership list' missing documentation dashes #3209 extended 'teams channel list' command with support for type filtering #3191 extended 'teams channel add' command with private channel support #3181 fixed unescaped md code chars in help commands #3202 extended spfx project upgrade with guidance for SPFx fast serve #3154 renamed 'teams channel membership list' to 'teams channel member list' command #3215 renamed 'teams conversationmember add' to 'teams channel member add' command #3174 added 'teams channel member set' channelId validation #3222 updated 'planner task list' samples #3232 corrected 'teams app install' options #3217 changed listTitle to title in spo listitem list docs #3099 removed react check from 'spfx doctor' command #3162 added support for upgrading SPFx projects to 1.15.0-beta.6 #3243 fixed options descriptions for planner task set #3245 v5.1.0 \u00b6 New commands \u00b6 Azure Active Directory: aad o365group conversation post list - lists conversation posts of a Microsoft 365 Group #3017 Microsoft 365 apps: app get - retrieves information about the current Azure AD app #2942 Planner: planner plan details get - retrieve the planner details about the specified plan #3051 Power Platform: pp managementapp add - registers management application for Power Platform #2917 SharePoint: spo site recyclebinitem restore - restores given items from the site recycle bin #2882 spo app teamspackage download - downloads Teams app package for an SPFx solution #2934 SharePoint Framework: spfx project doctor - validates correctness of a SharePoint Framework project #3057 Changes \u00b6 refactored helper methods #2989 added prompting for missing required values #2837 extended 'aad o365group add' command with resourceBehaviorOptions #3080 refactored 'teams chat message send' #3106 , #3107 , #3123 added planner migration sample #3013 fixed 'spfx project upgrade' invalid allowed value #3109 added support for upgrading SPFx projects to v1.15.0-beta.1 #3117 fixed creating AAD app with public client from manifest #3132 fixed creating AAD app with a approle from manifest #3131 fixed creating AAD app with a secret from manifest #3130 removes the delete .editorconfig spfx project upgrade rule #3126 fixes 'Authenticate with and call the Microsoft Graph' sample #3145 renamed 'aad app delete' and 'aad app role delete' #3133 removed dependencies on Office 365 Communication API #3143 added 'Owner group member' sample #2219 added the 'copyDeviceCodeToClipboard' config setting #3129 extended spfx doctor command with default output type as text #3125 extended command definition with validating option sets #2998 added jmespath-terminal to Dockerfile #3147 added missing tests to 'spo recyclebin item restore' #2882 v5.0.0 \u00b6 New commands \u00b6 Azure Active Directory: aad app remove - removes an Azure AD app registration #3008 aad o365group conversation list - lists conversations for the specified Microsoft 365 group #3030 Microsoft 365: tenant serviceannouncement health get - retrieves a tenant health information #2950 tenant serviceannouncement health list - lists the tenant health information #2947 tenant serviceannouncement healthissue get - retrieves a specified service health issue for the tenant #2951 tenant serviceannouncement healthissue list - retrieves all service health issues for the tenant #2948 tenant serviceannouncement message get - retrieves a specified service update message for the tenant #2952 tenant serviceannouncement message list - retrieves all service update messages for the tenant #2949 Outlook: outlook room list - get a collection of all available rooms #2963 outlook roomlist list - get a collection of available roomlists #3002 Planner: planner task get - retrieves the the specified planner task #3019 planner task details get - retrieves the details of the specified planner task #3015 SharePoint: spo group user remove - removes the specified user from a SharePoint group #2642 Teams: teams chat message send - Sends a chat message to a Microsoft Teams chat conversation #2916 Changes \u00b6 updated 'aad oauth2grant list' to use MS Graph #2710 updated the 'aad sp get' command to use MS Graph #2754 extended 'aad oauth2grant remove' with confirm #2785 renamed clientId to spObjectId in aad oauth2grant list #2786 fixed flow get as admin #2984 added the 'Get attachment names from SPO lists' sample #2661 updated the 'using own identity' guide with updated interface #2968 added the 'List all documents with a specific name within a SharePoint site' sample #2768 extended 'aad user list' with --deleted flag #2955 removes obsolete AADCommand base class #2922 updates the 'teams channel get' documentation #3009 added the 'Check all users for known breaches with HBIP' sample #2957 added the 'List items with unique permissions' sample script #2283 added link for 'Using your own Azure AD identity' #2946 fixed creating AAD apps with preauthorized apps from manifest #3041 added CLI API to execute commands #2996 added support for upgrading SPFx projects to v1.14.0-rc.2 #3045 extended 'planner task list' with 'priority' #3037 extends 'planner task get' with task priority #3036 extends 'aad group list' with --deleted flag #2956 added csv to autocomplete option #2997 added the 'Detecting PII exist in SharePoint List using AWS Comprehend' sample #2925 extended 'teams channel get' with 'primary' #3004 extended 'aad app set' with updating redirect URIs #3043 extended 'spo group user add' with validating users #2653 extended 'teams app install' with support for installing personal apps #3025 moved 'Command completion' and 'GitHub Actions' to 'User Guide' #2944 added --save option to the 'aad app get' command #2939 added Mocha Test Explorer #2817 added support for upgrading SPFx projects to v1.14.0 #3067 extended 'spfx doctor' with support for SPFx v1.14.0 #3069 extended 'teams app update' to search apps by name #3026 added the 'List all checked out files' sample #3046 extended login with automatically opening the browser #2158 v4.4.0 \u00b6 New commands \u00b6 Azure Active Directory: aad group list - lists Azure AD groups #2622 aad user hibp - allows you to retrieve all accounts that have been pwned with the specified username #2476 Planner: planner task set - updates a Microsoft Planner task #2824 SharePoint: spo site recyclebinitem list - lists items from recycle bin #2875 Teams: teams chat list - lists all Microsoft Teams chat conversations for the current user #2893 teams chat member list - lists all members from a Microsoft Teams chat conversation #2896 teams chat message list - lists all messages from a Microsoft Teams chat conversation #2860 Changes \u00b6 extended 'cli config set' with support for csv output #2901 fixed 'teams tab get' and 'teams app list' commands #2930 extended 'spo group user add' with groupName and email #2831 added docs explaining app commands #2888 added support for upgrading SPFx projects to v1.14.0-beta.5 #2983 fixed unhandled exception for spo group user add #2935 added the 'List all large files within a SharePoint Site' sample #2772 v4.3.0 \u00b6 New commands \u00b6 Azure Active Directory: aad app get - gets an Azure AD app registration #2835 aad user password validate - checks a user's password against the organization's password validation policy #2846 Microsoft 365 apps: app permission list - lists API permissions for the current AAD app #2841 Microsoft Search: search externalconnection add - adds a new external connection to be defined for Microsoft Search #2662 Planner: planner task add - adds a new Microsoft Planner task #2255 SharePoint: spo web installedlanguage list - lists all installed languages on site #2833 Changes \u00b6 added support for upgrading SPFx projects to v1.14.0-beta.4 #2865 extended 'cli doctor' with cli configuration #2601 removed value wrapper from JMESPath #2858 updated completion PS filename in docs #2862 added the 'Copy list items between SharePoint lists' script #2652 updated Node version Readme.md Build instructions #2873 fixed the maxBodyLength issue #2863 extended 'pa app list' with environment #2872 updated social links in the docs #2885 added csv output mode #2836 changed handling non-existent sites in 'spo site ensure' #2861 updated 'cli doctor' tests to not depend on empty config #2870 extended 'aad user get' with email #2856 updated 'teams message get' command to Graph v1.0 API #2678 replaced custom group and user types with MS Graph types #2436 updated default terminal profile in devcontainer #2664 v4.2.0 \u00b6 New commands \u00b6 Azure Active Directory: aad sp add - adds a service principal to a registered Azure AD app #2583 File: file list - Retrieves files from the specified folder and site #2804 SharePoint: spo contenttype list - lists content types from specified site #2777 spo listitem attachment list - gets the attachments associated to a list item #2730 Changes \u00b6 updated the 'aad oauth2grant remove' command to MS Graph v1.0 #2713 updated 'aad oauth2grant add' to use MS Graph #2712 updated 'aad oauth2grant set' to use MS Graph #2711 added the 'Use CLI for Microsoft 365 access token' sample #2731 updated the 'teams report pstncalls' command to MS Graph v1.0 #2679 added siteUrl to 'file add' #2655 upgraded MkDocs to 7.1.7 #2498 added the 'Export all channels from a team' sample #2793 updated main Node.js version to v16 #2799 updated asciinema video on all pages #2663 fixed 'spo site remove' to remove orphaned groupified sites #2706 extended spfx doctor with support for SPFx@1.13.0 #2802 fixed issue with \\n in JSON output #2807 updated 'teams report directroutingcalls' to Graph v1.0 #2680 fixed the 'Export all flows in environment' sample #2805 extended 'spo list get' with --withPermissions #2796 fixed slow tests #2825 updated 'aad o365group add' to fail for invalid values #2654 added more layouts to spo page add/set #2821 extended 'aad app add' with save #2815 extended 'spfx project upgrade' with support for SPFx@1.13.1 #2849 extended 'spfx doctor' with support for SPFx@1.13.1 #2849 v4.1.0 \u00b6 New commands \u00b6 Azure Active Directory: aad user set - updates information of the specified user #1933 Changes \u00b6 upgraded the 'aad siteclassification get' command to Microsoft Graph v1.0 #2676 upgraded the 'aad siteclassification enable' command to Microsoft Graph v1.0 #2675 upgraded the 'aad siteclassification set' command to Microsoft Graph v1.0 #2677 extended 'aad o365group teamify' with mailNickname #2669 renamed 'aad o365group restore' to 'aad o365group recyclebinitem restore' #1987 added support for upgrading SPFx projects to v1.13.0-rc.1 #2758 extended 'teams user app list' with teamsAppDefinition #2719 added the 'Flow runs day summary report' sample #2740 added the 'Add users to groups' sample #2719 added the 'List Teams, channels, and tabs in the tenant' sample #2734 extended 'spo contenttype add' to return created object by default #2333 excluded parsing strings for formatting #2760 added launch config to debug CLI and tests #2766 added support for upgrading SPFx projects to v1.13.0 #2780 v4.0.0 \u00b6 New commands \u00b6 SharePoint: spo group user list - list members of a SharePoint Group #2640 Teams: teams team get - gets information about the specified Microsoft Teams team #2506 Changes \u00b6 removed duplicate ID in 'spo listitem' commands #2024 removed the 'value' wrapper in the output #2292 updated JMESPath docs #2553 removed obsolete file path options #2309 aligned 'aad o365group user list' and 'teams user list' #2520 in 'spo listitem get' renames fields to properties #2533 changed default output to JSON #2599 added SPO auto-discovery remark to 'Using your own Azure AD identity' #2639 added the 'Export all the team members from the Teams team' sample #2648 updated 'aad o365group teamify' to Graph v1.0 #2504 extended 'planner task list' with support for listing tasks in a bucket or a plan #2575 added support for upgrading SPFx projects to 1.13.0-beta.20 #2697 fixed 'spo theme list' command #2700 added support for paging in 'spo site classic list', 'spo site list' and 'onedrive list' #2692 fixed 'spo page control list' and '- get' commands #2667 added the 'Get all the Teams a specific user is part of' sample #2688 extended 'spo sitedesign set' with support for thumbnailUrl option #2651 extended base SPO command when using secret auth type #2591 updated 'teams channel list' command to Graph v1.0 #2670 upgraded 'teams conversationmember list' to Graph v1.0 #2672 upgraded 'teams conversationmember add' to Graph v1.0 #2671 upgraded 'aad siteclassification disable' to Graph v1.0 #2674 removed 'spo site classic remove' link from nav #2707 fixed escaping single quotes in folder names in 'spo file list' #2704 added privacy settings remark #2727 added v4 upgrade guidance #2659 v3.13.0 \u00b6 New commands \u00b6 SharePoint: spo group user add - add a user or multiple users to SharePoint Group #2483 spo site apppermission remove - removes a specific application permission from a site #2209 spo app instance list - retrieves apps installed in a site #2025 Planner: planner plan get - retrieves a Microsoft Planner plan #2528 Changes \u00b6 updated 'teams message reply list' to Graph v1.0 #2509 extended 'getAllItems' with an optional metadata argument #2613 added the 'social champion' sample #2532 renamed 'PowerShell Core' to 'PowerShell' in docs #2620 added support for upgrading SPFx projects to 1.13.0-beta.17 #2644 added support for using AAD client secret to authenticate #2171 updated 'teams team list' to Graph v1.0 #2507 added the 'Recognize most active users for a specific Team' sample #2619 v3.12.0 \u00b6 New commands \u00b6 CLI: cli doctor - retrieves diagnostic information about the current environment #2157 OneDrive: onedrive list - retrieves a list of OneDrive sites #2230 Planner: planner bucket add - adds a new Microsoft Planner bucket #2254 planner bucket list - lists the Microsoft Planner buckets in a plan #2556 planner plan list - returns a list of plans associated with a specified group #2499 Changes \u00b6 added the 'Add multiple lists in multiple sites' sample #2562 updated 'teams user app list' to Graph v1.0 #2510 added the 'List failed site designs' sample #2539 extended 'spo web get' with groups #2493 fixed 'yammer message add' #2557 fixed 'spo site set' code coverage #2586 updated 'teams channel get' to Graph v1.0 #2505 added missing 'chalk' dependency #2592 extended Teams channel ID validation with - and _ #2594 added file count sample #2576 added support for upgrading SPFx projects to v1.13.0-beta.13 #2604 updated upgrade rule for SPFx v1.13.0-beta.13 #2611 added support for upgrading SPFx projects to v1.13.0-beta.15 #2614 v3.11.0 \u00b6 New commands \u00b6 Azure Active Directory: aad app role remove - deletes role from the specified Azure AD app registration #2150 aad app set - updates Azure AD app registration #2448 aad o365group recyclebinitem clear - clears Microsoft 365 Groups from the recycle bin in the current tenant #2033 CLI: cli config reset - resets the specified CLI configuration option to its default value #2344 cli issue - returns, or opens a URL that takes the user to the right place in the CLI GitHub repo to create a new issue reporting bug, feedback, ideas, etc. #1490 Microsoft 365: tenant report office365activationcounts - gets the count of Microsoft 365 activations on desktops and devices #2257 tenant report office365activationsusercounts - gets the count of users that are enabled and those that have activated the Office subscription on desktop or devices or shared computers #2258 tenant report office365activationsuserdetail - Get details about users who have activated Microsoft 365 #2256 SharePoint Framework: spfx package generate - generates SharePoint Framework solution package with a no-framework web part rendering the specified HTML snippet #2367 Changes \u00b6 added encoding password for login #2466 added JMESPath docs #2293 added sample script to resubmit failed flow runs #2440 added sample script to cancel running flow runs #2441 fixed 'spfx doctor' on Windows #2299 updated 'spfx doctor' to support SPFx v1.12.1 fixed adding channels via team's name #2419 extended 'file add' to handle empty files #2433 fixed docs for 'spo listitem remove' command #2474 centralized converting csv to json #2481 extended 'spo file list' with the recursive option #2376 added the Get-SPOUser CLI equivalents to the docs #2485 removed the deprecated Get-TeamHelp cmdlet from the docs #2486 added the Remove-PowerApp CLI equivalent to the docs #2491 excluded /assets/ path from loading commands #2512 fixed the 'o365group user list' command #2374 added the 'Remove pending SharePoint API permission requests' sample script #2478 added the 'Remove SharePoint API permissions' sample script #2487 extended 'pa app get' to allow retrieving apps by their display name #2174 removed double JSON.stringify #2534 updated sample and removes double / #2449 updated 'todo list add' to Graph v1.0 #2515 updated 'todo list list' to Graph v1.0 #2516 updated 'todo list remove' to Graph v1.0 #2517 updated 'todo list set' to Graph v1.0 #2518 updated 'teams user app remove' to Graph v1.0 #2514 updated 'teams user app add' to Graph v1.0 #2513 updated 'teams team set' to Graph v1.0 #2511 added documentation for JMESPath sort #2536 updated 'teams message reply list' to Graph v1.0 #2509 added remarks to 'spo theme set' docs #1633 extended 'spo site set' and 'spo site classic set' with description #2334 v3.10.0 \u00b6 New commands \u00b6 Azure Active Directory: aad app role list - gets Azure AD app registration roles #2144 CLI: cli config get - gets value of a CLI for Microsoft 365 configuration option #2343 File: file add - uploads file to the specified site using Microsoft Graph #2384 Power Apps: pa app remove - removes the specified Power App #2133 SharePoint: spo site apppermission set - updates a specific application permission for a site #2210 Changes \u00b6 added the 'Replace membership in group or team' sample #2372 added the 'Monitor Site Collections Storage Usage' sample script #2224 added support for printing errors as JSON in JSON output #2298 extended 'spo site apppermission list' with roles #2412 fixed removing users from O365 groups #2368 fixed printing validation errors as json #2429 added the 'Add multiple folders in libraries using a csv file' sample script #2415 updated PowerShell samples to use simplified CLI config #2428 updated 'aad user list' docs #2434 added the 'Replace spo site collection admin' sample #2221 extended 'spo site apppermission get' with roles #2409 added 'Search flows for connection' sample #2444 extended 'spo list get' with properties #2443 changed 'flow run list' to return all runs #2458 v3.9.0 \u00b6 New commands \u00b6 Azure Active Directory: aad app role add - Adds role to the specified Azure AD app registration #2145 Planner: planner plan add - adds a new Microsoft Planner plan #2253 SharePoint: spo site apppermission add - adds a specific application permissions to the site #2208 spo userprofile get - gets SharePoint user profile properties for the specified user #1670 Microsoft Viva: viva connections app create - creates a Viva Connections desktop app package to upload to Microsoft Teams Changes \u00b6 moved from adal-node to msal-node #2156 added eslint. Fixed code to align with eslint config #2058 updated command examples to use long options #2319 fixed broken list of command options #2320 added support for using relative URLs in spo commands #2313 added support for configuring error output #2325 fixed docs for 'spo list set' #2332 added 'Cleanup completed Microsoft To Do tasks' sample script #2339 added the 'Create a Microsoft Teams team and bulk add members from CSV file' sample #2288 added the 'Setup example site' sample script #2328 added ESLint extension to Remote Development Container #2327 fixed MKDocs Tab rendering issue in Remote Development Container #2341 added eslint rule to check command's class name #1819 added new sample script 'Upload local files and folders to SharePoint Online' #2302 added support for upgrading SPFx projects to beta versions of SPFx #2354 added support for upgrading SPFx projects to v1.12.1-rc.0 #2355 changed order of commands for upgrading SPFx projects #2358 added support for creating AAD apps from manifest #2316 added support for tracking help usage in telemetry #2336 added returning human-readable error on invalid JMESPath queries #2279 added support for upgrading SPFx projects to v1.12.1-rc.1 #2363 fixed the conflicting documentation around the --withSecret command option in aad app add #2365 added the 'Bulk add members to Microsoft Teams team from CSV file' sample script #2285 added the 'Copy files to another SharePoint Library in another site' sample script #2370 added support for upgrading SPFx projects to v1.12.1-rc.2 #2378 extended the spo contenttype get command with name #2335 added the 'Remove a Site Collection Admin User from all Site Collections' sample script #2223 added support for upgrading SPFx projects to v1.12.1-rc.3 #2387 added the 'Replace an owner in a Microsoft 365 Group or Microsoft Team' sample script #2348 fixed typo in docs for 'teams tab get' #2390 added the 'Add a site collection admin using csv file' sample #2220 fixed API change in 'flow export' #2398 added support for upgrading SPFx projects to v1.12.1 #2401 v3.8.0 \u00b6 New commands \u00b6 Azure Active Directory: aad policy list - returns policies from Azure AD #2164 Changes \u00b6 added support for configuring default output #2246 restored showing original API errors #2138 added new sample script for granting API permissions to SharePoint AAD App #2243 added the 'List all Microsoft Teams team's Owners and Members' sample #2284 fixed the 'spo tenant appcatalog add' command #2300 added the 'M365 health status' sample script #2107 fixed broken tests when default output configured to JSON #2305 v3.7.0 \u00b6 New commands \u00b6 CLI: cli config set - sets CLI for Microsoft 365 configuration options #1945 SharePoint: spo site apppermission get - gets a specific application permissions for the site #2207 spo site apppermission list - lists application permissions for a site #2206 Teams: teams conversationmember add - adds a conversation member in a private channel #1986 Changes \u00b6 added conditionally saving page in 'spo page set' #2211 fixed issue in spo page control set discarding data on save #2216 added missing includeOndriveSites option to spo site classic list docs #2234 added Remote Development container #1832 moved spo page list to use pages API #2241 added support for configuring auto showing help on failure #1945 added the 'Provision a Team with channels and assign a custom icon' sample #2148 extended aad o365group remove with skipRecycleBin #1986 updated product name from 'Microsoft Flow' to 'Power Automate' in docs #2259 added the 'List site collections and their lists' sample script #2272 added site external users report sample #2277 added the 'Delete all Microsoft 365 groups and SharePoint sites' sample #2278 added support for upgrading SPFx projects to v1.12 #2154 extended spfx doctor with support for SPFx v1.12 #2173 v3.6.0 \u00b6 New commands \u00b6 Power Apps: pa app get - gets information about the specified Microsoft Power App #2110 pa environment get - gets information about the specified Microsoft Power Apps environment #2109 pa environment list - lists Microsoft Power Apps environments in the current tenant #2108 SharePoint: spo page copy - creates a copy of a modern page or template #2088 spo site chrome set - sets the chrome header and footer for the specified site #2161 spo site ensure - ensures that the particular site collection exists and updates its properties if necessary #1404 Changes \u00b6 fixed broken tests in 'tenant auditlog report' on Node@10 #2125 fixed uploading large files #2120 implemented browser-based login #1979 fixed bug in 'spo tenant appcatalog add' #2129 changed the logic to keep original value if @-value is not a valid file path #2134 removed 'description' property from command option #2112 extended 'spo page set' with title #2140 moved 'DONE' out of the commandAction #2045 simplified returning command name #2123 extended 'util accesstoken get' with sharepoint as resource #2096 updated command option in readme.md improved environment get commands with text results #2153 extended 'spo web set' with the ability to reset the logo #2177 added PowerShell examples to 'adaptivecard send' docs #2167 added 'm365' prefix to sample in 'pa app list' docs #2182 added 'm365' prefix in 'version' docs #2183 added 'Export Teams conversations' sample script #2104 extended test script with checking Node version #2181 extended spo site set with setting site logo #2175 extended spo page get with support for loading only metadata #2184 fixed control and section parsing in 'spo page get' #2179 fixed bug in uploading large files #2199 extended aad app add with returning tenantId #2187 extended output of spo page get with canvasContentJson #2193 fixed looking up service principals with trailing slash in aad app add #2188 changed spo page control list to use the pages API #2198 fixed issue with character encoding in spo page control set #2195 fixed issue with character encoding in spo page control get #2202 extended spo page control list with empty CanvasContent1 check #2204 added the List all tabs in Teams sample script #2075 extended aad o365group get with teams team get alias #2214 added the List all sites' owners sample script #2168 v3.5.0 \u00b6 New commands \u00b6 Adaptive Cards: adaptivecard send - sends adaptive card to the specified URL #2005 Azure Active Directory: aad app add - creates new Azure AD app registration #1962 aad o365group recyclebinitem list - lists Groups from the recycle bin in the current tenant #2032 Microsoft 365: tenant auditlog report - gets audit logs from the Office 365 Management API #1739 File: file convert pdf - converts the specified file to PDF using Microsoft Graph #2010 Power Automate: flow run resubmit - resubmits a specific flow run for the specified Microsoft Flow #1871 SharePoint: spo list view field set - updates existing column in an existing view (eg. move to a specific position) #2059 spo page template list - lists all page templates in the given site #2065 Changes \u00b6 updated 'teams team add' to use Microsoft Graph v1.0 API #2020 applied multiple performance improvements #2047 fixed 'page header set' command #2049 , #2050 added wait-npm-publish script to CI/CD #2053 added support for passing complex content from files #2042 added support for adding page description to 'spo page add' and 'spo page set' #2044 added new sample script for exporting a flow to Logic app #2067 added new sample script for emptying the tenant recycle bin #1142 updated sample script changing CLI command name to m365 #2063 added new sample script 'Export all Flows in environment' #2082 added new sample script 'List all application customizers' #2074 changed secret expiration to 1 year in aad app add #2064 added support for setting authors and checks in page in 'spo page header set' #2069 , #2070 fixed removing previous values and checks in page in 'spo page clientsidewebpart add' #2068 , #2069 checking in page if not published in 'spo page add' and 'spo page set' #2069 fixed bug in 'spo app add' returning an object instead of just the app ID #2080 fixed 'spo listitem get' doc #2093 fixed bug in exporting flows #2091 fixed logging output when using JMESPath queries #2095 updated guidance for escaping quotes in bash #2043 replaces rmSync with unlinkSync in 'file convert pdf' #2106 fixed escaping backslash in 'spo page get' #2114 v3.4.0 \u00b6 New commands \u00b6 SharePoint: spo list contenttype default set - sets the default content type for a list #674 Teams: teams report directroutingcalls - gets details about direct routing calls made within a given time period #1772 teams report pstncalls - gets details about PSTN calls made within a given time period #1771 Yammer: yammer search - returns a list of messages, users, topics and groups that match the specified query #1454 Changes \u00b6 updated docs for the login command with links to more info #1966 moved global options in docs to a separate file #1852 , #1969 extended login with support for passing base64-encoded certificate #1971 extended login with calculating thumbprint from the certificate #1973 fixed 'spo listitem set' command #1984 changed loading optional dependencies to lazy to speed up CLI #1990 extended login with support for .pfx certificates not protected with a password #1974 fixed the outlook mail send command #1991 extended the login command with appId and tenant #1975 fixed the spo apppage add command #2000 removed short options from args passed to commands #1992 extended spo sitedesign get to include title #1884 removed unnecessary request digest from spo sitedesign list #2006 fixed issue with resolving uppercase URLs #2011 added Dockerfile #1786 added line information to JSON-based rules in 'spfx project upgrade' #1602 removed the 'started' telemetry event #2018 clarified SPFx project upgrade actions #1857 , #1569 added preserving page content to spo page header set #2019 v3.3.0 \u00b6 New commands \u00b6 Power Automate: flow run cancel - cancels the specified Microsoft Flow #1870 SharePoint: spo file sharinginfo get - generates a sharing information report for the specified file #1659 spo page control set - updates web part data or properties of a control on a modern page #1934 spo tenant recyclebinitem remove - removes the specified deleted Site Collection from Tenant Recycle Bin #1145 spo tenant recyclebinitem restore - restores the specified deleted Site Collection from Tenant Recycle Bin #1362 Teams: teams conversationmember list - lists all conversational members of a channel #1880 To Do: todo task add - adds a task to a Microsoft To Do list #1898 todo task list - lists tasks in a Microsoft To Do task list #1901 todo task remove - removes the specified Microsoft To Do task #1900 todo task set - sets a task in a Microsoft To Do list #1899 Changes \u00b6 extended channel list with teamName #1889 extended 'teams channel get' command with support for teamName and channelName options #1887 extended 'spo tenant settings set' with DisableCustomAppAuthentication #1829 added the 'Analyze Microsoft 365 User Profile Photos using Azure Computer Vision API' sample script #1894 fixed displaying command groups in alphabetical order in help #1922 fixed excluding command and arguments as field values in 'spo file add' #1936 refactored processing command output #1552 , #1823 and #1875 fixed displaying help for command's alias #1907 added tracking output mode to telemetry #1946 fixed retrieving unknown options #1947 renamed query to camlQuery in spo listitem list #1948 fixed user-agent header #1951 fixed user guide env. variable naming #1954 made 'console.log()' synchronous #1266 extended todo task list with id #1943 v3.2.0 \u00b6 New commands \u00b6 Azure Active Directory: aad approleassignment remove - deletes an app role assignment for the specified Azure AD Application Registration #1872 Microsoft Teams: teams tab get - gets information about the specified Microsoft Teams tab #1804 teams user app list - lists the apps installed in the personal scope of the specified user #1866 SharePoint: spo knowledgehub get - gets the Knowledge Hub Site URL for your tenant #1575 Changes \u00b6 removed Vorpal #1737 extended 'todo list set' with name #1806 updated 'aad approleassignment list' to v1.0 graph API #1604 removed CommandInstance and simplifies validate() #1821 replaced request with Axios #1363 added quotes to paths in shell commands #1849 fixed 'flow export' command #1845 extended 'spo site remove' with support for M365 groups #1561 added the 'Deploy a Microsoft Teams personal app and add it to users' sample script #1867 added Teams scope to the list of default permissions in the docs #1860 updated 'aad approleassignment add' to use Microsoft Graph #1858 added the 'Removes Microsoft Teams personal app from users and Microsoft Teams app catalog' sample script #1883 extended 'teams app list' with support for using Team's name #1861 excluded missing global options in 'spo tenant settings set' #1903 added support for specifying Team name in teams channel add #1888 excluded missing global options in 'aad user list' #1909 fixed 'spo file get' for large files #1796 v3.1.0 \u00b6 New commands \u00b6 Microsoft 365: tenant service list - gets services available in Microsoft 365 #1740 tenant service message list - gets service messages Microsoft 365 #1741 tenant service report historicalservicestatus - gets the historical service status of Microsoft 365 Services of the last 7 days #1742 Outlook: outlook message list - gets all mail messages from the specified folder #1764 outlook message move - moves message to the specified folder #1765 Power Apps: pa app list - lists all Power Apps apps #1789 SharePoint: spo knowledgehub remove - removes the Knowledge Hub Site setting for your tenant #1577 Changes \u00b6 added the 'Remove orphaned redirect sites' sample script #1717 extended 'spo page get' json output to include all returned properties #1729 extended 'spfx doctor' with support for SPFx v1.11 #1721 extended 'tenant status list' with filtering by workload #1743 fixed long running copy and move operations #1698 added 'm365' alias to examples in docs and help #1694 added support for parsing JSON with BOM to 'spfx project upgrade' #1723 renamed token file use the new CLI name #1810 v3.0.0 \u00b6 New commands \u00b6 Microsoft Teams: teams app user remove - uninstall an app from the personal scope of the specified user #1711 Microsoft To Do: todo list list - returns a list of Microsoft To Do task lists #1609 todo list remove - removes a Microsoft To Do task list #1611 todo list set - updates a Microsoft To Do task list #1612 SharePoint: spo group list - lists groups from specific web #1691 spo knowledgehub set - sets the Knowledge Hub Site for your tenant #1576 Changes \u00b6 fixed 'spo search' command #1696 added the 'Export Configurations of Tenant Wide Extensions' sample script #1440 extended 'spo site set' with sharing capabilities #1713 removed deprecated 'id' option in 'spo site set' #1536 removed deprecated exit code in 'spfx project upgrade' #1418 removed immersive mode #1600 removed '-h' as option #1680 removed deprecated 'accesstoken get' alias #1368 removed '--pretty' global option #1338 removed deprecated aliases #1339 renamed 'Office 365 CLI' to 'CLI for Microsoft 365' #1635 added 'owners' option for CommunicationSite creation using 'spo site add' #1734 added LCID validation to 'spo site add' #1749 added \"Caveats when certificate login\" doc #1734 , #1738 removed obsolete outputFile option #1769 renamed environment variables from OFFICE365CLI to CLIMICROSOFT365 #1787 extended 'spo web set' with welcomePage #1730 v2.13.0 \u00b6 New commands \u00b6 SharePoint: spo group remove - removes group from specific web #1693 spo user list - lists all the users within specific web #1672 spo userprofile set - sets user profile property for a SharePoint user #1671 Changes \u00b6 added the 'List app usage in Microsoft Teams' sample script #1640 fixed the 'Get user with login name' example for 'spo user get' command #1707 updated CodeTour SPFx upgrade report schema #1708 consolidated 'spo site add' and 'spo site classic add' commands #1493 v2.12.0 \u00b6 New commands \u00b6 Microsoft Graph: graph schemaextension list - gets a list of schemaExtension objects created in the current tenant #12 SharePoint: spo group get - gets site group #1692 spo tenant appcatalog add - creates new tenant app catalog site #1646 spo user get - gets a site user within specific web #1673 spo user remove - removes user from specific web #1674 SharePoint Framework: spfx project rename - renames SharePoint Framework project #1349 Changes \u00b6 added the 'Sync SharePoint Document Library Documents with Azure Storage Container' sample script #1685 added support for upgrading projects built using SharePoint Framework v1.11.0 #1714 v2.11.0 \u00b6 Changes \u00b6 added the 'remove wiki tab from a Microsoft Teams channel' sample script #1506 fixed suggesting incorrect componentType #1574 added m365 and microsoft365 executables #1637 consolidated spo site remove and spo site classic remove commands #1494 added suggesting upgrading dependency @microsoft/sp-page-context #1521 added suggesting upgrading dependency @microsoft/sp-odata-types #1520 added suggesting upgrading dependency @microsoft/sp-module-interfaces #1519 added suggesting upgrading dependency @microsoft/sp-loader #1518 added suggesting upgrading dependency @microsoft/sp-list-subscription #1517 fixed detecting onprem SPFx projects' versions #1647 extended 'teams team add' with support for Teams templates #916 extended 'spo field remove' with removing all fields from a group #1381 fixed incorrect path in FN018001 #1661 fixed incorrect path in FN018003 and FN018004 #1662 fixed resolution of paths on Windows in 'spfx project upgrade' added the 'Insert pictures in a SharePoint Document Library into a Word document' sample script #1653 extended 'teams team add' with support for returning team information #1654 fixes bug in returning lists #1667 v2.10.0 \u00b6 New commands \u00b6 Azure Active Directory: aad approleassignment add - adds service principal permissions also known as scopes and app role assignments for specified Azure AD application registration #1581 Microsoft Teams: teams user app add - install an app in the personal scope of the specified user #1450 Microsoft To Do: todo list add - adds a Microsoft To Do task list #1610 Yammer: yammer group user add - adds a user to a Yammer Group #1456 yammer group user remove - removes a user from a Yammer group #1457 yammer message like set - likes or unlikes a Yammer message #1455 Changes \u00b6 added support for more module types in spfx project externalize #1192 fixed indentation of resolution for FN012010 #1467 fixes description of FN003003 #1469 updated MPA docs with Docker image version #1531 simplified persisting login information #1313 updated the Authenticate with Microsoft Graph sample replacing the deprecated method #1548 included PowerShell completion script in the package #1551 added Flow inventory sample script #1522 added managed identity authentication #1314 fixed 'teams team add' command #1497 extended 'spo site set' with additional options #1478 added the 'Bulk add/remove users to Microsoft Teams and Microsoft 365 Groups' sample script #1540 updates the 'cli consent' command references #1542 fixed 'aad user list' command #1553 ensured all global options are ignored in request bodies #1563 fixed windows builds #1544 added missing '}' in FN011008 resolution #1509 fixed issue with logging out after running tests #1570 fixed incorrect import suggestions in FN016004 #1484 fixed indentation of FN011010 resolution #1485 moved SPFx test projects to a common location #1507 added suggesting upgrading dependency @microsoft/sp-component-base #1512 made FN011008 supersede FN011009 #1510 added FN017001 to the summary #1511 added suggesting upgrading dependency @microsoft/sp-diagnostics #1513 added suggesting upgrading dependency @microsoft/sp-dynamic-data #1514 added suggesting upgrading dependency @microsoft/sp-extension-base #1515 extended 'aad approleassignment list' with --objectId option #1579 added 'Using your own Azure AD identity' to docs #1496 added the 'Disable the specified tenant-wide extension' sample script #1444 added suggesting upgrading dependency @microsoft/sp-http #1516 added the 'Add custom client-side web part to modern page' sample script #1438 added CodeTour report for spfx project upgrade #1592 extended 'aad sp get' with --objectId option #1567 removed reserved shortcut from 'aad approleassignment list' objectId option #1607 v2.9.0 \u00b6 New commands \u00b6 Azure Active Directory: aad o365group report activitystorage - get the total storage used across all group mailboxes and group sites #1286 Microsoft Teams: teams tab remove - removes a tab from the specified channel #1449 Microsoft 365: tenant status list - gets health status of the different services in Microsoft 365 #1272 SharePoint: spo orgassetslibrary add - promotes an existing library to become an organization assets library #1040 Yammer: yammer report activitycounts - gets the trends on the amount of Yammer activity in your organization by how many messages were posted, read, and liked #1383 yammer report activityusercounts - gets the trends on the number of unique users who posted, read, and liked Yammer messages #1384 yammer report activityuserdetail - gets details about Yammer activity by user #1382 yammer report deviceusagedistributionusercounts - gets the number of users by device type #1386 yammer report deviceusageusercounts - gets the number of daily users by device type #1387 yammer report deviceusageuserdetail - gets details about Yammer device usage by user #1287 yammer report groupsactivitydetail - gets details about Yammer groups activity by group #1388 yammer report groupsactivitygroupcounts - gets the total number of groups that existed and how many included group conversation activity #1389 Changes \u00b6 added 'Scan Microsoft 365 Groups created with User's First or Last Name' sample #1342 extended tenant id get with retrieving the ID of the current tenant #1378 changed communicating no need to upgrade spfx project as a non-error #1407 moved the 'consent' command to the 'cli' namespace #1336 implemented '--reconsent' as a CLI command #1337 updated docs wrapping file names in quotes #1410 replaced | (pipe) with , (comma) in the docs #1420 added conditionally suggesting upgrading Office UI Fabric scss files #1468 added the 'Ensure site assets library is created' sample script #1447 added the 'List all tenant-wide extensions' sample script #1443 fixed guidance for upgrading teams piece in spfx project upgrade #1471 extended spo theme set command with support for theme validation #1466 fixed resolution of FN003005_CFG_localizedResource_pathLib in spfx project upgrade #1470 updated Theme Generator URL on spo theme set & spo theme apply commands #1465 v2.8.0 \u00b6 New commands \u00b6 Microsoft Graph: graph subscription add - creates a Microsoft Graph subscription #1100 Microsoft 365: tenant report activeuserdetail - gets details about Microsoft 365 active users #1300 tenant report servicesusercounts - gets the count of users by activity type and service #1299 SharePoint: spo sitedesign task remove - removes the specified site design scheduled for execution #783 SharePoint Framework: spfx doctor - verifies environment configuration for using the specific version of the SharePoint Framework #1353 Skype: skype report activitycounts - gets the trends on how many users organized and participated in conference sessions held in your organization through Skype for Business. The report also includes the number of peer-to-peer sessions #1302 skype report activityusercounts - gets the trends on how many unique users organized and participated in conference sessions held in your organization through Skype for Business. The report also includes the number of peer-to-peer sessions #1303 skype report activityuserdetail - gets details about Skype for Business activity by user #1301 Yammer: yammer report groupsactivitycounts - gets the number of Yammer messages posted, read, and liked in groups #1390 Changes \u00b6 added 'Add App Catalog to SharePoint site' sample #1413 added 'Delete all Microsoft 365 groups' sample #1140 added 'Delete custom SharePoint site scripts' sample #1139 added 'Hide SharePoint list from Site Contents' sample #1413 extended team channel name validation to allow 'tacv2'. #1401 v2.7.0 \u00b6 New commands \u00b6 Azure Active Directory: aad approleassignment list - lists app role assignments for the specified application registration #1270 aad o365group report activityfilecounts - get the total number of files and how many of them were active across all group sites associated with an Microsoft 365 Group #1285 Microsoft Graph: graph schemaextension set - updates a Microsoft Graph schema extension #15 Microsoft 365: tenant report activeusercounts - gets the count of daily active users in the reporting period by product #1298 SharePoint: spo orgassetslibrary remove - removes a library that was designated as a central location for organization assets across the tenant #1042 spo tenant recyclebinitem list - returns all modern and classic site collections in the tenant scoped recycle bin #1144 Microsoft Teams: teams tab add - add a tab to the specified channel #850 Yammer: yammer message add - posts a Yammer network message on behalf of the current user #1101 Changes \u00b6 added PowerShell command completion #261 added 'since' option to 'teams message list' command #1125 extended 'spo file add' with chunked uploads #1052 added support for prettifying json output #1324 fixed bug in retrieving modern pages from root site #1328 extended 'spo site list' command with support for returning deleted sites #1335 exposed completion commands as CLI commands #1329 fixed bug in retrieving files with special characters #1358 added alias to 'accesstoken get' #1369 v2.6.0 \u00b6 New commands \u00b6 Microsoft Graph: graph schemaextension remove - removes specified Microsoft Graph schema extension #16 Power Apps: pa connector export - exports the specified power automate or power apps custom connector #1084 SharePoint: spo report activityfilecounts - gets the number of unique, licensed users who interacted with files stored on SharePoint sites #1243 spo report activitypages - gets the number of unique pages visited by users #1245 spo report activityuserdetail - gets details about SharePoint activity by user #1242 spo report activityusercounts - gets the trend in the number of active users #1244 spo report siteusagedetail - gets details about SharePoint site usage #1246 Yammer: yammer group list - returns the list of groups in a Yammer network or the groups for a specific user #1185 Changes \u00b6 added support for file edit suggestions #1190 added support for JMESPath #1315 made non-immersive mode completion standalone #1316 added GitHub Actions documentation #1094 added the 'Delete all non group connected SharePoint sites' example #1141 v2.5.0 \u00b6 New commands \u00b6 OneDrive: onedrive report activityuserdetail - gets details about OneDrive activity by user #1255 onedrive report usageaccountdetail - gets details about OneDrive usage by account #1251 SharePoint: spo report siteusagefilecounts - get the total number of files across all sites and the number of active files #1247 spo report siteusagepages - gets the number of pages viewed across all sites #1250 spo report siteusagesitecounts - gets the total number of files across all sites and the number of active files #1248 spo report siteusagestorage - gets the trend of storage allocated and consumed during the reporting period #1249 Changes \u00b6 fixed error using command spo listitem add when text field value only contains numbers #1297 added support for upgrading projects built using SharePoint Framework v1.9.1 #1310 v2.4.0 \u00b6 New commands \u00b6 OneDrive: onedrive report activityfilecounts - gets the number of unique, licensed users that performed file interactions against any OneDrive account #1257 onedrive report activityusercounts - gets the trend in the number of active OneDrive users #1256 onedrive report usageaccountcounts - gets the trend in the number of active OneDrive for Business sites #1252 onedrive report usagefilecounts - gets the total number of files across all sites and how many are active files #1253 onedrive report usagestorage - gets the trend on the amount of storage you are using in OneDrive for Business #1254 Outlook: outlook report mailappusageversionsusercounts - gets the count of unique users by Outlook desktop version #1215 outlook report mailboxusagemailboxcount - gets the total number of user mailboxes in your organization and how many are active each day of the reporting period #1217 outlook report mailboxusagequotastatusmailboxcounts - gets the count of user mailboxes in each quota category #1218 outlook report mailboxusagestorage - gets the amount of mailbox storage used in your organization #1219 outlook report mailappusageusercounts - gets the count of unique users that connected to Exchange Online using any email app #1214 outlook report mailactivityusercounts - enables you to understand trends on the number of unique users who are performing email activities like send, read, and receive #1211 outlook report mailactivitycounts - enables you to understand the trends of email activity (like how many were sent, read, and received) in your organization #1210 outlook report mailboxusagedetail - gets details about mailbox usage #1216 outlook report mailappusageuserdetail - gets details about which activities users performed on the various email apps #1212 outlook report mailactivityuserdetail - gets details about email activity users have performed #1209 outlook report mailappusageappsusercounts - gets the count of unique users per email app #1213 SharePoint: spo feature disable - disables feature for the specified site or web #676 spo site rename - renames the URL and title of a site collection #1197 Yammer: yammer message remove - removes a Yammer message #1106 Power Apps: pa connector list - lists Power Apps and Power Automate (Flow) connectors #1237 Changes \u00b6 added support for setting CSOM properties on web #1202 Rush stack compiler made optional for 1.9.1 upgrade #1222 v2.3.0 \u00b6 New commands \u00b6 SharePoint Framework: spfx project externalize - externalizes SharePoint Framework project dependencies #571 Yammer: yammer message get - returns a Yammer message #1105 yammer message list - returns all accessible messages from the user's Yammer network #1104 yammer user list - returns users from the current network #1113 Changes \u00b6 added the 'Authenticate with and call the Microsoft Graph' example #1186 fixed the 'spo hubsite list' command #1180 fixed the 'spo file add' command #1179 added case-sensitive option parsing #1182 added 'Lists active SharePoint site collection application catalogs' sample #1194 extended the 'yammer message list' command #1184 excluded unsupported modules in 'spfx project externalize' #1191 v2.2.0 \u00b6 New commands \u00b6 Azure Active Directory: aad o365group report activitydetail - get details about Microsoft 365 Groups activity by group #1130 aad o365group report activitycounts - get the number of group activities across group workloads #1159 aad o365group report activitygroupcounts - get the daily total number of groups and how many of them were active based on email conversations, Yammer posts, and SharePoint file activities #1160 Flow: flow remove - removes the specified Microsoft Flow #1063 PowerApps: pa solution reference add - adds a project reference to the solution in the current directory #954 SharePoint Online: spo apppage set - updates the single-part app page #875 spo feature enable - enables feature for the specified site or web #675 Microsoft Teams: teams message reply list - retrieves replies to a message from a channel in a Microsoft Teams team #1109 Yammer: yammer network list - returns a list of networks to which the current user has access #1115 yammer user get - retrieves the current user or searches for a user by ID or e-mail #1107 Changes \u00b6 updated pa commands to reflect official pac cli v1.0.6 #1129 added the 'Govern orphaned Microsoft Teams' example #1147 added the 'remove custom themes' example #1137 corrected 'aad o365group user list' alias #1149 updated 'spo storageentity set' docs about handling trailing slash #1153 updated vorpal to 1.11.7 #1150 added versions to deps for building docs in CI #1157 added the 'consent' command #1162 added the 'Delete custom SharePoint site designs' example #1138 v2.1.0 \u00b6 New commands \u00b6 SharePoint Online: spo contenttypehub get - returns the URL of the SharePoint Content Type Hub of the Tenant #905 Microsoft Teams: teams channel remove - removes the specified channel in the Microsoft Teams team #814 PowerApps: pa pcf init - Creates new PowerApps component framework project #952 pa solution init - initializes a directory with a new CDS solution project #953 Global: util accesstoken get - gets access token for the specified resource #1072 Changes \u00b6 updated vorpal to 1.11.6 #1092 removed spo-specific action implementation #1092 implemented passing AAD error during device code auth #1095 added handling forbidden errors #1096 fixed handling Flow nextLink #1114 added support for multi-shell #887 renamed the outlook sendmail command #1103 extended teams report commands with support for specifying output file #1075 added support for adding web parts to empty pages #740 v2.0.0 \u00b6 New commands \u00b6 SharePoint Online: spo apppage add - creates a single-part app page #874 spo homesite remove - removes the current Home Site #1002 spo orgassetslibrary list - lists all libraries that are assigned as org asset library #1041 spo get - gets the context URL for the root SharePoint site collection and SharePoint tenant admin site #1071 spo set - sets the URL of the root SharePoint site collection for use in SPO commands #1070 Microsoft Teams: teams report deviceusagedistributionusercounts - gets the number of Microsoft Teams unique users by device type #1012 teams report deviceusageusercounts - gets the number of Microsoft Teams daily unique users by device type #1011 teams report useractivityusercounts - gets the number of Microsoft Teams users by activity type #1027 teams report useractivitycounts - gets the number of Microsoft Teams activities by activity type #1028 teams report useractivityuserdetail - gets details about Microsoft Teams user activity by user #1029 Microsoft Flow: flow disable - disables Microsoft Flow #1055 flow enable - enables Microsoft Flow #1054 Microsoft 365 groups: aad o365group teamify - creates a new Microsoft Teams team under existing Microsoft 365 group #872 Microsoft Graph: graph schemaextension get - gets the properties of the specified schema extension definition #14 Changes \u00b6 simplified login #889 API name removed from the command name #890 extended 'spo web set' with searchScope option #947 fixed 'Access token is empty' error for 'teams report deviceusageuserdetail' #1025 updated documentation on connecting the CLI when protected cert #1023 extended 'spfx project upgrade' with outputFile option #984 login extended with support for authentication using Personal Information Exchange (.pfx) file #1030 v1.23.0 \u00b6 added support for upgrading projects built using SharePoint Framework v1.8.2 #1044 v1.22.0 \u00b6 New commands \u00b6 SharePoint Online: spo homesite get - gets information about the Home Site #1000 spo homesite set - sets the specified site as the Home Site #1001 spo listitem isrecord - checks if the specified list item is a record #771 Microsoft Graph: graph o365group user set - updates role of the specified user in the specified Microsoft 365 Group or Microsoft Teams team #982 graph planner task list - lists Planner tasks for the currently logged in user #990 graph report teamsdeviceusageuserdetail - gets information about Microsoft Teams device usage by user #960 graph teams funsettings set - updates fun settings of a Microsoft Teams team #817 Microsoft 365: tenant id get - gets Microsoft 365 tenant ID for the specified domain #998 Changes \u00b6 extended 'spo site add' with support for specifying owners #823 extended 'graph o365group list' with support for orphaned groups #959 added support for superseding SPFx project upgrade findings #970 added support for package managers #617 extended 'spo page set' with support for promoting as template #978 extended 'spo page add' with support for promoting as template #977 v1.21.0 \u00b6 New commands \u00b6 SharePoint Online: spo orgnewssite list - lists all organizational news sites #975 spo orgnewssite remove - removes a site from the list of organizational news sites #976 spo orgnewssite set - marks site as an organizational news site #974 Microsoft Graph: graph teams set - updates settings of a Microsoft Teams team #815 v1.20.0 \u00b6 New commands \u00b6 SharePoint Online: spo contenttype remove - deletes site content type #904 Microsoft Graph: graph o365group user list - lists users for the specified Microsoft 365 group or Microsoft Teams team #802 graph teams clone - creates a clone of a Microsoft Teams team #924 Changes \u00b6 extended 'spo theme apply' with support for applying standard themes #920 improved detecting SPFx React projects solving #968 v1.19.0 \u00b6 Changes \u00b6 added support for upgrading projects built using SharePoint Framework v1.8.1 #934 v1.18.0 \u00b6 New commands \u00b6 SharePoint Online: spo site commsite enable - enables communication site features on the specified site #937 Microsoft Graph: graph o365group renew - renews Microsoft 365 group's expiration #870 graph o365group user remove - removes the specified user from specified Microsoft 365 Group or Microsoft Teams team #846 Changes \u00b6 centralized executing HTTP requests solving #888 fixed bug in loading commands #942 fixed saving files in 'spo file get' #931 extended 'spo web set' to control footer visibility #946 v1.17.0 \u00b6 New commands \u00b6 SharePoint Online: spo contenttype field remove - removes a column from a site- or list content type #673 spo mail send - sends an e-mail from SharePoint #753 Microsoft Graph: graph teams archive - archives specified Microsoft Teams team #899 graph teams channel get - gets information about the specific Microsoft Teams team channel #808 graph teams messagingsettings set - updates messaging settings of a Microsoft Teams team #820 graph teams remove - removes the specified Microsoft Teams team #813 graph teams unarchive - restores an archived Microsoft Teams team #900 Changes \u00b6 updated documentation on using custom AAD app #895 added validation for Teams channel IDs #909 fixed the 'spo page clientsidewebpart add' command #913 fixed typo in the 'spo tenant settings set' command options #923 updated commands to use MS Graph v1.0 endpoint #865 added support for upgrading projects built using SharePoint Framework v1.8.0 #932 v1.16.0 \u00b6 New commands \u00b6 SharePoint Online: spo listitem record declare - declares the specified list item as a record #769 Microsoft Graph: graph o365group user add - adds user to specified Microsoft 365 Group or Microsoft Teams team #847 graph schemaextension add - creates a Microsoft Graph schema extension #13 graph teams add - adds a new Microsoft Teams team #615 graph teams app uninstall - uninstalls an app from a Microsoft Team team #843 graph teams channel set - updates properties of the specified channel in the given Microsoft Teams team #816 graph teams guestsettings set - updates guest settings of a Microsoft Teams team #818 graph teams tab list - lists tabs in the specified Microsoft Teams channel #849 Changes \u00b6 extended 'graph teams app list' #859 added 'spo site groupify' alias #873 fixed the 'spo page section add' command #908 fixed the 'spo page header set' command #911 v1.15.0 \u00b6 New commands \u00b6 SharePoint Online: spo field remove - removes the specified list- or site column #738 spo listitem record undeclare - undeclares list item as a record #770 spo web reindex - requests reindexing the specified subsite #822 Microsoft Graph: graph teams app install - installs an app from the catalog to a Microsoft Teams team #842 graph teams funsettings list - lists fun settings for the specified Microsoft Teams team #809 graph teams guestsettings list - lists guests settings for a Microsoft Teams team #810 graph teams membersettings list - lists member settings for a Microsoft Teams team #811 graph teams membersettings set - updates member settings of a Microsoft Teams team #819 graph teams messagingsettings list - lists messaging settings for a Microsoft Teams team #812 Changes \u00b6 fixed ID of the FN002009 SPFx project upgrade rule #854 fixed issue with updating the header of non-en-US pages #851 added support for upgrading projects built using SharePoint Framework v1.7.1 #848 v1.14.0 \u00b6 New commands \u00b6 SharePoint Online: spo list label get - gets label set on the specified list #773 spo list label set - sets classification label on the specified list #772 spo list view field add - adds the specified field to list view #735 spo list view field remove - removes the specified field from list view #736 spo site inplacerecordsmanagement set - activates or deactivates in-place records management for a site collection #774 spo sitedesign run list - lists information about site designs applied to the specified site #779 spo sitedesign run status get - gets information about the site scripts executed for the specified site design #780 spo sitedesign task get - gets information about the specified site design scheduled for execution #782 spo sitedesign task list - lists site designs scheduled for execution on the specified site #781 Microsoft Graph: graph teams app list - lists apps from the Microsoft Teams app catalog #826 graph teams app publish - publishes Teams app to the organization's app catalog #824 graph teams app remove - removes a Teams app from the organization's app catalog #825 graph teams app update - updates Teams app in the organization's app catalog #827 graph teams channel list - lists channels in the specified Microsoft Teams team #586 graph teams user remove - removes the specified user from the specified Microsoft Teams team #757 graph teams user set - updates role of the specified user in the given Microsoft Teams team #760 Changes \u00b6 updated 'spo list webhook list' parameters #747 updated 'azmgmt flow list' to support paged content #776 added fieldTitle, listId and listUrl options to 'spo file get' #754 extended 'spo sitedesign apply' with large site designs #714 added support for dynamic data #751 extended 'spo web set' with modern UI options #798 v1.13.0 \u00b6 New commands \u00b6 SharePoint Online: spo feature list - lists Features activated in the specified site or site collection #677 spo file move - moves a file to another location #671 spo list view list - lists views configured on the specified list #732 spo list sitescript get - extracts a site script from a SharePoint list #713 spo list view get - gets information about specific list view #730 spo list view remove - deletes the specified view from the list #731 Microsoft Graph: graph teams message list - lists all messages from a channel in a Microsoft Teams team #588 graph teams user add - adds user to the specified Microsoft Teams team #690 graph teams user list - lists users for the specified Microsoft Teams team #689 Changes \u00b6 added support for specifying language when creating site #728 fixed bug in setting client-side web part order #712 added support for authentication using certificate #389 renamed 'graph teams channel message get' to 'graph teams message get' extended 'spo folder copy' with support for schema mismatch #706 extended 'spo file copy' with support for schema mismatch #705 updated showing scope in 'spo customaction list' #742 extended 'spo hubsite list' with info about associated sites #709 added support for SPO-D URLs solving #759 v1.12.0 \u00b6 New commands \u00b6 SharePoint Online: spo folder move - moves a folder to another location #672 spo page text add - adds text to a modern page #365 Changes \u00b6 added support for site collection app catalog in the spo app install, -retract, -uninstall and -upgrade commands #405 fixed bug with caching tokens for SPO commands #719 v1.11.0 \u00b6 New commands \u00b6 SharePoint Online: spo list webhook add - adds a new webhook to the specified list #652 spo page header set - sets modern page header #697 Changes \u00b6 added support for setting page title #693 added support for adding child navigation nodes #695 added support for specifying web part data and fixed web parts lookup #701 , #703 removed treating values of unknown options as numbers #702 added support for site collection app catalog in the spo app add, -deploy, -get, -list and -remove commands #405 (partially) added support for upgrading projects built using SharePoint Framework v1.7.0 #716 v1.10.0 \u00b6 New commands \u00b6 SharePoint Online: spo field set - updates existing list or site column #661 spo file add - uploads file to the specified folder #283 spo list contenttype add - adds content type to list #594 spo list contenttype list - lists content types configured on the list #595 spo list contenttype remove - removes content type from list #668 spo list view set - updates existing list view #662 spo list webhook remove - removes the specified webhook from the list #650 spo list webhook set - updates the specified webhook #651 spo search - executes a search query #316 spo serviceprincipal grant add - grants the service principal permission to the specified API #590 Microsoft Graph: graph siteclassification set - updates site classification configuration #304 graph teams channel message get - retrieves a message from a channel in a Microsoft Teams team #589 Changes \u00b6 added support for adding child terms #686 v1.9.0 \u00b6 Changes \u00b6 added support for upgrading projects built using SharePoint Framework v1.6.0 #663 v1.8.0 \u00b6 New commands \u00b6 SharePoint Online: spo list webhook get - gets information about the specific webhook #590 spo tenant settings set - sets tenant global settings #549 spo term add - adds taxonomy term #605 spo term get - gets information about the specified taxonomy term #604 spo term list - lists taxonomy terms from the given term set #603 spo term group add - adds taxonomy term group #598 spo term set add - adds taxonomy term set #602 spo term set get - gets information about the specified taxonomy term set #601 spo term set list - lists taxonomy term sets from the given term group #600 Microsoft Graph: graph siteclassification disable - disables site classification #302 graph siteclassification enable - enables site classification #301 graph teams channel add - adds a channel to the specified Microsoft Teams team #587 Changes \u00b6 improved SPFx project upgrade text report #591 updated the 'spo tenant settings list' command #623 changed commands to be lazy-loaded #624 added error codes to the 'spfx project upgrade' command #630 changed vorpal dependency to https #637 added retrieving GuestUsageGuidelinesUrl #640 v1.7.0 \u00b6 New commands \u00b6 SharePoint Online: spo list webhook list - lists all webhooks for the specified list #579 spo listitem list - gets a list of items from the specified list #268 spo page column get - get information about a specific column of a modern page #412 spo page remove - removes a modern page #363 spo page section add - adds section to modern page #364 spo site classic remove - removes the specified site #125 spo tenant settings list - lists the global tenant settings #548 spo term group get - gets information about the specified taxonomy term group #597 spo term group list - lists taxonomy term groups #596 Microsoft Graph: graph groupsetting remove - removes the particular group setting #452 graph groupsetting set - removes the particular group setting #451 Azure Management Service: azmgmt flow export - exports the specified Microsoft Flow as a file #383 azmgmt flow run get - gets information about a specific run of the specified Microsoft Flow #400 azmgmt flow run list - lists runs of the specified Microsoft Flow #399 Changes \u00b6 added support for upgrading projects built using SharePoint Framework v1.5.1 #569 added support for setting debug and verbose mode using an environment variable #54 extended the 'spo cdn set' command, solving. Added support for managing both CDNs. Added support for enabling CDNs without provisioning default origins #230 fixed bug in reporting SPFx project upgrade findings solving #582 fixed upgrade SPFx 1.6.0 FN012012 always returns a finding #580 combined npm commands in SPFx project upgrade summary solving #508 renamed 'connect' commands to 'login' #574 updated docs on escaping objectId in aad oauth2grant set and remove #606 added 'npm dedupe' SPFx project upgrade rule #612 v1.6.0 \u00b6 New commands \u00b6 SharePoint Online: spo contenttype field set - adds or updates a site column reference in a site content type #520 spo page section get - gets information about the specified modern page section #410 spo page section list - lists sections in the specific modern page #409 Microsoft Graph: graph teams list - lists Microsoft Teams in the current tenant #558 Changes \u00b6 added support for upgrading projects built using SharePoint Framework v1.1.3 #485 added support for upgrading projects built using SharePoint Framework v1.1.1 #487 added support for upgrading projects built using SharePoint Framework v1.1.0 #488 added support for upgrading projects built using SharePoint Framework v1.0.2 #537 added support for upgrading projects built using SharePoint Framework v1.0.1 #536 added support for upgrading projects built using SharePoint Framework v1.0.0 #535 fixed created content type have different ID than specified #550 v1.5.0 \u00b6 New commands \u00b6 SharePoint Online: spo contenttype add - adds a new list or site content type #519 spo contenttype get - retrieves information about the specified list or site content type #532 spo field add - adds a new list or site column using the CAML field definition #518 spo field get - retrieves information about the specified list or site column #528 spo navigation node add - adds a navigation node to the specified site navigation #521 spo navigation node list - lists nodes from the specified site navigation #522 spo navigation node remove - removes the specified navigation node #523 spo page clientsidewebpart add - adds a client-side web part to a modern page #366 spo page column list - lists columns in the specific section of a modern page #411 spo web set - updates subsite properties #191 Changes \u00b6 fixed exit code on error in the 'spo site add' command #511 Added support for retrieving apps by their name #516 v1.4.0 \u00b6 New commands \u00b6 SharePoint Online: spo file checkin - checks in specified file #284 spo file checkout - checks out specified file #285 spo folder rename - renames a folder #429 spo listitem get - gets a list item from the specified list #269 spo listitem set - updates a list item in the specified list #271 SharePoint Framework: spfx project upgrade - upgrades SharePoint Framework project to the specified version #471 Changes \u00b6 refactored to return non-zero error code on error #468 fixed adding item to list referenced by id #473 added support for upgrading projects built using SharePoint Framework v1.4.0 #478 added support for upgrading projects built using SharePoint Framework v1.3.4 #479 added support for upgrading projects built using SharePoint Framework v1.3.2 #481 added support for upgrading projects built using SharePoint Framework v1.3.1 #482 added support for upgrading projects built using SharePoint Framework v1.3.0 #483 added support for upgrading projects built using SharePoint Framework v1.2.0 #484 clarified usage of the spo file get command #497 added support for upgrading projects built using SharePoint Framework v1.5.0 #505 v1.3.0 \u00b6 New commands \u00b6 SharePoint Online: spo file copy - copies a file to another location #286 spo folder add - creates a folder within a parent folder #425 spo folder copy - copies a folder to another location #424 spo folder get - gets information about the specified folder #427 spo folder list - returns all folders under the specified parent folder #428 spo folder remove - deletes the specified folder #426 spo hidedefaultthemes get - gets the current value of the HideDefaultThemes setting #341 spo hidedefaultthemes set - sets the value of the HideDefaultThemes setting #342 spo site o365group set - connects site collection to an Microsoft 365 Group #431 spo theme apply - applies theme to the specified site #343 Microsoft Graph: graph groupsetting add - creates a group setting #443 graph groupsetting get - gets information about the particular group setting #450 graph groupsetting list - lists Azure AD group settings #449 graph groupsettingtemplate get - gets information about the specified Azure AD group settings template #442 graph groupsettingtemplate list - lists Azure AD group settings templates #441 graph user sendmail - sends e-mail on behalf of the current user #328 Changes \u00b6 added support for re-consenting the AAD app #421 added update notification #200 extended the 'spo app deploy' command to support specifying app using its name #404 extended the 'spo app add' command to return the information about the added app #463 v1.2.0 \u00b6 New commands \u00b6 SharePoint Online: spo file remove - removes the specified file #287 spo hubsite data get - gets hub site data for the specified site #394 spo hubsite theme sync - applies any theme updates from the parent hub site #401 spo listitem add - creates a list item in the specified list #270 spo listitem remove - removes the specified list item #272 spo page control get - gets information about the specific control on a modern page #414 spo page control list - lists controls on the specific modern page #413 spo page get - gets information about the specific modern page #360 spo propertybag set - sets the value of the specified property in the property bag #393 spo web clientsidewebpart list - lists available client-side web parts #367 Microsoft Graph: graph user get - gets information about the specified user #326 graph user list - lists users matching specified criteria #327 Changes \u00b6 added support for authenticating using credentials solving #388 v1.1.0 \u00b6 New commands \u00b6 SharePoint Online: spo file get - gets information about the specified file #282 spo page add - creates modern page #361 spo page list - lists all modern pages in the given site #359 spo page set - updates modern page properties #362 spo propertybag remove - removes specified property from the property bag #291 spo sitedesign apply - applies a site design to an existing site collection #339 spo theme get - gets custom theme information #349 spo theme list - retrieves the list of custom themes #332 spo theme remove - removes existing theme #331 spo theme set - add or update a theme #330 , #340 spo web get - retrieve information about the specified site #188 Microsoft Graph: graph o365group remove - removes an Microsoft 365 Group #309 graph o365group restore - restores a deleted Microsoft 365 Group #346 graph siteclassification get - gets site classification configuration #303 Azure Management Service: azmgmt login - log in to the Azure Management Service #378 azmgmt logout - log out from the Azure Management Service #378 azmgmt status - shows Azure Management Service login status #378 azmgmt flow environment get - gets information about the specified Microsoft Flow environment #380 azmgmt flow environment list - lists Microsoft Flow environments in the current tenant #379 azmgmt flow get - gets information about the specified Microsoft Flow #382 azmgmt flow list - lists Microsoft Flows in the given environment #381 Updated commands \u00b6 Microsoft Graph: graph o365group list - added support for listing deleted Microsoft 365 Groups #347 Changes \u00b6 fixed bug in retrieving Microsoft 365 groups in immersive mode solving #351 v1.0.0 \u00b6 Breaking changes \u00b6 switched to a custom Azure AD application for communicating with Microsoft 365. After installing this version you have to reconnect to Microsoft 365 New commands \u00b6 SharePoint Online: spo file list - lists all available files in the specified folder and site #281 spo list add - creates list in the specified site #204 spo list remove - removes the specified list #206 spo list set - updates the settings of the specified list #205 spo customaction clear - deletes all custom actions in the collection #231 spo propertybag get - gets the value of the specified property from the property bag #289 spo propertybag list - gets property bag values #288 spo site set - updates properties of the specified site #121 spo site classic add - creates new classic site #123 spo site classic set - change classic site settings #124 spo sitedesign set - updates a site design with new values #251 spo tenant appcatalogurl get - gets the URL of the tenant app catalog #315 spo web add - create new subsite #189 spo web list - lists subsites of the specified site #187 spo web remove - delete specified subsite #192 Microsoft Graph: graph - log in to the Microsoft Graph #10 graph - log out from the Microsoft Graph #10 graph - shows Microsoft Graph login status #10 graph o365group add - creates Microsoft 365 Group #308 graph o365group get - gets information about the specified Microsoft 365 Group #306 graph o365group list - lists Microsoft 365 Groups in the current tenant #305 graph o365group set - updates Microsoft 365 Group properties #307 Changes \u00b6 fixed bug in logging dates #317 fixed typo in the example of the spo cdn origin add command #338 v0.5.0 \u00b6 Breaking changes \u00b6 changed the spo site get command to return SPSite properties #293 New commands \u00b6 SharePoint Online: spo sitescript add - adds site script for use with site designs #65 spo sitescript list - lists site script available for use with site designs #66 spo sitescript get - gets information about the specified site script #67 spo sitescript remove - removes the specified site script #68 spo sitescript set - updates existing site script #216 spo sitedesign add - adds site design for creating modern sites #69 spo sitedesign get - gets information about the specified site design #86 spo sitedesign list - lists available site designs for creating modern sites #85 spo sitedesign remove - removes the specified site design #87 spo sitedesign rights grant - grants access to a site design for one or more principals #88 spo sitedesign rights revoke - revokes access from a site design for one or more principals #89 spo sitedesign rights list - gets a list of principals that have access to a site design #90 spo list get - gets information about the specific list #199 spo customaction remove - removes the specified custom action #21 spo site classic list - lists sites of the given type #122 spo list list - lists all available list in the specified site #198 spo hubsite list - lists hub sites in the current tenant #91 spo hubsite get - gets information about the specified hub site #92 spo hubsite register - registers the specified site collection as a hub site #94 spo hubsite unregister - unregisters the specified site collection as a hub site #95 spo hubsite set - updates properties of the specified hub site #96 spo hubsite connect - connects the specified site collection to the given hub site #97 spo hubsite disconnect - disconnects the specifies site collection from its hub site #98 spo hubsite rights grant - grants permissions to join the hub site for one or more principals #99 spo hubsite rights revoke - revokes rights to join sites to the specified hub site for one or more principals #100 spo customaction set - updates a user custom action for site or site collection #212 Changes \u00b6 fixed issue with prompts in non-interactive mode #142 added information about the current user to status commands #202 fixed issue with completing input that doesn't match commands #222 fixed issue with escaping numeric input #226 changed the aad oauth2grant list , spo app list , spo customaction list , spo site list commands to list all properties for output type JSON #232 , #233 , #234 , #235 fixed issue with generating clink completion file #252 added user guide #236 , #237 , #238 , #239 v0.4.0 \u00b6 Breaking changes \u00b6 renamed the spo cdn origin set command to spo cdn origin add #184 New commands \u00b6 SharePoint Online: spo customaction list - lists user custom actions for site or site collection #19 spo site get - gets information about the specific site collection #114 spo site list - lists modern sites of the given type #115 spo site add - creates new modern site #116 spo app remove - removes the specified app from the tenant app catalog #9 spo site appcatalog add - creates a site collection app catalog in the specified site #63 spo site appcatalog remove - removes site collection scoped app catalog from site #64 spo serviceprincipal permissionrequest list - lists pending permission requests #152 spo serviceprincipal permissionrequest approve - approves the specified permission request #153 spo serviceprincipal permissionrequest deny - denies the specified permission request #154 spo serviceprincipal grant list - lists permissions granted to the service principal #155 spo serviceprincipal grant revoke - revokes the specified set of permissions granted to the service principal #155 spo serviceprincipal set - enable or disable the service principal #157 spo customaction add - adds a user custom action for site or site collection #18 spo externaluser list - lists external users in the tenant #27 Azure Active Directory Graph: aad login - log in to the Azure Active Directory Graph #160 aad logout - log out from Azure Active Directory Graph #161 aad status - shows Azure Active Directory Graph login status #162 aad sp get - gets information about the specific service principal #158 aad oauth2grant list - lists OAuth2 permission grants for the specified service principal #159 aad oauth2grant add - grant the specified service principal OAuth2 permissions to the specified resource #164 aad oauth2grant set - update OAuth2 permissions for the service principal #163 aad oauth2grant remove - remove specified service principal OAuth2 permissions #165 Changes \u00b6 added support for persisting connection #46 fixed authentication bug in spo app install , spo app uninstall and spo app upgrade commands when connected to the tenant admin site #118 fixed authentication bug in the spo customaction get command when connected to the tenant admin site #113 fixed bug in rendering help for commands when using the --help option #104 added detailed output to the spo customaction get command #93 improved collecting telemetry #130 , #131 , #132 , #133 added support for the skipFeatureDeployment flag to the spo app deploy command #134 wrapped executing commands in try..catch #109 added serializing objects in log #108 added support for autocomplete in Zsh, Bash and Fish and Clink (cmder) on Windows #141 , #190 v0.3.0 \u00b6 New commands \u00b6 SharePoint Online: spo customaction get - gets information about the specific user custom action #20 Changes \u00b6 changed command output to silent #47 added user-agent string to all requests #52 refactored spo cdn get and spo storageentity set to use the getRequestDigest helper #78 and #80 added common handler for rejected OData promises #59 added Google Analytics code to documentation #84 added support for formatting command output as JSON #48 v0.2.0 \u00b6 New commands \u00b6 SharePoint Online: spo app add - add an app to the specified SharePoint Online app catalog #3 spo app deploy - deploy the specified app in the tenant app catalog #7 spo app get - get information about the specific app from the tenant app catalog #2 spo app install - install an app from the tenant app catalog in the site #4 spo app list - list apps from the tenant app catalog #1 spo app retract - retract the specified app from the tenant app catalog #8 spo app uninstall - uninstall an app from the site #5 spo app upgrade - upgrade app in the specified site #6 v0.1.1 \u00b6 Changes \u00b6 Fixed bug in resolving command paths on Windows v0.1.0 \u00b6 Initial release. New commands \u00b6 SharePoint Online: spo cdn get - get Microsoft 365 CDN status spo cdn origin list - list Microsoft 365 CDN origins spo cdn origin remove - remove Microsoft 365 CDN origin spo cdn origin add - add Microsoft 365 CDN origin spo cdn policy list - list Microsoft 365 CDN policies spo cdn policy set - set Microsoft 365 CDN policy spo cdn set - enable/disable Microsoft 365 CDN spo login - log in to a SharePoint Online site spo logout - log out from SharePoint spo status - show SharePoint Online login status spo storageentity get - get value of a tenant property spo storageentity list - list all tenant properties spo storageentity remove - remove a tenant property spo storageentity set - set a tenant property","title":"Release notes"},{"location":"about/release-notes/#release-notes","text":"","title":"Release notes"},{"location":"about/release-notes/#v600","text":"","title":"v6.0.0"},{"location":"about/release-notes/#new-commands","text":"Azure Active Directory: aad app list - retrieves a list of Azure AD app registrations #3742 aad user guest add - invites an external user to the organization #3298 Outlook: outlook message get - retrieves specified message #3868 Power Platform: pp card remove - removes the specified Microsoft Power Platform card in the specified Power Platform environment #3781","title":"New commands"},{"location":"about/release-notes/#changes","text":"removed deprecated options for 'spo listitem list' command #3365 removed 'aad app delete' and 'aad app role delete' alias #3134 removed executeWithLimitedPermission option from spo list list #3408 removed references and alias for deprecated planner task details get #3435 removed references and alias for deprecated planner plan details get #3435 removed deprecated options for 'spo listitem list' command #3365 removed deprecated planName options #3363 removed default type of spo site list #3526 removed deprecated spo site classic verb commands #3458 aligned commands' options with naming convention #2696 removed the setting autoOpenBrowserOnLogin to follow new settings autoOpenLinksInBrowser #3163 removed deprecated options for 'teams team remove', 'teams team archive', and 'teams team unarchive' command #3502 updated classic references to spo site list #3522 removed unnecessary aliases #3644 added upgrade guidance #3481 added confirm option to 'spo roleinheritance break and reset' commands #3658 removed secret option from 'aad app add' command #3136 removed name option from 'spo field set' command #3419 renamed 'spo hubsite disconnect' to 'spo site hubsite disconnect' #3878 renamed 'spo hubsite connect' to 'spo site hubsite connect' #3877 removed deprecated options #3840 added root folder support for 'spo folder roleinheritance break' and 'spo folder roleinheritance reset' #3823 expanded the user guide with info about escaping in PowerShell #3638 updated 'spo roledefinition list' output with readable values #3824 renamed 'spo hubsite theme sync' to 'spo site hubsite theme sync' #3881 extended 'spo list webhook set' command with clientState option #3861 extended 'spo folder list' command with recursive option #2767 added role requirements for spo hubsite register and unregister docs #3965","title":"Changes"},{"location":"about/release-notes/#v590","text":"","title":"v5.9.0"},{"location":"about/release-notes/#new-commands_1","text":"Power Platform: pp card get - gets a specific Microsoft Power Platform card in the specified Power Platform environment #3770 pp card list - lists Microsoft Power Platform cards in the specified Power Platform environment #3767 pp dataverse table list - lists dataverse tables in a given environment #3653 pp gateway get - gets information about the specified gateway #3653 pp solution get - gets a specific solution in a given environment #3722 pp solution list - lists solutions in a given environment #3711 pp tenant settings list - lists the global Power Platform tenant settings #3657 pp environment get - gets information about the specified Power Platform environment. #3710 SharePoint: spo eventreceiver remove - removes event receivers for the specified web, site, or list. #3307 spo file roleassignment add - adds role assignment to a file #3702 spo file roleassignment remove - removes a role assignment from a file #3693 spo file roleinheritance break - breaks inheritance of file #3593 spo file roleinheritance reset - restores the role inheritance of a file #3595 spo folder roleassignment remove - removes a role assignment from the specified folder #3701 spo folder roleinheritance break - breaks the role inheritance of a folder #3598 spo folder roleinheritance reset - restores the role inheritance of a folder #3603 spo listitem roleassignment add - adds a role assignment to a listitem #3539 spo web roleinheritance break - break role inheritance of subsite #3547 To Do: todo list get - returns a specific Microsoft To Do task list #3847 todo task get - returns a specific task from a Microsoft To Do task list #3846","title":"New commands"},{"location":"about/release-notes/#changes_1","text":"removed barrels #3736 fixed examples for web roleassignment 'verb' that mentioned list roleassignment 'verb' instead #3706 extended 'teams channel list' command with support for filtering shared teams channels #3690 extended 'spo folder get' command with support to get folder by id #3605 fixed docs not ending on an empty line #3700 fixed incorrect docs titles #3699 extended spfx doctor command with support for version 1.16.0-beta.1 #3633 added additional vscode settings #3084 added tracking shell to telemetry #3769 updated example in 'spo folder roleinheritance reset' docs #3751 fixed 'spo hubsite' docs typos #3762 updated health status monitoring sample #3713 fixed 'spo folder roleinheritance reset' and 'spo file roleinheritance reset' commands #3750 fixed issue with upgrading SPFx projects to v1.14 #3665 extended spfx doctor to allow specifying version of SPFx to check compatibility for #3780 replaced recycleFile() in spo file copy and spo file move #3370 updated docs with our community Discord server #3707 added eslint rule to validate method naming #3749 fixed formatting in pp documentation #3815 extended 'spo group list' with associated groups output #3546 extended 'teams channel add' command with support for adding shared channels #3691 fixed pagination for 'pp dataverse table list' command #3803 extended 'spo list contenttype' with option 'listUrl' #3810 updated the Microsoft Graph sample to include a 'm365 request' section #3712 extended 'spo list webhook' with option 'listUrl' #3812 extended 'todo task set' with extra options #3835 fixed 'outlook mail send' command for wrong validation message #3833 fixed documentation for eventreceiver get and eventreceiver remove #3852 removed odata output from 'planner bucket get' #3825 updated GitHub actions #3799 enabled @typescript-eslint/explicit-function-return-type #3777 added tags to samples #3640 fixed options overriding aad app add with manifest #3555 added 'listUrl' to spo roleinheritance break and -reset #3809 extended 'outlook mail send' command with attachments support #3832 added cookie consent to MKDocs #3832 extended 'todo task add' with extra options #3832 extended spo contenttype with list options 'listUrl' and 'listId' #3806 extended 'status' command to log extra info #3818 added validating output format #2988 included response output: Planner bucket & Planner plan #3773 updated GitHub actions to Node@16 #3870 added support for upgrading SPFx projects to v1.16.0-beta.2 #3937 made id option required for command spo list webhook get and set #3860 included docs response output for 'tenant' commands #3926 fixed global options for spo list webhook get and set docs #3946 extended spo listitem with listUrl #3814 extended spo field add and spo field set with listId and listUrl #3807 extended spo listitem with listUrl #3813","title":"Changes"},{"location":"about/release-notes/#v580","text":"","title":"v5.8.0"},{"location":"about/release-notes/#new-commands_2","text":"global: request - executes the specified web request using CLI for Microsoft 365 #3512 OneNote: onenote notebook list - retrieves a list of notebooks #3097 Microsoft Graph: graph changelog list - retrieves an overview of specific API-level changes in Microsoft Graph v1.0 and beta #2061 SharePoint: spo contenttype set - updates existing content type #3613 spo listitem roleassignment remove - removes a role assignment from a listitem #3543 spo roledefinition add - adds a new roledefinition to web #3271 spo web roleassignment add - adds a role assignment to web permissions #3549 spo web roleassignment remove - removes a role assignment from web permissions #3550","title":"New commands"},{"location":"about/release-notes/#changes_2","text":"replaced validation with optionsets #3218 added support for upgrading SPFx projects to v1.16.0-beta.1 #3628 fixed command completion in PowerShell #3394 fixed spo listitem roleinheritance docs #3597 set default output in CLI runtime #3445 fixed using unknown flags in 'aad user list' #3059 fixed ensure site assets library sample #3616 removed PowerShell examples from adaptive card docs #3631 added additional validation options for 'planner task get' #3433 added gulp-cli checks to spfx doctor #3541 extended spfx project doctor with support for 1.16.0-beta.1 #3634 fixed typo's in docs #3652 added 'report environment script' sample #3651 resolved file creation suggestion for PS and CMD #3497 added ability to send emails from a specified account or mailbox #3589 fixed rendering code fences in md #3636 fixed status command to show correct connection status #3260 fixed missing quotes in spfx project upgrade to 1.16.0-beta.1 #3660 refactored commandAction to async/await #3430 extended 'outlook mail send' with cc, bcc, and importance #3544 fixed 'spo site apppermissions add/set' assigning the wrong owner permissions #3630 fixed links in 'GitHub Actions' docs #3694 fixed outlook mail send docs title #3695 added shared channel support to teams channel member command docs #3692","title":"Changes"},{"location":"about/release-notes/#v570","text":"","title":"v5.7.0"},{"location":"about/release-notes/#new-commands_3","text":"Bookings: booking business get - retrieves the specified Microsoft Bookings business #3534 booking business list - Lists all Microsoft Bookings businesses that are created for the tenant #3532 SharePoint: spo list roleassignment add - adds a role assignment to list permissions #3300 spo list roleassignment remove - removes a role assignment from list permissions #3542 spo web roleinheritance reset - restores role inheritance of subsite #3548 Search: search externalConnections remove - allows the administrator to remove a specific external connection used in Microsoft Search #3170","title":"New commands"},{"location":"about/release-notes/#changes_3","text":"fixed docs 'aad app add', 'aad app set' #3588 added dark theme support for Team page #3582 added testing on Node@18 #3255 refactored command configuration #3409 extended docs with a Team page #2166 removed chatUtil.convertParticipantStringToArray from code. Only split by comma #3340 extended 'aad app add' command with admin consent process. #2563 updated MkDocs, extends docs with tag support and dark mode. #3416 extended spfx doctor with support for SPFx v1.15.2 #3558 fixed booking commands links in release notes #3602 fixed release notes links #3611 fixed broken links to completion page in docs #3586","title":"Changes"},{"location":"about/release-notes/#v560","text":"","title":"v5.6.0"},{"location":"about/release-notes/#new-commands_4","text":"SharePoint: spo file rename - renames a file #1763","title":"New commands"},{"location":"about/release-notes/#changes_4","text":"fixed 'spo site apppermission add' and 'spo site apppermission set' permission option #3353 extended 'spo group get' with support for returning associated groups #3545 extended 'spfx project upgrade' with support for upgrading SPFx projects to v1.15.2 #3556 extended 'spfx project doctor' with support for validating SPFx projects to v1.15.2 #3560","title":"Changes"},{"location":"about/release-notes/#v550","text":"","title":"v5.5.0"},{"location":"about/release-notes/#new-commands_5","text":"Planner: planner plan remove - removes the Microsoft Planner plan #3336 planner tenant settings set - sets Microsoft Planner configuration of the tenant #3356 Search: search externalconnection get - allows the administrator to get a specific external connection for use in Microsoft Search #3169 SharePoint: spo roledefinition get - gets specified role definition from web #3270 spo group set - updates a group in the specified site #3499 spo group add - creates group in the specified site #3493 Teams: teams cache remove - removes the Microsoft Teams client cache #3205","title":"New commands"},{"location":"about/release-notes/#changes_5","text":"fixed login issue #3431 fixed issue with wrong _global.md reference breaking the docs and cli help #3425 combined planner plan get with planner plan details get #3344 extended spfx doctor command with support for SPFx v1.15.0 #3432 extended spfx project doctor command with support for SPFx v1.15.0 #3440 solved 'spo listitem set' issues with Number and Single Line of Text #3405 fixed flow export command with support for illegal file characters #3404 fixed planner plan remove docs #3473 fixed upgrading non-React SPFx projects to v1.15.0 #3475 fixed sample script referencing deprecated task details get #3467 upgraded SPFx fast serve helper to v1.15 #3446 removed unnecessary undefined checks from several commands #3420 added @meId and @meUserName tokens #3056 extended spo hubsite get options. #3378 fixed planTitle inconsistency in planner commands. #3342 fixed API issue for broken Power Apps commands #3207 fixed 'spo listitem list' and 'spo listitem get' commands #3391 extended planner plan add with more options #3345 updated 'planner task get docs' #3495 extended \"teams team remove, archive, and unarchive\" with extra options #3483 fixed spo field set command options inconsistency #3418 extended 'spo hubsite get' command. #3454 consolidated spo site list and spo site classic list commands. #3456 extended aad o365group recyclebinitem restore command with extra options. #3428 fixed samples contain an invalid condition check. #3511 updated spo customaction to get by title or id. #3463 updated spo customaction to remove by title or id. #3464 consolidated spo site set and spo site classic set commands. #3450 updated spo tenant appcatalog add reference to deprecated spo site classic add command. #3459 updated the status command to show correct connection status. #3260 updated 'teams tab get' provide shorthand options. #3509 added sample script on listing external users in site groups across all site collections. #3521 fixed 'spo field get' and 'spo field remove' commands. #3515","title":"Changes"},{"location":"about/release-notes/#v540","text":"","title":"v5.4.0"},{"location":"about/release-notes/#new-commands_6","text":"Azure Active Directory: aad o365group recyclebinitem remove - permanently deletes a Microsoft 365 Group from the recycle bin in the current tenant #1982 Planner: planner task checklistitem add - adds a new checklist item to a Planner task #3280 planner task checklistitem list - lists the checklist items of a Planner task #3280 planner task checklistitem remove - removes a checklist item from a Planner task #3282 planner task reference remove - removes a reference from a Microsoft Planner task #3285 planner task remove - removes a Microsoft Planner task #3227 planner tenant settings list - lists the Microsoft Planner configuration of the tenant #3255 SharePoint Online: spo eventreceiver list - lists all event receivers attached to the specified site, web or list #3305 spo roledefinition remove - removes the role definition from the specified site #3272","title":"New commands"},{"location":"about/release-notes/#changes_6","text":"fixed 'planner task get' #3324 extended spo list view add command with viewQuery option #1862 updated planner task list options docs #3347 updated PowerShell comparison docs #3332 added short options to planner bucket commands #3343 fixed spo listitem roleinheritance break docs option description formatting #3358 added support for upgrading SPFx projects to v1.15.0-rc.0 #3376 fixed listTitle option values with single quote #3357 fixed planner documentation inconsistency #3338 fixed invalid ISO date pattern with 7 milliseconds digits #3372 fixed documentation for spo file checkout #3388 fixed issue with mkdocs serve because of pygments version #3389 fixed spo listitem list options #3361 added aadGroup utils class #3267 combined planner task details get with planner task get #3257 fixed the documentation of the m365 file list command #3368 fixed error with the teams team get --name command parameter #3395 fixed gateway timeout on flow export #3393 extended 'aad app set' with support for multiple identifier URIs #3333 fixed bug with spo list list throwing access denied #3373 fixed --includeAssociatedSites doesn't include associated sites in the result #3400 extended 'spo list get' with PrincipalTypeString #3379 added more options to planner task add #3246 added priority option to planner task add and set #3383 added support for upgrading SPFx projects to v1.15.0 #3427","title":"Changes"},{"location":"about/release-notes/#v530","text":"","title":"v5.3.0"},{"location":"about/release-notes/#new-commands_7","text":"Apps: app open - returns deep link of the current AD app to open the Azure portal on the Azure AD app registration management page #2940 Planner: planner task reference add - adds a new reference to a Planner task #3283 planner task reference list - retrieve the references associated to a Planner task #3284 planner bucket get - retrieves a planner bucket #3226 planner bucket remove - removes a Microsoft Planner bucket from a plan #2742 Power Platform: pp gateway list - returns a list of gateways for which the user is an admin #3276 SharePoint Online: spo eventreceiver get - retrieves specific event receiver for a web, site or list #3308 spo field list - retrieves columns for the specified list or site #2695 spo list roleinheritance break - breaks role inheritance on list or library #3198 spo list roleinheritance reset - restores role inheritance on list or library #3220 spo list view add - adds a new view to a SharePoint list #1834 spo listitem roleinheritance break - breaks inheritance of list item #3199 spo listitem roleinheritance reset - restores the role inheritance of list item, file, or folder #3238 spo roledefinition list - gets list of role definitions for the specified site #3237 Search: search externalConnections list - lists external connections defined in Microsoft Search #2790 Tenant: tenant security alerts list - gets the security alerts for a tenant #2635","title":"New commands"},{"location":"about/release-notes/#changes_7","text":"added 'add multiple tasks in Planner' sample #2245 removed testing on Node@12 #3212 extended 'planner task get' #3229 extended 'sp approleassignment' with more properties #2462 fixed invalid channel ID in docs #3278 added app only token check to planner commands #3265 added Planner utilities class #3268 extended 'aad app add' and 'aad app set' with certificates #3115 , #3116 fixes documentation app open in wrong place #3316 extended teams channel member with check for private channel #3254 updated documentation titles #3310 follow the order of properties as defined in defaultProperties #2008 added Examples section for New Command template #3105 fixed 'documentation about using the @ token in PowerShell' #3239","title":"Changes"},{"location":"about/release-notes/#v520","text":"","title":"v5.2.0"},{"location":"about/release-notes/#new-commands_8","text":"Azure Active Directory: aad user signin list - retrieves the Azure AD user sign-ins for your tenant #2910 Planner: planner bucket set - updates a Microsoft Planner bucket #3230 Power Platform: pp environment list - lists Microsoft Power Platform environments #3061 pp managementapp list - lists management applications for Power Platform #2977 Teams: teams channel member remove - remove the specified member from the specified Microsoft Teams private team channel #3175 teams channel member set - updates the role of the specified member in the specified Microsoft Teams private team channel #3177 teams channel membership list - lists users for the specified Microsoft Teams channel #3176 teams chat get - gets a Microsoft Teams chat conversation by id, participants or chat name #3017","title":"New commands"},{"location":"about/release-notes/#changes_8","text":"replaced markshell with a plain-text output #3142 fixed restoring group associated with site #3101 fixed default output in spfx project upgrade #3060 fixed removing modern sites #3186 moved mocha settings to .mocharc.json #3180 extended app get with debug information #3165 fixed showing deprecation messages #3151 added the autoOpenLinksInBrowser setting and implemented it in login and reconsent #3118 fixed 'spo file checkout' validation messages #3201 extended spo tenant settings with options to enable B2B integration #3110 fixed 'teams channel membership list' missing documentation dashes #3209 extended 'teams channel list' command with support for type filtering #3191 extended 'teams channel add' command with private channel support #3181 fixed unescaped md code chars in help commands #3202 extended spfx project upgrade with guidance for SPFx fast serve #3154 renamed 'teams channel membership list' to 'teams channel member list' command #3215 renamed 'teams conversationmember add' to 'teams channel member add' command #3174 added 'teams channel member set' channelId validation #3222 updated 'planner task list' samples #3232 corrected 'teams app install' options #3217 changed listTitle to title in spo listitem list docs #3099 removed react check from 'spfx doctor' command #3162 added support for upgrading SPFx projects to 1.15.0-beta.6 #3243 fixed options descriptions for planner task set #3245","title":"Changes"},{"location":"about/release-notes/#v510","text":"","title":"v5.1.0"},{"location":"about/release-notes/#new-commands_9","text":"Azure Active Directory: aad o365group conversation post list - lists conversation posts of a Microsoft 365 Group #3017 Microsoft 365 apps: app get - retrieves information about the current Azure AD app #2942 Planner: planner plan details get - retrieve the planner details about the specified plan #3051 Power Platform: pp managementapp add - registers management application for Power Platform #2917 SharePoint: spo site recyclebinitem restore - restores given items from the site recycle bin #2882 spo app teamspackage download - downloads Teams app package for an SPFx solution #2934 SharePoint Framework: spfx project doctor - validates correctness of a SharePoint Framework project #3057","title":"New commands"},{"location":"about/release-notes/#changes_9","text":"refactored helper methods #2989 added prompting for missing required values #2837 extended 'aad o365group add' command with resourceBehaviorOptions #3080 refactored 'teams chat message send' #3106 , #3107 , #3123 added planner migration sample #3013 fixed 'spfx project upgrade' invalid allowed value #3109 added support for upgrading SPFx projects to v1.15.0-beta.1 #3117 fixed creating AAD app with public client from manifest #3132 fixed creating AAD app with a approle from manifest #3131 fixed creating AAD app with a secret from manifest #3130 removes the delete .editorconfig spfx project upgrade rule #3126 fixes 'Authenticate with and call the Microsoft Graph' sample #3145 renamed 'aad app delete' and 'aad app role delete' #3133 removed dependencies on Office 365 Communication API #3143 added 'Owner group member' sample #2219 added the 'copyDeviceCodeToClipboard' config setting #3129 extended spfx doctor command with default output type as text #3125 extended command definition with validating option sets #2998 added jmespath-terminal to Dockerfile #3147 added missing tests to 'spo recyclebin item restore' #2882","title":"Changes"},{"location":"about/release-notes/#v500","text":"","title":"v5.0.0"},{"location":"about/release-notes/#new-commands_10","text":"Azure Active Directory: aad app remove - removes an Azure AD app registration #3008 aad o365group conversation list - lists conversations for the specified Microsoft 365 group #3030 Microsoft 365: tenant serviceannouncement health get - retrieves a tenant health information #2950 tenant serviceannouncement health list - lists the tenant health information #2947 tenant serviceannouncement healthissue get - retrieves a specified service health issue for the tenant #2951 tenant serviceannouncement healthissue list - retrieves all service health issues for the tenant #2948 tenant serviceannouncement message get - retrieves a specified service update message for the tenant #2952 tenant serviceannouncement message list - retrieves all service update messages for the tenant #2949 Outlook: outlook room list - get a collection of all available rooms #2963 outlook roomlist list - get a collection of available roomlists #3002 Planner: planner task get - retrieves the the specified planner task #3019 planner task details get - retrieves the details of the specified planner task #3015 SharePoint: spo group user remove - removes the specified user from a SharePoint group #2642 Teams: teams chat message send - Sends a chat message to a Microsoft Teams chat conversation #2916","title":"New commands"},{"location":"about/release-notes/#changes_10","text":"updated 'aad oauth2grant list' to use MS Graph #2710 updated the 'aad sp get' command to use MS Graph #2754 extended 'aad oauth2grant remove' with confirm #2785 renamed clientId to spObjectId in aad oauth2grant list #2786 fixed flow get as admin #2984 added the 'Get attachment names from SPO lists' sample #2661 updated the 'using own identity' guide with updated interface #2968 added the 'List all documents with a specific name within a SharePoint site' sample #2768 extended 'aad user list' with --deleted flag #2955 removes obsolete AADCommand base class #2922 updates the 'teams channel get' documentation #3009 added the 'Check all users for known breaches with HBIP' sample #2957 added the 'List items with unique permissions' sample script #2283 added link for 'Using your own Azure AD identity' #2946 fixed creating AAD apps with preauthorized apps from manifest #3041 added CLI API to execute commands #2996 added support for upgrading SPFx projects to v1.14.0-rc.2 #3045 extended 'planner task list' with 'priority' #3037 extends 'planner task get' with task priority #3036 extends 'aad group list' with --deleted flag #2956 added csv to autocomplete option #2997 added the 'Detecting PII exist in SharePoint List using AWS Comprehend' sample #2925 extended 'teams channel get' with 'primary' #3004 extended 'aad app set' with updating redirect URIs #3043 extended 'spo group user add' with validating users #2653 extended 'teams app install' with support for installing personal apps #3025 moved 'Command completion' and 'GitHub Actions' to 'User Guide' #2944 added --save option to the 'aad app get' command #2939 added Mocha Test Explorer #2817 added support for upgrading SPFx projects to v1.14.0 #3067 extended 'spfx doctor' with support for SPFx v1.14.0 #3069 extended 'teams app update' to search apps by name #3026 added the 'List all checked out files' sample #3046 extended login with automatically opening the browser #2158","title":"Changes"},{"location":"about/release-notes/#v440","text":"","title":"v4.4.0"},{"location":"about/release-notes/#new-commands_11","text":"Azure Active Directory: aad group list - lists Azure AD groups #2622 aad user hibp - allows you to retrieve all accounts that have been pwned with the specified username #2476 Planner: planner task set - updates a Microsoft Planner task #2824 SharePoint: spo site recyclebinitem list - lists items from recycle bin #2875 Teams: teams chat list - lists all Microsoft Teams chat conversations for the current user #2893 teams chat member list - lists all members from a Microsoft Teams chat conversation #2896 teams chat message list - lists all messages from a Microsoft Teams chat conversation #2860","title":"New commands"},{"location":"about/release-notes/#changes_11","text":"extended 'cli config set' with support for csv output #2901 fixed 'teams tab get' and 'teams app list' commands #2930 extended 'spo group user add' with groupName and email #2831 added docs explaining app commands #2888 added support for upgrading SPFx projects to v1.14.0-beta.5 #2983 fixed unhandled exception for spo group user add #2935 added the 'List all large files within a SharePoint Site' sample #2772","title":"Changes"},{"location":"about/release-notes/#v430","text":"","title":"v4.3.0"},{"location":"about/release-notes/#new-commands_12","text":"Azure Active Directory: aad app get - gets an Azure AD app registration #2835 aad user password validate - checks a user's password against the organization's password validation policy #2846 Microsoft 365 apps: app permission list - lists API permissions for the current AAD app #2841 Microsoft Search: search externalconnection add - adds a new external connection to be defined for Microsoft Search #2662 Planner: planner task add - adds a new Microsoft Planner task #2255 SharePoint: spo web installedlanguage list - lists all installed languages on site #2833","title":"New commands"},{"location":"about/release-notes/#changes_12","text":"added support for upgrading SPFx projects to v1.14.0-beta.4 #2865 extended 'cli doctor' with cli configuration #2601 removed value wrapper from JMESPath #2858 updated completion PS filename in docs #2862 added the 'Copy list items between SharePoint lists' script #2652 updated Node version Readme.md Build instructions #2873 fixed the maxBodyLength issue #2863 extended 'pa app list' with environment #2872 updated social links in the docs #2885 added csv output mode #2836 changed handling non-existent sites in 'spo site ensure' #2861 updated 'cli doctor' tests to not depend on empty config #2870 extended 'aad user get' with email #2856 updated 'teams message get' command to Graph v1.0 API #2678 replaced custom group and user types with MS Graph types #2436 updated default terminal profile in devcontainer #2664","title":"Changes"},{"location":"about/release-notes/#v420","text":"","title":"v4.2.0"},{"location":"about/release-notes/#new-commands_13","text":"Azure Active Directory: aad sp add - adds a service principal to a registered Azure AD app #2583 File: file list - Retrieves files from the specified folder and site #2804 SharePoint: spo contenttype list - lists content types from specified site #2777 spo listitem attachment list - gets the attachments associated to a list item #2730","title":"New commands"},{"location":"about/release-notes/#changes_13","text":"updated the 'aad oauth2grant remove' command to MS Graph v1.0 #2713 updated 'aad oauth2grant add' to use MS Graph #2712 updated 'aad oauth2grant set' to use MS Graph #2711 added the 'Use CLI for Microsoft 365 access token' sample #2731 updated the 'teams report pstncalls' command to MS Graph v1.0 #2679 added siteUrl to 'file add' #2655 upgraded MkDocs to 7.1.7 #2498 added the 'Export all channels from a team' sample #2793 updated main Node.js version to v16 #2799 updated asciinema video on all pages #2663 fixed 'spo site remove' to remove orphaned groupified sites #2706 extended spfx doctor with support for SPFx@1.13.0 #2802 fixed issue with \\n in JSON output #2807 updated 'teams report directroutingcalls' to Graph v1.0 #2680 fixed the 'Export all flows in environment' sample #2805 extended 'spo list get' with --withPermissions #2796 fixed slow tests #2825 updated 'aad o365group add' to fail for invalid values #2654 added more layouts to spo page add/set #2821 extended 'aad app add' with save #2815 extended 'spfx project upgrade' with support for SPFx@1.13.1 #2849 extended 'spfx doctor' with support for SPFx@1.13.1 #2849","title":"Changes"},{"location":"about/release-notes/#v410","text":"","title":"v4.1.0"},{"location":"about/release-notes/#new-commands_14","text":"Azure Active Directory: aad user set - updates information of the specified user #1933","title":"New commands"},{"location":"about/release-notes/#changes_14","text":"upgraded the 'aad siteclassification get' command to Microsoft Graph v1.0 #2676 upgraded the 'aad siteclassification enable' command to Microsoft Graph v1.0 #2675 upgraded the 'aad siteclassification set' command to Microsoft Graph v1.0 #2677 extended 'aad o365group teamify' with mailNickname #2669 renamed 'aad o365group restore' to 'aad o365group recyclebinitem restore' #1987 added support for upgrading SPFx projects to v1.13.0-rc.1 #2758 extended 'teams user app list' with teamsAppDefinition #2719 added the 'Flow runs day summary report' sample #2740 added the 'Add users to groups' sample #2719 added the 'List Teams, channels, and tabs in the tenant' sample #2734 extended 'spo contenttype add' to return created object by default #2333 excluded parsing strings for formatting #2760 added launch config to debug CLI and tests #2766 added support for upgrading SPFx projects to v1.13.0 #2780","title":"Changes"},{"location":"about/release-notes/#v400","text":"","title":"v4.0.0"},{"location":"about/release-notes/#new-commands_15","text":"SharePoint: spo group user list - list members of a SharePoint Group #2640 Teams: teams team get - gets information about the specified Microsoft Teams team #2506","title":"New commands"},{"location":"about/release-notes/#changes_15","text":"removed duplicate ID in 'spo listitem' commands #2024 removed the 'value' wrapper in the output #2292 updated JMESPath docs #2553 removed obsolete file path options #2309 aligned 'aad o365group user list' and 'teams user list' #2520 in 'spo listitem get' renames fields to properties #2533 changed default output to JSON #2599 added SPO auto-discovery remark to 'Using your own Azure AD identity' #2639 added the 'Export all the team members from the Teams team' sample #2648 updated 'aad o365group teamify' to Graph v1.0 #2504 extended 'planner task list' with support for listing tasks in a bucket or a plan #2575 added support for upgrading SPFx projects to 1.13.0-beta.20 #2697 fixed 'spo theme list' command #2700 added support for paging in 'spo site classic list', 'spo site list' and 'onedrive list' #2692 fixed 'spo page control list' and '- get' commands #2667 added the 'Get all the Teams a specific user is part of' sample #2688 extended 'spo sitedesign set' with support for thumbnailUrl option #2651 extended base SPO command when using secret auth type #2591 updated 'teams channel list' command to Graph v1.0 #2670 upgraded 'teams conversationmember list' to Graph v1.0 #2672 upgraded 'teams conversationmember add' to Graph v1.0 #2671 upgraded 'aad siteclassification disable' to Graph v1.0 #2674 removed 'spo site classic remove' link from nav #2707 fixed escaping single quotes in folder names in 'spo file list' #2704 added privacy settings remark #2727 added v4 upgrade guidance #2659","title":"Changes"},{"location":"about/release-notes/#v3130","text":"","title":"v3.13.0"},{"location":"about/release-notes/#new-commands_16","text":"SharePoint: spo group user add - add a user or multiple users to SharePoint Group #2483 spo site apppermission remove - removes a specific application permission from a site #2209 spo app instance list - retrieves apps installed in a site #2025 Planner: planner plan get - retrieves a Microsoft Planner plan #2528","title":"New commands"},{"location":"about/release-notes/#changes_16","text":"updated 'teams message reply list' to Graph v1.0 #2509 extended 'getAllItems' with an optional metadata argument #2613 added the 'social champion' sample #2532 renamed 'PowerShell Core' to 'PowerShell' in docs #2620 added support for upgrading SPFx projects to 1.13.0-beta.17 #2644 added support for using AAD client secret to authenticate #2171 updated 'teams team list' to Graph v1.0 #2507 added the 'Recognize most active users for a specific Team' sample #2619","title":"Changes"},{"location":"about/release-notes/#v3120","text":"","title":"v3.12.0"},{"location":"about/release-notes/#new-commands_17","text":"CLI: cli doctor - retrieves diagnostic information about the current environment #2157 OneDrive: onedrive list - retrieves a list of OneDrive sites #2230 Planner: planner bucket add - adds a new Microsoft Planner bucket #2254 planner bucket list - lists the Microsoft Planner buckets in a plan #2556 planner plan list - returns a list of plans associated with a specified group #2499","title":"New commands"},{"location":"about/release-notes/#changes_17","text":"added the 'Add multiple lists in multiple sites' sample #2562 updated 'teams user app list' to Graph v1.0 #2510 added the 'List failed site designs' sample #2539 extended 'spo web get' with groups #2493 fixed 'yammer message add' #2557 fixed 'spo site set' code coverage #2586 updated 'teams channel get' to Graph v1.0 #2505 added missing 'chalk' dependency #2592 extended Teams channel ID validation with - and _ #2594 added file count sample #2576 added support for upgrading SPFx projects to v1.13.0-beta.13 #2604 updated upgrade rule for SPFx v1.13.0-beta.13 #2611 added support for upgrading SPFx projects to v1.13.0-beta.15 #2614","title":"Changes"},{"location":"about/release-notes/#v3110","text":"","title":"v3.11.0"},{"location":"about/release-notes/#new-commands_18","text":"Azure Active Directory: aad app role remove - deletes role from the specified Azure AD app registration #2150 aad app set - updates Azure AD app registration #2448 aad o365group recyclebinitem clear - clears Microsoft 365 Groups from the recycle bin in the current tenant #2033 CLI: cli config reset - resets the specified CLI configuration option to its default value #2344 cli issue - returns, or opens a URL that takes the user to the right place in the CLI GitHub repo to create a new issue reporting bug, feedback, ideas, etc. #1490 Microsoft 365: tenant report office365activationcounts - gets the count of Microsoft 365 activations on desktops and devices #2257 tenant report office365activationsusercounts - gets the count of users that are enabled and those that have activated the Office subscription on desktop or devices or shared computers #2258 tenant report office365activationsuserdetail - Get details about users who have activated Microsoft 365 #2256 SharePoint Framework: spfx package generate - generates SharePoint Framework solution package with a no-framework web part rendering the specified HTML snippet #2367","title":"New commands"},{"location":"about/release-notes/#changes_18","text":"added encoding password for login #2466 added JMESPath docs #2293 added sample script to resubmit failed flow runs #2440 added sample script to cancel running flow runs #2441 fixed 'spfx doctor' on Windows #2299 updated 'spfx doctor' to support SPFx v1.12.1 fixed adding channels via team's name #2419 extended 'file add' to handle empty files #2433 fixed docs for 'spo listitem remove' command #2474 centralized converting csv to json #2481 extended 'spo file list' with the recursive option #2376 added the Get-SPOUser CLI equivalents to the docs #2485 removed the deprecated Get-TeamHelp cmdlet from the docs #2486 added the Remove-PowerApp CLI equivalent to the docs #2491 excluded /assets/ path from loading commands #2512 fixed the 'o365group user list' command #2374 added the 'Remove pending SharePoint API permission requests' sample script #2478 added the 'Remove SharePoint API permissions' sample script #2487 extended 'pa app get' to allow retrieving apps by their display name #2174 removed double JSON.stringify #2534 updated sample and removes double / #2449 updated 'todo list add' to Graph v1.0 #2515 updated 'todo list list' to Graph v1.0 #2516 updated 'todo list remove' to Graph v1.0 #2517 updated 'todo list set' to Graph v1.0 #2518 updated 'teams user app remove' to Graph v1.0 #2514 updated 'teams user app add' to Graph v1.0 #2513 updated 'teams team set' to Graph v1.0 #2511 added documentation for JMESPath sort #2536 updated 'teams message reply list' to Graph v1.0 #2509 added remarks to 'spo theme set' docs #1633 extended 'spo site set' and 'spo site classic set' with description #2334","title":"Changes"},{"location":"about/release-notes/#v3100","text":"","title":"v3.10.0"},{"location":"about/release-notes/#new-commands_19","text":"Azure Active Directory: aad app role list - gets Azure AD app registration roles #2144 CLI: cli config get - gets value of a CLI for Microsoft 365 configuration option #2343 File: file add - uploads file to the specified site using Microsoft Graph #2384 Power Apps: pa app remove - removes the specified Power App #2133 SharePoint: spo site apppermission set - updates a specific application permission for a site #2210","title":"New commands"},{"location":"about/release-notes/#changes_19","text":"added the 'Replace membership in group or team' sample #2372 added the 'Monitor Site Collections Storage Usage' sample script #2224 added support for printing errors as JSON in JSON output #2298 extended 'spo site apppermission list' with roles #2412 fixed removing users from O365 groups #2368 fixed printing validation errors as json #2429 added the 'Add multiple folders in libraries using a csv file' sample script #2415 updated PowerShell samples to use simplified CLI config #2428 updated 'aad user list' docs #2434 added the 'Replace spo site collection admin' sample #2221 extended 'spo site apppermission get' with roles #2409 added 'Search flows for connection' sample #2444 extended 'spo list get' with properties #2443 changed 'flow run list' to return all runs #2458","title":"Changes"},{"location":"about/release-notes/#v390","text":"","title":"v3.9.0"},{"location":"about/release-notes/#new-commands_20","text":"Azure Active Directory: aad app role add - Adds role to the specified Azure AD app registration #2145 Planner: planner plan add - adds a new Microsoft Planner plan #2253 SharePoint: spo site apppermission add - adds a specific application permissions to the site #2208 spo userprofile get - gets SharePoint user profile properties for the specified user #1670 Microsoft Viva: viva connections app create - creates a Viva Connections desktop app package to upload to Microsoft Teams","title":"New commands"},{"location":"about/release-notes/#changes_20","text":"moved from adal-node to msal-node #2156 added eslint. Fixed code to align with eslint config #2058 updated command examples to use long options #2319 fixed broken list of command options #2320 added support for using relative URLs in spo commands #2313 added support for configuring error output #2325 fixed docs for 'spo list set' #2332 added 'Cleanup completed Microsoft To Do tasks' sample script #2339 added the 'Create a Microsoft Teams team and bulk add members from CSV file' sample #2288 added the 'Setup example site' sample script #2328 added ESLint extension to Remote Development Container #2327 fixed MKDocs Tab rendering issue in Remote Development Container #2341 added eslint rule to check command's class name #1819 added new sample script 'Upload local files and folders to SharePoint Online' #2302 added support for upgrading SPFx projects to beta versions of SPFx #2354 added support for upgrading SPFx projects to v1.12.1-rc.0 #2355 changed order of commands for upgrading SPFx projects #2358 added support for creating AAD apps from manifest #2316 added support for tracking help usage in telemetry #2336 added returning human-readable error on invalid JMESPath queries #2279 added support for upgrading SPFx projects to v1.12.1-rc.1 #2363 fixed the conflicting documentation around the --withSecret command option in aad app add #2365 added the 'Bulk add members to Microsoft Teams team from CSV file' sample script #2285 added the 'Copy files to another SharePoint Library in another site' sample script #2370 added support for upgrading SPFx projects to v1.12.1-rc.2 #2378 extended the spo contenttype get command with name #2335 added the 'Remove a Site Collection Admin User from all Site Collections' sample script #2223 added support for upgrading SPFx projects to v1.12.1-rc.3 #2387 added the 'Replace an owner in a Microsoft 365 Group or Microsoft Team' sample script #2348 fixed typo in docs for 'teams tab get' #2390 added the 'Add a site collection admin using csv file' sample #2220 fixed API change in 'flow export' #2398 added support for upgrading SPFx projects to v1.12.1 #2401","title":"Changes"},{"location":"about/release-notes/#v380","text":"","title":"v3.8.0"},{"location":"about/release-notes/#new-commands_21","text":"Azure Active Directory: aad policy list - returns policies from Azure AD #2164","title":"New commands"},{"location":"about/release-notes/#changes_21","text":"added support for configuring default output #2246 restored showing original API errors #2138 added new sample script for granting API permissions to SharePoint AAD App #2243 added the 'List all Microsoft Teams team's Owners and Members' sample #2284 fixed the 'spo tenant appcatalog add' command #2300 added the 'M365 health status' sample script #2107 fixed broken tests when default output configured to JSON #2305","title":"Changes"},{"location":"about/release-notes/#v370","text":"","title":"v3.7.0"},{"location":"about/release-notes/#new-commands_22","text":"CLI: cli config set - sets CLI for Microsoft 365 configuration options #1945 SharePoint: spo site apppermission get - gets a specific application permissions for the site #2207 spo site apppermission list - lists application permissions for a site #2206 Teams: teams conversationmember add - adds a conversation member in a private channel #1986","title":"New commands"},{"location":"about/release-notes/#changes_22","text":"added conditionally saving page in 'spo page set' #2211 fixed issue in spo page control set discarding data on save #2216 added missing includeOndriveSites option to spo site classic list docs #2234 added Remote Development container #1832 moved spo page list to use pages API #2241 added support for configuring auto showing help on failure #1945 added the 'Provision a Team with channels and assign a custom icon' sample #2148 extended aad o365group remove with skipRecycleBin #1986 updated product name from 'Microsoft Flow' to 'Power Automate' in docs #2259 added the 'List site collections and their lists' sample script #2272 added site external users report sample #2277 added the 'Delete all Microsoft 365 groups and SharePoint sites' sample #2278 added support for upgrading SPFx projects to v1.12 #2154 extended spfx doctor with support for SPFx v1.12 #2173","title":"Changes"},{"location":"about/release-notes/#v360","text":"","title":"v3.6.0"},{"location":"about/release-notes/#new-commands_23","text":"Power Apps: pa app get - gets information about the specified Microsoft Power App #2110 pa environment get - gets information about the specified Microsoft Power Apps environment #2109 pa environment list - lists Microsoft Power Apps environments in the current tenant #2108 SharePoint: spo page copy - creates a copy of a modern page or template #2088 spo site chrome set - sets the chrome header and footer for the specified site #2161 spo site ensure - ensures that the particular site collection exists and updates its properties if necessary #1404","title":"New commands"},{"location":"about/release-notes/#changes_23","text":"fixed broken tests in 'tenant auditlog report' on Node@10 #2125 fixed uploading large files #2120 implemented browser-based login #1979 fixed bug in 'spo tenant appcatalog add' #2129 changed the logic to keep original value if @-value is not a valid file path #2134 removed 'description' property from command option #2112 extended 'spo page set' with title #2140 moved 'DONE' out of the commandAction #2045 simplified returning command name #2123 extended 'util accesstoken get' with sharepoint as resource #2096 updated command option in readme.md improved environment get commands with text results #2153 extended 'spo web set' with the ability to reset the logo #2177 added PowerShell examples to 'adaptivecard send' docs #2167 added 'm365' prefix to sample in 'pa app list' docs #2182 added 'm365' prefix in 'version' docs #2183 added 'Export Teams conversations' sample script #2104 extended test script with checking Node version #2181 extended spo site set with setting site logo #2175 extended spo page get with support for loading only metadata #2184 fixed control and section parsing in 'spo page get' #2179 fixed bug in uploading large files #2199 extended aad app add with returning tenantId #2187 extended output of spo page get with canvasContentJson #2193 fixed looking up service principals with trailing slash in aad app add #2188 changed spo page control list to use the pages API #2198 fixed issue with character encoding in spo page control set #2195 fixed issue with character encoding in spo page control get #2202 extended spo page control list with empty CanvasContent1 check #2204 added the List all tabs in Teams sample script #2075 extended aad o365group get with teams team get alias #2214 added the List all sites' owners sample script #2168","title":"Changes"},{"location":"about/release-notes/#v350","text":"","title":"v3.5.0"},{"location":"about/release-notes/#new-commands_24","text":"Adaptive Cards: adaptivecard send - sends adaptive card to the specified URL #2005 Azure Active Directory: aad app add - creates new Azure AD app registration #1962 aad o365group recyclebinitem list - lists Groups from the recycle bin in the current tenant #2032 Microsoft 365: tenant auditlog report - gets audit logs from the Office 365 Management API #1739 File: file convert pdf - converts the specified file to PDF using Microsoft Graph #2010 Power Automate: flow run resubmit - resubmits a specific flow run for the specified Microsoft Flow #1871 SharePoint: spo list view field set - updates existing column in an existing view (eg. move to a specific position) #2059 spo page template list - lists all page templates in the given site #2065","title":"New commands"},{"location":"about/release-notes/#changes_24","text":"updated 'teams team add' to use Microsoft Graph v1.0 API #2020 applied multiple performance improvements #2047 fixed 'page header set' command #2049 , #2050 added wait-npm-publish script to CI/CD #2053 added support for passing complex content from files #2042 added support for adding page description to 'spo page add' and 'spo page set' #2044 added new sample script for exporting a flow to Logic app #2067 added new sample script for emptying the tenant recycle bin #1142 updated sample script changing CLI command name to m365 #2063 added new sample script 'Export all Flows in environment' #2082 added new sample script 'List all application customizers' #2074 changed secret expiration to 1 year in aad app add #2064 added support for setting authors and checks in page in 'spo page header set' #2069 , #2070 fixed removing previous values and checks in page in 'spo page clientsidewebpart add' #2068 , #2069 checking in page if not published in 'spo page add' and 'spo page set' #2069 fixed bug in 'spo app add' returning an object instead of just the app ID #2080 fixed 'spo listitem get' doc #2093 fixed bug in exporting flows #2091 fixed logging output when using JMESPath queries #2095 updated guidance for escaping quotes in bash #2043 replaces rmSync with unlinkSync in 'file convert pdf' #2106 fixed escaping backslash in 'spo page get' #2114","title":"Changes"},{"location":"about/release-notes/#v340","text":"","title":"v3.4.0"},{"location":"about/release-notes/#new-commands_25","text":"SharePoint: spo list contenttype default set - sets the default content type for a list #674 Teams: teams report directroutingcalls - gets details about direct routing calls made within a given time period #1772 teams report pstncalls - gets details about PSTN calls made within a given time period #1771 Yammer: yammer search - returns a list of messages, users, topics and groups that match the specified query #1454","title":"New commands"},{"location":"about/release-notes/#changes_25","text":"updated docs for the login command with links to more info #1966 moved global options in docs to a separate file #1852 , #1969 extended login with support for passing base64-encoded certificate #1971 extended login with calculating thumbprint from the certificate #1973 fixed 'spo listitem set' command #1984 changed loading optional dependencies to lazy to speed up CLI #1990 extended login with support for .pfx certificates not protected with a password #1974 fixed the outlook mail send command #1991 extended the login command with appId and tenant #1975 fixed the spo apppage add command #2000 removed short options from args passed to commands #1992 extended spo sitedesign get to include title #1884 removed unnecessary request digest from spo sitedesign list #2006 fixed issue with resolving uppercase URLs #2011 added Dockerfile #1786 added line information to JSON-based rules in 'spfx project upgrade' #1602 removed the 'started' telemetry event #2018 clarified SPFx project upgrade actions #1857 , #1569 added preserving page content to spo page header set #2019","title":"Changes"},{"location":"about/release-notes/#v330","text":"","title":"v3.3.0"},{"location":"about/release-notes/#new-commands_26","text":"Power Automate: flow run cancel - cancels the specified Microsoft Flow #1870 SharePoint: spo file sharinginfo get - generates a sharing information report for the specified file #1659 spo page control set - updates web part data or properties of a control on a modern page #1934 spo tenant recyclebinitem remove - removes the specified deleted Site Collection from Tenant Recycle Bin #1145 spo tenant recyclebinitem restore - restores the specified deleted Site Collection from Tenant Recycle Bin #1362 Teams: teams conversationmember list - lists all conversational members of a channel #1880 To Do: todo task add - adds a task to a Microsoft To Do list #1898 todo task list - lists tasks in a Microsoft To Do task list #1901 todo task remove - removes the specified Microsoft To Do task #1900 todo task set - sets a task in a Microsoft To Do list #1899","title":"New commands"},{"location":"about/release-notes/#changes_26","text":"extended channel list with teamName #1889 extended 'teams channel get' command with support for teamName and channelName options #1887 extended 'spo tenant settings set' with DisableCustomAppAuthentication #1829 added the 'Analyze Microsoft 365 User Profile Photos using Azure Computer Vision API' sample script #1894 fixed displaying command groups in alphabetical order in help #1922 fixed excluding command and arguments as field values in 'spo file add' #1936 refactored processing command output #1552 , #1823 and #1875 fixed displaying help for command's alias #1907 added tracking output mode to telemetry #1946 fixed retrieving unknown options #1947 renamed query to camlQuery in spo listitem list #1948 fixed user-agent header #1951 fixed user guide env. variable naming #1954 made 'console.log()' synchronous #1266 extended todo task list with id #1943","title":"Changes"},{"location":"about/release-notes/#v320","text":"","title":"v3.2.0"},{"location":"about/release-notes/#new-commands_27","text":"Azure Active Directory: aad approleassignment remove - deletes an app role assignment for the specified Azure AD Application Registration #1872 Microsoft Teams: teams tab get - gets information about the specified Microsoft Teams tab #1804 teams user app list - lists the apps installed in the personal scope of the specified user #1866 SharePoint: spo knowledgehub get - gets the Knowledge Hub Site URL for your tenant #1575","title":"New commands"},{"location":"about/release-notes/#changes_27","text":"removed Vorpal #1737 extended 'todo list set' with name #1806 updated 'aad approleassignment list' to v1.0 graph API #1604 removed CommandInstance and simplifies validate() #1821 replaced request with Axios #1363 added quotes to paths in shell commands #1849 fixed 'flow export' command #1845 extended 'spo site remove' with support for M365 groups #1561 added the 'Deploy a Microsoft Teams personal app and add it to users' sample script #1867 added Teams scope to the list of default permissions in the docs #1860 updated 'aad approleassignment add' to use Microsoft Graph #1858 added the 'Removes Microsoft Teams personal app from users and Microsoft Teams app catalog' sample script #1883 extended 'teams app list' with support for using Team's name #1861 excluded missing global options in 'spo tenant settings set' #1903 added support for specifying Team name in teams channel add #1888 excluded missing global options in 'aad user list' #1909 fixed 'spo file get' for large files #1796","title":"Changes"},{"location":"about/release-notes/#v310","text":"","title":"v3.1.0"},{"location":"about/release-notes/#new-commands_28","text":"Microsoft 365: tenant service list - gets services available in Microsoft 365 #1740 tenant service message list - gets service messages Microsoft 365 #1741 tenant service report historicalservicestatus - gets the historical service status of Microsoft 365 Services of the last 7 days #1742 Outlook: outlook message list - gets all mail messages from the specified folder #1764 outlook message move - moves message to the specified folder #1765 Power Apps: pa app list - lists all Power Apps apps #1789 SharePoint: spo knowledgehub remove - removes the Knowledge Hub Site setting for your tenant #1577","title":"New commands"},{"location":"about/release-notes/#changes_28","text":"added the 'Remove orphaned redirect sites' sample script #1717 extended 'spo page get' json output to include all returned properties #1729 extended 'spfx doctor' with support for SPFx v1.11 #1721 extended 'tenant status list' with filtering by workload #1743 fixed long running copy and move operations #1698 added 'm365' alias to examples in docs and help #1694 added support for parsing JSON with BOM to 'spfx project upgrade' #1723 renamed token file use the new CLI name #1810","title":"Changes"},{"location":"about/release-notes/#v300","text":"","title":"v3.0.0"},{"location":"about/release-notes/#new-commands_29","text":"Microsoft Teams: teams app user remove - uninstall an app from the personal scope of the specified user #1711 Microsoft To Do: todo list list - returns a list of Microsoft To Do task lists #1609 todo list remove - removes a Microsoft To Do task list #1611 todo list set - updates a Microsoft To Do task list #1612 SharePoint: spo group list - lists groups from specific web #1691 spo knowledgehub set - sets the Knowledge Hub Site for your tenant #1576","title":"New commands"},{"location":"about/release-notes/#changes_29","text":"fixed 'spo search' command #1696 added the 'Export Configurations of Tenant Wide Extensions' sample script #1440 extended 'spo site set' with sharing capabilities #1713 removed deprecated 'id' option in 'spo site set' #1536 removed deprecated exit code in 'spfx project upgrade' #1418 removed immersive mode #1600 removed '-h' as option #1680 removed deprecated 'accesstoken get' alias #1368 removed '--pretty' global option #1338 removed deprecated aliases #1339 renamed 'Office 365 CLI' to 'CLI for Microsoft 365' #1635 added 'owners' option for CommunicationSite creation using 'spo site add' #1734 added LCID validation to 'spo site add' #1749 added \"Caveats when certificate login\" doc #1734 , #1738 removed obsolete outputFile option #1769 renamed environment variables from OFFICE365CLI to CLIMICROSOFT365 #1787 extended 'spo web set' with welcomePage #1730","title":"Changes"},{"location":"about/release-notes/#v2130","text":"","title":"v2.13.0"},{"location":"about/release-notes/#new-commands_30","text":"SharePoint: spo group remove - removes group from specific web #1693 spo user list - lists all the users within specific web #1672 spo userprofile set - sets user profile property for a SharePoint user #1671","title":"New commands"},{"location":"about/release-notes/#changes_30","text":"added the 'List app usage in Microsoft Teams' sample script #1640 fixed the 'Get user with login name' example for 'spo user get' command #1707 updated CodeTour SPFx upgrade report schema #1708 consolidated 'spo site add' and 'spo site classic add' commands #1493","title":"Changes"},{"location":"about/release-notes/#v2120","text":"","title":"v2.12.0"},{"location":"about/release-notes/#new-commands_31","text":"Microsoft Graph: graph schemaextension list - gets a list of schemaExtension objects created in the current tenant #12 SharePoint: spo group get - gets site group #1692 spo tenant appcatalog add - creates new tenant app catalog site #1646 spo user get - gets a site user within specific web #1673 spo user remove - removes user from specific web #1674 SharePoint Framework: spfx project rename - renames SharePoint Framework project #1349","title":"New commands"},{"location":"about/release-notes/#changes_31","text":"added the 'Sync SharePoint Document Library Documents with Azure Storage Container' sample script #1685 added support for upgrading projects built using SharePoint Framework v1.11.0 #1714","title":"Changes"},{"location":"about/release-notes/#v2110","text":"","title":"v2.11.0"},{"location":"about/release-notes/#changes_32","text":"added the 'remove wiki tab from a Microsoft Teams channel' sample script #1506 fixed suggesting incorrect componentType #1574 added m365 and microsoft365 executables #1637 consolidated spo site remove and spo site classic remove commands #1494 added suggesting upgrading dependency @microsoft/sp-page-context #1521 added suggesting upgrading dependency @microsoft/sp-odata-types #1520 added suggesting upgrading dependency @microsoft/sp-module-interfaces #1519 added suggesting upgrading dependency @microsoft/sp-loader #1518 added suggesting upgrading dependency @microsoft/sp-list-subscription #1517 fixed detecting onprem SPFx projects' versions #1647 extended 'teams team add' with support for Teams templates #916 extended 'spo field remove' with removing all fields from a group #1381 fixed incorrect path in FN018001 #1661 fixed incorrect path in FN018003 and FN018004 #1662 fixed resolution of paths on Windows in 'spfx project upgrade' added the 'Insert pictures in a SharePoint Document Library into a Word document' sample script #1653 extended 'teams team add' with support for returning team information #1654 fixes bug in returning lists #1667","title":"Changes"},{"location":"about/release-notes/#v2100","text":"","title":"v2.10.0"},{"location":"about/release-notes/#new-commands_32","text":"Azure Active Directory: aad approleassignment add - adds service principal permissions also known as scopes and app role assignments for specified Azure AD application registration #1581 Microsoft Teams: teams user app add - install an app in the personal scope of the specified user #1450 Microsoft To Do: todo list add - adds a Microsoft To Do task list #1610 Yammer: yammer group user add - adds a user to a Yammer Group #1456 yammer group user remove - removes a user from a Yammer group #1457 yammer message like set - likes or unlikes a Yammer message #1455","title":"New commands"},{"location":"about/release-notes/#changes_33","text":"added support for more module types in spfx project externalize #1192 fixed indentation of resolution for FN012010 #1467 fixes description of FN003003 #1469 updated MPA docs with Docker image version #1531 simplified persisting login information #1313 updated the Authenticate with Microsoft Graph sample replacing the deprecated method #1548 included PowerShell completion script in the package #1551 added Flow inventory sample script #1522 added managed identity authentication #1314 fixed 'teams team add' command #1497 extended 'spo site set' with additional options #1478 added the 'Bulk add/remove users to Microsoft Teams and Microsoft 365 Groups' sample script #1540 updates the 'cli consent' command references #1542 fixed 'aad user list' command #1553 ensured all global options are ignored in request bodies #1563 fixed windows builds #1544 added missing '}' in FN011008 resolution #1509 fixed issue with logging out after running tests #1570 fixed incorrect import suggestions in FN016004 #1484 fixed indentation of FN011010 resolution #1485 moved SPFx test projects to a common location #1507 added suggesting upgrading dependency @microsoft/sp-component-base #1512 made FN011008 supersede FN011009 #1510 added FN017001 to the summary #1511 added suggesting upgrading dependency @microsoft/sp-diagnostics #1513 added suggesting upgrading dependency @microsoft/sp-dynamic-data #1514 added suggesting upgrading dependency @microsoft/sp-extension-base #1515 extended 'aad approleassignment list' with --objectId option #1579 added 'Using your own Azure AD identity' to docs #1496 added the 'Disable the specified tenant-wide extension' sample script #1444 added suggesting upgrading dependency @microsoft/sp-http #1516 added the 'Add custom client-side web part to modern page' sample script #1438 added CodeTour report for spfx project upgrade #1592 extended 'aad sp get' with --objectId option #1567 removed reserved shortcut from 'aad approleassignment list' objectId option #1607","title":"Changes"},{"location":"about/release-notes/#v290","text":"","title":"v2.9.0"},{"location":"about/release-notes/#new-commands_33","text":"Azure Active Directory: aad o365group report activitystorage - get the total storage used across all group mailboxes and group sites #1286 Microsoft Teams: teams tab remove - removes a tab from the specified channel #1449 Microsoft 365: tenant status list - gets health status of the different services in Microsoft 365 #1272 SharePoint: spo orgassetslibrary add - promotes an existing library to become an organization assets library #1040 Yammer: yammer report activitycounts - gets the trends on the amount of Yammer activity in your organization by how many messages were posted, read, and liked #1383 yammer report activityusercounts - gets the trends on the number of unique users who posted, read, and liked Yammer messages #1384 yammer report activityuserdetail - gets details about Yammer activity by user #1382 yammer report deviceusagedistributionusercounts - gets the number of users by device type #1386 yammer report deviceusageusercounts - gets the number of daily users by device type #1387 yammer report deviceusageuserdetail - gets details about Yammer device usage by user #1287 yammer report groupsactivitydetail - gets details about Yammer groups activity by group #1388 yammer report groupsactivitygroupcounts - gets the total number of groups that existed and how many included group conversation activity #1389","title":"New commands"},{"location":"about/release-notes/#changes_34","text":"added 'Scan Microsoft 365 Groups created with User's First or Last Name' sample #1342 extended tenant id get with retrieving the ID of the current tenant #1378 changed communicating no need to upgrade spfx project as a non-error #1407 moved the 'consent' command to the 'cli' namespace #1336 implemented '--reconsent' as a CLI command #1337 updated docs wrapping file names in quotes #1410 replaced | (pipe) with , (comma) in the docs #1420 added conditionally suggesting upgrading Office UI Fabric scss files #1468 added the 'Ensure site assets library is created' sample script #1447 added the 'List all tenant-wide extensions' sample script #1443 fixed guidance for upgrading teams piece in spfx project upgrade #1471 extended spo theme set command with support for theme validation #1466 fixed resolution of FN003005_CFG_localizedResource_pathLib in spfx project upgrade #1470 updated Theme Generator URL on spo theme set & spo theme apply commands #1465","title":"Changes"},{"location":"about/release-notes/#v280","text":"","title":"v2.8.0"},{"location":"about/release-notes/#new-commands_34","text":"Microsoft Graph: graph subscription add - creates a Microsoft Graph subscription #1100 Microsoft 365: tenant report activeuserdetail - gets details about Microsoft 365 active users #1300 tenant report servicesusercounts - gets the count of users by activity type and service #1299 SharePoint: spo sitedesign task remove - removes the specified site design scheduled for execution #783 SharePoint Framework: spfx doctor - verifies environment configuration for using the specific version of the SharePoint Framework #1353 Skype: skype report activitycounts - gets the trends on how many users organized and participated in conference sessions held in your organization through Skype for Business. The report also includes the number of peer-to-peer sessions #1302 skype report activityusercounts - gets the trends on how many unique users organized and participated in conference sessions held in your organization through Skype for Business. The report also includes the number of peer-to-peer sessions #1303 skype report activityuserdetail - gets details about Skype for Business activity by user #1301 Yammer: yammer report groupsactivitycounts - gets the number of Yammer messages posted, read, and liked in groups #1390","title":"New commands"},{"location":"about/release-notes/#changes_35","text":"added 'Add App Catalog to SharePoint site' sample #1413 added 'Delete all Microsoft 365 groups' sample #1140 added 'Delete custom SharePoint site scripts' sample #1139 added 'Hide SharePoint list from Site Contents' sample #1413 extended team channel name validation to allow 'tacv2'. #1401","title":"Changes"},{"location":"about/release-notes/#v270","text":"","title":"v2.7.0"},{"location":"about/release-notes/#new-commands_35","text":"Azure Active Directory: aad approleassignment list - lists app role assignments for the specified application registration #1270 aad o365group report activityfilecounts - get the total number of files and how many of them were active across all group sites associated with an Microsoft 365 Group #1285 Microsoft Graph: graph schemaextension set - updates a Microsoft Graph schema extension #15 Microsoft 365: tenant report activeusercounts - gets the count of daily active users in the reporting period by product #1298 SharePoint: spo orgassetslibrary remove - removes a library that was designated as a central location for organization assets across the tenant #1042 spo tenant recyclebinitem list - returns all modern and classic site collections in the tenant scoped recycle bin #1144 Microsoft Teams: teams tab add - add a tab to the specified channel #850 Yammer: yammer message add - posts a Yammer network message on behalf of the current user #1101","title":"New commands"},{"location":"about/release-notes/#changes_36","text":"added PowerShell command completion #261 added 'since' option to 'teams message list' command #1125 extended 'spo file add' with chunked uploads #1052 added support for prettifying json output #1324 fixed bug in retrieving modern pages from root site #1328 extended 'spo site list' command with support for returning deleted sites #1335 exposed completion commands as CLI commands #1329 fixed bug in retrieving files with special characters #1358 added alias to 'accesstoken get' #1369","title":"Changes"},{"location":"about/release-notes/#v260","text":"","title":"v2.6.0"},{"location":"about/release-notes/#new-commands_36","text":"Microsoft Graph: graph schemaextension remove - removes specified Microsoft Graph schema extension #16 Power Apps: pa connector export - exports the specified power automate or power apps custom connector #1084 SharePoint: spo report activityfilecounts - gets the number of unique, licensed users who interacted with files stored on SharePoint sites #1243 spo report activitypages - gets the number of unique pages visited by users #1245 spo report activityuserdetail - gets details about SharePoint activity by user #1242 spo report activityusercounts - gets the trend in the number of active users #1244 spo report siteusagedetail - gets details about SharePoint site usage #1246 Yammer: yammer group list - returns the list of groups in a Yammer network or the groups for a specific user #1185","title":"New commands"},{"location":"about/release-notes/#changes_37","text":"added support for file edit suggestions #1190 added support for JMESPath #1315 made non-immersive mode completion standalone #1316 added GitHub Actions documentation #1094 added the 'Delete all non group connected SharePoint sites' example #1141","title":"Changes"},{"location":"about/release-notes/#v250","text":"","title":"v2.5.0"},{"location":"about/release-notes/#new-commands_37","text":"OneDrive: onedrive report activityuserdetail - gets details about OneDrive activity by user #1255 onedrive report usageaccountdetail - gets details about OneDrive usage by account #1251 SharePoint: spo report siteusagefilecounts - get the total number of files across all sites and the number of active files #1247 spo report siteusagepages - gets the number of pages viewed across all sites #1250 spo report siteusagesitecounts - gets the total number of files across all sites and the number of active files #1248 spo report siteusagestorage - gets the trend of storage allocated and consumed during the reporting period #1249","title":"New commands"},{"location":"about/release-notes/#changes_38","text":"fixed error using command spo listitem add when text field value only contains numbers #1297 added support for upgrading projects built using SharePoint Framework v1.9.1 #1310","title":"Changes"},{"location":"about/release-notes/#v240","text":"","title":"v2.4.0"},{"location":"about/release-notes/#new-commands_38","text":"OneDrive: onedrive report activityfilecounts - gets the number of unique, licensed users that performed file interactions against any OneDrive account #1257 onedrive report activityusercounts - gets the trend in the number of active OneDrive users #1256 onedrive report usageaccountcounts - gets the trend in the number of active OneDrive for Business sites #1252 onedrive report usagefilecounts - gets the total number of files across all sites and how many are active files #1253 onedrive report usagestorage - gets the trend on the amount of storage you are using in OneDrive for Business #1254 Outlook: outlook report mailappusageversionsusercounts - gets the count of unique users by Outlook desktop version #1215 outlook report mailboxusagemailboxcount - gets the total number of user mailboxes in your organization and how many are active each day of the reporting period #1217 outlook report mailboxusagequotastatusmailboxcounts - gets the count of user mailboxes in each quota category #1218 outlook report mailboxusagestorage - gets the amount of mailbox storage used in your organization #1219 outlook report mailappusageusercounts - gets the count of unique users that connected to Exchange Online using any email app #1214 outlook report mailactivityusercounts - enables you to understand trends on the number of unique users who are performing email activities like send, read, and receive #1211 outlook report mailactivitycounts - enables you to understand the trends of email activity (like how many were sent, read, and received) in your organization #1210 outlook report mailboxusagedetail - gets details about mailbox usage #1216 outlook report mailappusageuserdetail - gets details about which activities users performed on the various email apps #1212 outlook report mailactivityuserdetail - gets details about email activity users have performed #1209 outlook report mailappusageappsusercounts - gets the count of unique users per email app #1213 SharePoint: spo feature disable - disables feature for the specified site or web #676 spo site rename - renames the URL and title of a site collection #1197 Yammer: yammer message remove - removes a Yammer message #1106 Power Apps: pa connector list - lists Power Apps and Power Automate (Flow) connectors #1237","title":"New commands"},{"location":"about/release-notes/#changes_39","text":"added support for setting CSOM properties on web #1202 Rush stack compiler made optional for 1.9.1 upgrade #1222","title":"Changes"},{"location":"about/release-notes/#v230","text":"","title":"v2.3.0"},{"location":"about/release-notes/#new-commands_39","text":"SharePoint Framework: spfx project externalize - externalizes SharePoint Framework project dependencies #571 Yammer: yammer message get - returns a Yammer message #1105 yammer message list - returns all accessible messages from the user's Yammer network #1104 yammer user list - returns users from the current network #1113","title":"New commands"},{"location":"about/release-notes/#changes_40","text":"added the 'Authenticate with and call the Microsoft Graph' example #1186 fixed the 'spo hubsite list' command #1180 fixed the 'spo file add' command #1179 added case-sensitive option parsing #1182 added 'Lists active SharePoint site collection application catalogs' sample #1194 extended the 'yammer message list' command #1184 excluded unsupported modules in 'spfx project externalize' #1191","title":"Changes"},{"location":"about/release-notes/#v220","text":"","title":"v2.2.0"},{"location":"about/release-notes/#new-commands_40","text":"Azure Active Directory: aad o365group report activitydetail - get details about Microsoft 365 Groups activity by group #1130 aad o365group report activitycounts - get the number of group activities across group workloads #1159 aad o365group report activitygroupcounts - get the daily total number of groups and how many of them were active based on email conversations, Yammer posts, and SharePoint file activities #1160 Flow: flow remove - removes the specified Microsoft Flow #1063 PowerApps: pa solution reference add - adds a project reference to the solution in the current directory #954 SharePoint Online: spo apppage set - updates the single-part app page #875 spo feature enable - enables feature for the specified site or web #675 Microsoft Teams: teams message reply list - retrieves replies to a message from a channel in a Microsoft Teams team #1109 Yammer: yammer network list - returns a list of networks to which the current user has access #1115 yammer user get - retrieves the current user or searches for a user by ID or e-mail #1107","title":"New commands"},{"location":"about/release-notes/#changes_41","text":"updated pa commands to reflect official pac cli v1.0.6 #1129 added the 'Govern orphaned Microsoft Teams' example #1147 added the 'remove custom themes' example #1137 corrected 'aad o365group user list' alias #1149 updated 'spo storageentity set' docs about handling trailing slash #1153 updated vorpal to 1.11.7 #1150 added versions to deps for building docs in CI #1157 added the 'consent' command #1162 added the 'Delete custom SharePoint site designs' example #1138","title":"Changes"},{"location":"about/release-notes/#v210","text":"","title":"v2.1.0"},{"location":"about/release-notes/#new-commands_41","text":"SharePoint Online: spo contenttypehub get - returns the URL of the SharePoint Content Type Hub of the Tenant #905 Microsoft Teams: teams channel remove - removes the specified channel in the Microsoft Teams team #814 PowerApps: pa pcf init - Creates new PowerApps component framework project #952 pa solution init - initializes a directory with a new CDS solution project #953 Global: util accesstoken get - gets access token for the specified resource #1072","title":"New commands"},{"location":"about/release-notes/#changes_42","text":"updated vorpal to 1.11.6 #1092 removed spo-specific action implementation #1092 implemented passing AAD error during device code auth #1095 added handling forbidden errors #1096 fixed handling Flow nextLink #1114 added support for multi-shell #887 renamed the outlook sendmail command #1103 extended teams report commands with support for specifying output file #1075 added support for adding web parts to empty pages #740","title":"Changes"},{"location":"about/release-notes/#v200","text":"","title":"v2.0.0"},{"location":"about/release-notes/#new-commands_42","text":"SharePoint Online: spo apppage add - creates a single-part app page #874 spo homesite remove - removes the current Home Site #1002 spo orgassetslibrary list - lists all libraries that are assigned as org asset library #1041 spo get - gets the context URL for the root SharePoint site collection and SharePoint tenant admin site #1071 spo set - sets the URL of the root SharePoint site collection for use in SPO commands #1070 Microsoft Teams: teams report deviceusagedistributionusercounts - gets the number of Microsoft Teams unique users by device type #1012 teams report deviceusageusercounts - gets the number of Microsoft Teams daily unique users by device type #1011 teams report useractivityusercounts - gets the number of Microsoft Teams users by activity type #1027 teams report useractivitycounts - gets the number of Microsoft Teams activities by activity type #1028 teams report useractivityuserdetail - gets details about Microsoft Teams user activity by user #1029 Microsoft Flow: flow disable - disables Microsoft Flow #1055 flow enable - enables Microsoft Flow #1054 Microsoft 365 groups: aad o365group teamify - creates a new Microsoft Teams team under existing Microsoft 365 group #872 Microsoft Graph: graph schemaextension get - gets the properties of the specified schema extension definition #14","title":"New commands"},{"location":"about/release-notes/#changes_43","text":"simplified login #889 API name removed from the command name #890 extended 'spo web set' with searchScope option #947 fixed 'Access token is empty' error for 'teams report deviceusageuserdetail' #1025 updated documentation on connecting the CLI when protected cert #1023 extended 'spfx project upgrade' with outputFile option #984 login extended with support for authentication using Personal Information Exchange (.pfx) file #1030","title":"Changes"},{"location":"about/release-notes/#v1230","text":"added support for upgrading projects built using SharePoint Framework v1.8.2 #1044","title":"v1.23.0"},{"location":"about/release-notes/#v1220","text":"","title":"v1.22.0"},{"location":"about/release-notes/#new-commands_43","text":"SharePoint Online: spo homesite get - gets information about the Home Site #1000 spo homesite set - sets the specified site as the Home Site #1001 spo listitem isrecord - checks if the specified list item is a record #771 Microsoft Graph: graph o365group user set - updates role of the specified user in the specified Microsoft 365 Group or Microsoft Teams team #982 graph planner task list - lists Planner tasks for the currently logged in user #990 graph report teamsdeviceusageuserdetail - gets information about Microsoft Teams device usage by user #960 graph teams funsettings set - updates fun settings of a Microsoft Teams team #817 Microsoft 365: tenant id get - gets Microsoft 365 tenant ID for the specified domain #998","title":"New commands"},{"location":"about/release-notes/#changes_44","text":"extended 'spo site add' with support for specifying owners #823 extended 'graph o365group list' with support for orphaned groups #959 added support for superseding SPFx project upgrade findings #970 added support for package managers #617 extended 'spo page set' with support for promoting as template #978 extended 'spo page add' with support for promoting as template #977","title":"Changes"},{"location":"about/release-notes/#v1210","text":"","title":"v1.21.0"},{"location":"about/release-notes/#new-commands_44","text":"SharePoint Online: spo orgnewssite list - lists all organizational news sites #975 spo orgnewssite remove - removes a site from the list of organizational news sites #976 spo orgnewssite set - marks site as an organizational news site #974 Microsoft Graph: graph teams set - updates settings of a Microsoft Teams team #815","title":"New commands"},{"location":"about/release-notes/#v1200","text":"","title":"v1.20.0"},{"location":"about/release-notes/#new-commands_45","text":"SharePoint Online: spo contenttype remove - deletes site content type #904 Microsoft Graph: graph o365group user list - lists users for the specified Microsoft 365 group or Microsoft Teams team #802 graph teams clone - creates a clone of a Microsoft Teams team #924","title":"New commands"},{"location":"about/release-notes/#changes_45","text":"extended 'spo theme apply' with support for applying standard themes #920 improved detecting SPFx React projects solving #968","title":"Changes"},{"location":"about/release-notes/#v1190","text":"","title":"v1.19.0"},{"location":"about/release-notes/#changes_46","text":"added support for upgrading projects built using SharePoint Framework v1.8.1 #934","title":"Changes"},{"location":"about/release-notes/#v1180","text":"","title":"v1.18.0"},{"location":"about/release-notes/#new-commands_46","text":"SharePoint Online: spo site commsite enable - enables communication site features on the specified site #937 Microsoft Graph: graph o365group renew - renews Microsoft 365 group's expiration #870 graph o365group user remove - removes the specified user from specified Microsoft 365 Group or Microsoft Teams team #846","title":"New commands"},{"location":"about/release-notes/#changes_47","text":"centralized executing HTTP requests solving #888 fixed bug in loading commands #942 fixed saving files in 'spo file get' #931 extended 'spo web set' to control footer visibility #946","title":"Changes"},{"location":"about/release-notes/#v1170","text":"","title":"v1.17.0"},{"location":"about/release-notes/#new-commands_47","text":"SharePoint Online: spo contenttype field remove - removes a column from a site- or list content type #673 spo mail send - sends an e-mail from SharePoint #753 Microsoft Graph: graph teams archive - archives specified Microsoft Teams team #899 graph teams channel get - gets information about the specific Microsoft Teams team channel #808 graph teams messagingsettings set - updates messaging settings of a Microsoft Teams team #820 graph teams remove - removes the specified Microsoft Teams team #813 graph teams unarchive - restores an archived Microsoft Teams team #900","title":"New commands"},{"location":"about/release-notes/#changes_48","text":"updated documentation on using custom AAD app #895 added validation for Teams channel IDs #909 fixed the 'spo page clientsidewebpart add' command #913 fixed typo in the 'spo tenant settings set' command options #923 updated commands to use MS Graph v1.0 endpoint #865 added support for upgrading projects built using SharePoint Framework v1.8.0 #932","title":"Changes"},{"location":"about/release-notes/#v1160","text":"","title":"v1.16.0"},{"location":"about/release-notes/#new-commands_48","text":"SharePoint Online: spo listitem record declare - declares the specified list item as a record #769 Microsoft Graph: graph o365group user add - adds user to specified Microsoft 365 Group or Microsoft Teams team #847 graph schemaextension add - creates a Microsoft Graph schema extension #13 graph teams add - adds a new Microsoft Teams team #615 graph teams app uninstall - uninstalls an app from a Microsoft Team team #843 graph teams channel set - updates properties of the specified channel in the given Microsoft Teams team #816 graph teams guestsettings set - updates guest settings of a Microsoft Teams team #818 graph teams tab list - lists tabs in the specified Microsoft Teams channel #849","title":"New commands"},{"location":"about/release-notes/#changes_49","text":"extended 'graph teams app list' #859 added 'spo site groupify' alias #873 fixed the 'spo page section add' command #908 fixed the 'spo page header set' command #911","title":"Changes"},{"location":"about/release-notes/#v1150","text":"","title":"v1.15.0"},{"location":"about/release-notes/#new-commands_49","text":"SharePoint Online: spo field remove - removes the specified list- or site column #738 spo listitem record undeclare - undeclares list item as a record #770 spo web reindex - requests reindexing the specified subsite #822 Microsoft Graph: graph teams app install - installs an app from the catalog to a Microsoft Teams team #842 graph teams funsettings list - lists fun settings for the specified Microsoft Teams team #809 graph teams guestsettings list - lists guests settings for a Microsoft Teams team #810 graph teams membersettings list - lists member settings for a Microsoft Teams team #811 graph teams membersettings set - updates member settings of a Microsoft Teams team #819 graph teams messagingsettings list - lists messaging settings for a Microsoft Teams team #812","title":"New commands"},{"location":"about/release-notes/#changes_50","text":"fixed ID of the FN002009 SPFx project upgrade rule #854 fixed issue with updating the header of non-en-US pages #851 added support for upgrading projects built using SharePoint Framework v1.7.1 #848","title":"Changes"},{"location":"about/release-notes/#v1140","text":"","title":"v1.14.0"},{"location":"about/release-notes/#new-commands_50","text":"SharePoint Online: spo list label get - gets label set on the specified list #773 spo list label set - sets classification label on the specified list #772 spo list view field add - adds the specified field to list view #735 spo list view field remove - removes the specified field from list view #736 spo site inplacerecordsmanagement set - activates or deactivates in-place records management for a site collection #774 spo sitedesign run list - lists information about site designs applied to the specified site #779 spo sitedesign run status get - gets information about the site scripts executed for the specified site design #780 spo sitedesign task get - gets information about the specified site design scheduled for execution #782 spo sitedesign task list - lists site designs scheduled for execution on the specified site #781 Microsoft Graph: graph teams app list - lists apps from the Microsoft Teams app catalog #826 graph teams app publish - publishes Teams app to the organization's app catalog #824 graph teams app remove - removes a Teams app from the organization's app catalog #825 graph teams app update - updates Teams app in the organization's app catalog #827 graph teams channel list - lists channels in the specified Microsoft Teams team #586 graph teams user remove - removes the specified user from the specified Microsoft Teams team #757 graph teams user set - updates role of the specified user in the given Microsoft Teams team #760","title":"New commands"},{"location":"about/release-notes/#changes_51","text":"updated 'spo list webhook list' parameters #747 updated 'azmgmt flow list' to support paged content #776 added fieldTitle, listId and listUrl options to 'spo file get' #754 extended 'spo sitedesign apply' with large site designs #714 added support for dynamic data #751 extended 'spo web set' with modern UI options #798","title":"Changes"},{"location":"about/release-notes/#v1130","text":"","title":"v1.13.0"},{"location":"about/release-notes/#new-commands_51","text":"SharePoint Online: spo feature list - lists Features activated in the specified site or site collection #677 spo file move - moves a file to another location #671 spo list view list - lists views configured on the specified list #732 spo list sitescript get - extracts a site script from a SharePoint list #713 spo list view get - gets information about specific list view #730 spo list view remove - deletes the specified view from the list #731 Microsoft Graph: graph teams message list - lists all messages from a channel in a Microsoft Teams team #588 graph teams user add - adds user to the specified Microsoft Teams team #690 graph teams user list - lists users for the specified Microsoft Teams team #689","title":"New commands"},{"location":"about/release-notes/#changes_52","text":"added support for specifying language when creating site #728 fixed bug in setting client-side web part order #712 added support for authentication using certificate #389 renamed 'graph teams channel message get' to 'graph teams message get' extended 'spo folder copy' with support for schema mismatch #706 extended 'spo file copy' with support for schema mismatch #705 updated showing scope in 'spo customaction list' #742 extended 'spo hubsite list' with info about associated sites #709 added support for SPO-D URLs solving #759","title":"Changes"},{"location":"about/release-notes/#v1120","text":"","title":"v1.12.0"},{"location":"about/release-notes/#new-commands_52","text":"SharePoint Online: spo folder move - moves a folder to another location #672 spo page text add - adds text to a modern page #365","title":"New commands"},{"location":"about/release-notes/#changes_53","text":"added support for site collection app catalog in the spo app install, -retract, -uninstall and -upgrade commands #405 fixed bug with caching tokens for SPO commands #719","title":"Changes"},{"location":"about/release-notes/#v1110","text":"","title":"v1.11.0"},{"location":"about/release-notes/#new-commands_53","text":"SharePoint Online: spo list webhook add - adds a new webhook to the specified list #652 spo page header set - sets modern page header #697","title":"New commands"},{"location":"about/release-notes/#changes_54","text":"added support for setting page title #693 added support for adding child navigation nodes #695 added support for specifying web part data and fixed web parts lookup #701 , #703 removed treating values of unknown options as numbers #702 added support for site collection app catalog in the spo app add, -deploy, -get, -list and -remove commands #405 (partially) added support for upgrading projects built using SharePoint Framework v1.7.0 #716","title":"Changes"},{"location":"about/release-notes/#v1100","text":"","title":"v1.10.0"},{"location":"about/release-notes/#new-commands_54","text":"SharePoint Online: spo field set - updates existing list or site column #661 spo file add - uploads file to the specified folder #283 spo list contenttype add - adds content type to list #594 spo list contenttype list - lists content types configured on the list #595 spo list contenttype remove - removes content type from list #668 spo list view set - updates existing list view #662 spo list webhook remove - removes the specified webhook from the list #650 spo list webhook set - updates the specified webhook #651 spo search - executes a search query #316 spo serviceprincipal grant add - grants the service principal permission to the specified API #590 Microsoft Graph: graph siteclassification set - updates site classification configuration #304 graph teams channel message get - retrieves a message from a channel in a Microsoft Teams team #589","title":"New commands"},{"location":"about/release-notes/#changes_55","text":"added support for adding child terms #686","title":"Changes"},{"location":"about/release-notes/#v190","text":"","title":"v1.9.0"},{"location":"about/release-notes/#changes_56","text":"added support for upgrading projects built using SharePoint Framework v1.6.0 #663","title":"Changes"},{"location":"about/release-notes/#v180","text":"","title":"v1.8.0"},{"location":"about/release-notes/#new-commands_55","text":"SharePoint Online: spo list webhook get - gets information about the specific webhook #590 spo tenant settings set - sets tenant global settings #549 spo term add - adds taxonomy term #605 spo term get - gets information about the specified taxonomy term #604 spo term list - lists taxonomy terms from the given term set #603 spo term group add - adds taxonomy term group #598 spo term set add - adds taxonomy term set #602 spo term set get - gets information about the specified taxonomy term set #601 spo term set list - lists taxonomy term sets from the given term group #600 Microsoft Graph: graph siteclassification disable - disables site classification #302 graph siteclassification enable - enables site classification #301 graph teams channel add - adds a channel to the specified Microsoft Teams team #587","title":"New commands"},{"location":"about/release-notes/#changes_57","text":"improved SPFx project upgrade text report #591 updated the 'spo tenant settings list' command #623 changed commands to be lazy-loaded #624 added error codes to the 'spfx project upgrade' command #630 changed vorpal dependency to https #637 added retrieving GuestUsageGuidelinesUrl #640","title":"Changes"},{"location":"about/release-notes/#v170","text":"","title":"v1.7.0"},{"location":"about/release-notes/#new-commands_56","text":"SharePoint Online: spo list webhook list - lists all webhooks for the specified list #579 spo listitem list - gets a list of items from the specified list #268 spo page column get - get information about a specific column of a modern page #412 spo page remove - removes a modern page #363 spo page section add - adds section to modern page #364 spo site classic remove - removes the specified site #125 spo tenant settings list - lists the global tenant settings #548 spo term group get - gets information about the specified taxonomy term group #597 spo term group list - lists taxonomy term groups #596 Microsoft Graph: graph groupsetting remove - removes the particular group setting #452 graph groupsetting set - removes the particular group setting #451 Azure Management Service: azmgmt flow export - exports the specified Microsoft Flow as a file #383 azmgmt flow run get - gets information about a specific run of the specified Microsoft Flow #400 azmgmt flow run list - lists runs of the specified Microsoft Flow #399","title":"New commands"},{"location":"about/release-notes/#changes_58","text":"added support for upgrading projects built using SharePoint Framework v1.5.1 #569 added support for setting debug and verbose mode using an environment variable #54 extended the 'spo cdn set' command, solving. Added support for managing both CDNs. Added support for enabling CDNs without provisioning default origins #230 fixed bug in reporting SPFx project upgrade findings solving #582 fixed upgrade SPFx 1.6.0 FN012012 always returns a finding #580 combined npm commands in SPFx project upgrade summary solving #508 renamed 'connect' commands to 'login' #574 updated docs on escaping objectId in aad oauth2grant set and remove #606 added 'npm dedupe' SPFx project upgrade rule #612","title":"Changes"},{"location":"about/release-notes/#v160","text":"","title":"v1.6.0"},{"location":"about/release-notes/#new-commands_57","text":"SharePoint Online: spo contenttype field set - adds or updates a site column reference in a site content type #520 spo page section get - gets information about the specified modern page section #410 spo page section list - lists sections in the specific modern page #409 Microsoft Graph: graph teams list - lists Microsoft Teams in the current tenant #558","title":"New commands"},{"location":"about/release-notes/#changes_59","text":"added support for upgrading projects built using SharePoint Framework v1.1.3 #485 added support for upgrading projects built using SharePoint Framework v1.1.1 #487 added support for upgrading projects built using SharePoint Framework v1.1.0 #488 added support for upgrading projects built using SharePoint Framework v1.0.2 #537 added support for upgrading projects built using SharePoint Framework v1.0.1 #536 added support for upgrading projects built using SharePoint Framework v1.0.0 #535 fixed created content type have different ID than specified #550","title":"Changes"},{"location":"about/release-notes/#v150","text":"","title":"v1.5.0"},{"location":"about/release-notes/#new-commands_58","text":"SharePoint Online: spo contenttype add - adds a new list or site content type #519 spo contenttype get - retrieves information about the specified list or site content type #532 spo field add - adds a new list or site column using the CAML field definition #518 spo field get - retrieves information about the specified list or site column #528 spo navigation node add - adds a navigation node to the specified site navigation #521 spo navigation node list - lists nodes from the specified site navigation #522 spo navigation node remove - removes the specified navigation node #523 spo page clientsidewebpart add - adds a client-side web part to a modern page #366 spo page column list - lists columns in the specific section of a modern page #411 spo web set - updates subsite properties #191","title":"New commands"},{"location":"about/release-notes/#changes_60","text":"fixed exit code on error in the 'spo site add' command #511 Added support for retrieving apps by their name #516","title":"Changes"},{"location":"about/release-notes/#v140","text":"","title":"v1.4.0"},{"location":"about/release-notes/#new-commands_59","text":"SharePoint Online: spo file checkin - checks in specified file #284 spo file checkout - checks out specified file #285 spo folder rename - renames a folder #429 spo listitem get - gets a list item from the specified list #269 spo listitem set - updates a list item in the specified list #271 SharePoint Framework: spfx project upgrade - upgrades SharePoint Framework project to the specified version #471","title":"New commands"},{"location":"about/release-notes/#changes_61","text":"refactored to return non-zero error code on error #468 fixed adding item to list referenced by id #473 added support for upgrading projects built using SharePoint Framework v1.4.0 #478 added support for upgrading projects built using SharePoint Framework v1.3.4 #479 added support for upgrading projects built using SharePoint Framework v1.3.2 #481 added support for upgrading projects built using SharePoint Framework v1.3.1 #482 added support for upgrading projects built using SharePoint Framework v1.3.0 #483 added support for upgrading projects built using SharePoint Framework v1.2.0 #484 clarified usage of the spo file get command #497 added support for upgrading projects built using SharePoint Framework v1.5.0 #505","title":"Changes"},{"location":"about/release-notes/#v130","text":"","title":"v1.3.0"},{"location":"about/release-notes/#new-commands_60","text":"SharePoint Online: spo file copy - copies a file to another location #286 spo folder add - creates a folder within a parent folder #425 spo folder copy - copies a folder to another location #424 spo folder get - gets information about the specified folder #427 spo folder list - returns all folders under the specified parent folder #428 spo folder remove - deletes the specified folder #426 spo hidedefaultthemes get - gets the current value of the HideDefaultThemes setting #341 spo hidedefaultthemes set - sets the value of the HideDefaultThemes setting #342 spo site o365group set - connects site collection to an Microsoft 365 Group #431 spo theme apply - applies theme to the specified site #343 Microsoft Graph: graph groupsetting add - creates a group setting #443 graph groupsetting get - gets information about the particular group setting #450 graph groupsetting list - lists Azure AD group settings #449 graph groupsettingtemplate get - gets information about the specified Azure AD group settings template #442 graph groupsettingtemplate list - lists Azure AD group settings templates #441 graph user sendmail - sends e-mail on behalf of the current user #328","title":"New commands"},{"location":"about/release-notes/#changes_62","text":"added support for re-consenting the AAD app #421 added update notification #200 extended the 'spo app deploy' command to support specifying app using its name #404 extended the 'spo app add' command to return the information about the added app #463","title":"Changes"},{"location":"about/release-notes/#v120","text":"","title":"v1.2.0"},{"location":"about/release-notes/#new-commands_61","text":"SharePoint Online: spo file remove - removes the specified file #287 spo hubsite data get - gets hub site data for the specified site #394 spo hubsite theme sync - applies any theme updates from the parent hub site #401 spo listitem add - creates a list item in the specified list #270 spo listitem remove - removes the specified list item #272 spo page control get - gets information about the specific control on a modern page #414 spo page control list - lists controls on the specific modern page #413 spo page get - gets information about the specific modern page #360 spo propertybag set - sets the value of the specified property in the property bag #393 spo web clientsidewebpart list - lists available client-side web parts #367 Microsoft Graph: graph user get - gets information about the specified user #326 graph user list - lists users matching specified criteria #327","title":"New commands"},{"location":"about/release-notes/#changes_63","text":"added support for authenticating using credentials solving #388","title":"Changes"},{"location":"about/release-notes/#v110","text":"","title":"v1.1.0"},{"location":"about/release-notes/#new-commands_62","text":"SharePoint Online: spo file get - gets information about the specified file #282 spo page add - creates modern page #361 spo page list - lists all modern pages in the given site #359 spo page set - updates modern page properties #362 spo propertybag remove - removes specified property from the property bag #291 spo sitedesign apply - applies a site design to an existing site collection #339 spo theme get - gets custom theme information #349 spo theme list - retrieves the list of custom themes #332 spo theme remove - removes existing theme #331 spo theme set - add or update a theme #330 , #340 spo web get - retrieve information about the specified site #188 Microsoft Graph: graph o365group remove - removes an Microsoft 365 Group #309 graph o365group restore - restores a deleted Microsoft 365 Group #346 graph siteclassification get - gets site classification configuration #303 Azure Management Service: azmgmt login - log in to the Azure Management Service #378 azmgmt logout - log out from the Azure Management Service #378 azmgmt status - shows Azure Management Service login status #378 azmgmt flow environment get - gets information about the specified Microsoft Flow environment #380 azmgmt flow environment list - lists Microsoft Flow environments in the current tenant #379 azmgmt flow get - gets information about the specified Microsoft Flow #382 azmgmt flow list - lists Microsoft Flows in the given environment #381","title":"New commands"},{"location":"about/release-notes/#updated-commands","text":"Microsoft Graph: graph o365group list - added support for listing deleted Microsoft 365 Groups #347","title":"Updated commands"},{"location":"about/release-notes/#changes_64","text":"fixed bug in retrieving Microsoft 365 groups in immersive mode solving #351","title":"Changes"},{"location":"about/release-notes/#v100","text":"","title":"v1.0.0"},{"location":"about/release-notes/#breaking-changes","text":"switched to a custom Azure AD application for communicating with Microsoft 365. After installing this version you have to reconnect to Microsoft 365","title":"Breaking changes"},{"location":"about/release-notes/#new-commands_63","text":"SharePoint Online: spo file list - lists all available files in the specified folder and site #281 spo list add - creates list in the specified site #204 spo list remove - removes the specified list #206 spo list set - updates the settings of the specified list #205 spo customaction clear - deletes all custom actions in the collection #231 spo propertybag get - gets the value of the specified property from the property bag #289 spo propertybag list - gets property bag values #288 spo site set - updates properties of the specified site #121 spo site classic add - creates new classic site #123 spo site classic set - change classic site settings #124 spo sitedesign set - updates a site design with new values #251 spo tenant appcatalogurl get - gets the URL of the tenant app catalog #315 spo web add - create new subsite #189 spo web list - lists subsites of the specified site #187 spo web remove - delete specified subsite #192 Microsoft Graph: graph - log in to the Microsoft Graph #10 graph - log out from the Microsoft Graph #10 graph - shows Microsoft Graph login status #10 graph o365group add - creates Microsoft 365 Group #308 graph o365group get - gets information about the specified Microsoft 365 Group #306 graph o365group list - lists Microsoft 365 Groups in the current tenant #305 graph o365group set - updates Microsoft 365 Group properties #307","title":"New commands"},{"location":"about/release-notes/#changes_65","text":"fixed bug in logging dates #317 fixed typo in the example of the spo cdn origin add command #338","title":"Changes"},{"location":"about/release-notes/#v050","text":"","title":"v0.5.0"},{"location":"about/release-notes/#breaking-changes_1","text":"changed the spo site get command to return SPSite properties #293","title":"Breaking changes"},{"location":"about/release-notes/#new-commands_64","text":"SharePoint Online: spo sitescript add - adds site script for use with site designs #65 spo sitescript list - lists site script available for use with site designs #66 spo sitescript get - gets information about the specified site script #67 spo sitescript remove - removes the specified site script #68 spo sitescript set - updates existing site script #216 spo sitedesign add - adds site design for creating modern sites #69 spo sitedesign get - gets information about the specified site design #86 spo sitedesign list - lists available site designs for creating modern sites #85 spo sitedesign remove - removes the specified site design #87 spo sitedesign rights grant - grants access to a site design for one or more principals #88 spo sitedesign rights revoke - revokes access from a site design for one or more principals #89 spo sitedesign rights list - gets a list of principals that have access to a site design #90 spo list get - gets information about the specific list #199 spo customaction remove - removes the specified custom action #21 spo site classic list - lists sites of the given type #122 spo list list - lists all available list in the specified site #198 spo hubsite list - lists hub sites in the current tenant #91 spo hubsite get - gets information about the specified hub site #92 spo hubsite register - registers the specified site collection as a hub site #94 spo hubsite unregister - unregisters the specified site collection as a hub site #95 spo hubsite set - updates properties of the specified hub site #96 spo hubsite connect - connects the specified site collection to the given hub site #97 spo hubsite disconnect - disconnects the specifies site collection from its hub site #98 spo hubsite rights grant - grants permissions to join the hub site for one or more principals #99 spo hubsite rights revoke - revokes rights to join sites to the specified hub site for one or more principals #100 spo customaction set - updates a user custom action for site or site collection #212","title":"New commands"},{"location":"about/release-notes/#changes_66","text":"fixed issue with prompts in non-interactive mode #142 added information about the current user to status commands #202 fixed issue with completing input that doesn't match commands #222 fixed issue with escaping numeric input #226 changed the aad oauth2grant list , spo app list , spo customaction list , spo site list commands to list all properties for output type JSON #232 , #233 , #234 , #235 fixed issue with generating clink completion file #252 added user guide #236 , #237 , #238 , #239","title":"Changes"},{"location":"about/release-notes/#v040","text":"","title":"v0.4.0"},{"location":"about/release-notes/#breaking-changes_2","text":"renamed the spo cdn origin set command to spo cdn origin add #184","title":"Breaking changes"},{"location":"about/release-notes/#new-commands_65","text":"SharePoint Online: spo customaction list - lists user custom actions for site or site collection #19 spo site get - gets information about the specific site collection #114 spo site list - lists modern sites of the given type #115 spo site add - creates new modern site #116 spo app remove - removes the specified app from the tenant app catalog #9 spo site appcatalog add - creates a site collection app catalog in the specified site #63 spo site appcatalog remove - removes site collection scoped app catalog from site #64 spo serviceprincipal permissionrequest list - lists pending permission requests #152 spo serviceprincipal permissionrequest approve - approves the specified permission request #153 spo serviceprincipal permissionrequest deny - denies the specified permission request #154 spo serviceprincipal grant list - lists permissions granted to the service principal #155 spo serviceprincipal grant revoke - revokes the specified set of permissions granted to the service principal #155 spo serviceprincipal set - enable or disable the service principal #157 spo customaction add - adds a user custom action for site or site collection #18 spo externaluser list - lists external users in the tenant #27 Azure Active Directory Graph: aad login - log in to the Azure Active Directory Graph #160 aad logout - log out from Azure Active Directory Graph #161 aad status - shows Azure Active Directory Graph login status #162 aad sp get - gets information about the specific service principal #158 aad oauth2grant list - lists OAuth2 permission grants for the specified service principal #159 aad oauth2grant add - grant the specified service principal OAuth2 permissions to the specified resource #164 aad oauth2grant set - update OAuth2 permissions for the service principal #163 aad oauth2grant remove - remove specified service principal OAuth2 permissions #165","title":"New commands"},{"location":"about/release-notes/#changes_67","text":"added support for persisting connection #46 fixed authentication bug in spo app install , spo app uninstall and spo app upgrade commands when connected to the tenant admin site #118 fixed authentication bug in the spo customaction get command when connected to the tenant admin site #113 fixed bug in rendering help for commands when using the --help option #104 added detailed output to the spo customaction get command #93 improved collecting telemetry #130 , #131 , #132 , #133 added support for the skipFeatureDeployment flag to the spo app deploy command #134 wrapped executing commands in try..catch #109 added serializing objects in log #108 added support for autocomplete in Zsh, Bash and Fish and Clink (cmder) on Windows #141 , #190","title":"Changes"},{"location":"about/release-notes/#v030","text":"","title":"v0.3.0"},{"location":"about/release-notes/#new-commands_66","text":"SharePoint Online: spo customaction get - gets information about the specific user custom action #20","title":"New commands"},{"location":"about/release-notes/#changes_68","text":"changed command output to silent #47 added user-agent string to all requests #52 refactored spo cdn get and spo storageentity set to use the getRequestDigest helper #78 and #80 added common handler for rejected OData promises #59 added Google Analytics code to documentation #84 added support for formatting command output as JSON #48","title":"Changes"},{"location":"about/release-notes/#v020","text":"","title":"v0.2.0"},{"location":"about/release-notes/#new-commands_67","text":"SharePoint Online: spo app add - add an app to the specified SharePoint Online app catalog #3 spo app deploy - deploy the specified app in the tenant app catalog #7 spo app get - get information about the specific app from the tenant app catalog #2 spo app install - install an app from the tenant app catalog in the site #4 spo app list - list apps from the tenant app catalog #1 spo app retract - retract the specified app from the tenant app catalog #8 spo app uninstall - uninstall an app from the site #5 spo app upgrade - upgrade app in the specified site #6","title":"New commands"},{"location":"about/release-notes/#v011","text":"","title":"v0.1.1"},{"location":"about/release-notes/#changes_69","text":"Fixed bug in resolving command paths on Windows","title":"Changes"},{"location":"about/release-notes/#v010","text":"Initial release.","title":"v0.1.0"},{"location":"about/release-notes/#new-commands_68","text":"SharePoint Online: spo cdn get - get Microsoft 365 CDN status spo cdn origin list - list Microsoft 365 CDN origins spo cdn origin remove - remove Microsoft 365 CDN origin spo cdn origin add - add Microsoft 365 CDN origin spo cdn policy list - list Microsoft 365 CDN policies spo cdn policy set - set Microsoft 365 CDN policy spo cdn set - enable/disable Microsoft 365 CDN spo login - log in to a SharePoint Online site spo logout - log out from SharePoint spo status - show SharePoint Online login status spo storageentity get - get value of a tenant property spo storageentity list - list all tenant properties spo storageentity remove - remove a tenant property spo storageentity set - set a tenant property","title":"New commands"},{"location":"about/team/","text":"Meet the Team \u00b6 Do you want to know the curious and bright minds behind the CLI for Microsoft 365? Look no further! Below you will find a list of all our hard-working maintainers and brilliant contributors. Maintainers \u00b6 Contributors \u00b6","title":"Team"},{"location":"about/team/#meet-the-team","text":"Do you want to know the curious and bright minds behind the CLI for Microsoft 365? Look no further! Below you will find a list of all our hard-working maintainers and brilliant contributors.","title":"Meet the Team"},{"location":"about/team/#maintainers","text":"","title":"Maintainers"},{"location":"about/team/#contributors","text":"","title":"Contributors"},{"location":"about/why-cli/","text":"Why this CLI \u00b6 CLI for Microsoft 365 is a cross-platform CLI that allows users on any platform to manage various configuration settings of Microsoft 365. While building solutions for Microsoft 365 expands beyond the Windows operating system, managing many of the platform settings is possible only through PowerShell on Windows. As more and more users work on non-Windows machines, it's inconvenient for them to have to use a Windows virtual machine to configure their tenants. The CLI for Microsoft 365 allows them to configure their tenants no matter which operating system they use.","title":"Why this CLI"},{"location":"about/why-cli/#why-this-cli","text":"CLI for Microsoft 365 is a cross-platform CLI that allows users on any platform to manage various configuration settings of Microsoft 365. While building solutions for Microsoft 365 expands beyond the Windows operating system, managing many of the platform settings is possible only through PowerShell on Windows. As more and more users work on non-Windows machines, it's inconvenient for them to have to use a Windows virtual machine to configure their tenants. The CLI for Microsoft 365 allows them to configure their tenants no matter which operating system they use.","title":"Why this CLI"},{"location":"cmd/_global/","text":"-h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":" global"},{"location":"cmd/login/","text":"login \u00b6 Log in to Microsoft 365 Usage \u00b6 m365 login [ options ] Options \u00b6 -t, --authType [authType] The type of authentication to use. Allowed values certificate,deviceCode,password,identity,browser,secret . Default deviceCode -u, --userName [userName] Name of the user to authenticate. Required when authType is set to password -p, --password [password] Password for the user or the certificate. Required when authType is set to password , or when authType is set to certificate and the provided certificate requires a password to open -c, --certificateFile [certificateFile] Path to the file with certificate private key. When authType is set to certificate , specify either certificateFile or certificateBase64Encoded --certificateBase64Encoded [certificateBase64Encoded] Base64-encoded string with certificate private key. When authType is set to certificate , specify either certificateFile or certificateBase64Encoded --thumbprint [thumbprint] Certificate thumbprint. If not specified, and authType is set to certificate , it will be automatically calculated based on the specified certificate -s, --secret [secret] Client Secret of the Azure AD application to use for authentication. Required when authType is set to secret . --appId [appId] App ID of the Azure AD application to use for authentication. If not specified, use the app specified in the CLIMICROSOFT365_AADAPPID environment variable. If the environment variable is not defined, use the multitenant PnP Management Shell app --tenant [tenant] ID of the tenant from which accounts should be able to authenticate. Use common or organization if the app is multitenant. If not specified, use the tenant specified in the CLIMICROSOFT365_TENANT environment variable. If the environment variable is not defined, use common as the tenant identifier -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 Using the login command you can log in to Microsoft 365. By default, the login command uses device code OAuth flow to log in to Microsoft 365. Alternatively, you can authenticate using a user name and password or certificate, which are convenient for CI/CD scenarios, but which come with their own limitations . When logging in to Microsoft 365, the login command stores in memory the access token and the refresh token. Both tokens are cleared from memory after exiting the CLI or by calling the logout command. When logging in to Microsoft 365 using the user name and password, next to the access and refresh token, the CLI for Microsoft 365 will store the user credentials so that it can automatically re-authenticate if necessary. Similarly to the tokens, the credentials are removed by re-authenticating using the device code or by calling the logout command. When logging in to Microsoft 365 using a certificate, the CLI for Microsoft 365 will store the contents of the certificate so that it can automatically re-authenticate if necessary. The contents of the certificate are removed by re-authenticating using the device code or by calling the logout command. To log in to Microsoft 365 using a certificate or secret, you will typically create a custom Azure AD application . To use this application with the CLI for Microsoft 365, you will set the CLIMICROSOFT365_AADAPPID environment variable to the application's ID and the CLIMICROSOFT365_TENANT environment variable to the ID of the Azure AD tenant, where you created the Azure AD application. Also, please make sure to read about the caveats when using the certificate login option . Managed identity in Azure Cloud Shell is the identity of the user. It is neither system- nor user-assigned and it can't be configured. To log in to Microsoft 365 using managed identity in Azure Cloud Shell, set authType to identity and don't specify the userName option. Examples \u00b6 Log in to Microsoft 365 using the device code m365 login Log in to Microsoft 365 using the device code in debug mode including detailed debug information in the console output m365 login --debug Log in to Microsoft 365 using a user name and password m365 login --authType password --userName user@contoso.com --password pass@word1 Log in to Microsoft 365 using a PEM certificate m365 login --authType certificate --certificateFile /Users/user/dev/localhost.pem Log in to Microsoft 365 using a PEM certificate. Use the specified thumbprint m365 login --authType certificate --certificateFile /Users/user/dev/localhost.pem --thumbprint 47C4885736C624E90491F32B98855AA8A7562AF1 Log in to Microsoft 365 using a personal information exchange (.pfx) file m365 login --authType certificate --certificateFile /Users/user/dev/localhost.pfx --password 'pass@word1' Log in to Microsoft 365 using a personal information exchange (.pfx) file protected with an empty password m365 login --authType certificate --certificateFile /Users/user/dev/localhost.pfx --password Log in to Microsoft 365 using a personal information exchange (.pfx) file not protected with a password m365 login --authType certificate --certificateFile /Users/user/dev/localhost.pfx Log in to Microsoft 365 using a personal information exchange (.pfx) file. Use the specified thumbprint m365 login --authType certificate --certificateFile /Users/user/dev/localhost.pfx --thumbprint 47C4885736C624E90491F32B98855AA8A7562AF1 --password 'pass@word1' Log in to Microsoft 365 using a certificate from a base64-encoded string m365 login --authType certificate --certificateBase64Encoded MIII2QIBAzCCCJ8GCSqGSIb3DQEHAaCCCJAEg...eX1N5AgIIAA == --thumbprint D0C9B442DE249F55D10CDA1A2418952DC7D407A3 Log in to Microsoft 365 using a system assigned managed identity. Applies to Azure resources with managed identity enabled, such as Azure Virtual Machines, Azure App Service or Azure Functions m365 login --authType identity Log in to Microsoft 365 using managed identity in Azure Cloud Shell. Uses the identity of the current user. m365 login --authType identity Log in to Microsoft 365 using a user-assigned managed identity. Client id or principal id also known as object id value can be specified in the userName option. Applies to Azure resources with managed identity enabled, such as Azure Virtual Machines, Azure App Service or Azure Functions m365 login --authType identity --userName ac9fbed5-804c-4362-a369-21a4ec51109e Log in to Microsoft 365 using your own multitenant Azure AD application m365 login --appId 31359c7f-bd7e-475c-86db-fdb8c937548c Log in to Microsoft 365 using your own Azure AD application that's restricted only to allow accounts from the specific tenant m365 login --appId 31359c7f-bd7e-475c-86db-fdb8c937548c --tenant 31359c7f-bd7e-475c-86db-fdb8c937548a Log in to Microsoft 365 using the interactive browser authentication. Uses the identity of the current user. m365 login --authType browser Log in to Microsoft 365 using a client secret. m365 login --authType secret --secret topSeCr3t@007","title":"login"},{"location":"cmd/login/#login","text":"Log in to Microsoft 365","title":"login"},{"location":"cmd/login/#usage","text":"m365 login [ options ]","title":"Usage"},{"location":"cmd/login/#options","text":"-t, --authType [authType] The type of authentication to use. Allowed values certificate,deviceCode,password,identity,browser,secret . Default deviceCode -u, --userName [userName] Name of the user to authenticate. Required when authType is set to password -p, --password [password] Password for the user or the certificate. Required when authType is set to password , or when authType is set to certificate and the provided certificate requires a password to open -c, --certificateFile [certificateFile] Path to the file with certificate private key. When authType is set to certificate , specify either certificateFile or certificateBase64Encoded --certificateBase64Encoded [certificateBase64Encoded] Base64-encoded string with certificate private key. When authType is set to certificate , specify either certificateFile or certificateBase64Encoded --thumbprint [thumbprint] Certificate thumbprint. If not specified, and authType is set to certificate , it will be automatically calculated based on the specified certificate -s, --secret [secret] Client Secret of the Azure AD application to use for authentication. Required when authType is set to secret . --appId [appId] App ID of the Azure AD application to use for authentication. If not specified, use the app specified in the CLIMICROSOFT365_AADAPPID environment variable. If the environment variable is not defined, use the multitenant PnP Management Shell app --tenant [tenant] ID of the tenant from which accounts should be able to authenticate. Use common or organization if the app is multitenant. If not specified, use the tenant specified in the CLIMICROSOFT365_TENANT environment variable. If the environment variable is not defined, use common as the tenant identifier -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/login/#remarks","text":"Using the login command you can log in to Microsoft 365. By default, the login command uses device code OAuth flow to log in to Microsoft 365. Alternatively, you can authenticate using a user name and password or certificate, which are convenient for CI/CD scenarios, but which come with their own limitations . When logging in to Microsoft 365, the login command stores in memory the access token and the refresh token. Both tokens are cleared from memory after exiting the CLI or by calling the logout command. When logging in to Microsoft 365 using the user name and password, next to the access and refresh token, the CLI for Microsoft 365 will store the user credentials so that it can automatically re-authenticate if necessary. Similarly to the tokens, the credentials are removed by re-authenticating using the device code or by calling the logout command. When logging in to Microsoft 365 using a certificate, the CLI for Microsoft 365 will store the contents of the certificate so that it can automatically re-authenticate if necessary. The contents of the certificate are removed by re-authenticating using the device code or by calling the logout command. To log in to Microsoft 365 using a certificate or secret, you will typically create a custom Azure AD application . To use this application with the CLI for Microsoft 365, you will set the CLIMICROSOFT365_AADAPPID environment variable to the application's ID and the CLIMICROSOFT365_TENANT environment variable to the ID of the Azure AD tenant, where you created the Azure AD application. Also, please make sure to read about the caveats when using the certificate login option . Managed identity in Azure Cloud Shell is the identity of the user. It is neither system- nor user-assigned and it can't be configured. To log in to Microsoft 365 using managed identity in Azure Cloud Shell, set authType to identity and don't specify the userName option.","title":"Remarks"},{"location":"cmd/login/#examples","text":"Log in to Microsoft 365 using the device code m365 login Log in to Microsoft 365 using the device code in debug mode including detailed debug information in the console output m365 login --debug Log in to Microsoft 365 using a user name and password m365 login --authType password --userName user@contoso.com --password pass@word1 Log in to Microsoft 365 using a PEM certificate m365 login --authType certificate --certificateFile /Users/user/dev/localhost.pem Log in to Microsoft 365 using a PEM certificate. Use the specified thumbprint m365 login --authType certificate --certificateFile /Users/user/dev/localhost.pem --thumbprint 47C4885736C624E90491F32B98855AA8A7562AF1 Log in to Microsoft 365 using a personal information exchange (.pfx) file m365 login --authType certificate --certificateFile /Users/user/dev/localhost.pfx --password 'pass@word1' Log in to Microsoft 365 using a personal information exchange (.pfx) file protected with an empty password m365 login --authType certificate --certificateFile /Users/user/dev/localhost.pfx --password Log in to Microsoft 365 using a personal information exchange (.pfx) file not protected with a password m365 login --authType certificate --certificateFile /Users/user/dev/localhost.pfx Log in to Microsoft 365 using a personal information exchange (.pfx) file. Use the specified thumbprint m365 login --authType certificate --certificateFile /Users/user/dev/localhost.pfx --thumbprint 47C4885736C624E90491F32B98855AA8A7562AF1 --password 'pass@word1' Log in to Microsoft 365 using a certificate from a base64-encoded string m365 login --authType certificate --certificateBase64Encoded MIII2QIBAzCCCJ8GCSqGSIb3DQEHAaCCCJAEg...eX1N5AgIIAA == --thumbprint D0C9B442DE249F55D10CDA1A2418952DC7D407A3 Log in to Microsoft 365 using a system assigned managed identity. Applies to Azure resources with managed identity enabled, such as Azure Virtual Machines, Azure App Service or Azure Functions m365 login --authType identity Log in to Microsoft 365 using managed identity in Azure Cloud Shell. Uses the identity of the current user. m365 login --authType identity Log in to Microsoft 365 using a user-assigned managed identity. Client id or principal id also known as object id value can be specified in the userName option. Applies to Azure resources with managed identity enabled, such as Azure Virtual Machines, Azure App Service or Azure Functions m365 login --authType identity --userName ac9fbed5-804c-4362-a369-21a4ec51109e Log in to Microsoft 365 using your own multitenant Azure AD application m365 login --appId 31359c7f-bd7e-475c-86db-fdb8c937548c Log in to Microsoft 365 using your own Azure AD application that's restricted only to allow accounts from the specific tenant m365 login --appId 31359c7f-bd7e-475c-86db-fdb8c937548c --tenant 31359c7f-bd7e-475c-86db-fdb8c937548a Log in to Microsoft 365 using the interactive browser authentication. Uses the identity of the current user. m365 login --authType browser Log in to Microsoft 365 using a client secret. m365 login --authType secret --secret topSeCr3t@007","title":"Examples"},{"location":"cmd/logout/","text":"logout \u00b6 Log out from Microsoft 365 Usage \u00b6 m365 logout [ options ] Options \u00b6 -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 The logout command logs out from Microsoft 365 and removes any access and refresh tokens from memory Examples \u00b6 Log out from Microsoft 365 m365 logout Log out from Microsoft 365 in debug mode including detailed debug information in the console output m365 logout --debug","title":"logout"},{"location":"cmd/logout/#logout","text":"Log out from Microsoft 365","title":"logout"},{"location":"cmd/logout/#usage","text":"m365 logout [ options ]","title":"Usage"},{"location":"cmd/logout/#options","text":"-h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/logout/#remarks","text":"The logout command logs out from Microsoft 365 and removes any access and refresh tokens from memory","title":"Remarks"},{"location":"cmd/logout/#examples","text":"Log out from Microsoft 365 m365 logout Log out from Microsoft 365 in debug mode including detailed debug information in the console output m365 logout --debug","title":"Examples"},{"location":"cmd/request/","text":"request \u00b6 Executes the specified web request using CLI for Microsoft 365 Usage \u00b6 m365 request [ options ] Options \u00b6 -u, --url <url> The request URL. -m, --method [method] The HTTP request method. Accepted values are get, post, put, patch, delete, head, options . The default value is get . -r, --resource [resource] The resource uri for which the CLI should acquire a token from AAD in order to access the service. -b, --body [body] The request body. Optionally use @example.json to load the body from a file. -p, --filePath [filePath] The file path to save the response to. This option can be used when downloading files. -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 When executing a request, CLI will take care of the very basic configuration, and you'll need to specify all additional information, such as headers, method and body. CLI will take care for you of: applying compression and handling throttling, setting the accept to application/json if you don't specify it yourself, setting the authorization header to the bearer token obtained for the resource determined from the request URL If you specify the resource option, the CLI will try to retrieve a valid token for the resource instead of determining the resource based on the url. The value doesn't have to be a URL. It can be also a URI like app://<guid> . Specify additional headers by typing them as options, for example: --content-type \"application/json\" , --if-match \"*\" , --x-requestdigest \"somedigest\" . Important When building the request, depending on the shell you use, you might need to escape all $ characters in the URL, request headers, and the body. If you don't do it, the shell will treat it as a variable and will remove the following word from the request, breaking the request. Examples \u00b6 Call the SharePoint Rest API using a GET request with a constructed URL containing expands, filters and selects. m365 request --url \"https://contoso.sharepoint.com/sites/project-x/_api/web/siteusers?\\$filter=IsShareByEmailGuestUser eq true&\\$expand=Groups&\\$select=Title,LoginName,Email,Groups/LoginName\" --accept \"application/json;odata=nometadata\" Call the Microsoft Graph beta endpoint using a GET request. m365 request --url \"https://graph.microsoft.com/beta/me\" Call the SharePoint API to retrieve a form digest. m365 request --method post --url \"https://contoso.sharepoint.com/sites/project-x/_api/contextinfo\" Call the SharePoint API to update a site title. m365 request --method post --url \"https://contoso.sharepoint.com/sites/project-x/_api/web\" --body '{ \"Title\": \"New title\" }' --content-type \"application/json\" --x-http-method \"PATCH\" Call the Microsoft Graph to get a profile photo. m365 request --url \"https://graph.microsoft.com/beta/me/photo/\\$value\" --filePath ./profile-pic.jpg","title":"request"},{"location":"cmd/request/#request","text":"Executes the specified web request using CLI for Microsoft 365","title":"request"},{"location":"cmd/request/#usage","text":"m365 request [ options ]","title":"Usage"},{"location":"cmd/request/#options","text":"-u, --url <url> The request URL. -m, --method [method] The HTTP request method. Accepted values are get, post, put, patch, delete, head, options . The default value is get . -r, --resource [resource] The resource uri for which the CLI should acquire a token from AAD in order to access the service. -b, --body [body] The request body. Optionally use @example.json to load the body from a file. -p, --filePath [filePath] The file path to save the response to. This option can be used when downloading files. -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/request/#remarks","text":"When executing a request, CLI will take care of the very basic configuration, and you'll need to specify all additional information, such as headers, method and body. CLI will take care for you of: applying compression and handling throttling, setting the accept to application/json if you don't specify it yourself, setting the authorization header to the bearer token obtained for the resource determined from the request URL If you specify the resource option, the CLI will try to retrieve a valid token for the resource instead of determining the resource based on the url. The value doesn't have to be a URL. It can be also a URI like app://<guid> . Specify additional headers by typing them as options, for example: --content-type \"application/json\" , --if-match \"*\" , --x-requestdigest \"somedigest\" . Important When building the request, depending on the shell you use, you might need to escape all $ characters in the URL, request headers, and the body. If you don't do it, the shell will treat it as a variable and will remove the following word from the request, breaking the request.","title":"Remarks"},{"location":"cmd/request/#examples","text":"Call the SharePoint Rest API using a GET request with a constructed URL containing expands, filters and selects. m365 request --url \"https://contoso.sharepoint.com/sites/project-x/_api/web/siteusers?\\$filter=IsShareByEmailGuestUser eq true&\\$expand=Groups&\\$select=Title,LoginName,Email,Groups/LoginName\" --accept \"application/json;odata=nometadata\" Call the Microsoft Graph beta endpoint using a GET request. m365 request --url \"https://graph.microsoft.com/beta/me\" Call the SharePoint API to retrieve a form digest. m365 request --method post --url \"https://contoso.sharepoint.com/sites/project-x/_api/contextinfo\" Call the SharePoint API to update a site title. m365 request --method post --url \"https://contoso.sharepoint.com/sites/project-x/_api/web\" --body '{ \"Title\": \"New title\" }' --content-type \"application/json\" --x-http-method \"PATCH\" Call the Microsoft Graph to get a profile photo. m365 request --url \"https://graph.microsoft.com/beta/me/photo/\\$value\" --filePath ./profile-pic.jpg","title":"Examples"},{"location":"cmd/status/","text":"status \u00b6 Shows Microsoft 365 login status Usage \u00b6 m365 status [ options ] Options \u00b6 -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 If you are logged in to Microsoft 365, the status command will show you information about the user or application name used to sign in and the details about the stored refresh and access tokens and their expiration date and time when run in debug mode. Examples \u00b6 Show the information about the current login to the Microsoft 365 m365 status","title":"status"},{"location":"cmd/status/#status","text":"Shows Microsoft 365 login status","title":"status"},{"location":"cmd/status/#usage","text":"m365 status [ options ]","title":"Usage"},{"location":"cmd/status/#options","text":"-h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/status/#remarks","text":"If you are logged in to Microsoft 365, the status command will show you information about the user or application name used to sign in and the details about the stored refresh and access tokens and their expiration date and time when run in debug mode.","title":"Remarks"},{"location":"cmd/status/#examples","text":"Show the information about the current login to the Microsoft 365 m365 status","title":"Examples"},{"location":"cmd/version/","text":"version \u00b6 Shows CLI for Microsoft 365 version Usage \u00b6 m365 version [ options ] Options \u00b6 -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Show the version of CLI for Microsoft 365 m365 version","title":"version"},{"location":"cmd/version/#version","text":"Shows CLI for Microsoft 365 version","title":"version"},{"location":"cmd/version/#usage","text":"m365 version [ options ]","title":"Usage"},{"location":"cmd/version/#options","text":"-h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/version/#examples","text":"Show the version of CLI for Microsoft 365 m365 version","title":"Examples"},{"location":"cmd/aad/app/app-add/","text":"aad app add \u00b6 Creates new Azure AD app registration Usage \u00b6 m365 aad app add [ options ] Options \u00b6 -n, --name [name] Name of the app --multitenant Specify, to make the app available to other tenants -r, --redirectUris [redirectUris] Comma-separated list of redirect URIs. Requires platform to be specified -p, --platform [platform] Platform for which the redirectUris should be configured. Allowed values spa , web , publicClient --implicitFlow Specify, to indicate that the authorization endpoint should return ID and access tokens -s, --withSecret When specified, will create a secret named Default and set it to expire 1 year in the future --apisDelegated [apisDelegated] Comma-separated list of delegated permissions to register with the app --apisApplication [apisApplication] Comma-separated list of application permissions to register with the app -u, --uri [uri] Application ID URI --scopeName [scopeName] Name of the scope to add. Requires uri to be specified --scopeConsentBy [scopeConsentBy] Specifies if the scope can be consented only by admins or by admins and users. Allowed values admins , adminsAndUsers . Default admins --scopeAdminConsentDisplayName [scopeAdminConsentDisplayName] Scope admin consent display name --scopeAdminConsentDescription [scopeAdminConsentDescription] Scope admin consent description --certificateFile [certificateFile] Path to the file with certificate public key. Specify either certificateFile or certificateBase64Encoded --certificateBase64Encoded [certificateBase64Encoded] Base64-encoded string with certificate public key. Specify either certificateFile or certificateBase64Encoded --certificateDisplayName [certificateDisplayName] Display name for the certificate. If not given, the displayName will be set to the certificate subject. When specified, also specify either certificateFile or certificateBase64Encoded --grantAdminConsent When specified, grants application & delegated permissions through admin consent --manifest [manifest] Azure AD app manifest as retrieved from the Azure Portal to create the app registration from --save Use to store the information about the created app in a local file -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 You can use this command to create a new Azure AD app registration either by specifying the different configuration settings through the corresponding options or by using the manifest. If you don't use the manifest, you must specify the name of the Azure AD app registration using the name option. If you use the manifest, you can skip the name option assuming the manifest contains the displayName property. You can also use the manifest to provision some of the configuration settings of your Azure AD app. All properties specified in the manifest are optional and will set if specified. If you specify the manifest along with some options, values specified in the options will override settings from the manifest. One exception is the name specified in the name option which will be overriden by the displayName property from the manifest if specified. The following properties specified in the manifest retrieved from Azure AD are not supported by this command: accessTokenAcceptedVersion disabledByMicrosoftStatus errorUrl oauth2RequirePostResponse oauth2AllowUrlPathMatching orgRestrictions samlMetadataUrl When specifying the value for the uri , you can use the _appId_ token, to include the ID of the newly generated Azure AD app registration in the Application ID URI, eg. URI api://caf406b91cd4.ngrok.io/_appId_ will become api://caf406b91cd4.ngrok.io/ab3bd119-faf7-4db5-ba99-eb7e748f778a where the last portion is the app ID of the created Azure AD app registration. When using the withSecret option, this command will automatically generate a secret named Default and set it to expire 1 year in the future. After creating the Azure AD app registration, this command returns the app ID and object ID of the created app registration. If you used the withSecret option, it will also return the generated secret. If you want to store the information about the created Azure AD app registration, use the --save option. This is useful when you build solutions connected to Microsoft 365 and want to easily manage app registrations used with your solution. When you use the --save option, after you create the app registration, the command will write its ID and name to the .m365rc.json file in the current directory. If the file already exists, it will add the information about the to it, allowing you to track multiple apps. If the file doesn't exist, the command will create it. When specifying --grantAdminConsent option, a service principal will be created for the app registration. Examples \u00b6 Create new Azure AD app registration with the specified name m365 aad app add --name 'My AAD app' Create new Azure AD app registration from the manifest retrieved from the Azure Portal stored in a local file named manifest.json m365 aad app add --manifest @manifest.json Create new multitenant Azure AD app registration m365 aad app add --name 'My AAD app' --multitenant Create new Azure AD app registration for a web app with the specified redirect URIs m365 aad app add --name 'My AAD app' --redirectUris 'https://myapp.azurewebsites.net,http://localhost:4000' --platform web Create new Azure AD app registration for a desktop app m365 aad app add --name 'My AAD app' --redirectUris 'https://login.microsoftonline.com/common/oauth2/nativeclient' --platform publicClient Create new Azure AD app registration with an auto-generated secret (secret returned in the command output) m365 aad app add --name 'My AAD app' --withSecret Create new Azure AD app registration for a deamon app with specified Microsoft Graph application permissions m365 aad app add --name 'My AAD app' --withSecret --apisApplication 'https://graph.microsoft.com/Group.ReadWrite.All,https://graph.microsoft.com/Directory.Read.All' Create new Azure AD app registration for a single-page app with specified Microsoft Graph delegated permissions m365 aad app add --name 'My AAD app' --platform spa --redirectUris 'https://myspa.azurewebsites.net,http://localhost:8080' --apisDelegated 'https://graph.microsoft.com/Calendars.Read,https://graph.microsoft.com/Directory.Read.All' --implicitFlow Create new Azure AD app registration with Application ID URI set to a fixed value m365 aad app add --name 'My AAD app' --uri https://contoso.onmicrosoft.com/myapp Create new Azure AD app registration with Application ID URI set to a value that contains the ID of the app registration, designated with the _appId_ token and a custom API scope that can be consented by both admins and users m365 aad app add --name 'My AAD app' --uri api://caf406b91cd4.ngrok.io/_appId_ --scopeName access_as_user --scopeAdminConsentDescription 'Access as a user' --scopeAdminConsentDisplayName 'Access as a user' --scopeConsentBy adminsAndUsers Create new Azure AD app registration for a deamon app with specified Microsoft Graph application permissions, including admin consent m365 aad app add --name 'My AAD app' --apisApplication 'https://graph.microsoft.com/Group.ReadWrite.All' --grantAdminConsent Create new Azure AD app registration with the specified name. Store information about the created app registration in the .m365rc.json file in the current directory. m365 aad app add --name 'My AAD app' --save Create new Azure AD app registration with a certificate m365 aad app add --name 'My AAD app' --certificateDisplayName \"Some certificate name\" --certificateFile \"c:\\temp\\some-certificate.cer\"","title":"app add"},{"location":"cmd/aad/app/app-add/#aad-app-add","text":"Creates new Azure AD app registration","title":"aad app add"},{"location":"cmd/aad/app/app-add/#usage","text":"m365 aad app add [ options ]","title":"Usage"},{"location":"cmd/aad/app/app-add/#options","text":"-n, --name [name] Name of the app --multitenant Specify, to make the app available to other tenants -r, --redirectUris [redirectUris] Comma-separated list of redirect URIs. Requires platform to be specified -p, --platform [platform] Platform for which the redirectUris should be configured. Allowed values spa , web , publicClient --implicitFlow Specify, to indicate that the authorization endpoint should return ID and access tokens -s, --withSecret When specified, will create a secret named Default and set it to expire 1 year in the future --apisDelegated [apisDelegated] Comma-separated list of delegated permissions to register with the app --apisApplication [apisApplication] Comma-separated list of application permissions to register with the app -u, --uri [uri] Application ID URI --scopeName [scopeName] Name of the scope to add. Requires uri to be specified --scopeConsentBy [scopeConsentBy] Specifies if the scope can be consented only by admins or by admins and users. Allowed values admins , adminsAndUsers . Default admins --scopeAdminConsentDisplayName [scopeAdminConsentDisplayName] Scope admin consent display name --scopeAdminConsentDescription [scopeAdminConsentDescription] Scope admin consent description --certificateFile [certificateFile] Path to the file with certificate public key. Specify either certificateFile or certificateBase64Encoded --certificateBase64Encoded [certificateBase64Encoded] Base64-encoded string with certificate public key. Specify either certificateFile or certificateBase64Encoded --certificateDisplayName [certificateDisplayName] Display name for the certificate. If not given, the displayName will be set to the certificate subject. When specified, also specify either certificateFile or certificateBase64Encoded --grantAdminConsent When specified, grants application & delegated permissions through admin consent --manifest [manifest] Azure AD app manifest as retrieved from the Azure Portal to create the app registration from --save Use to store the information about the created app in a local file -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/aad/app/app-add/#remarks","text":"You can use this command to create a new Azure AD app registration either by specifying the different configuration settings through the corresponding options or by using the manifest. If you don't use the manifest, you must specify the name of the Azure AD app registration using the name option. If you use the manifest, you can skip the name option assuming the manifest contains the displayName property. You can also use the manifest to provision some of the configuration settings of your Azure AD app. All properties specified in the manifest are optional and will set if specified. If you specify the manifest along with some options, values specified in the options will override settings from the manifest. One exception is the name specified in the name option which will be overriden by the displayName property from the manifest if specified. The following properties specified in the manifest retrieved from Azure AD are not supported by this command: accessTokenAcceptedVersion disabledByMicrosoftStatus errorUrl oauth2RequirePostResponse oauth2AllowUrlPathMatching orgRestrictions samlMetadataUrl When specifying the value for the uri , you can use the _appId_ token, to include the ID of the newly generated Azure AD app registration in the Application ID URI, eg. URI api://caf406b91cd4.ngrok.io/_appId_ will become api://caf406b91cd4.ngrok.io/ab3bd119-faf7-4db5-ba99-eb7e748f778a where the last portion is the app ID of the created Azure AD app registration. When using the withSecret option, this command will automatically generate a secret named Default and set it to expire 1 year in the future. After creating the Azure AD app registration, this command returns the app ID and object ID of the created app registration. If you used the withSecret option, it will also return the generated secret. If you want to store the information about the created Azure AD app registration, use the --save option. This is useful when you build solutions connected to Microsoft 365 and want to easily manage app registrations used with your solution. When you use the --save option, after you create the app registration, the command will write its ID and name to the .m365rc.json file in the current directory. If the file already exists, it will add the information about the to it, allowing you to track multiple apps. If the file doesn't exist, the command will create it. When specifying --grantAdminConsent option, a service principal will be created for the app registration.","title":"Remarks"},{"location":"cmd/aad/app/app-add/#examples","text":"Create new Azure AD app registration with the specified name m365 aad app add --name 'My AAD app' Create new Azure AD app registration from the manifest retrieved from the Azure Portal stored in a local file named manifest.json m365 aad app add --manifest @manifest.json Create new multitenant Azure AD app registration m365 aad app add --name 'My AAD app' --multitenant Create new Azure AD app registration for a web app with the specified redirect URIs m365 aad app add --name 'My AAD app' --redirectUris 'https://myapp.azurewebsites.net,http://localhost:4000' --platform web Create new Azure AD app registration for a desktop app m365 aad app add --name 'My AAD app' --redirectUris 'https://login.microsoftonline.com/common/oauth2/nativeclient' --platform publicClient Create new Azure AD app registration with an auto-generated secret (secret returned in the command output) m365 aad app add --name 'My AAD app' --withSecret Create new Azure AD app registration for a deamon app with specified Microsoft Graph application permissions m365 aad app add --name 'My AAD app' --withSecret --apisApplication 'https://graph.microsoft.com/Group.ReadWrite.All,https://graph.microsoft.com/Directory.Read.All' Create new Azure AD app registration for a single-page app with specified Microsoft Graph delegated permissions m365 aad app add --name 'My AAD app' --platform spa --redirectUris 'https://myspa.azurewebsites.net,http://localhost:8080' --apisDelegated 'https://graph.microsoft.com/Calendars.Read,https://graph.microsoft.com/Directory.Read.All' --implicitFlow Create new Azure AD app registration with Application ID URI set to a fixed value m365 aad app add --name 'My AAD app' --uri https://contoso.onmicrosoft.com/myapp Create new Azure AD app registration with Application ID URI set to a value that contains the ID of the app registration, designated with the _appId_ token and a custom API scope that can be consented by both admins and users m365 aad app add --name 'My AAD app' --uri api://caf406b91cd4.ngrok.io/_appId_ --scopeName access_as_user --scopeAdminConsentDescription 'Access as a user' --scopeAdminConsentDisplayName 'Access as a user' --scopeConsentBy adminsAndUsers Create new Azure AD app registration for a deamon app with specified Microsoft Graph application permissions, including admin consent m365 aad app add --name 'My AAD app' --apisApplication 'https://graph.microsoft.com/Group.ReadWrite.All' --grantAdminConsent Create new Azure AD app registration with the specified name. Store information about the created app registration in the .m365rc.json file in the current directory. m365 aad app add --name 'My AAD app' --save Create new Azure AD app registration with a certificate m365 aad app add --name 'My AAD app' --certificateDisplayName \"Some certificate name\" --certificateFile \"c:\\temp\\some-certificate.cer\"","title":"Examples"},{"location":"cmd/aad/app/app-get/","text":"aad app get \u00b6 Gets an Azure AD app registration Usage \u00b6 m365 aad app get [ options ] Options \u00b6 --appId [appId] Application (client) ID of the Azure AD application registration to get. Specify either appId , objectId or name --objectId [objectId] Object ID of the Azure AD application registration to get. Specify either appId , objectId or name --name [name] Name of the Azure AD application registration to get. Specify either appId , objectId or name --save Use to store the information about the created app in a local file -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 For best performance use the objectId option to reference the Azure AD application registration to get. If you use appId or name , this command will first need to find the corresponding object ID for that application. If the command finds multiple Azure AD application registrations with the specified app name, it will prompt you to disambiguate which app it should use, listing the discovered object IDs. If you want to store the information about the Azure AD app registration, use the --save option. This is useful when you build solutions connected to Microsoft 365 and want to easily manage app registrations used with your solution. When you use the --save option, after you get the app registration, the command will write its ID and name to the .m365rc.json file in the current directory. If the file already exists, it will add the information about the App registration to it if it's not already present, allowing you to track multiple apps. If the file doesn't exist, the command will create it. Examples \u00b6 Get the Azure AD application registration by its app (client) ID m365 aad app get --appId d75be2e1-0204-4f95-857d-51a37cf40be8 Get the Azure AD application registration by its object ID m365 aad app get --objectId d75be2e1-0204-4f95-857d-51a37cf40be8 Get the Azure AD application registration by its name m365 aad app get --name \"My app\" Get the Azure AD application registration by its name. Store information about the retrieved app registration in the .m365rc.json file in the current directory. m365 aad app get --name \"My app\" --save","title":"app get"},{"location":"cmd/aad/app/app-get/#aad-app-get","text":"Gets an Azure AD app registration","title":"aad app get"},{"location":"cmd/aad/app/app-get/#usage","text":"m365 aad app get [ options ]","title":"Usage"},{"location":"cmd/aad/app/app-get/#options","text":"--appId [appId] Application (client) ID of the Azure AD application registration to get. Specify either appId , objectId or name --objectId [objectId] Object ID of the Azure AD application registration to get. Specify either appId , objectId or name --name [name] Name of the Azure AD application registration to get. Specify either appId , objectId or name --save Use to store the information about the created app in a local file -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/aad/app/app-get/#remarks","text":"For best performance use the objectId option to reference the Azure AD application registration to get. If you use appId or name , this command will first need to find the corresponding object ID for that application. If the command finds multiple Azure AD application registrations with the specified app name, it will prompt you to disambiguate which app it should use, listing the discovered object IDs. If you want to store the information about the Azure AD app registration, use the --save option. This is useful when you build solutions connected to Microsoft 365 and want to easily manage app registrations used with your solution. When you use the --save option, after you get the app registration, the command will write its ID and name to the .m365rc.json file in the current directory. If the file already exists, it will add the information about the App registration to it if it's not already present, allowing you to track multiple apps. If the file doesn't exist, the command will create it.","title":"Remarks"},{"location":"cmd/aad/app/app-get/#examples","text":"Get the Azure AD application registration by its app (client) ID m365 aad app get --appId d75be2e1-0204-4f95-857d-51a37cf40be8 Get the Azure AD application registration by its object ID m365 aad app get --objectId d75be2e1-0204-4f95-857d-51a37cf40be8 Get the Azure AD application registration by its name m365 aad app get --name \"My app\" Get the Azure AD application registration by its name. Store information about the retrieved app registration in the .m365rc.json file in the current directory. m365 aad app get --name \"My app\" --save","title":"Examples"},{"location":"cmd/aad/app/app-list/","text":"aad app list \u00b6 Retrieves a list of Azure AD app registrations Usage \u00b6 m365 aad app list [ options ] Options \u00b6 -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Retrieve a list of Azure AD app registrations m365 aad app list Response \u00b6 JSON Text CSV [ { \"id\" : \"ff2798f7-1c7a-4607-8a7b-3d5e0c18c756\" , \"deletedDateTime\" : null , \"appId\" : \"61ed4fab-a861-4307-bb87-a6a53dbe39f5\" , \"applicationTemplateId\" : null , \"disabledByMicrosoftStatus\" : null , \"createdDateTime\" : \"2021-03-16T14:51:28Z\" , \"displayName\" : \"TestAppPermissions\" , \"description\" : null , \"groupMembershipClaims\" : null , \"identifierUris\" : [], \"isDeviceOnlyAuthSupported\" : null , \"isFallbackPublicClient\" : null , \"notes\" : null , \"publisherDomain\" : \"Contoso.onmicrosoft.com\" , \"serviceManagementReference\" : null , \"signInAudience\" : \"AzureADMyOrg\" , \"tags\" : [], \"tokenEncryptionKeyId\" : null , \"samlMetadataUrl\" : null , \"defaultRedirectUri\" : null , \"certification\" : null , \"optionalClaims\" : null , \"addIns\" : [], \"api\" : { \"acceptMappedClaims\" : null , \"knownClientApplications\" : [], \"requestedAccessTokenVersion\" : null , \"oauth2PermissionScopes\" : [], \"preAuthorizedApplications\" : [] }, \"appRoles\" : [], \"info\" : { \"logoUrl\" : null , \"marketingUrl\" : null , \"privacyStatementUrl\" : null , \"supportUrl\" : null , \"termsOfServiceUrl\" : null }, \"keyCredentials\" : [ { \"customKeyIdentifier\" : \"7D20AB8DD09B653E9A3880F9046314B76917EF62\" , \"displayName\" : \"CN=TestCertificate\" , \"endDateTime\" : \"2022-01-01T00:00:00Z\" , \"key\" : null , \"keyId\" : \"8928a06f-fa2d-4d92-98c3-b0f544804f64\" , \"startDateTime\" : \"2020-01-01T00:00:00Z\" , \"type\" : \"AsymmetricX509Cert\" , \"usage\" : \"Verify\" } ], \"parentalControlSettings\" : { \"countriesBlockedForMinors\" : [], \"legalAgeGroupRule\" : \"Allow\" }, \"passwordCredentials\" : [ { \"customKeyIdentifier\" : null , \"displayName\" : \"TestSecret\" , \"endDateTime\" : \"2022-03-16T14:58:45.602Z\" , \"hint\" : \"~03\" , \"keyId\" : \"714c9628-4bb8-4f08-84b4-7fd8d7a7b8c5\" , \"secretText\" : null , \"startDateTime\" : \"2021-03-16T14:59:07.642Z\" } ], \"publicClient\" : { \"redirectUris\" : [] }, \"requiredResourceAccess\" : [ { \"resourceAppId\" : \"00000003-0000-0000-c000-000000000000\" , \"resourceAccess\" : [ { \"id\" : \"e1fe6dd8-ba31-4d61-89e7-88639da4683d\" , \"type\" : \"Scope\" }, { \"id\" : \"18228521-a591-40f1-b215-5fad4488c117\" , \"type\" : \"Role\" }, { \"id\" : \"09850681-111b-4a89-9bed-3f2cae46d706\" , \"type\" : \"Role\" } ] } ], \"verifiedPublisher\" : { \"displayName\" : null , \"verifiedPublisherId\" : null , \"addedDateTime\" : null }, \"web\" : { \"homePageUrl\" : null , \"logoutUrl\" : null , \"redirectUris\" : [], \"implicitGrantSettings\" : { \"enableAccessTokenIssuance\" : false , \"enableIdTokenIssuance\" : false }, \"redirectUriSettings\" : [] }, \"spa\" : { \"redirectUris\" : [] } } ] appId id displayName signInAudience ------------------------------------ ------------------------------------ ----------------------------------------------------------------------- ---------------------------------- 61ed4fab-a861-4307-bb87-a6a53dbe39f5 ff2798f7-1c7a-4607-8a7b-3d5e0c18c756 TestAppPermissions AzureADMyOrg appId,id,displayName,signInAudience 61ed4fab-a861-4307-bb87-a6a53dbe39f5,ff2798f7-1c7a-4607-8a7b-3d5e0c18c756,TestAppPermissions,AzureADMyOrg","title":"app list"},{"location":"cmd/aad/app/app-list/#aad-app-list","text":"Retrieves a list of Azure AD app registrations","title":"aad app list"},{"location":"cmd/aad/app/app-list/#usage","text":"m365 aad app list [ options ]","title":"Usage"},{"location":"cmd/aad/app/app-list/#options","text":"-h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/aad/app/app-list/#examples","text":"Retrieve a list of Azure AD app registrations m365 aad app list","title":"Examples"},{"location":"cmd/aad/app/app-list/#response","text":"JSON Text CSV [ { \"id\" : \"ff2798f7-1c7a-4607-8a7b-3d5e0c18c756\" , \"deletedDateTime\" : null , \"appId\" : \"61ed4fab-a861-4307-bb87-a6a53dbe39f5\" , \"applicationTemplateId\" : null , \"disabledByMicrosoftStatus\" : null , \"createdDateTime\" : \"2021-03-16T14:51:28Z\" , \"displayName\" : \"TestAppPermissions\" , \"description\" : null , \"groupMembershipClaims\" : null , \"identifierUris\" : [], \"isDeviceOnlyAuthSupported\" : null , \"isFallbackPublicClient\" : null , \"notes\" : null , \"publisherDomain\" : \"Contoso.onmicrosoft.com\" , \"serviceManagementReference\" : null , \"signInAudience\" : \"AzureADMyOrg\" , \"tags\" : [], \"tokenEncryptionKeyId\" : null , \"samlMetadataUrl\" : null , \"defaultRedirectUri\" : null , \"certification\" : null , \"optionalClaims\" : null , \"addIns\" : [], \"api\" : { \"acceptMappedClaims\" : null , \"knownClientApplications\" : [], \"requestedAccessTokenVersion\" : null , \"oauth2PermissionScopes\" : [], \"preAuthorizedApplications\" : [] }, \"appRoles\" : [], \"info\" : { \"logoUrl\" : null , \"marketingUrl\" : null , \"privacyStatementUrl\" : null , \"supportUrl\" : null , \"termsOfServiceUrl\" : null }, \"keyCredentials\" : [ { \"customKeyIdentifier\" : \"7D20AB8DD09B653E9A3880F9046314B76917EF62\" , \"displayName\" : \"CN=TestCertificate\" , \"endDateTime\" : \"2022-01-01T00:00:00Z\" , \"key\" : null , \"keyId\" : \"8928a06f-fa2d-4d92-98c3-b0f544804f64\" , \"startDateTime\" : \"2020-01-01T00:00:00Z\" , \"type\" : \"AsymmetricX509Cert\" , \"usage\" : \"Verify\" } ], \"parentalControlSettings\" : { \"countriesBlockedForMinors\" : [], \"legalAgeGroupRule\" : \"Allow\" }, \"passwordCredentials\" : [ { \"customKeyIdentifier\" : null , \"displayName\" : \"TestSecret\" , \"endDateTime\" : \"2022-03-16T14:58:45.602Z\" , \"hint\" : \"~03\" , \"keyId\" : \"714c9628-4bb8-4f08-84b4-7fd8d7a7b8c5\" , \"secretText\" : null , \"startDateTime\" : \"2021-03-16T14:59:07.642Z\" } ], \"publicClient\" : { \"redirectUris\" : [] }, \"requiredResourceAccess\" : [ { \"resourceAppId\" : \"00000003-0000-0000-c000-000000000000\" , \"resourceAccess\" : [ { \"id\" : \"e1fe6dd8-ba31-4d61-89e7-88639da4683d\" , \"type\" : \"Scope\" }, { \"id\" : \"18228521-a591-40f1-b215-5fad4488c117\" , \"type\" : \"Role\" }, { \"id\" : \"09850681-111b-4a89-9bed-3f2cae46d706\" , \"type\" : \"Role\" } ] } ], \"verifiedPublisher\" : { \"displayName\" : null , \"verifiedPublisherId\" : null , \"addedDateTime\" : null }, \"web\" : { \"homePageUrl\" : null , \"logoutUrl\" : null , \"redirectUris\" : [], \"implicitGrantSettings\" : { \"enableAccessTokenIssuance\" : false , \"enableIdTokenIssuance\" : false }, \"redirectUriSettings\" : [] }, \"spa\" : { \"redirectUris\" : [] } } ] appId id displayName signInAudience ------------------------------------ ------------------------------------ ----------------------------------------------------------------------- ---------------------------------- 61ed4fab-a861-4307-bb87-a6a53dbe39f5 ff2798f7-1c7a-4607-8a7b-3d5e0c18c756 TestAppPermissions AzureADMyOrg appId,id,displayName,signInAudience 61ed4fab-a861-4307-bb87-a6a53dbe39f5,ff2798f7-1c7a-4607-8a7b-3d5e0c18c756,TestAppPermissions,AzureADMyOrg","title":"Response"},{"location":"cmd/aad/app/app-remove/","text":"aad app remove \u00b6 Removes an Azure AD app registration Usage \u00b6 m365 aad app remove [ options ] Options \u00b6 --appId [appId] Application (client) ID of the Azure AD application registration to remove. Specify either appId , objectId or name --objectId [objectId] Object ID of the Azure AD application registration to remove. Specify either appId , objectId or name --name [name] Name of the Azure AD application registration to remove. Specify either appId , objectId or name --confirm : Don't prompt for confirmation to remove the app -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 For best performance use the objectId option to reference the Azure AD application registration to remove. If you use appId or name , this command will first need to find the corresponding object ID for that application. If the command finds multiple Azure AD application registrations with the specified app name, it will prompt you to disambiguate which app it should use, listing the discovered object IDs. Examples \u00b6 Remove the Azure AD application registration by its app (client) ID m365 aad app remove --appId d75be2e1-0204-4f95-857d-51a37cf40be8 Remove the Azure AD application registration by its object ID m365 aad app remove --objectId d75be2e1-0204-4f95-857d-51a37cf40be8 Remove the Azure AD application registration by its name. Will NOT prompt for confirmation before deleting. m365 aad app remove --name \"My app\" --confirm","title":"app remove"},{"location":"cmd/aad/app/app-remove/#aad-app-remove","text":"Removes an Azure AD app registration","title":"aad app remove"},{"location":"cmd/aad/app/app-remove/#usage","text":"m365 aad app remove [ options ]","title":"Usage"},{"location":"cmd/aad/app/app-remove/#options","text":"--appId [appId] Application (client) ID of the Azure AD application registration to remove. Specify either appId , objectId or name --objectId [objectId] Object ID of the Azure AD application registration to remove. Specify either appId , objectId or name --name [name] Name of the Azure AD application registration to remove. Specify either appId , objectId or name --confirm : Don't prompt for confirmation to remove the app -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/aad/app/app-remove/#remarks","text":"For best performance use the objectId option to reference the Azure AD application registration to remove. If you use appId or name , this command will first need to find the corresponding object ID for that application. If the command finds multiple Azure AD application registrations with the specified app name, it will prompt you to disambiguate which app it should use, listing the discovered object IDs.","title":"Remarks"},{"location":"cmd/aad/app/app-remove/#examples","text":"Remove the Azure AD application registration by its app (client) ID m365 aad app remove --appId d75be2e1-0204-4f95-857d-51a37cf40be8 Remove the Azure AD application registration by its object ID m365 aad app remove --objectId d75be2e1-0204-4f95-857d-51a37cf40be8 Remove the Azure AD application registration by its name. Will NOT prompt for confirmation before deleting. m365 aad app remove --name \"My app\" --confirm","title":"Examples"},{"location":"cmd/aad/app/app-role-add/","text":"aad app role add \u00b6 Adds role to the specified Azure AD app registration Usage \u00b6 m365 aad app role add [ options ] Options \u00b6 --appId [appId] Application (client) ID of the Azure AD application registration to which to add the role. Specify either appId , appObjectId or appName --appObjectId [appObjectId] Object ID of the Azure AD application registration to which to add the role. Specify either appId , appObjectId or appName --appName [appName] Name of the Azure AD application registration to which to add the role. Specify either appId , appObjectId or appName -n, --name <name> Name of the role to add -d, --description <description> Description of the role to add -m, --allowedMembers <allowedMembers> Types of members that can be added to the group. Allowed values: usersGroups , applications , both -c, --claim <claim> Claim value -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 For best performance use the appObjectId option to reference the Azure AD application registration for which to add the role. If you use appId or appName , this command will first need to find the corresponding object ID for that application. If the command finds multiple Azure AD application registrations with the specified app name, it will prompt you to disambiguate which app it should use, listing the discovered object IDs. Examples \u00b6 Add role to the Azure AD application registration specified by its object ID m365 aad app role add --appObjectId d75be2e1-0204-4f95-857d-51a37cf40be8 --name Managers --description \"Managers\" --allowedMembers usersGroups --claim managers Add role to the Azure AD application registration specified by its app (client) ID m365 aad app role add --appId e75be2e1-0204-4f95-857d-51a37cf40be8 --name Managers --description \"Managers\" --allowedMembers usersGroups --claim managers Add role to the Azure AD application registration specified by its name m365 aad app role add --appName \"My app\" --name Managers --description \"Managers\" --allowedMembers usersGroups --claim managers","title":"app role add"},{"location":"cmd/aad/app/app-role-add/#aad-app-role-add","text":"Adds role to the specified Azure AD app registration","title":"aad app role add"},{"location":"cmd/aad/app/app-role-add/#usage","text":"m365 aad app role add [ options ]","title":"Usage"},{"location":"cmd/aad/app/app-role-add/#options","text":"--appId [appId] Application (client) ID of the Azure AD application registration to which to add the role. Specify either appId , appObjectId or appName --appObjectId [appObjectId] Object ID of the Azure AD application registration to which to add the role. Specify either appId , appObjectId or appName --appName [appName] Name of the Azure AD application registration to which to add the role. Specify either appId , appObjectId or appName -n, --name <name> Name of the role to add -d, --description <description> Description of the role to add -m, --allowedMembers <allowedMembers> Types of members that can be added to the group. Allowed values: usersGroups , applications , both -c, --claim <claim> Claim value -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/aad/app/app-role-add/#remarks","text":"For best performance use the appObjectId option to reference the Azure AD application registration for which to add the role. If you use appId or appName , this command will first need to find the corresponding object ID for that application. If the command finds multiple Azure AD application registrations with the specified app name, it will prompt you to disambiguate which app it should use, listing the discovered object IDs.","title":"Remarks"},{"location":"cmd/aad/app/app-role-add/#examples","text":"Add role to the Azure AD application registration specified by its object ID m365 aad app role add --appObjectId d75be2e1-0204-4f95-857d-51a37cf40be8 --name Managers --description \"Managers\" --allowedMembers usersGroups --claim managers Add role to the Azure AD application registration specified by its app (client) ID m365 aad app role add --appId e75be2e1-0204-4f95-857d-51a37cf40be8 --name Managers --description \"Managers\" --allowedMembers usersGroups --claim managers Add role to the Azure AD application registration specified by its name m365 aad app role add --appName \"My app\" --name Managers --description \"Managers\" --allowedMembers usersGroups --claim managers","title":"Examples"},{"location":"cmd/aad/app/app-role-list/","text":"aad app role list \u00b6 Gets Azure AD app registration roles Usage \u00b6 m365 aad app role list [ options ] Options \u00b6 --appId [appId] Application (client) ID of the Azure AD application registration for which to retrieve roles. Specify either appId , appObjectId or appName --appObjectId [appObjectId] Object ID of the Azure AD application registration for which to retrieve roles. Specify either appId , appObjectId or appName --appName [appName] Name of the Azure AD application registration for which to retrieve roles. Specify either appId , appObjectId or appName -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 For best performance use the appObjectId option to reference the Azure AD application registration for which to retrieve roles. If you use appId or appName , this command will first need to find the corresponding object ID for that application. If the command finds multiple Azure AD application registrations with the specified app name, it will prompt you to disambiguate which app it should use, listing the discovered object IDs. Examples \u00b6 Get roles for the Azure AD application registration specified by its object ID m365 aad app role list --appObjectId d75be2e1-0204-4f95-857d-51a37cf40be8 Get roles for the Azure AD application registration specified by its app (client) ID m365 aad app role list --appId e75be2e1-0204-4f95-857d-51a37cf40be8 Get roles for the Azure AD application registration specified by its name m365 aad app role list --appName \"My app\"","title":"app role list"},{"location":"cmd/aad/app/app-role-list/#aad-app-role-list","text":"Gets Azure AD app registration roles","title":"aad app role list"},{"location":"cmd/aad/app/app-role-list/#usage","text":"m365 aad app role list [ options ]","title":"Usage"},{"location":"cmd/aad/app/app-role-list/#options","text":"--appId [appId] Application (client) ID of the Azure AD application registration for which to retrieve roles. Specify either appId , appObjectId or appName --appObjectId [appObjectId] Object ID of the Azure AD application registration for which to retrieve roles. Specify either appId , appObjectId or appName --appName [appName] Name of the Azure AD application registration for which to retrieve roles. Specify either appId , appObjectId or appName -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/aad/app/app-role-list/#remarks","text":"For best performance use the appObjectId option to reference the Azure AD application registration for which to retrieve roles. If you use appId or appName , this command will first need to find the corresponding object ID for that application. If the command finds multiple Azure AD application registrations with the specified app name, it will prompt you to disambiguate which app it should use, listing the discovered object IDs.","title":"Remarks"},{"location":"cmd/aad/app/app-role-list/#examples","text":"Get roles for the Azure AD application registration specified by its object ID m365 aad app role list --appObjectId d75be2e1-0204-4f95-857d-51a37cf40be8 Get roles for the Azure AD application registration specified by its app (client) ID m365 aad app role list --appId e75be2e1-0204-4f95-857d-51a37cf40be8 Get roles for the Azure AD application registration specified by its name m365 aad app role list --appName \"My app\"","title":"Examples"},{"location":"cmd/aad/app/app-role-remove/","text":"aad app role remove \u00b6 Removes role from the specified Azure AD app registration Usage \u00b6 m365 aad app role remove [ options ] Options \u00b6 --appId [appId] Application (client) ID of the Azure AD application registration from which role should be removed. Specify either appId , appObjectId or appName --appObjectId [appObjectId] Object ID of the Azure AD application registration from which role should be removed. Specify either appId , appObjectId or appName --appName [appName] Name of the Azure AD application registration from which role should be removed. Specify either appId , appObjectId or appName -n, --name [name] Name of the role to remove. Specify either name , id or claim -i, --id [id] Id of the role to remove. Specify either name , id or claim -c, --claim [claim] Claim value of the role to remove. Specify either name , id or claim --confirm Don't prompt for confirmation to remove the role. -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 For best performance use the appObjectId option to reference the Azure AD application registration from which to remove the role. If you use appId or appName , this command will first need to find the corresponding object ID for that application. If the command finds multiple Azure AD application registrations with the specified app name, it will prompt you to disambiguate which app it should use, listing the discovered object IDs. If the command finds multiple roles with the specified role name, it will prompt you to disambiguate which role it should use, listing the claim values. If the role to be removed is 'Enabled', this command will disable the role first and then remove. Examples \u00b6 Remove role from a Azure AD application registration using object ID and role name options. Will prompt for confirmation before deleting the role. m365 aad app role remove --appObjectId d75be2e1-0204-4f95-857d-51a37cf40be8 --name \"Get Product\" Remove role from a Azure AD application registration using app (client) ID and role claim options. Will prompt for confirmation before deleting the role. m365 aad app role remove --appId e75be2e1-0204-4f95-857d-51a37cf40be8 --claim \"Product.Get\" Remove role from a Azure AD application registration using app name and role claim options. Will prompt for confirmation before deleting the role. m365 aad app role remove --appName \"My app\" --claim \"Product.Get\" Remove role from a Azure AD application registration using object ID and role id options. Will NOT prompt for confirmation before deleting the role. m365 aad app role remove --appObjectId d75be2e1-0204-4f95-857d-51a37cf40be8 --id 15927ce6-1933-4b2f-b029-4dee3d53f4dd --confirm","title":"app role remove"},{"location":"cmd/aad/app/app-role-remove/#aad-app-role-remove","text":"Removes role from the specified Azure AD app registration","title":"aad app role remove"},{"location":"cmd/aad/app/app-role-remove/#usage","text":"m365 aad app role remove [ options ]","title":"Usage"},{"location":"cmd/aad/app/app-role-remove/#options","text":"--appId [appId] Application (client) ID of the Azure AD application registration from which role should be removed. Specify either appId , appObjectId or appName --appObjectId [appObjectId] Object ID of the Azure AD application registration from which role should be removed. Specify either appId , appObjectId or appName --appName [appName] Name of the Azure AD application registration from which role should be removed. Specify either appId , appObjectId or appName -n, --name [name] Name of the role to remove. Specify either name , id or claim -i, --id [id] Id of the role to remove. Specify either name , id or claim -c, --claim [claim] Claim value of the role to remove. Specify either name , id or claim --confirm Don't prompt for confirmation to remove the role. -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/aad/app/app-role-remove/#remarks","text":"For best performance use the appObjectId option to reference the Azure AD application registration from which to remove the role. If you use appId or appName , this command will first need to find the corresponding object ID for that application. If the command finds multiple Azure AD application registrations with the specified app name, it will prompt you to disambiguate which app it should use, listing the discovered object IDs. If the command finds multiple roles with the specified role name, it will prompt you to disambiguate which role it should use, listing the claim values. If the role to be removed is 'Enabled', this command will disable the role first and then remove.","title":"Remarks"},{"location":"cmd/aad/app/app-role-remove/#examples","text":"Remove role from a Azure AD application registration using object ID and role name options. Will prompt for confirmation before deleting the role. m365 aad app role remove --appObjectId d75be2e1-0204-4f95-857d-51a37cf40be8 --name \"Get Product\" Remove role from a Azure AD application registration using app (client) ID and role claim options. Will prompt for confirmation before deleting the role. m365 aad app role remove --appId e75be2e1-0204-4f95-857d-51a37cf40be8 --claim \"Product.Get\" Remove role from a Azure AD application registration using app name and role claim options. Will prompt for confirmation before deleting the role. m365 aad app role remove --appName \"My app\" --claim \"Product.Get\" Remove role from a Azure AD application registration using object ID and role id options. Will NOT prompt for confirmation before deleting the role. m365 aad app role remove --appObjectId d75be2e1-0204-4f95-857d-51a37cf40be8 --id 15927ce6-1933-4b2f-b029-4dee3d53f4dd --confirm","title":"Examples"},{"location":"cmd/aad/app/app-set/","text":"aad app set \u00b6 Updates Azure AD app registration Usage \u00b6 m365 aad app set [ options ] Options \u00b6 --appId [appId] Application (client) ID of the Azure AD application registration to update. Specify either appId , objectId or name --objectId [objectId] Object ID of the Azure AD application registration to update. Specify either appId , objectId or name --name [name] Name of the Azure AD application registration to update. Specify either appId , objectId or name -u, --uri [uri] Comma-separated list of Application ID URIs to update -r, --redirectUris [redirectUris] Comma-separated list of redirect URIs to add to the app registration. Requires platform to be specified -p, --platform [platform] Platform for which the redirectUri should be configured. Allowed values spa,web,publicClient --redirectUrisToRemove [redirectUrisToRemove] Comma-separated list of existing redirect URIs to remove. Specify, when you want to replace existing redirect URIs with another --certificateFile [certificateFile] Path to the file with certificate public key. Specify either certificateFile or certificateBase64Encoded --certificateBase64Encoded [certificateBase64Encoded] Base64-encoded string with certificate public key. Specify either certificateFile or certificateBase64Encoded --certificateDisplayName [certificateDisplayName] Display name for the certificate. If not given, the displayName will be set to the certificate subject. When specified, also specify either certificateFile or certificateBase64Encoded -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 For best performance use the objectId option to reference the Azure AD application registration to update. If you use appId or name , this command will first need to find the corresponding object ID for that application. If the command finds multiple Azure AD application registrations with the specified app name, it will prompt you to disambiguate which app it should use, listing the discovered object IDs. When a certificate is specified it will be added to the list of certificates of the app without changing existing certificates. Examples \u00b6 Update the app URI of the Azure AD application registration specified by its object ID m365 aad app set --objectId d75be2e1-0204-4f95-857d-51a37cf40be8 --uri https://contoso.com/e75be2e1-0204-4f95-857d-51a37cf40be8 Update the app URI of the Azure AD application registration specified by its app (client) ID m365 aad app set --appId e75be2e1-0204-4f95-857d-51a37cf40be8 --uri https://contoso.com/e75be2e1-0204-4f95-857d-51a37cf40be8 Update the app URI of the Azure AD application registration specified by its name m365 aad app set --name \"My app\" --uri https://contoso.com/e75be2e1-0204-4f95-857d-51a37cf40be8 Add a new redirect URI for SPA authentication m365 aad app set --objectId 95cfe30d-ed44-4f9d-b73d-c66560f72e83 --redirectUris https://contoso.com/auth --platform spa Replace one redirect URI with another for SPA authentication m365 aad app set --objectId 95cfe30d-ed44-4f9d-b73d-c66560f72e83 --redirectUris https://contoso.com/auth --platform spa --redirectUrisToRemove https://contoso.com/old-auth Add a certificate to the app m365 aad app set --appId e75be2e1-0204-4f95-857d-51a37cf40be8 --certificateDisplayName \"Some certificate name\" --certificateFile \"c:\\temp\\some-certificate.cer\"","title":"app set"},{"location":"cmd/aad/app/app-set/#aad-app-set","text":"Updates Azure AD app registration","title":"aad app set"},{"location":"cmd/aad/app/app-set/#usage","text":"m365 aad app set [ options ]","title":"Usage"},{"location":"cmd/aad/app/app-set/#options","text":"--appId [appId] Application (client) ID of the Azure AD application registration to update. Specify either appId , objectId or name --objectId [objectId] Object ID of the Azure AD application registration to update. Specify either appId , objectId or name --name [name] Name of the Azure AD application registration to update. Specify either appId , objectId or name -u, --uri [uri] Comma-separated list of Application ID URIs to update -r, --redirectUris [redirectUris] Comma-separated list of redirect URIs to add to the app registration. Requires platform to be specified -p, --platform [platform] Platform for which the redirectUri should be configured. Allowed values spa,web,publicClient --redirectUrisToRemove [redirectUrisToRemove] Comma-separated list of existing redirect URIs to remove. Specify, when you want to replace existing redirect URIs with another --certificateFile [certificateFile] Path to the file with certificate public key. Specify either certificateFile or certificateBase64Encoded --certificateBase64Encoded [certificateBase64Encoded] Base64-encoded string with certificate public key. Specify either certificateFile or certificateBase64Encoded --certificateDisplayName [certificateDisplayName] Display name for the certificate. If not given, the displayName will be set to the certificate subject. When specified, also specify either certificateFile or certificateBase64Encoded -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/aad/app/app-set/#remarks","text":"For best performance use the objectId option to reference the Azure AD application registration to update. If you use appId or name , this command will first need to find the corresponding object ID for that application. If the command finds multiple Azure AD application registrations with the specified app name, it will prompt you to disambiguate which app it should use, listing the discovered object IDs. When a certificate is specified it will be added to the list of certificates of the app without changing existing certificates.","title":"Remarks"},{"location":"cmd/aad/app/app-set/#examples","text":"Update the app URI of the Azure AD application registration specified by its object ID m365 aad app set --objectId d75be2e1-0204-4f95-857d-51a37cf40be8 --uri https://contoso.com/e75be2e1-0204-4f95-857d-51a37cf40be8 Update the app URI of the Azure AD application registration specified by its app (client) ID m365 aad app set --appId e75be2e1-0204-4f95-857d-51a37cf40be8 --uri https://contoso.com/e75be2e1-0204-4f95-857d-51a37cf40be8 Update the app URI of the Azure AD application registration specified by its name m365 aad app set --name \"My app\" --uri https://contoso.com/e75be2e1-0204-4f95-857d-51a37cf40be8 Add a new redirect URI for SPA authentication m365 aad app set --objectId 95cfe30d-ed44-4f9d-b73d-c66560f72e83 --redirectUris https://contoso.com/auth --platform spa Replace one redirect URI with another for SPA authentication m365 aad app set --objectId 95cfe30d-ed44-4f9d-b73d-c66560f72e83 --redirectUris https://contoso.com/auth --platform spa --redirectUrisToRemove https://contoso.com/old-auth Add a certificate to the app m365 aad app set --appId e75be2e1-0204-4f95-857d-51a37cf40be8 --certificateDisplayName \"Some certificate name\" --certificateFile \"c:\\temp\\some-certificate.cer\"","title":"Examples"},{"location":"cmd/aad/approleassignment/approleassignment-add/","text":"aad approleassignment add \u00b6 Adds service principal permissions also known as scopes and app role assignments for specified Azure AD application registration Usage \u00b6 m365 aad approleassignment add [ options ] Options \u00b6 --appId [appId] Application appId also known as clientId of the App Registration to which the configured scopes (app roles) should be applied --appObjectId [appObjectId] Application objectId of the App Registration to which the configured scopes (app roles) should be applied --appDisplayName [appDisplayName] Application name of the App Registration to which the configured scopes (app roles) should be applied -r, --resource <resource> Service principal name, appId or objectId that has the scopes (roles) ex. SharePoint . -s, --scope <scope> Permissions known also as scopes and roles to grant the application with. If multiple permissions have to be granted, they have to be comma separated ex. Sites.Read.All,Sites.ReadWrite.all -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 This command requires tenant administrator permissions. Specify either the appId , appObjectId or appDisplayName but not multiple. If you specify more than one option value, the command will fail with an error. Autocomplete values for the resource option do not mean allowed values. The autocomplete will just suggest some known names, but that doesn't restrict you to use name of your own custom application or other application within your tenant. This command can also be used to assign permissions to system or user-assigned managed identity. Examples \u00b6 Adds SharePoint Sites.Read.All application permissions to Azure AD application with app id 57907bf8-73fa-43a6-89a5-1f603e29e451 m365 aad approleassignment add --appId \"57907bf8-73fa-43a6-89a5-1f603e29e451\" --resource \"SharePoint\" --scope \"Sites.Read.All\" Adds multiple Microsoft Graph application permissions to an Azure AD application with name MyAppName m365 aad approleassignment add --appDisplayName \"MyAppName\" --resource \"Microsoft Graph\" --scope \"Mail.Read,Mail.Send\" Adds Microsoft Graph Mail.Read application permissions to a system managed identity app with objectId 57907bf8-73fa-43a6-89a5-1f603e29e451 m365 aad approleassignment add --appObjectId \"57907bf8-73fa-43a6-89a5-1f603e29e451\" --resource \"Microsoft Graph\" --scope \"Mail.Read\" More information \u00b6 Microsoft Graph permissions reference: https://docs.microsoft.com/en-us/graph/permissions-reference","title":"approleassignment add"},{"location":"cmd/aad/approleassignment/approleassignment-add/#aad-approleassignment-add","text":"Adds service principal permissions also known as scopes and app role assignments for specified Azure AD application registration","title":"aad approleassignment add"},{"location":"cmd/aad/approleassignment/approleassignment-add/#usage","text":"m365 aad approleassignment add [ options ]","title":"Usage"},{"location":"cmd/aad/approleassignment/approleassignment-add/#options","text":"--appId [appId] Application appId also known as clientId of the App Registration to which the configured scopes (app roles) should be applied --appObjectId [appObjectId] Application objectId of the App Registration to which the configured scopes (app roles) should be applied --appDisplayName [appDisplayName] Application name of the App Registration to which the configured scopes (app roles) should be applied -r, --resource <resource> Service principal name, appId or objectId that has the scopes (roles) ex. SharePoint . -s, --scope <scope> Permissions known also as scopes and roles to grant the application with. If multiple permissions have to be granted, they have to be comma separated ex. Sites.Read.All,Sites.ReadWrite.all -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/aad/approleassignment/approleassignment-add/#remarks","text":"This command requires tenant administrator permissions. Specify either the appId , appObjectId or appDisplayName but not multiple. If you specify more than one option value, the command will fail with an error. Autocomplete values for the resource option do not mean allowed values. The autocomplete will just suggest some known names, but that doesn't restrict you to use name of your own custom application or other application within your tenant. This command can also be used to assign permissions to system or user-assigned managed identity.","title":"Remarks"},{"location":"cmd/aad/approleassignment/approleassignment-add/#examples","text":"Adds SharePoint Sites.Read.All application permissions to Azure AD application with app id 57907bf8-73fa-43a6-89a5-1f603e29e451 m365 aad approleassignment add --appId \"57907bf8-73fa-43a6-89a5-1f603e29e451\" --resource \"SharePoint\" --scope \"Sites.Read.All\" Adds multiple Microsoft Graph application permissions to an Azure AD application with name MyAppName m365 aad approleassignment add --appDisplayName \"MyAppName\" --resource \"Microsoft Graph\" --scope \"Mail.Read,Mail.Send\" Adds Microsoft Graph Mail.Read application permissions to a system managed identity app with objectId 57907bf8-73fa-43a6-89a5-1f603e29e451 m365 aad approleassignment add --appObjectId \"57907bf8-73fa-43a6-89a5-1f603e29e451\" --resource \"Microsoft Graph\" --scope \"Mail.Read\"","title":"Examples"},{"location":"cmd/aad/approleassignment/approleassignment-add/#more-information","text":"Microsoft Graph permissions reference: https://docs.microsoft.com/en-us/graph/permissions-reference","title":"More information"},{"location":"cmd/aad/approleassignment/approleassignment-list/","text":"aad approleassignment list \u00b6 Lists app role assignments for the specified application registration Usage \u00b6 m365 aad approleassignment list [ options ] Options \u00b6 -i, --appId [appId] Application (client) Id of the App Registration for which the configured app roles should be retrieved -n, --appDisplayName [appDisplayName] Display name of the application for which the configured app roles should be retrieved --appObjectId [appObjectId] ObjectId of the application for which the configured app roles should be retrieved -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 Specify either the appId , appObjectId or appDisplayName . If you specify more than one option value, the command will fail with an error. Examples \u00b6 List app roles assigned to service principal with Application (client) ID b2307a39-e878-458b-bc90-03bc578531d6 . m365 aad approleassignment list --appId b2307a39-e878-458b-bc90-03bc578531d6 List app roles assigned to service principal with Application display name MyAppName . m365 aad approleassignment list --appDisplayName 'MyAppName' List app roles assigned to service principal with ObjectId b2307a39-e878-458b-bc90-03bc578531dd . m365 aad approleassignment list --appObjectId b2307a39-e878-458b-bc90-03bc578531dd More information \u00b6 Application and service principal objects in Azure Active Directory (Azure AD): https://docs.microsoft.com/en-us/azure/active-directory/develop/active-directory-application-objects","title":"approleassignment list"},{"location":"cmd/aad/approleassignment/approleassignment-list/#aad-approleassignment-list","text":"Lists app role assignments for the specified application registration","title":"aad approleassignment list"},{"location":"cmd/aad/approleassignment/approleassignment-list/#usage","text":"m365 aad approleassignment list [ options ]","title":"Usage"},{"location":"cmd/aad/approleassignment/approleassignment-list/#options","text":"-i, --appId [appId] Application (client) Id of the App Registration for which the configured app roles should be retrieved -n, --appDisplayName [appDisplayName] Display name of the application for which the configured app roles should be retrieved --appObjectId [appObjectId] ObjectId of the application for which the configured app roles should be retrieved -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/aad/approleassignment/approleassignment-list/#remarks","text":"Specify either the appId , appObjectId or appDisplayName . If you specify more than one option value, the command will fail with an error.","title":"Remarks"},{"location":"cmd/aad/approleassignment/approleassignment-list/#examples","text":"List app roles assigned to service principal with Application (client) ID b2307a39-e878-458b-bc90-03bc578531d6 . m365 aad approleassignment list --appId b2307a39-e878-458b-bc90-03bc578531d6 List app roles assigned to service principal with Application display name MyAppName . m365 aad approleassignment list --appDisplayName 'MyAppName' List app roles assigned to service principal with ObjectId b2307a39-e878-458b-bc90-03bc578531dd . m365 aad approleassignment list --appObjectId b2307a39-e878-458b-bc90-03bc578531dd","title":"Examples"},{"location":"cmd/aad/approleassignment/approleassignment-list/#more-information","text":"Application and service principal objects in Azure Active Directory (Azure AD): https://docs.microsoft.com/en-us/azure/active-directory/develop/active-directory-application-objects","title":"More information"},{"location":"cmd/aad/approleassignment/approleassignment-remove/","text":"aad approleassignment remove \u00b6 Deletes an app role assignment for the specified Azure AD Application Registration Usage \u00b6 m365 aad approleassignment remove [ options ] Options \u00b6 --appId [appId] Application appId also known as clientId of the App Registration for which the configured scopes (app roles) should be deleted --appObjectId [appObjectId] Application objectId of the App Registration for which the configured scopes (app roles) should be deleted --appDisplayName [appDisplayName] Application name of the App Registration for which the configured scopes (app roles) should be deleted -r, --resource <resource> Service principal name, appId or objectId that has the scopes (roles) ex. SharePoint -s, --scope <scope> Permissions known also as scopes and roles to be deleted from the application. If multiple permissions have to be deleted, they have to be comma separated ex. Sites.Read.All , Sites.ReadWrite.All --confirm Don't prompt for confirming removing the all role assignment -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 This command requires tenant administrator permissions. Specify either the appId , appObjectId or appDisplayName but not multiple. If you specify more than one option value, the command will fail with an error. Autocomplete values for the resource option do not mean allowed values. The autocomplete will just suggest some known names, but that doesn't restrict you to use name of your own custom application or other application within your tenant. This command can also be used to assign permissions to system- or user-assigned managed identity. Examples \u00b6 Deletes SharePoint Sites.Read.All application permissions from Azure AD application with app id 57907bf8-73fa-43a6-89a5-1f603e29e451 m365 aad approleassignment remove --appId \"57907bf8-73fa-43a6-89a5-1f603e29e451\" --resource \"SharePoint\" --scope \"Sites.Read.All\" Deletes multiple Microsoft Graph application permissions from an Azure AD application with name MyAppName m365 aad approleassignment remove --appDisplayName \"MyAppName\" --resource \"Microsoft Graph\" --scope \"Mail.Read,Mail.Send\" Deletes Microsoft Graph Mail.Read application permissions from a system managed identity app with objectId 57907bf8-73fa-43a6-89a5-1f603e29e451 m365 aad approleassignment remove --appObjectId \"57907bf8-73fa-43a6-89a5-1f603e29e451\" --resource \"Microsoft Graph\" --scope \"Mail.Read\" More information \u00b6 Microsoft Graph permissions reference: https://docs.microsoft.com/en-us/graph/permissions-reference","title":"approleassignment remove"},{"location":"cmd/aad/approleassignment/approleassignment-remove/#aad-approleassignment-remove","text":"Deletes an app role assignment for the specified Azure AD Application Registration","title":"aad approleassignment remove"},{"location":"cmd/aad/approleassignment/approleassignment-remove/#usage","text":"m365 aad approleassignment remove [ options ]","title":"Usage"},{"location":"cmd/aad/approleassignment/approleassignment-remove/#options","text":"--appId [appId] Application appId also known as clientId of the App Registration for which the configured scopes (app roles) should be deleted --appObjectId [appObjectId] Application objectId of the App Registration for which the configured scopes (app roles) should be deleted --appDisplayName [appDisplayName] Application name of the App Registration for which the configured scopes (app roles) should be deleted -r, --resource <resource> Service principal name, appId or objectId that has the scopes (roles) ex. SharePoint -s, --scope <scope> Permissions known also as scopes and roles to be deleted from the application. If multiple permissions have to be deleted, they have to be comma separated ex. Sites.Read.All , Sites.ReadWrite.All --confirm Don't prompt for confirming removing the all role assignment -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/aad/approleassignment/approleassignment-remove/#remarks","text":"This command requires tenant administrator permissions. Specify either the appId , appObjectId or appDisplayName but not multiple. If you specify more than one option value, the command will fail with an error. Autocomplete values for the resource option do not mean allowed values. The autocomplete will just suggest some known names, but that doesn't restrict you to use name of your own custom application or other application within your tenant. This command can also be used to assign permissions to system- or user-assigned managed identity.","title":"Remarks"},{"location":"cmd/aad/approleassignment/approleassignment-remove/#examples","text":"Deletes SharePoint Sites.Read.All application permissions from Azure AD application with app id 57907bf8-73fa-43a6-89a5-1f603e29e451 m365 aad approleassignment remove --appId \"57907bf8-73fa-43a6-89a5-1f603e29e451\" --resource \"SharePoint\" --scope \"Sites.Read.All\" Deletes multiple Microsoft Graph application permissions from an Azure AD application with name MyAppName m365 aad approleassignment remove --appDisplayName \"MyAppName\" --resource \"Microsoft Graph\" --scope \"Mail.Read,Mail.Send\" Deletes Microsoft Graph Mail.Read application permissions from a system managed identity app with objectId 57907bf8-73fa-43a6-89a5-1f603e29e451 m365 aad approleassignment remove --appObjectId \"57907bf8-73fa-43a6-89a5-1f603e29e451\" --resource \"Microsoft Graph\" --scope \"Mail.Read\"","title":"Examples"},{"location":"cmd/aad/approleassignment/approleassignment-remove/#more-information","text":"Microsoft Graph permissions reference: https://docs.microsoft.com/en-us/graph/permissions-reference","title":"More information"},{"location":"cmd/aad/group/group-list/","text":"aad group list \u00b6 Lists Azure AD groups Usage \u00b6 m365 aad group list [ options ] Options \u00b6 -d, --deleted Use to retrieve deleted groups -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Lists all groups defined in Azure Active Directory. m365 aad group list List all recently deleted groups in the tenant m365 aad group list --deleted","title":"group list"},{"location":"cmd/aad/group/group-list/#aad-group-list","text":"Lists Azure AD groups","title":"aad group list"},{"location":"cmd/aad/group/group-list/#usage","text":"m365 aad group list [ options ]","title":"Usage"},{"location":"cmd/aad/group/group-list/#options","text":"-d, --deleted Use to retrieve deleted groups -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/aad/group/group-list/#examples","text":"Lists all groups defined in Azure Active Directory. m365 aad group list List all recently deleted groups in the tenant m365 aad group list --deleted","title":"Examples"},{"location":"cmd/aad/groupsetting/groupsetting-add/","text":"aad groupsetting add \u00b6 Creates a group setting Usage \u00b6 m365 aad groupsetting add [ options ] Options \u00b6 -i, --templateId <templateId> The ID of the group setting template to use to create the group setting -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 To create a group setting, you have to specify the ID of the group setting template that should be used to create the setting. You can retrieve the ID of the template using the aad groupsettingtemplate list command. To specify values for the different properties specified in the group setting template, include additional options that match the property in the group setting template. For example --ClassificationList 'HBI, MBI, LBI, GDPR' will set the list of classifications to use on modern SharePoint sites. Each group setting template specifies default value for each property. If you don't specify a value for the particular property yourself, the default value from the group setting template will be used. To find out which properties are available for the particular group setting template, use the aad groupsettingtemplate get command. If the specified templateId doesn't reference a valid group setting template, you will get a Resource 'xyz' does not exist or one of its queried reference-property objects are not present. error. If you try to add a group setting using a template, for which a setting already exists, you will get a A conflicting object with one or more of the specified property values is present in the directory. error. Examples \u00b6 Configure classification for modern SharePoint sites m365 aad groupsetting add --templateId 62375ab9-6b52-47ed-826b-58e47e0e304b --UsageGuidelinesUrl https://contoso.sharepoint.com/sites/compliance --ClassificationList 'HBI, MBI, LBI, GDPR' --DefaultClassification MBI","title":"groupsetting add"},{"location":"cmd/aad/groupsetting/groupsetting-add/#aad-groupsetting-add","text":"Creates a group setting","title":"aad groupsetting add"},{"location":"cmd/aad/groupsetting/groupsetting-add/#usage","text":"m365 aad groupsetting add [ options ]","title":"Usage"},{"location":"cmd/aad/groupsetting/groupsetting-add/#options","text":"-i, --templateId <templateId> The ID of the group setting template to use to create the group setting -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/aad/groupsetting/groupsetting-add/#remarks","text":"To create a group setting, you have to specify the ID of the group setting template that should be used to create the setting. You can retrieve the ID of the template using the aad groupsettingtemplate list command. To specify values for the different properties specified in the group setting template, include additional options that match the property in the group setting template. For example --ClassificationList 'HBI, MBI, LBI, GDPR' will set the list of classifications to use on modern SharePoint sites. Each group setting template specifies default value for each property. If you don't specify a value for the particular property yourself, the default value from the group setting template will be used. To find out which properties are available for the particular group setting template, use the aad groupsettingtemplate get command. If the specified templateId doesn't reference a valid group setting template, you will get a Resource 'xyz' does not exist or one of its queried reference-property objects are not present. error. If you try to add a group setting using a template, for which a setting already exists, you will get a A conflicting object with one or more of the specified property values is present in the directory. error.","title":"Remarks"},{"location":"cmd/aad/groupsetting/groupsetting-add/#examples","text":"Configure classification for modern SharePoint sites m365 aad groupsetting add --templateId 62375ab9-6b52-47ed-826b-58e47e0e304b --UsageGuidelinesUrl https://contoso.sharepoint.com/sites/compliance --ClassificationList 'HBI, MBI, LBI, GDPR' --DefaultClassification MBI","title":"Examples"},{"location":"cmd/aad/groupsetting/groupsetting-get/","text":"aad groupsetting get \u00b6 Gets information about the particular group setting Usage \u00b6 m365 aad groupsetting get [ options ] Options \u00b6 -i, --id <id> The ID of the group setting to retrieve -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Get information about the group setting with id 1caf7dcd-7e83-4c3a-94f7-932a1299c844 m365 aad groupsetting get --id 1caf7dcd-7e83-4c3a-94f7-932a1299c844","title":"groupsetting get"},{"location":"cmd/aad/groupsetting/groupsetting-get/#aad-groupsetting-get","text":"Gets information about the particular group setting","title":"aad groupsetting get"},{"location":"cmd/aad/groupsetting/groupsetting-get/#usage","text":"m365 aad groupsetting get [ options ]","title":"Usage"},{"location":"cmd/aad/groupsetting/groupsetting-get/#options","text":"-i, --id <id> The ID of the group setting to retrieve -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/aad/groupsetting/groupsetting-get/#examples","text":"Get information about the group setting with id 1caf7dcd-7e83-4c3a-94f7-932a1299c844 m365 aad groupsetting get --id 1caf7dcd-7e83-4c3a-94f7-932a1299c844","title":"Examples"},{"location":"cmd/aad/groupsetting/groupsetting-list/","text":"aad groupsetting list \u00b6 Lists Azure AD group settings Usage \u00b6 m365 aad groupsetting list [ options ] Options \u00b6 -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 List all group settings in the tenant m365 aad groupsetting list","title":"groupsetting list"},{"location":"cmd/aad/groupsetting/groupsetting-list/#aad-groupsetting-list","text":"Lists Azure AD group settings","title":"aad groupsetting list"},{"location":"cmd/aad/groupsetting/groupsetting-list/#usage","text":"m365 aad groupsetting list [ options ]","title":"Usage"},{"location":"cmd/aad/groupsetting/groupsetting-list/#options","text":"-h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/aad/groupsetting/groupsetting-list/#examples","text":"List all group settings in the tenant m365 aad groupsetting list","title":"Examples"},{"location":"cmd/aad/groupsetting/groupsetting-remove/","text":"aad groupsetting remove \u00b6 Removes the particular group setting Usage \u00b6 m365 aad groupsetting remove [ options ] Options \u00b6 -i, --id <id> The ID of the group setting to remove --confirm Don't prompt for confirming removing the group setting -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 If the specified id doesn't refer to an existing group setting, you will get a Resource does not exist error. Examples \u00b6 Remove group setting with id 28beab62-7540-4db1-a23f-29a6018a3848 . Will prompt for confirmation before removing the group setting m365 aad groupsetting remove --id 28beab62-7540-4db1-a23f-29a6018a3848 Remove group setting with id 28beab62-7540-4db1-a23f-29a6018a3848 without prompting for confirmation m365 aad groupsetting remove --id 28beab62-7540-4db1-a23f-29a6018a3848 --confirm","title":"groupsetting remove"},{"location":"cmd/aad/groupsetting/groupsetting-remove/#aad-groupsetting-remove","text":"Removes the particular group setting","title":"aad groupsetting remove"},{"location":"cmd/aad/groupsetting/groupsetting-remove/#usage","text":"m365 aad groupsetting remove [ options ]","title":"Usage"},{"location":"cmd/aad/groupsetting/groupsetting-remove/#options","text":"-i, --id <id> The ID of the group setting to remove --confirm Don't prompt for confirming removing the group setting -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/aad/groupsetting/groupsetting-remove/#remarks","text":"If the specified id doesn't refer to an existing group setting, you will get a Resource does not exist error.","title":"Remarks"},{"location":"cmd/aad/groupsetting/groupsetting-remove/#examples","text":"Remove group setting with id 28beab62-7540-4db1-a23f-29a6018a3848 . Will prompt for confirmation before removing the group setting m365 aad groupsetting remove --id 28beab62-7540-4db1-a23f-29a6018a3848 Remove group setting with id 28beab62-7540-4db1-a23f-29a6018a3848 without prompting for confirmation m365 aad groupsetting remove --id 28beab62-7540-4db1-a23f-29a6018a3848 --confirm","title":"Examples"},{"location":"cmd/aad/groupsetting/groupsetting-set/","text":"aad groupsetting set \u00b6 Updates the particular group setting Usage \u00b6 m365 aad groupsetting set [ options ] Options \u00b6 -i, --id <id> The ID of the group setting to update -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 To update a group setting, you have to specify the ID of the group setting. You can retrieve the ID of the group setting using the aad groupsetting list command. To update values for the different properties specified in the group setting, include additional options that match the property in the group setting. For example --ClassificationList 'HBI, MBI, LBI, GDPR' will set the list of classifications to use on modern SharePoint sites. If you don't specify a value for the particular property, it will remain unchanged. To find out which properties are available for the particular group setting, use the aad groupsetting get command. If the specified id doesn't reference a valid group setting, you will get a Resource 'xyz' does not exist or one of its queried reference-property objects are not present. error. Examples \u00b6 Configure classification for modern SharePoint sites m365 aad groupsetting set --id c391b57d-5783-4c53-9236-cefb5c6ef323 --UsageGuidelinesUrl https://contoso.sharepoint.com/sites/compliance --ClassificationList 'HBI, MBI, LBI, GDPR' --DefaultClassification MBI","title":"groupsetting set"},{"location":"cmd/aad/groupsetting/groupsetting-set/#aad-groupsetting-set","text":"Updates the particular group setting","title":"aad groupsetting set"},{"location":"cmd/aad/groupsetting/groupsetting-set/#usage","text":"m365 aad groupsetting set [ options ]","title":"Usage"},{"location":"cmd/aad/groupsetting/groupsetting-set/#options","text":"-i, --id <id> The ID of the group setting to update -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/aad/groupsetting/groupsetting-set/#remarks","text":"To update a group setting, you have to specify the ID of the group setting. You can retrieve the ID of the group setting using the aad groupsetting list command. To update values for the different properties specified in the group setting, include additional options that match the property in the group setting. For example --ClassificationList 'HBI, MBI, LBI, GDPR' will set the list of classifications to use on modern SharePoint sites. If you don't specify a value for the particular property, it will remain unchanged. To find out which properties are available for the particular group setting, use the aad groupsetting get command. If the specified id doesn't reference a valid group setting, you will get a Resource 'xyz' does not exist or one of its queried reference-property objects are not present. error.","title":"Remarks"},{"location":"cmd/aad/groupsetting/groupsetting-set/#examples","text":"Configure classification for modern SharePoint sites m365 aad groupsetting set --id c391b57d-5783-4c53-9236-cefb5c6ef323 --UsageGuidelinesUrl https://contoso.sharepoint.com/sites/compliance --ClassificationList 'HBI, MBI, LBI, GDPR' --DefaultClassification MBI","title":"Examples"},{"location":"cmd/aad/groupsettingtemplate/groupsettingtemplate-get/","text":"aad groupsettingtemplate get \u00b6 Gets information about the specified Azure AD group settings template Usage \u00b6 m365 aad groupsettingtemplate get [ options ] Options \u00b6 -i, --id [id] The ID of the settings template to retrieve. Specify the id or displayName but not both -n, --displayName [displayName] The display name of the settings template to retrieve. Specify the id or displayName but not both -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Get information about the group setting template with id 62375ab9-6b52-47ed-826b-58e47e0e304b m365 aad groupsettingtemplate get --id 62375ab9-6b52-47ed-826b-58e47e0e304b Get information about the group setting template with display name Group.Unified m365 aad groupsettingtemplate get --displayName Group.Unified","title":"groupsettingtemplate get"},{"location":"cmd/aad/groupsettingtemplate/groupsettingtemplate-get/#aad-groupsettingtemplate-get","text":"Gets information about the specified Azure AD group settings template","title":"aad groupsettingtemplate get"},{"location":"cmd/aad/groupsettingtemplate/groupsettingtemplate-get/#usage","text":"m365 aad groupsettingtemplate get [ options ]","title":"Usage"},{"location":"cmd/aad/groupsettingtemplate/groupsettingtemplate-get/#options","text":"-i, --id [id] The ID of the settings template to retrieve. Specify the id or displayName but not both -n, --displayName [displayName] The display name of the settings template to retrieve. Specify the id or displayName but not both -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/aad/groupsettingtemplate/groupsettingtemplate-get/#examples","text":"Get information about the group setting template with id 62375ab9-6b52-47ed-826b-58e47e0e304b m365 aad groupsettingtemplate get --id 62375ab9-6b52-47ed-826b-58e47e0e304b Get information about the group setting template with display name Group.Unified m365 aad groupsettingtemplate get --displayName Group.Unified","title":"Examples"},{"location":"cmd/aad/groupsettingtemplate/groupsettingtemplate-list/","text":"aad groupsettingtemplate list \u00b6 Lists Azure AD group settings templates Usage \u00b6 m365 aad groupsettingtemplate list [ options ] Options \u00b6 -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 List all group setting templates in the tenant m365 aad groupsettingtemplate list","title":"groupsettingtemplate list"},{"location":"cmd/aad/groupsettingtemplate/groupsettingtemplate-list/#aad-groupsettingtemplate-list","text":"Lists Azure AD group settings templates","title":"aad groupsettingtemplate list"},{"location":"cmd/aad/groupsettingtemplate/groupsettingtemplate-list/#usage","text":"m365 aad groupsettingtemplate list [ options ]","title":"Usage"},{"location":"cmd/aad/groupsettingtemplate/groupsettingtemplate-list/#options","text":"-h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/aad/groupsettingtemplate/groupsettingtemplate-list/#examples","text":"List all group setting templates in the tenant m365 aad groupsettingtemplate list","title":"Examples"},{"location":"cmd/aad/o365group/o365group-add/","text":"aad o365group add \u00b6 Creates a Microsoft 365 Group Usage \u00b6 m365 aad o365group add [ options ] Options \u00b6 -n, --displayName <displayName> Display name for the Microsoft 365 Group -d, --description <description> Description for the Microsoft 365 Group -m, --mailNickname <mailNickname> Name to use in the group e-mail (part before the @ ) --owners [owners] Comma-separated list of Microsoft 365 Group owners --members [members] Comma-separated list of Microsoft 365 Group members --isPrivate Specify, if the Microsoft 365 Group should be private. If not specified, will create a public group (default) --allowMembersToPost [allowMembersToPost] Set if only group members should be able to post conversations to the group --hideGroupInOutlook [hideGroupInOutlook] Set to hide the group in Outlook experiences --subscribeNewGroupMembers [subscribeNewGroupMembers] Set to subscribe all new group members to receive group conversation emails when new messages are posted in the group --welcomeEmailDisabled [welcomeEmailDisabled] Set to not send welcome emails to new group members -l, --logoPath [logoPath] Local path to the image file to use as group logo -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 When specifying the path to the logo image you can use both relative and absolute paths. Note, that ~ in the path, will not be resolved and will most likely result in an error. If an invalid user is provided in the comma-separated list or Owners or Members, the command operation will fail and the Micrsoft 365 Group will not be created. Examples \u00b6 Create a public Microsoft 365 Group m365 aad o365group add --displayName Finance --description \"This is the Contoso Finance Group. Please come here and check out the latest news, posts, files, and more.\" --mailNickname finance Create a private Microsoft 365 Group m365 aad o365group add --displayName Finance --description \"This is the Contoso Finance Group. Please come here and check out the latest news, posts, files, and more.\" --mailNickname finance --isPrivate Create a public Microsoft 365 Group and set specified users as its owners m365 aad o365group add --displayName Finance --description \"This is the Contoso Finance Group. Please come here and check out the latest news, posts, files, and more.\" --mailNickname finance --owners \"DebraB@contoso.onmicrosoft.com,DiegoS@contoso.onmicrosoft.com\" Create a public Microsoft 365 Group and set specified users as its members m365 aad o365group add --displayName Finance --description \"This is the Contoso Finance Group. Please come here and check out the latest news, posts, files, and more.\" --mailNickname finance --members \"DebraB@contoso.onmicrosoft.com,DiegoS@contoso.onmicrosoft.com\" Create a public Microsoft 365 Group and allows only group members to be able to post conversations to the group. m365 aad o365group add --displayName Finance --description \"This is the Contoso Finance Group. Please come here and check out the latest news, posts, files, and more.\" --mailNickname finance --allowMembersToPost Create a public Microsoft 365 Group and hides it from the Outlook experiences (web and client). m365 aad o365group add --displayName Finance --description \"This is the Contoso Finance Group. Please come here and check out the latest news, posts, files, and more.\" --mailNickname finance --hideGroupInOutlook Create a public Microsoft 365 Group and subscribe all new group members to receive group conversation emails when new messages are posted in the group. m365 aad o365group add --displayName Finance --description \"This is the Contoso Finance Group. Please come here and check out the latest news, posts, files, and more.\" --mailNickname finance --subscribeNewGroupMembers Create a public Microsoft 365 Group and set to not send welcome emails to new group members. m365 aad o365group add --displayName Finance --description \"This is the Contoso Finance Group. Please come here and check out the latest news, posts, files, and more.\" --mailNickname finance --welcomeEmailDisabled Create a public Microsoft 365 Group and set its logo m365 aad o365group add --displayName Finance --description \"This is the Contoso Finance Group. Please come here and check out the latest news, posts, files, and more.\" --mailNickname finance --logoPath images/logo.png","title":"o365group add"},{"location":"cmd/aad/o365group/o365group-add/#aad-o365group-add","text":"Creates a Microsoft 365 Group","title":"aad o365group add"},{"location":"cmd/aad/o365group/o365group-add/#usage","text":"m365 aad o365group add [ options ]","title":"Usage"},{"location":"cmd/aad/o365group/o365group-add/#options","text":"-n, --displayName <displayName> Display name for the Microsoft 365 Group -d, --description <description> Description for the Microsoft 365 Group -m, --mailNickname <mailNickname> Name to use in the group e-mail (part before the @ ) --owners [owners] Comma-separated list of Microsoft 365 Group owners --members [members] Comma-separated list of Microsoft 365 Group members --isPrivate Specify, if the Microsoft 365 Group should be private. If not specified, will create a public group (default) --allowMembersToPost [allowMembersToPost] Set if only group members should be able to post conversations to the group --hideGroupInOutlook [hideGroupInOutlook] Set to hide the group in Outlook experiences --subscribeNewGroupMembers [subscribeNewGroupMembers] Set to subscribe all new group members to receive group conversation emails when new messages are posted in the group --welcomeEmailDisabled [welcomeEmailDisabled] Set to not send welcome emails to new group members -l, --logoPath [logoPath] Local path to the image file to use as group logo -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/aad/o365group/o365group-add/#remarks","text":"When specifying the path to the logo image you can use both relative and absolute paths. Note, that ~ in the path, will not be resolved and will most likely result in an error. If an invalid user is provided in the comma-separated list or Owners or Members, the command operation will fail and the Micrsoft 365 Group will not be created.","title":"Remarks"},{"location":"cmd/aad/o365group/o365group-add/#examples","text":"Create a public Microsoft 365 Group m365 aad o365group add --displayName Finance --description \"This is the Contoso Finance Group. Please come here and check out the latest news, posts, files, and more.\" --mailNickname finance Create a private Microsoft 365 Group m365 aad o365group add --displayName Finance --description \"This is the Contoso Finance Group. Please come here and check out the latest news, posts, files, and more.\" --mailNickname finance --isPrivate Create a public Microsoft 365 Group and set specified users as its owners m365 aad o365group add --displayName Finance --description \"This is the Contoso Finance Group. Please come here and check out the latest news, posts, files, and more.\" --mailNickname finance --owners \"DebraB@contoso.onmicrosoft.com,DiegoS@contoso.onmicrosoft.com\" Create a public Microsoft 365 Group and set specified users as its members m365 aad o365group add --displayName Finance --description \"This is the Contoso Finance Group. Please come here and check out the latest news, posts, files, and more.\" --mailNickname finance --members \"DebraB@contoso.onmicrosoft.com,DiegoS@contoso.onmicrosoft.com\" Create a public Microsoft 365 Group and allows only group members to be able to post conversations to the group. m365 aad o365group add --displayName Finance --description \"This is the Contoso Finance Group. Please come here and check out the latest news, posts, files, and more.\" --mailNickname finance --allowMembersToPost Create a public Microsoft 365 Group and hides it from the Outlook experiences (web and client). m365 aad o365group add --displayName Finance --description \"This is the Contoso Finance Group. Please come here and check out the latest news, posts, files, and more.\" --mailNickname finance --hideGroupInOutlook Create a public Microsoft 365 Group and subscribe all new group members to receive group conversation emails when new messages are posted in the group. m365 aad o365group add --displayName Finance --description \"This is the Contoso Finance Group. Please come here and check out the latest news, posts, files, and more.\" --mailNickname finance --subscribeNewGroupMembers Create a public Microsoft 365 Group and set to not send welcome emails to new group members. m365 aad o365group add --displayName Finance --description \"This is the Contoso Finance Group. Please come here and check out the latest news, posts, files, and more.\" --mailNickname finance --welcomeEmailDisabled Create a public Microsoft 365 Group and set its logo m365 aad o365group add --displayName Finance --description \"This is the Contoso Finance Group. Please come here and check out the latest news, posts, files, and more.\" --mailNickname finance --logoPath images/logo.png","title":"Examples"},{"location":"cmd/aad/o365group/o365group-conversation-list/","text":"aad o365group conversation list \u00b6 Lists conversations for the specified Microsoft 365 group Usage \u00b6 m365 aad o365group conversation list [ options ] Options \u00b6 -i, --groupId <groupId> The ID of the Microsoft 365 group -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Lists conversations for the specified Microsoft 365 group m365 aad o365group conversation list --groupId '00000000-0000-0000-0000-000000000000'","title":"o365group conversation list"},{"location":"cmd/aad/o365group/o365group-conversation-list/#aad-o365group-conversation-list","text":"Lists conversations for the specified Microsoft 365 group","title":"aad o365group conversation list"},{"location":"cmd/aad/o365group/o365group-conversation-list/#usage","text":"m365 aad o365group conversation list [ options ]","title":"Usage"},{"location":"cmd/aad/o365group/o365group-conversation-list/#options","text":"-i, --groupId <groupId> The ID of the Microsoft 365 group -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/aad/o365group/o365group-conversation-list/#examples","text":"Lists conversations for the specified Microsoft 365 group m365 aad o365group conversation list --groupId '00000000-0000-0000-0000-000000000000'","title":"Examples"},{"location":"cmd/aad/o365group/o365group-conversation-post-list/","text":"aad o365group conversation post list \u00b6 Lists conversation posts of a Microsoft 365 group Usage \u00b6 m365 aad o365group conversation post list [ options ] Options \u00b6 -i, --groupId [groupId] The Id of the Office 365 Group. You can specify the groupId or groupDisplayName, but not both. -d, --groupDisplayName [groupDisplayName] The Displayname of the Office 365 Group. You can specify the groupId or groupDisplayName, but not both. -t, --threadId <threadId> The ID of the thread to retrieve details for -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Lists the posts of the specific conversation of Microsoft 365 group by groupId m365 aad o365group conversation post list --groupId '00000000-0000-0000-0000-000000000000' --threadId 'AAQkADkwN2Q2NDg1LWQ3ZGYtNDViZi1iNGRiLTVhYjJmN2Q5NDkxZQAQAOnRAfDf71lIvrdK85FAn5E=' Lists the posts of the specific conversation of Microsoft 365 group by groupDisplayName m365 aad o365group conversation post list --groupDisplayName 'MyGroup' --threadId 'AAQkADkwN2Q2NDg1LWQ3ZGYtNDViZi1iNGRiLTVhYjJmN2Q5NDkxZQAQAOnRAfDf71lIvrdK85FAn5E='","title":"o365group conversation post list"},{"location":"cmd/aad/o365group/o365group-conversation-post-list/#aad-o365group-conversation-post-list","text":"Lists conversation posts of a Microsoft 365 group","title":"aad o365group conversation post list"},{"location":"cmd/aad/o365group/o365group-conversation-post-list/#usage","text":"m365 aad o365group conversation post list [ options ]","title":"Usage"},{"location":"cmd/aad/o365group/o365group-conversation-post-list/#options","text":"-i, --groupId [groupId] The Id of the Office 365 Group. You can specify the groupId or groupDisplayName, but not both. -d, --groupDisplayName [groupDisplayName] The Displayname of the Office 365 Group. You can specify the groupId or groupDisplayName, but not both. -t, --threadId <threadId> The ID of the thread to retrieve details for -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/aad/o365group/o365group-conversation-post-list/#examples","text":"Lists the posts of the specific conversation of Microsoft 365 group by groupId m365 aad o365group conversation post list --groupId '00000000-0000-0000-0000-000000000000' --threadId 'AAQkADkwN2Q2NDg1LWQ3ZGYtNDViZi1iNGRiLTVhYjJmN2Q5NDkxZQAQAOnRAfDf71lIvrdK85FAn5E=' Lists the posts of the specific conversation of Microsoft 365 group by groupDisplayName m365 aad o365group conversation post list --groupDisplayName 'MyGroup' --threadId 'AAQkADkwN2Q2NDg1LWQ3ZGYtNDViZi1iNGRiLTVhYjJmN2Q5NDkxZQAQAOnRAfDf71lIvrdK85FAn5E='","title":"Examples"},{"location":"cmd/aad/o365group/o365group-get/","text":"aad o365group get \u00b6 Gets information about the specified Microsoft 365 Group or Microsoft Teams team Usage \u00b6 m365 aad o365group get [ options ] Alias \u00b6 m365 teams team get Options \u00b6 -i, --id <id> The ID of the Microsoft 365 Group or Microsoft Teams team to retrieve information for --includeSiteUrl Set to retrieve the site URL for the group -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Get information about the Microsoft 365 Group with id 1caf7dcd-7e83-4c3a-94f7-932a1299c844 m365 aad o365group get --id 1caf7dcd-7e83-4c3a-94f7-932a1299c844 Get information about the Microsoft 365 Group with id 1caf7dcd-7e83-4c3a-94f7-932a1299c844 and also retrieve the URL of the corresponding SharePoint site m365 aad o365group get --id 1caf7dcd-7e83-4c3a-94f7-932a1299c844 --includeSiteUrl Get information about the Microsoft Teams team with id 2eaf7dcd-7e83-4c3a-94f7-932a1299c844 m365 teams team get --id 2eaf7dcd-7e83-4c3a-94f7-932a1299c844","title":"o365group get"},{"location":"cmd/aad/o365group/o365group-get/#aad-o365group-get","text":"Gets information about the specified Microsoft 365 Group or Microsoft Teams team","title":"aad o365group get"},{"location":"cmd/aad/o365group/o365group-get/#usage","text":"m365 aad o365group get [ options ]","title":"Usage"},{"location":"cmd/aad/o365group/o365group-get/#alias","text":"m365 teams team get","title":"Alias"},{"location":"cmd/aad/o365group/o365group-get/#options","text":"-i, --id <id> The ID of the Microsoft 365 Group or Microsoft Teams team to retrieve information for --includeSiteUrl Set to retrieve the site URL for the group -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/aad/o365group/o365group-get/#examples","text":"Get information about the Microsoft 365 Group with id 1caf7dcd-7e83-4c3a-94f7-932a1299c844 m365 aad o365group get --id 1caf7dcd-7e83-4c3a-94f7-932a1299c844 Get information about the Microsoft 365 Group with id 1caf7dcd-7e83-4c3a-94f7-932a1299c844 and also retrieve the URL of the corresponding SharePoint site m365 aad o365group get --id 1caf7dcd-7e83-4c3a-94f7-932a1299c844 --includeSiteUrl Get information about the Microsoft Teams team with id 2eaf7dcd-7e83-4c3a-94f7-932a1299c844 m365 teams team get --id 2eaf7dcd-7e83-4c3a-94f7-932a1299c844","title":"Examples"},{"location":"cmd/aad/o365group/o365group-list/","text":"aad o365group list \u00b6 Lists Microsoft 365 Groups in the current tenant Usage \u00b6 m365 aad o365group list [ options ] Options \u00b6 -d, --displayName [displayName] Retrieve only groups with displayName starting with the specified value -m, --mailNickname [displayName] Retrieve only groups with mailNickname starting with the specified value --includeSiteUrl Set to retrieve the site URL for each group --deleted Set to only retrieve deleted groups --orphaned Set to only retrieve groups without owners -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 Using the --includeSiteUrl option, you can retrieve the URL of the site associated with the particular Microsoft 365 Group. If you however retrieve too many groups and will try to get their site URLs, you will most likely get an error as the command will get throttled, issuing too many requests, too frequently. If you get an error, consider narrowing down the result set using the --displayName and --mailNickname filters. Retrieving the URL of the site associated with the particular Microsoft 365 Group is not possible when retrieving deleted groups. Using the --orphaned option, you can retrieve Microsoft 365 Groups without owners. Examples \u00b6 List all Microsoft 365 Groups in the tenant m365 aad o365group list List Microsoft 365 Groups with display name starting with Project m365 aad o365group list --displayName Project List Microsoft 365 Groups mail nick name starting with team m365 aad o365group list --mailNickname team List deleted Microsoft 365 Groups with display name starting with Project m365 aad o365group list --displayName Project --deleted List deleted Microsoft 365 Groups mail nick name starting with team m365 aad o365group list --mailNickname team --deleted List Microsoft 365 Groups with display name starting with Project including the URL of the corresponding SharePoint site m365 aad o365group list --displayName Project --includeSiteUrl List Microsoft 365 Groups without owners m365 aad o365group list --orphaned","title":"o365group list"},{"location":"cmd/aad/o365group/o365group-list/#aad-o365group-list","text":"Lists Microsoft 365 Groups in the current tenant","title":"aad o365group list"},{"location":"cmd/aad/o365group/o365group-list/#usage","text":"m365 aad o365group list [ options ]","title":"Usage"},{"location":"cmd/aad/o365group/o365group-list/#options","text":"-d, --displayName [displayName] Retrieve only groups with displayName starting with the specified value -m, --mailNickname [displayName] Retrieve only groups with mailNickname starting with the specified value --includeSiteUrl Set to retrieve the site URL for each group --deleted Set to only retrieve deleted groups --orphaned Set to only retrieve groups without owners -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/aad/o365group/o365group-list/#remarks","text":"Using the --includeSiteUrl option, you can retrieve the URL of the site associated with the particular Microsoft 365 Group. If you however retrieve too many groups and will try to get their site URLs, you will most likely get an error as the command will get throttled, issuing too many requests, too frequently. If you get an error, consider narrowing down the result set using the --displayName and --mailNickname filters. Retrieving the URL of the site associated with the particular Microsoft 365 Group is not possible when retrieving deleted groups. Using the --orphaned option, you can retrieve Microsoft 365 Groups without owners.","title":"Remarks"},{"location":"cmd/aad/o365group/o365group-list/#examples","text":"List all Microsoft 365 Groups in the tenant m365 aad o365group list List Microsoft 365 Groups with display name starting with Project m365 aad o365group list --displayName Project List Microsoft 365 Groups mail nick name starting with team m365 aad o365group list --mailNickname team List deleted Microsoft 365 Groups with display name starting with Project m365 aad o365group list --displayName Project --deleted List deleted Microsoft 365 Groups mail nick name starting with team m365 aad o365group list --mailNickname team --deleted List Microsoft 365 Groups with display name starting with Project including the URL of the corresponding SharePoint site m365 aad o365group list --displayName Project --includeSiteUrl List Microsoft 365 Groups without owners m365 aad o365group list --orphaned","title":"Examples"},{"location":"cmd/aad/o365group/o365group-recyclebinitem-clear/","text":"aad o365group recyclebinitem clear \u00b6 Clears Microsoft 365 Groups from the recycle bin in the current tenant Usage \u00b6 m365 aad o365group recyclebinitem clear [ options ] Options \u00b6 --confirm Don't prompt for confirmation to clear the recycle bin items. -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Removes all deleted Microsoft 365 Groups in the tenant. Will prompt for confirmation before permanently removing groups. m365 aad o365group recyclebinitem clear Removes all deleted Microsoft 365 Groups in the tenant. Will NOT prompt for confirmation before permanently removing groups. m365 aad o365group recyclebinitem clear --confirm","title":"o365group recyclebinitem clear"},{"location":"cmd/aad/o365group/o365group-recyclebinitem-clear/#aad-o365group-recyclebinitem-clear","text":"Clears Microsoft 365 Groups from the recycle bin in the current tenant","title":"aad o365group recyclebinitem clear"},{"location":"cmd/aad/o365group/o365group-recyclebinitem-clear/#usage","text":"m365 aad o365group recyclebinitem clear [ options ]","title":"Usage"},{"location":"cmd/aad/o365group/o365group-recyclebinitem-clear/#options","text":"--confirm Don't prompt for confirmation to clear the recycle bin items. -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/aad/o365group/o365group-recyclebinitem-clear/#examples","text":"Removes all deleted Microsoft 365 Groups in the tenant. Will prompt for confirmation before permanently removing groups. m365 aad o365group recyclebinitem clear Removes all deleted Microsoft 365 Groups in the tenant. Will NOT prompt for confirmation before permanently removing groups. m365 aad o365group recyclebinitem clear --confirm","title":"Examples"},{"location":"cmd/aad/o365group/o365group-recyclebinitem-list/","text":"aad o365group recyclebinitem list \u00b6 Lists Groups from the recycle bin in the current tenant Usage \u00b6 m365 aad o365group recyclebinitem list [ options ] Options \u00b6 -d, --groupDisplayName [groupDisplayName] Lists groups with DisplayName starting with the specified value -m, --groupMailNickname [groupMailNickname] Lists groups with MailNickname starting with the specified value -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 List all deleted Microsoft 365 Groups in the tenant m365 aad o365group recyclebinitem list List deleted Microsoft 365 Groups with display name starting with Project m365 aad o365group recyclebinitem list --groupDisplayName Project List deleted Microsoft 365 Groups mail nick name starting with team m365 aad o365group recyclebinitem list --groupMailNickname team List deleted Microsoft 365 Groups mail nick name starting with team and with display name starting with Project m365 aad o365group recyclebinitem list --groupMailNickname team --groupDisplayName Project","title":"o365group recyclebinitem list"},{"location":"cmd/aad/o365group/o365group-recyclebinitem-list/#aad-o365group-recyclebinitem-list","text":"Lists Groups from the recycle bin in the current tenant","title":"aad o365group recyclebinitem list"},{"location":"cmd/aad/o365group/o365group-recyclebinitem-list/#usage","text":"m365 aad o365group recyclebinitem list [ options ]","title":"Usage"},{"location":"cmd/aad/o365group/o365group-recyclebinitem-list/#options","text":"-d, --groupDisplayName [groupDisplayName] Lists groups with DisplayName starting with the specified value -m, --groupMailNickname [groupMailNickname] Lists groups with MailNickname starting with the specified value -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/aad/o365group/o365group-recyclebinitem-list/#examples","text":"List all deleted Microsoft 365 Groups in the tenant m365 aad o365group recyclebinitem list List deleted Microsoft 365 Groups with display name starting with Project m365 aad o365group recyclebinitem list --groupDisplayName Project List deleted Microsoft 365 Groups mail nick name starting with team m365 aad o365group recyclebinitem list --groupMailNickname team List deleted Microsoft 365 Groups mail nick name starting with team and with display name starting with Project m365 aad o365group recyclebinitem list --groupMailNickname team --groupDisplayName Project","title":"Examples"},{"location":"cmd/aad/o365group/o365group-recyclebinitem-remove/","text":"aad o365group recyclebinitem remove \u00b6 Permanently deletes a Microsoft 365 Group from the recycle bin in the current tenant Usage \u00b6 m365 aad o365group recyclebinitem remove [ options ] Options \u00b6 -i, --id [id] The ID of the Microsoft 365 Group to remove. Specify either id , displayName or mailNickname but not multiple. -d, --displayName [displayName] Display name for the Microsoft 365 Group to remove. Specify either id , displayName or mailNickname but not multiple. -m, --mailNickname [mailNickname] Name of the group e-mail (part before the @). Specify either id , displayName or mailNickname but not multiple. --confirm Don't prompt for confirmation. -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Removes the Microsoft 365 Group with specific ID m365 aad o365group recyclebinitem remove --id \"00000000-0000-0000-0000-000000000000\" Removes the Microsoft 365 Group with specific name m365 aad o365group recyclebinitem remove --displayName \"My Group\" Remove the Microsoft 365 Group with specific mail nickname without confirmation m365 aad o365group recyclebinitem remove --mailNickname \"Mygroup\" --confirm","title":"o365group recyclebinitem remove"},{"location":"cmd/aad/o365group/o365group-recyclebinitem-remove/#aad-o365group-recyclebinitem-remove","text":"Permanently deletes a Microsoft 365 Group from the recycle bin in the current tenant","title":"aad o365group recyclebinitem remove"},{"location":"cmd/aad/o365group/o365group-recyclebinitem-remove/#usage","text":"m365 aad o365group recyclebinitem remove [ options ]","title":"Usage"},{"location":"cmd/aad/o365group/o365group-recyclebinitem-remove/#options","text":"-i, --id [id] The ID of the Microsoft 365 Group to remove. Specify either id , displayName or mailNickname but not multiple. -d, --displayName [displayName] Display name for the Microsoft 365 Group to remove. Specify either id , displayName or mailNickname but not multiple. -m, --mailNickname [mailNickname] Name of the group e-mail (part before the @). Specify either id , displayName or mailNickname but not multiple. --confirm Don't prompt for confirmation. -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/aad/o365group/o365group-recyclebinitem-remove/#examples","text":"Removes the Microsoft 365 Group with specific ID m365 aad o365group recyclebinitem remove --id \"00000000-0000-0000-0000-000000000000\" Removes the Microsoft 365 Group with specific name m365 aad o365group recyclebinitem remove --displayName \"My Group\" Remove the Microsoft 365 Group with specific mail nickname without confirmation m365 aad o365group recyclebinitem remove --mailNickname \"Mygroup\" --confirm","title":"Examples"},{"location":"cmd/aad/o365group/o365group-recyclebinitem-restore/","text":"aad o365group recyclebinitem restore \u00b6 Restores a deleted Microsoft 365 Group Usage \u00b6 m365 aad o365group recyclebinitem restore [ options ] Options \u00b6 -i, --id [id] The ID of the Microsoft 365 Group to restore. Specify either id , displayName or mailNickname but not multiple. -d, --displayName [displayName] Display name for the Microsoft 365 Group to restore. Specify either id , displayName or mailNickname but not multiple. -m, --mailNickname [mailNickname] Name of the group e-mail (part before the @). Specify either id , displayName or mailNickname but not multiple. -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Restores the Microsoft 365 Group with specific ID m365 aad o365group recyclebinitem restore --id 28beab62-7540-4db1-a23f-29a6018a3848 Restores the Microsoft 365 Group with specific name m365 aad o365group recyclebinitem restore --displayName \"My Group\" Restores the Microsoft 365 Group with specific mail nickname m365 aad o365group recyclebinitem restore --mailNickname \"Mygroup\"","title":"o365group restore"},{"location":"cmd/aad/o365group/o365group-recyclebinitem-restore/#aad-o365group-recyclebinitem-restore","text":"Restores a deleted Microsoft 365 Group","title":"aad o365group recyclebinitem restore"},{"location":"cmd/aad/o365group/o365group-recyclebinitem-restore/#usage","text":"m365 aad o365group recyclebinitem restore [ options ]","title":"Usage"},{"location":"cmd/aad/o365group/o365group-recyclebinitem-restore/#options","text":"-i, --id [id] The ID of the Microsoft 365 Group to restore. Specify either id , displayName or mailNickname but not multiple. -d, --displayName [displayName] Display name for the Microsoft 365 Group to restore. Specify either id , displayName or mailNickname but not multiple. -m, --mailNickname [mailNickname] Name of the group e-mail (part before the @). Specify either id , displayName or mailNickname but not multiple. -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/aad/o365group/o365group-recyclebinitem-restore/#examples","text":"Restores the Microsoft 365 Group with specific ID m365 aad o365group recyclebinitem restore --id 28beab62-7540-4db1-a23f-29a6018a3848 Restores the Microsoft 365 Group with specific name m365 aad o365group recyclebinitem restore --displayName \"My Group\" Restores the Microsoft 365 Group with specific mail nickname m365 aad o365group recyclebinitem restore --mailNickname \"Mygroup\"","title":"Examples"},{"location":"cmd/aad/o365group/o365group-remove/","text":"aad o365group remove \u00b6 Removes an Microsoft 365 Group Usage \u00b6 m365 aad o365group remove [ options ] Options \u00b6 -i, --id <id> The ID of the Microsoft 365 Group to remove --confirm Don't prompt for confirming removing the group --skipRecycleBin Set to directly remove the group without moving it to the Recycle Bin -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 If the specified id doesn't refer to an existing group, you will get a Resource does not exist error. Examples \u00b6 Remove group with id 28beab62-7540-4db1-a23f-29a6018a3848 . Will prompt for confirmation before removing the group m365 aad o365group remove --id 28beab62-7540-4db1-a23f-29a6018a3848 Remove group with id 28beab62-7540-4db1-a23f-29a6018a3848 without prompting for confirmation m365 aad o365group remove --id 28beab62-7540-4db1-a23f-29a6018a3848 --confirm Remove group with id 28beab62-7540-4db1-a23f-29a6018a3848 without prompting for confirmation and without moving it to the Recycle Bin m365 aad o365group remove --id 28beab62-7540-4db1-a23f-29a6018a3848 --confirm --skipRecycleBin","title":"o365group remove"},{"location":"cmd/aad/o365group/o365group-remove/#aad-o365group-remove","text":"Removes an Microsoft 365 Group","title":"aad o365group remove"},{"location":"cmd/aad/o365group/o365group-remove/#usage","text":"m365 aad o365group remove [ options ]","title":"Usage"},{"location":"cmd/aad/o365group/o365group-remove/#options","text":"-i, --id <id> The ID of the Microsoft 365 Group to remove --confirm Don't prompt for confirming removing the group --skipRecycleBin Set to directly remove the group without moving it to the Recycle Bin -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/aad/o365group/o365group-remove/#remarks","text":"If the specified id doesn't refer to an existing group, you will get a Resource does not exist error.","title":"Remarks"},{"location":"cmd/aad/o365group/o365group-remove/#examples","text":"Remove group with id 28beab62-7540-4db1-a23f-29a6018a3848 . Will prompt for confirmation before removing the group m365 aad o365group remove --id 28beab62-7540-4db1-a23f-29a6018a3848 Remove group with id 28beab62-7540-4db1-a23f-29a6018a3848 without prompting for confirmation m365 aad o365group remove --id 28beab62-7540-4db1-a23f-29a6018a3848 --confirm Remove group with id 28beab62-7540-4db1-a23f-29a6018a3848 without prompting for confirmation and without moving it to the Recycle Bin m365 aad o365group remove --id 28beab62-7540-4db1-a23f-29a6018a3848 --confirm --skipRecycleBin","title":"Examples"},{"location":"cmd/aad/o365group/o365group-renew/","text":"aad o365group renew \u00b6 Renews Microsoft 365 group's expiration Usage \u00b6 m365 aad o365group renew [ options ] Options \u00b6 -i, --id <id> The ID of the Microsoft 365 group to renew -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 If the specified id doesn't refer to an existing group, you will get a The remote server returned an error: (404) Not Found. error. Examples \u00b6 Renew the Microsoft 365 group with id 28beab62-7540-4db1-a23f-29a6018a3848 m365 aad o365group renew --id 28beab62-7540-4db1-a23f-29a6018a3848","title":"o365group renew"},{"location":"cmd/aad/o365group/o365group-renew/#aad-o365group-renew","text":"Renews Microsoft 365 group's expiration","title":"aad o365group renew"},{"location":"cmd/aad/o365group/o365group-renew/#usage","text":"m365 aad o365group renew [ options ]","title":"Usage"},{"location":"cmd/aad/o365group/o365group-renew/#options","text":"-i, --id <id> The ID of the Microsoft 365 group to renew -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/aad/o365group/o365group-renew/#remarks","text":"If the specified id doesn't refer to an existing group, you will get a The remote server returned an error: (404) Not Found. error.","title":"Remarks"},{"location":"cmd/aad/o365group/o365group-renew/#examples","text":"Renew the Microsoft 365 group with id 28beab62-7540-4db1-a23f-29a6018a3848 m365 aad o365group renew --id 28beab62-7540-4db1-a23f-29a6018a3848","title":"Examples"},{"location":"cmd/aad/o365group/o365group-report-activitycounts/","text":"aad o365group report activitycounts \u00b6 Get the number of group activities across group workloads Usage \u00b6 m365 aad o365group report activitycounts [ options ] Options \u00b6 -p, --period <period> The length of time over which the report is aggregated. Supported values D7,D30,D90,D180 -f, --outputFile [outputFile] Path to the file where the Microsoft 365 Groups activities across group workloads report should be stored in -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Get the number of group activities across group workloads for the last week m365 aad o365group report activitycounts --period D7 Get the number of group activities across group workloads for the last week and exports the report data in the specified path in text format m365 aad o365group report activitycounts --period D7 --output text > \"o365groupactivitycounts.txt\" Get the number of group activities across group workloads for the last week and exports the report data in the specified path in json format m365 aad o365group report activitycounts --period D7 --output json > \"o365groupactivitycounts.json\"","title":"o365group report activitycounts"},{"location":"cmd/aad/o365group/o365group-report-activitycounts/#aad-o365group-report-activitycounts","text":"Get the number of group activities across group workloads","title":"aad o365group report activitycounts"},{"location":"cmd/aad/o365group/o365group-report-activitycounts/#usage","text":"m365 aad o365group report activitycounts [ options ]","title":"Usage"},{"location":"cmd/aad/o365group/o365group-report-activitycounts/#options","text":"-p, --period <period> The length of time over which the report is aggregated. Supported values D7,D30,D90,D180 -f, --outputFile [outputFile] Path to the file where the Microsoft 365 Groups activities across group workloads report should be stored in -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/aad/o365group/o365group-report-activitycounts/#examples","text":"Get the number of group activities across group workloads for the last week m365 aad o365group report activitycounts --period D7 Get the number of group activities across group workloads for the last week and exports the report data in the specified path in text format m365 aad o365group report activitycounts --period D7 --output text > \"o365groupactivitycounts.txt\" Get the number of group activities across group workloads for the last week and exports the report data in the specified path in json format m365 aad o365group report activitycounts --period D7 --output json > \"o365groupactivitycounts.json\"","title":"Examples"},{"location":"cmd/aad/o365group/o365group-report-activitydetail/","text":"aad o365group report activitydetail \u00b6 Get details about Microsoft 365 Groups activity by group. Usage \u00b6 m365 aad o365group report activitydetail [ options ] Options \u00b6 -p, --period [period] The length of time over which the report is aggregated. Supported values D7,D30,D90,D180 . Specify the period or date , but not both. -d, --date [date] The date for which you would like to view the users who performed any activity. Supported date format is YYYY-MM-DD . Specify the date or period , but not both. -f, --outputFile [outputFile] Path to the file where the Microsoft 365 Groups activity by group report should be stored in -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Get details about Microsoft 365 Groups activity by group for the last week m365 aad o365group report activitydetail --period D7 Get details about Microsoft 365 Groups activity by group for September 09, 2019 m365 aad o365group report activitydetail --date 2019 -09-28 Get details about Microsoft 365 Groups activity by group for the last week and exports the report data in the specified path in text format m365 aad o365group report activitydetail --period D7 --output text > \"o365groupactivitydetail.txt\" Get details about Microsoft 365 Groups activity by group for the last week and exports the report data in the specified path in json format m365 aad o365group report activitydetail --period D7 --output json > \"o365groupactivitydetail.json\"","title":"o365group report activitydetail"},{"location":"cmd/aad/o365group/o365group-report-activitydetail/#aad-o365group-report-activitydetail","text":"Get details about Microsoft 365 Groups activity by group.","title":"aad o365group report activitydetail"},{"location":"cmd/aad/o365group/o365group-report-activitydetail/#usage","text":"m365 aad o365group report activitydetail [ options ]","title":"Usage"},{"location":"cmd/aad/o365group/o365group-report-activitydetail/#options","text":"-p, --period [period] The length of time over which the report is aggregated. Supported values D7,D30,D90,D180 . Specify the period or date , but not both. -d, --date [date] The date for which you would like to view the users who performed any activity. Supported date format is YYYY-MM-DD . Specify the date or period , but not both. -f, --outputFile [outputFile] Path to the file where the Microsoft 365 Groups activity by group report should be stored in -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/aad/o365group/o365group-report-activitydetail/#examples","text":"Get details about Microsoft 365 Groups activity by group for the last week m365 aad o365group report activitydetail --period D7 Get details about Microsoft 365 Groups activity by group for September 09, 2019 m365 aad o365group report activitydetail --date 2019 -09-28 Get details about Microsoft 365 Groups activity by group for the last week and exports the report data in the specified path in text format m365 aad o365group report activitydetail --period D7 --output text > \"o365groupactivitydetail.txt\" Get details about Microsoft 365 Groups activity by group for the last week and exports the report data in the specified path in json format m365 aad o365group report activitydetail --period D7 --output json > \"o365groupactivitydetail.json\"","title":"Examples"},{"location":"cmd/aad/o365group/o365group-report-activityfilecounts/","text":"aad o365group report activityfilecounts \u00b6 Get the total number of files and how many of them were active across all group sites associated with an Microsoft 365 Group Usage \u00b6 m365 aad o365group report activityfilecounts [ options ] Options \u00b6 -p, --period <period> The length of time over which the report is aggregated. Supported values D7,D30,D90,D180 -f, --outputFile [outputFile] Path to the file where the Microsoft 365 Groups activities across group workloads report should be stored in -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Get the total number of files and how many of them were active across all group sites associated with an Microsoft 365 Group for the last week m365 aad o365group report activityfilecounts --period D7 Get the total number of files and how many of them were active across all group sites associated with an Microsoft 365 Group for the last week and exports the report data in the specified path in text format m365 aad o365group report activityfilecounts --period D7 --output text > \"o365groupactivityfilecounts.txt\" Get the total number of files and how many of them were active across all group sites associated with an Microsoft 365 Group for the last week and exports the report data in the specified path in json format m365 aad o365group report activityfilecounts --period D7 --output json > \"o365groupactivityfilecounts.json\"","title":"o365group report activityfilecounts"},{"location":"cmd/aad/o365group/o365group-report-activityfilecounts/#aad-o365group-report-activityfilecounts","text":"Get the total number of files and how many of them were active across all group sites associated with an Microsoft 365 Group","title":"aad o365group report activityfilecounts"},{"location":"cmd/aad/o365group/o365group-report-activityfilecounts/#usage","text":"m365 aad o365group report activityfilecounts [ options ]","title":"Usage"},{"location":"cmd/aad/o365group/o365group-report-activityfilecounts/#options","text":"-p, --period <period> The length of time over which the report is aggregated. Supported values D7,D30,D90,D180 -f, --outputFile [outputFile] Path to the file where the Microsoft 365 Groups activities across group workloads report should be stored in -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/aad/o365group/o365group-report-activityfilecounts/#examples","text":"Get the total number of files and how many of them were active across all group sites associated with an Microsoft 365 Group for the last week m365 aad o365group report activityfilecounts --period D7 Get the total number of files and how many of them were active across all group sites associated with an Microsoft 365 Group for the last week and exports the report data in the specified path in text format m365 aad o365group report activityfilecounts --period D7 --output text > \"o365groupactivityfilecounts.txt\" Get the total number of files and how many of them were active across all group sites associated with an Microsoft 365 Group for the last week and exports the report data in the specified path in json format m365 aad o365group report activityfilecounts --period D7 --output json > \"o365groupactivityfilecounts.json\"","title":"Examples"},{"location":"cmd/aad/o365group/o365group-report-activitygroupcounts/","text":"aad o365group report activitygroupcounts \u00b6 Get the daily total number of groups and how many of them were active based on email conversations, Yammer posts, and SharePoint file activities. Usage \u00b6 m365 aad o365group report activitygroupcounts [ options ] Options \u00b6 -p, --period <period> The length of time over which the report is aggregated. Supported values D7,D30,D90,D180 -f, --outputFile [outputFile] Path to the file where the Microsoft 365 Groups activities report should be stored in -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Get the daily total number of groups and how many of them were active based on activities for the last week m365 aad o365group report activitygroupcounts --period D7 Get the daily total number of groups and how many of them were active based on activities for the last week and exports the report data in the specified path in text format m365 aad o365group report activitygroupcounts --period D7 --output text > \"o365groupactivitygroupcounts.txt\" Get the daily total number of groups and how many of them were active based on activities for the last week and exports the report data in the specified path in json format m365 aad o365group report activitygroupcounts --period D7 --output json > \"o365groupactivitygroupcounts.json\"","title":"o365group report activitygroupcounts"},{"location":"cmd/aad/o365group/o365group-report-activitygroupcounts/#aad-o365group-report-activitygroupcounts","text":"Get the daily total number of groups and how many of them were active based on email conversations, Yammer posts, and SharePoint file activities.","title":"aad o365group report activitygroupcounts"},{"location":"cmd/aad/o365group/o365group-report-activitygroupcounts/#usage","text":"m365 aad o365group report activitygroupcounts [ options ]","title":"Usage"},{"location":"cmd/aad/o365group/o365group-report-activitygroupcounts/#options","text":"-p, --period <period> The length of time over which the report is aggregated. Supported values D7,D30,D90,D180 -f, --outputFile [outputFile] Path to the file where the Microsoft 365 Groups activities report should be stored in -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/aad/o365group/o365group-report-activitygroupcounts/#examples","text":"Get the daily total number of groups and how many of them were active based on activities for the last week m365 aad o365group report activitygroupcounts --period D7 Get the daily total number of groups and how many of them were active based on activities for the last week and exports the report data in the specified path in text format m365 aad o365group report activitygroupcounts --period D7 --output text > \"o365groupactivitygroupcounts.txt\" Get the daily total number of groups and how many of them were active based on activities for the last week and exports the report data in the specified path in json format m365 aad o365group report activitygroupcounts --period D7 --output json > \"o365groupactivitygroupcounts.json\"","title":"Examples"},{"location":"cmd/aad/o365group/o365group-report-activitystorage/","text":"aad o365group report activitystorage \u00b6 Get the total storage used across all group mailboxes and group sites Usage \u00b6 m365 aad o365group report activitystorage [ options ] Options \u00b6 -p, --period <period> The length of time over which the report is aggregated. Supported values D7,D30,D90,D180 -f, --outputFile [outputFile] Path to the file where the Microsoft 365 Groups activities report should be stored in -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Get the total storage used across all group mailboxes and group sites for the last week m365 aad o365group report activitystorage --period D7 Get the total storage used across all group mailboxes and group sites for the last week and exports the report data in the specified path in text format m365 aad o365group report activitystorage --period D7 --output text > \"o365groupactivitystorage.txt\" Get the total storage used across all group mailboxes and group sites for the last week and exports the report data in the specified path in json format m365 aad o365group report activitystorage --period D7 --output json > \"o365groupactivitystorage.json\"","title":"o365group report activitystorage"},{"location":"cmd/aad/o365group/o365group-report-activitystorage/#aad-o365group-report-activitystorage","text":"Get the total storage used across all group mailboxes and group sites","title":"aad o365group report activitystorage"},{"location":"cmd/aad/o365group/o365group-report-activitystorage/#usage","text":"m365 aad o365group report activitystorage [ options ]","title":"Usage"},{"location":"cmd/aad/o365group/o365group-report-activitystorage/#options","text":"-p, --period <period> The length of time over which the report is aggregated. Supported values D7,D30,D90,D180 -f, --outputFile [outputFile] Path to the file where the Microsoft 365 Groups activities report should be stored in -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/aad/o365group/o365group-report-activitystorage/#examples","text":"Get the total storage used across all group mailboxes and group sites for the last week m365 aad o365group report activitystorage --period D7 Get the total storage used across all group mailboxes and group sites for the last week and exports the report data in the specified path in text format m365 aad o365group report activitystorage --period D7 --output text > \"o365groupactivitystorage.txt\" Get the total storage used across all group mailboxes and group sites for the last week and exports the report data in the specified path in json format m365 aad o365group report activitystorage --period D7 --output json > \"o365groupactivitystorage.json\"","title":"Examples"},{"location":"cmd/aad/o365group/o365group-set/","text":"aad o365group set \u00b6 Updates Microsoft 365 Group properties Usage \u00b6 m365 aad o365group set [ options ] Options \u00b6 -i, --id <id> The ID of the Microsoft 365 Group to update -n, --displayName [displayName] Display name for the Microsoft 365 Group -d, --description [description] Description for the Microsoft 365 Group --owners [owners] Comma-separated list of Microsoft 365 Group owners to add --members [members] Comma-separated list of Microsoft 365 Group members to add --isPrivate [isPrivate] Set to true if the Microsoft 365 Group should be private and to false if it should be public (default) -l, --logoPath [logoPath] Local path to the image file to use as group logo -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 When updating group's owners and members, the command will add newly specified users to the previously set owners and members. The previously set users will not be replaced. When specifying the path to the logo image you can use both relative and absolute paths. Note, that ~ in the path, will not be resolved and will most likely result in an error. Examples \u00b6 Update Microsoft 365 Group display name m365 aad o365group set --id 28beab62-7540-4db1-a23f-29a6018a3848 --displayName Finance Change Microsoft 365 Group visibility to public m365 aad o365group set --id 28beab62-7540-4db1-a23f-29a6018a3848 --isPrivate false Add new Microsoft 365 Group owners m365 aad o365group set --id 28beab62-7540-4db1-a23f-29a6018a3848 --owners \"DebraB@contoso.onmicrosoft.com,DiegoS@contoso.onmicrosoft.com\" Add new Microsoft 365 Group members m365 aad o365group set --id 28beab62-7540-4db1-a23f-29a6018a3848 --members \"DebraB@contoso.onmicrosoft.com,DiegoS@contoso.onmicrosoft.com\" Update Microsoft 365 Group logo m365 aad o365group set --id 28beab62-7540-4db1-a23f-29a6018a3848 --logoPath images/logo.png","title":"o365group set"},{"location":"cmd/aad/o365group/o365group-set/#aad-o365group-set","text":"Updates Microsoft 365 Group properties","title":"aad o365group set"},{"location":"cmd/aad/o365group/o365group-set/#usage","text":"m365 aad o365group set [ options ]","title":"Usage"},{"location":"cmd/aad/o365group/o365group-set/#options","text":"-i, --id <id> The ID of the Microsoft 365 Group to update -n, --displayName [displayName] Display name for the Microsoft 365 Group -d, --description [description] Description for the Microsoft 365 Group --owners [owners] Comma-separated list of Microsoft 365 Group owners to add --members [members] Comma-separated list of Microsoft 365 Group members to add --isPrivate [isPrivate] Set to true if the Microsoft 365 Group should be private and to false if it should be public (default) -l, --logoPath [logoPath] Local path to the image file to use as group logo -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/aad/o365group/o365group-set/#remarks","text":"When updating group's owners and members, the command will add newly specified users to the previously set owners and members. The previously set users will not be replaced. When specifying the path to the logo image you can use both relative and absolute paths. Note, that ~ in the path, will not be resolved and will most likely result in an error.","title":"Remarks"},{"location":"cmd/aad/o365group/o365group-set/#examples","text":"Update Microsoft 365 Group display name m365 aad o365group set --id 28beab62-7540-4db1-a23f-29a6018a3848 --displayName Finance Change Microsoft 365 Group visibility to public m365 aad o365group set --id 28beab62-7540-4db1-a23f-29a6018a3848 --isPrivate false Add new Microsoft 365 Group owners m365 aad o365group set --id 28beab62-7540-4db1-a23f-29a6018a3848 --owners \"DebraB@contoso.onmicrosoft.com,DiegoS@contoso.onmicrosoft.com\" Add new Microsoft 365 Group members m365 aad o365group set --id 28beab62-7540-4db1-a23f-29a6018a3848 --members \"DebraB@contoso.onmicrosoft.com,DiegoS@contoso.onmicrosoft.com\" Update Microsoft 365 Group logo m365 aad o365group set --id 28beab62-7540-4db1-a23f-29a6018a3848 --logoPath images/logo.png","title":"Examples"},{"location":"cmd/aad/o365group/o365group-teamify/","text":"aad o365group teamify \u00b6 Creates a new Microsoft Teams team under existing Microsoft 365 group Usage \u00b6 m365 aad o365group teamify [ options ] Options \u00b6 -i, --id [id] The ID of the Microsoft 365 Group to connect to Microsoft Teams. Specify either id or mailNickname but not both --mailNickname [mailNickname] The mail alias of the Microsoft 365 Group to connect to Microsoft Teams. Specify either id or mailNickname but not both -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Creates a new Microsoft Teams team under existing Microsoft 365 group with id e3f60f99-0bad-481f-9e9f-ff0f572fbd03 m365 aad o365group teamify --id e3f60f99-0bad-481f-9e9f-ff0f572fbd03 Creates a new Microsoft Teams team under existing Microsoft 365 group with mailNickname GroupName m365 aad o365group teamify --mailNickname GroupName","title":"o365group teamify"},{"location":"cmd/aad/o365group/o365group-teamify/#aad-o365group-teamify","text":"Creates a new Microsoft Teams team under existing Microsoft 365 group","title":"aad o365group teamify"},{"location":"cmd/aad/o365group/o365group-teamify/#usage","text":"m365 aad o365group teamify [ options ]","title":"Usage"},{"location":"cmd/aad/o365group/o365group-teamify/#options","text":"-i, --id [id] The ID of the Microsoft 365 Group to connect to Microsoft Teams. Specify either id or mailNickname but not both --mailNickname [mailNickname] The mail alias of the Microsoft 365 Group to connect to Microsoft Teams. Specify either id or mailNickname but not both -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/aad/o365group/o365group-teamify/#examples","text":"Creates a new Microsoft Teams team under existing Microsoft 365 group with id e3f60f99-0bad-481f-9e9f-ff0f572fbd03 m365 aad o365group teamify --id e3f60f99-0bad-481f-9e9f-ff0f572fbd03 Creates a new Microsoft Teams team under existing Microsoft 365 group with mailNickname GroupName m365 aad o365group teamify --mailNickname GroupName","title":"Examples"},{"location":"cmd/aad/o365group/o365group-user-add/","text":"aad o365group user add \u00b6 Adds user to specified Microsoft 365 Group or Microsoft Teams team Usage \u00b6 m365 aad o365group user add [ options ] Alias \u00b6 m365 teams user add Options \u00b6 -i, --groupId [groupId] The ID of the Microsoft 365 Group to which to add the user --teamId [teamId] The ID of the Teams team to which to add the user -n, --userName <userName> User's UPN (user principal name, eg. johndoe@example.com) -r, --role [role] The role to be assigned to the new user: Owner,Member . Default Member -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Add a new member to the specified Microsoft 365 Group m365 aad o365group user add --groupId '00000000-0000-0000-0000-000000000000' --userName 'anne.matthews@contoso.onmicrosoft.com' Add a new owner to the specified Microsoft 365 Group m365 aad o365group user add --groupId '00000000-0000-0000-0000-000000000000' --userName 'anne.matthews@contoso.onmicrosoft.com' --role Owner Add a new member to the specified Microsoft Teams team m365 teams user add --teamId '00000000-0000-0000-0000-000000000000' --userName 'anne.matthews@contoso.onmicrosoft.com'","title":"user add"},{"location":"cmd/aad/o365group/o365group-user-add/#aad-o365group-user-add","text":"Adds user to specified Microsoft 365 Group or Microsoft Teams team","title":"aad o365group user add"},{"location":"cmd/aad/o365group/o365group-user-add/#usage","text":"m365 aad o365group user add [ options ]","title":"Usage"},{"location":"cmd/aad/o365group/o365group-user-add/#alias","text":"m365 teams user add","title":"Alias"},{"location":"cmd/aad/o365group/o365group-user-add/#options","text":"-i, --groupId [groupId] The ID of the Microsoft 365 Group to which to add the user --teamId [teamId] The ID of the Teams team to which to add the user -n, --userName <userName> User's UPN (user principal name, eg. johndoe@example.com) -r, --role [role] The role to be assigned to the new user: Owner,Member . Default Member -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/aad/o365group/o365group-user-add/#examples","text":"Add a new member to the specified Microsoft 365 Group m365 aad o365group user add --groupId '00000000-0000-0000-0000-000000000000' --userName 'anne.matthews@contoso.onmicrosoft.com' Add a new owner to the specified Microsoft 365 Group m365 aad o365group user add --groupId '00000000-0000-0000-0000-000000000000' --userName 'anne.matthews@contoso.onmicrosoft.com' --role Owner Add a new member to the specified Microsoft Teams team m365 teams user add --teamId '00000000-0000-0000-0000-000000000000' --userName 'anne.matthews@contoso.onmicrosoft.com'","title":"Examples"},{"location":"cmd/aad/o365group/o365group-user-list/","text":"aad o365group user list \u00b6 Lists users for the specified Microsoft 365 group Usage \u00b6 m365 aad o365group user list [ options ] Options \u00b6 -i, --groupId <groupId> The ID of the Microsoft 365 group for which to list users -r, --role [role] Filter the results to only users with the given role: Owner,Member,Guest -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 List all users and their role in the specified Microsoft 365 group m365 aad o365group user list --groupId '00000000-0000-0000-0000-000000000000' List all owners and their role in the specified Microsoft 365 group m365 aad o365group user list --groupId '00000000-0000-0000-0000-000000000000' --role Owner List all guests and their role in the specified Microsoft 365 group m365 aad o365group user list --groupId '00000000-0000-0000-0000-000000000000' --role Guest","title":"o365group user list"},{"location":"cmd/aad/o365group/o365group-user-list/#aad-o365group-user-list","text":"Lists users for the specified Microsoft 365 group","title":"aad o365group user list"},{"location":"cmd/aad/o365group/o365group-user-list/#usage","text":"m365 aad o365group user list [ options ]","title":"Usage"},{"location":"cmd/aad/o365group/o365group-user-list/#options","text":"-i, --groupId <groupId> The ID of the Microsoft 365 group for which to list users -r, --role [role] Filter the results to only users with the given role: Owner,Member,Guest -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/aad/o365group/o365group-user-list/#examples","text":"List all users and their role in the specified Microsoft 365 group m365 aad o365group user list --groupId '00000000-0000-0000-0000-000000000000' List all owners and their role in the specified Microsoft 365 group m365 aad o365group user list --groupId '00000000-0000-0000-0000-000000000000' --role Owner List all guests and their role in the specified Microsoft 365 group m365 aad o365group user list --groupId '00000000-0000-0000-0000-000000000000' --role Guest","title":"Examples"},{"location":"cmd/aad/o365group/o365group-user-remove/","text":"aad o365group user remove \u00b6 Removes the specified user from specified Microsoft 365 Group or Microsoft Teams team Usage \u00b6 m365 aad o365group user remove [ options ] Alias \u00b6 m365 aad teams user remove Options \u00b6 -i, --groupId [groupId] The ID of the Microsoft 365 Group from which to remove the user --teamId [teamId] The ID of the Microsoft Teams team from which to remove the user -n, --userName <userName> User's UPN (user principal name), eg. johndoe@example.com --confirm Don't prompt for confirming removing the user from the specified Microsoft 365 Group or Microsoft Teams team -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 You can remove users from a Microsoft 365 Group or Microsoft Teams team if you are owner of that group or team. Examples \u00b6 Removes user from the specified Microsoft 365 Group m365 aad o365group user remove --groupId '00000000-0000-0000-0000-000000000000' --userName 'anne.matthews@contoso.onmicrosoft.com' Removes user from the specified Microsoft 365 Group without confirmation m365 aad o365group user remove --groupId '00000000-0000-0000-0000-000000000000' --userName 'anne.matthews@contoso.onmicrosoft.com' --confirm Removes user from the specified Microsoft Teams team m365 aad teams user remove --teamId '00000000-0000-0000-0000-000000000000' --userName 'anne.matthews@contoso.onmicrosoft.com'","title":"user remove"},{"location":"cmd/aad/o365group/o365group-user-remove/#aad-o365group-user-remove","text":"Removes the specified user from specified Microsoft 365 Group or Microsoft Teams team","title":"aad o365group user remove"},{"location":"cmd/aad/o365group/o365group-user-remove/#usage","text":"m365 aad o365group user remove [ options ]","title":"Usage"},{"location":"cmd/aad/o365group/o365group-user-remove/#alias","text":"m365 aad teams user remove","title":"Alias"},{"location":"cmd/aad/o365group/o365group-user-remove/#options","text":"-i, --groupId [groupId] The ID of the Microsoft 365 Group from which to remove the user --teamId [teamId] The ID of the Microsoft Teams team from which to remove the user -n, --userName <userName> User's UPN (user principal name), eg. johndoe@example.com --confirm Don't prompt for confirming removing the user from the specified Microsoft 365 Group or Microsoft Teams team -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/aad/o365group/o365group-user-remove/#remarks","text":"You can remove users from a Microsoft 365 Group or Microsoft Teams team if you are owner of that group or team.","title":"Remarks"},{"location":"cmd/aad/o365group/o365group-user-remove/#examples","text":"Removes user from the specified Microsoft 365 Group m365 aad o365group user remove --groupId '00000000-0000-0000-0000-000000000000' --userName 'anne.matthews@contoso.onmicrosoft.com' Removes user from the specified Microsoft 365 Group without confirmation m365 aad o365group user remove --groupId '00000000-0000-0000-0000-000000000000' --userName 'anne.matthews@contoso.onmicrosoft.com' --confirm Removes user from the specified Microsoft Teams team m365 aad teams user remove --teamId '00000000-0000-0000-0000-000000000000' --userName 'anne.matthews@contoso.onmicrosoft.com'","title":"Examples"},{"location":"cmd/aad/o365group/o365group-user-set/","text":"aad o365group user set \u00b6 Updates role of the specified user in the specified Microsoft 365 Group or Microsoft Teams team Usage \u00b6 m365 aad o365group user set [ options ] Alias \u00b6 m365 aad teams user set Options \u00b6 -i, --groupId [groupId] The ID of the Microsoft 365 group for which to update user --teamId [teamId] The ID of the Microsoft Teams team for which to update user -n, --userName <userName> UPN of the user for whom to update the role (eg. johndoe@example.com) -r, --role <role> Role to set for the given user in the specified Microsoft 365 Group or Microsoft Teams team. Allowed values: Owner,Member -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 The command will return an error if the user already has the specified role in the given Microsoft 365 Group or Microsoft Teams team. Examples \u00b6 Promote the specified user to owner of the given Microsoft 365 Group m365 aad o365group user list --groupId '00000000-0000-0000-0000-000000000000' --userName 'anne.matthews@contoso.onmicrosoft.com' --role Owner Demote the specified user from owner to member in the given Microsoft 365 Group m365 aad o365group user list --groupId '00000000-0000-0000-0000-000000000000' --userName 'anne.matthews@contoso.onmicrosoft.com' --role Member Promote the specified user to owner of the given Microsoft Teams team m365 aad teams user list --teamId '00000000-0000-0000-0000-000000000000' --userName 'anne.matthews@contoso.onmicrosoft.com' --role Owner Demote the specified user from owner to member in the given Microsoft Teams team m365 aad teams user list --teamId '00000000-0000-0000-0000-000000000000' --userName 'anne.matthews@contoso.onmicrosoft.com' --role Member","title":"user set"},{"location":"cmd/aad/o365group/o365group-user-set/#aad-o365group-user-set","text":"Updates role of the specified user in the specified Microsoft 365 Group or Microsoft Teams team","title":"aad o365group user set"},{"location":"cmd/aad/o365group/o365group-user-set/#usage","text":"m365 aad o365group user set [ options ]","title":"Usage"},{"location":"cmd/aad/o365group/o365group-user-set/#alias","text":"m365 aad teams user set","title":"Alias"},{"location":"cmd/aad/o365group/o365group-user-set/#options","text":"-i, --groupId [groupId] The ID of the Microsoft 365 group for which to update user --teamId [teamId] The ID of the Microsoft Teams team for which to update user -n, --userName <userName> UPN of the user for whom to update the role (eg. johndoe@example.com) -r, --role <role> Role to set for the given user in the specified Microsoft 365 Group or Microsoft Teams team. Allowed values: Owner,Member -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/aad/o365group/o365group-user-set/#remarks","text":"The command will return an error if the user already has the specified role in the given Microsoft 365 Group or Microsoft Teams team.","title":"Remarks"},{"location":"cmd/aad/o365group/o365group-user-set/#examples","text":"Promote the specified user to owner of the given Microsoft 365 Group m365 aad o365group user list --groupId '00000000-0000-0000-0000-000000000000' --userName 'anne.matthews@contoso.onmicrosoft.com' --role Owner Demote the specified user from owner to member in the given Microsoft 365 Group m365 aad o365group user list --groupId '00000000-0000-0000-0000-000000000000' --userName 'anne.matthews@contoso.onmicrosoft.com' --role Member Promote the specified user to owner of the given Microsoft Teams team m365 aad teams user list --teamId '00000000-0000-0000-0000-000000000000' --userName 'anne.matthews@contoso.onmicrosoft.com' --role Owner Demote the specified user from owner to member in the given Microsoft Teams team m365 aad teams user list --teamId '00000000-0000-0000-0000-000000000000' --userName 'anne.matthews@contoso.onmicrosoft.com' --role Member","title":"Examples"},{"location":"cmd/aad/oauth2grant/oauth2grant-add/","text":"aad oauth2grant add \u00b6 Grant the specified service principal OAuth2 permissions to the specified resource Usage \u00b6 m365 aad oauth2grant add [ options ] Options \u00b6 -i, --clientId <clientId> objectId of the service principal for which permissions should be granted -r, --resourceId <resourceId> objectId of the AAD application to which permissions should be granted -s, --scope <scope> Permissions to grant -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 Before you can grant service principal OAuth2 permissions, you need its objectId . You can retrieve it using the aad sp get command. The resource for which you want to grant permissions is designated using its objectId . You can retrieve it using the aad sp get command, the same way you would retrieve the objectId of the service principal. When granting OAuth2 permissions, you have to specify which permission scopes you want to grant the service principal. You can get the list of available permission scopes either from the resource documentation or from the appRoles property when retrieving information about the service principal using the aad sp get command. Multiple permission scopes can be specified separated by a space. When granting OAuth2 permissions, the values of the clientId and resourceId properties form a unique key. If a grant for the same clientId - resourceId pair already exists, running the aad oauth2grant add command will fail with an error. If you want to change permissions on an existing OAuth2 grant use the aad oauth2grant set command instead. Examples \u00b6 Grant the service principal d03a0062-1aa6-43e1-8f49-d73e969c5812 the Calendars.Read OAuth2 permissions to the c2af2474-2c95-423a-b0e5-e4895f22f9e9 resource. m365 aad oauth2grant add --clientId d03a0062-1aa6-43e1-8f49-d73e969c5812 --resourceId c2af2474-2c95-423a-b0e5-e4895f22f9e9 --scope Calendars.Read Grant the service principal d03a0062-1aa6-43e1-8f49-d73e969c5812 the Calendars.Read and Mail.Read OAuth2 permissions to the c2af2474-2c95-423a-b0e5-e4895f22f9e9 resource. m365 aad oauth2grant add --clientId d03a0062-1aa6-43e1-8f49-d73e969c5812 --resourceId c2af2474-2c95-423a-b0e5-e4895f22f9e9 --scope \"Calendars.Read Mail.Read\" More information \u00b6 Application and service principal objects in Azure Active Directory (Azure AD): https://docs.microsoft.com/en-us/azure/active-directory/develop/active-directory-application-objects","title":"oauth2grant add"},{"location":"cmd/aad/oauth2grant/oauth2grant-add/#aad-oauth2grant-add","text":"Grant the specified service principal OAuth2 permissions to the specified resource","title":"aad oauth2grant add"},{"location":"cmd/aad/oauth2grant/oauth2grant-add/#usage","text":"m365 aad oauth2grant add [ options ]","title":"Usage"},{"location":"cmd/aad/oauth2grant/oauth2grant-add/#options","text":"-i, --clientId <clientId> objectId of the service principal for which permissions should be granted -r, --resourceId <resourceId> objectId of the AAD application to which permissions should be granted -s, --scope <scope> Permissions to grant -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/aad/oauth2grant/oauth2grant-add/#remarks","text":"Before you can grant service principal OAuth2 permissions, you need its objectId . You can retrieve it using the aad sp get command. The resource for which you want to grant permissions is designated using its objectId . You can retrieve it using the aad sp get command, the same way you would retrieve the objectId of the service principal. When granting OAuth2 permissions, you have to specify which permission scopes you want to grant the service principal. You can get the list of available permission scopes either from the resource documentation or from the appRoles property when retrieving information about the service principal using the aad sp get command. Multiple permission scopes can be specified separated by a space. When granting OAuth2 permissions, the values of the clientId and resourceId properties form a unique key. If a grant for the same clientId - resourceId pair already exists, running the aad oauth2grant add command will fail with an error. If you want to change permissions on an existing OAuth2 grant use the aad oauth2grant set command instead.","title":"Remarks"},{"location":"cmd/aad/oauth2grant/oauth2grant-add/#examples","text":"Grant the service principal d03a0062-1aa6-43e1-8f49-d73e969c5812 the Calendars.Read OAuth2 permissions to the c2af2474-2c95-423a-b0e5-e4895f22f9e9 resource. m365 aad oauth2grant add --clientId d03a0062-1aa6-43e1-8f49-d73e969c5812 --resourceId c2af2474-2c95-423a-b0e5-e4895f22f9e9 --scope Calendars.Read Grant the service principal d03a0062-1aa6-43e1-8f49-d73e969c5812 the Calendars.Read and Mail.Read OAuth2 permissions to the c2af2474-2c95-423a-b0e5-e4895f22f9e9 resource. m365 aad oauth2grant add --clientId d03a0062-1aa6-43e1-8f49-d73e969c5812 --resourceId c2af2474-2c95-423a-b0e5-e4895f22f9e9 --scope \"Calendars.Read Mail.Read\"","title":"Examples"},{"location":"cmd/aad/oauth2grant/oauth2grant-add/#more-information","text":"Application and service principal objects in Azure Active Directory (Azure AD): https://docs.microsoft.com/en-us/azure/active-directory/develop/active-directory-application-objects","title":"More information"},{"location":"cmd/aad/oauth2grant/oauth2grant-list/","text":"aad oauth2grant list \u00b6 Lists OAuth2 permission grants for the specified service principal Usage \u00b6 m365 aad oauth2grant list [ options ] Options \u00b6 -i, --spObjectId <spObjectId> objectId of the service principal for which the configured OAuth2 permission grants should be retrieved -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 In order to list existing OAuth2 permissions granted to a service principal, you need its objectId . You can retrieve it using the aad sp get command. When using the text output type (default), the command lists only the values of the objectId , resourceId and scope properties of the OAuth grant. When setting the output type to JSON, all available properties are included in the command output. Examples \u00b6 List OAuth2 permissions granted to service principal with objectId b2307a39-e878-458b-bc90-03bc578531d6 . m365 aad oauth2grant list --spObjectId b2307a39-e878-458b-bc90-03bc578531d6 More information \u00b6 Application and service principal objects in Azure Active Directory (Azure AD): https://docs.microsoft.com/en-us/azure/active-directory/develop/active-directory-application-objects List oauth2PermissionGrants: https://docs.microsoft.com/en-us/graph/api/oauth2permissiongrant-list?view=graph-rest-1.0","title":"oauth2grant list"},{"location":"cmd/aad/oauth2grant/oauth2grant-list/#aad-oauth2grant-list","text":"Lists OAuth2 permission grants for the specified service principal","title":"aad oauth2grant list"},{"location":"cmd/aad/oauth2grant/oauth2grant-list/#usage","text":"m365 aad oauth2grant list [ options ]","title":"Usage"},{"location":"cmd/aad/oauth2grant/oauth2grant-list/#options","text":"-i, --spObjectId <spObjectId> objectId of the service principal for which the configured OAuth2 permission grants should be retrieved -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/aad/oauth2grant/oauth2grant-list/#remarks","text":"In order to list existing OAuth2 permissions granted to a service principal, you need its objectId . You can retrieve it using the aad sp get command. When using the text output type (default), the command lists only the values of the objectId , resourceId and scope properties of the OAuth grant. When setting the output type to JSON, all available properties are included in the command output.","title":"Remarks"},{"location":"cmd/aad/oauth2grant/oauth2grant-list/#examples","text":"List OAuth2 permissions granted to service principal with objectId b2307a39-e878-458b-bc90-03bc578531d6 . m365 aad oauth2grant list --spObjectId b2307a39-e878-458b-bc90-03bc578531d6","title":"Examples"},{"location":"cmd/aad/oauth2grant/oauth2grant-list/#more-information","text":"Application and service principal objects in Azure Active Directory (Azure AD): https://docs.microsoft.com/en-us/azure/active-directory/develop/active-directory-application-objects List oauth2PermissionGrants: https://docs.microsoft.com/en-us/graph/api/oauth2permissiongrant-list?view=graph-rest-1.0","title":"More information"},{"location":"cmd/aad/oauth2grant/oauth2grant-remove/","text":"aad oauth2grant remove \u00b6 Remove specified service principal OAuth2 permissions Usage \u00b6 m365 aad oauth2grant remove [ options ] Options \u00b6 -i, --grantId <grantId> objectId of OAuth2 permission grant to remove --confirm Do not prompt for confirmation before removing OAuth2 permission grant -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 Before you can remove service principal's OAuth2 permissions, you need to get the objectId of the permissions grant to remove. You can retrieve it using the aad oauth2grant list command. If the objectId listed when using the aad oauth2grant list command has a minus sign ('-') prefix, you may receive an error indicating --grantId is missing. To resolve this issue simply escape the leading '-'. m365 aad oauth2grant remove --grantId \\\\ -Zc1JRY8REeLxmXz5KtixAYU3Q6noCBPlhwGiX7pxmU Examples \u00b6 Remove the OAuth2 permission grant with ID YgA60KYa4UOPSdc-lpxYEnQkr8KVLDpCsOXkiV8i-ek m365 aad oauth2grant remove --grantId YgA60KYa4UOPSdc-lpxYEnQkr8KVLDpCsOXkiV8i-ek Remove the OAuth2 permission grant with ID YgA60KYa4UOPSdc-lpxYEnQkr8KVLDpCsOXkiV8i-ek without being asked for confirmation m365 aad oauth2grant remove --grantId YgA60KYa4UOPSdc-lpxYEnQkr8KVLDpCsOXkiV8i-ek --confirm More information \u00b6 Application and service principal objects in Azure Active Directory (Azure AD): https://docs.microsoft.com/en-us/azure/active-directory/develop/active-directory-application-objects Delete a delegated permission grant (oAuth2PermissionGrant): https://docs.microsoft.com/en-us/graph/api/oauth2permissiongrant-delete?view=graph-rest-1.0","title":"oauth2grant remove"},{"location":"cmd/aad/oauth2grant/oauth2grant-remove/#aad-oauth2grant-remove","text":"Remove specified service principal OAuth2 permissions","title":"aad oauth2grant remove"},{"location":"cmd/aad/oauth2grant/oauth2grant-remove/#usage","text":"m365 aad oauth2grant remove [ options ]","title":"Usage"},{"location":"cmd/aad/oauth2grant/oauth2grant-remove/#options","text":"-i, --grantId <grantId> objectId of OAuth2 permission grant to remove --confirm Do not prompt for confirmation before removing OAuth2 permission grant -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/aad/oauth2grant/oauth2grant-remove/#remarks","text":"Before you can remove service principal's OAuth2 permissions, you need to get the objectId of the permissions grant to remove. You can retrieve it using the aad oauth2grant list command. If the objectId listed when using the aad oauth2grant list command has a minus sign ('-') prefix, you may receive an error indicating --grantId is missing. To resolve this issue simply escape the leading '-'. m365 aad oauth2grant remove --grantId \\\\ -Zc1JRY8REeLxmXz5KtixAYU3Q6noCBPlhwGiX7pxmU","title":"Remarks"},{"location":"cmd/aad/oauth2grant/oauth2grant-remove/#examples","text":"Remove the OAuth2 permission grant with ID YgA60KYa4UOPSdc-lpxYEnQkr8KVLDpCsOXkiV8i-ek m365 aad oauth2grant remove --grantId YgA60KYa4UOPSdc-lpxYEnQkr8KVLDpCsOXkiV8i-ek Remove the OAuth2 permission grant with ID YgA60KYa4UOPSdc-lpxYEnQkr8KVLDpCsOXkiV8i-ek without being asked for confirmation m365 aad oauth2grant remove --grantId YgA60KYa4UOPSdc-lpxYEnQkr8KVLDpCsOXkiV8i-ek --confirm","title":"Examples"},{"location":"cmd/aad/oauth2grant/oauth2grant-remove/#more-information","text":"Application and service principal objects in Azure Active Directory (Azure AD): https://docs.microsoft.com/en-us/azure/active-directory/develop/active-directory-application-objects Delete a delegated permission grant (oAuth2PermissionGrant): https://docs.microsoft.com/en-us/graph/api/oauth2permissiongrant-delete?view=graph-rest-1.0","title":"More information"},{"location":"cmd/aad/oauth2grant/oauth2grant-set/","text":"aad oauth2grant set \u00b6 Update OAuth2 permissions for the service principal Usage \u00b6 m365 aad oauth2grant set [ options ] Options \u00b6 -i, --grantId <grantId> objectId of OAuth2 permission grant to update -s, --scope <scope> Permissions to grant -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 Before you can update service principal's OAuth2 permissions, you need to get the objectId of the permissions grant to update. You can retrieve it using the aad oauth2grant list command. If the objectId listed when using the aad oauth2grant list command has a minus sign ('-') prefix, you may receive an error indicating --grantId is missing. To resolve this issue simply escape the leading '-'. m365 aad oauth2grant set --grantId \\\\ -Zc1JRY8REeLxmXz5KtixAYU3Q6noCBPlhwGiX7pxmU Examples \u00b6 Update the existing OAuth2 permission grant with ID YgA60KYa4UOPSdc-lpxYEnQkr8KVLDpCsOXkiV8i-ek to the Calendars.Read Mail.Read permissions m365 aad oauth2grant set --grantId YgA60KYa4UOPSdc-lpxYEnQkr8KVLDpCsOXkiV8i-ek --scope \"Calendars.Read Mail.Read\" More information \u00b6 Application and service principal objects in Azure Active Directory (Azure AD): https://docs.microsoft.com/en-us/azure/active-directory/develop/active-directory-application-objects Update a delegated permission grant (oAuth2PermissionGrant): https://docs.microsoft.com/en-us/graph/api/oauth2permissiongrant-update?view=graph-rest-1.0","title":"oauth2grant set"},{"location":"cmd/aad/oauth2grant/oauth2grant-set/#aad-oauth2grant-set","text":"Update OAuth2 permissions for the service principal","title":"aad oauth2grant set"},{"location":"cmd/aad/oauth2grant/oauth2grant-set/#usage","text":"m365 aad oauth2grant set [ options ]","title":"Usage"},{"location":"cmd/aad/oauth2grant/oauth2grant-set/#options","text":"-i, --grantId <grantId> objectId of OAuth2 permission grant to update -s, --scope <scope> Permissions to grant -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/aad/oauth2grant/oauth2grant-set/#remarks","text":"Before you can update service principal's OAuth2 permissions, you need to get the objectId of the permissions grant to update. You can retrieve it using the aad oauth2grant list command. If the objectId listed when using the aad oauth2grant list command has a minus sign ('-') prefix, you may receive an error indicating --grantId is missing. To resolve this issue simply escape the leading '-'. m365 aad oauth2grant set --grantId \\\\ -Zc1JRY8REeLxmXz5KtixAYU3Q6noCBPlhwGiX7pxmU","title":"Remarks"},{"location":"cmd/aad/oauth2grant/oauth2grant-set/#examples","text":"Update the existing OAuth2 permission grant with ID YgA60KYa4UOPSdc-lpxYEnQkr8KVLDpCsOXkiV8i-ek to the Calendars.Read Mail.Read permissions m365 aad oauth2grant set --grantId YgA60KYa4UOPSdc-lpxYEnQkr8KVLDpCsOXkiV8i-ek --scope \"Calendars.Read Mail.Read\"","title":"Examples"},{"location":"cmd/aad/oauth2grant/oauth2grant-set/#more-information","text":"Application and service principal objects in Azure Active Directory (Azure AD): https://docs.microsoft.com/en-us/azure/active-directory/develop/active-directory-application-objects Update a delegated permission grant (oAuth2PermissionGrant): https://docs.microsoft.com/en-us/graph/api/oauth2permissiongrant-update?view=graph-rest-1.0","title":"More information"},{"location":"cmd/aad/policy/policy-list/","text":"aad policy list \u00b6 Returns policies from Azure AD Usage \u00b6 m365 aad policy list [ options ] Options \u00b6 -t, --type [type] The type of policies to return. Allowed values activityBasedTimeout , authorization , claimsMapping , homeRealmDiscovery , identitySecurityDefaultsEnforcement , tokenIssuance , tokenLifetime . If omitted, all policies are returned -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Returns all policies from Azure AD m365 aad policy list Returns claim-mapping policies from Azure AD m365 aad policy list --type \"claimsMapping\" More information \u00b6 Microsoft Graph Azure AD policy overview: https://docs.microsoft.com/en-us/graph/api/resources/policy-overview?view=graph-rest-1.0","title":"policy list"},{"location":"cmd/aad/policy/policy-list/#aad-policy-list","text":"Returns policies from Azure AD","title":"aad policy list"},{"location":"cmd/aad/policy/policy-list/#usage","text":"m365 aad policy list [ options ]","title":"Usage"},{"location":"cmd/aad/policy/policy-list/#options","text":"-t, --type [type] The type of policies to return. Allowed values activityBasedTimeout , authorization , claimsMapping , homeRealmDiscovery , identitySecurityDefaultsEnforcement , tokenIssuance , tokenLifetime . If omitted, all policies are returned -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/aad/policy/policy-list/#examples","text":"Returns all policies from Azure AD m365 aad policy list Returns claim-mapping policies from Azure AD m365 aad policy list --type \"claimsMapping\"","title":"Examples"},{"location":"cmd/aad/policy/policy-list/#more-information","text":"Microsoft Graph Azure AD policy overview: https://docs.microsoft.com/en-us/graph/api/resources/policy-overview?view=graph-rest-1.0","title":"More information"},{"location":"cmd/aad/siteclassification/siteclassification-disable/","text":"aad siteclassification disable \u00b6 Disables site classification Usage \u00b6 m365 aad siteclassification disable [ options ] Options \u00b6 --confirm Don't prompt for confirming disabling site classification -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Disable site classification m365 aad siteclassification disable Disable site classification without confirmation m365 aad siteclassification disable --confirm More information \u00b6 SharePoint \"modern\" sites classification: https://docs.microsoft.com/en-us/sharepoint/dev/solution-guidance/modern-experience-site-classification","title":"siteclassification disable"},{"location":"cmd/aad/siteclassification/siteclassification-disable/#aad-siteclassification-disable","text":"Disables site classification","title":"aad siteclassification disable"},{"location":"cmd/aad/siteclassification/siteclassification-disable/#usage","text":"m365 aad siteclassification disable [ options ]","title":"Usage"},{"location":"cmd/aad/siteclassification/siteclassification-disable/#options","text":"--confirm Don't prompt for confirming disabling site classification -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/aad/siteclassification/siteclassification-disable/#examples","text":"Disable site classification m365 aad siteclassification disable Disable site classification without confirmation m365 aad siteclassification disable --confirm","title":"Examples"},{"location":"cmd/aad/siteclassification/siteclassification-disable/#more-information","text":"SharePoint \"modern\" sites classification: https://docs.microsoft.com/en-us/sharepoint/dev/solution-guidance/modern-experience-site-classification","title":"More information"},{"location":"cmd/aad/siteclassification/siteclassification-enable/","text":"aad siteclassification enable \u00b6 Enables site classification configuration Usage \u00b6 m365 aad siteclassification enable [ options ] Options \u00b6 -c, --classifications <classifications> Comma-separated list of classifications to enable in the tenant -d, --defaultClassification <defaultClassification> Classification to use by default -u, --usageGuidelinesUrl [usageGuidelinesUrl] URL with usage guidelines for members -g, --guestUsageGuidelinesUrl [guestUsageGuidelinesUrl] URL with usage guidelines for guests -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Enable site classification m365 aad siteclassification enable --classifications \"High, Medium, Low\" --defaultClassification \"Medium\" Enable site classification with a usage guidelines URL m365 aad siteclassification enable --classifications \"High, Medium, Low\" --defaultClassification \"Medium\" --usageGuidelinesUrl \"http://aka.ms/pnp\" Enable site classification with usage guidelines URLs for guests and members m365 aad siteclassification enable --classifications \"High, Medium, Low\" --defaultClassification \"Medium\" --usageGuidelinesUrl \"http://aka.ms/pnp\" --guestUsageGuidelinesUrl \"http://aka.ms/pnp\" More information \u00b6 SharePoint \"modern\" sites classification: https://docs.microsoft.com/en-us/sharepoint/dev/solution-guidance/modern-experience-site-classification","title":"siteclassification enable"},{"location":"cmd/aad/siteclassification/siteclassification-enable/#aad-siteclassification-enable","text":"Enables site classification configuration","title":"aad siteclassification enable"},{"location":"cmd/aad/siteclassification/siteclassification-enable/#usage","text":"m365 aad siteclassification enable [ options ]","title":"Usage"},{"location":"cmd/aad/siteclassification/siteclassification-enable/#options","text":"-c, --classifications <classifications> Comma-separated list of classifications to enable in the tenant -d, --defaultClassification <defaultClassification> Classification to use by default -u, --usageGuidelinesUrl [usageGuidelinesUrl] URL with usage guidelines for members -g, --guestUsageGuidelinesUrl [guestUsageGuidelinesUrl] URL with usage guidelines for guests -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/aad/siteclassification/siteclassification-enable/#examples","text":"Enable site classification m365 aad siteclassification enable --classifications \"High, Medium, Low\" --defaultClassification \"Medium\" Enable site classification with a usage guidelines URL m365 aad siteclassification enable --classifications \"High, Medium, Low\" --defaultClassification \"Medium\" --usageGuidelinesUrl \"http://aka.ms/pnp\" Enable site classification with usage guidelines URLs for guests and members m365 aad siteclassification enable --classifications \"High, Medium, Low\" --defaultClassification \"Medium\" --usageGuidelinesUrl \"http://aka.ms/pnp\" --guestUsageGuidelinesUrl \"http://aka.ms/pnp\"","title":"Examples"},{"location":"cmd/aad/siteclassification/siteclassification-enable/#more-information","text":"SharePoint \"modern\" sites classification: https://docs.microsoft.com/en-us/sharepoint/dev/solution-guidance/modern-experience-site-classification","title":"More information"},{"location":"cmd/aad/siteclassification/siteclassification-get/","text":"aad siteclassification get \u00b6 Gets site classification configuration Usage \u00b6 m365 aad siteclassification get [ options ] Options \u00b6 -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Get information about the Microsoft 365 Tenant site classification m365 aad siteclassification get More information \u00b6 SharePoint \"modern\" sites classification: https://docs.microsoft.com/en-us/sharepoint/dev/solution-guidance/modern-experience-site-classification","title":"siteclassification get"},{"location":"cmd/aad/siteclassification/siteclassification-get/#aad-siteclassification-get","text":"Gets site classification configuration","title":"aad siteclassification get"},{"location":"cmd/aad/siteclassification/siteclassification-get/#usage","text":"m365 aad siteclassification get [ options ]","title":"Usage"},{"location":"cmd/aad/siteclassification/siteclassification-get/#options","text":"-h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/aad/siteclassification/siteclassification-get/#examples","text":"Get information about the Microsoft 365 Tenant site classification m365 aad siteclassification get","title":"Examples"},{"location":"cmd/aad/siteclassification/siteclassification-get/#more-information","text":"SharePoint \"modern\" sites classification: https://docs.microsoft.com/en-us/sharepoint/dev/solution-guidance/modern-experience-site-classification","title":"More information"},{"location":"cmd/aad/siteclassification/siteclassification-set/","text":"aad siteclassification set \u00b6 Updates site classification configuration Usage \u00b6 m365 aad siteclassification set [ options ] Options \u00b6 -c, --classifications [classifications] Comma-separated list of classifications -d, --defaultClassification [defaultClassification] Classification to use by default -u, --usageGuidelinesUrl [usageGuidelinesUrl] URL with usage guidelines for members -g, --guestUsageGuidelinesUrl [guestUsageGuidelinesUrl] URL with usage guidelines for guests -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Update Microsoft 365 Tenant site classification configuration m365 aad siteclassification set --classifications \"High, Medium, Low\" --defaultClassification \"Medium\" Update only the default classification m365 aad siteclassification set --defaultClassification \"Low\" Update site classification with a usage guidelines URL m365 aad siteclassification set --usageGuidelinesUrl \"http://aka.ms/pnp\" Update site classification with usage guidelines URLs for guests and members m365 aad siteclassification set --usageGuidelinesUrl \"http://aka.ms/pnp\" --guestUsageGuidelinesUrl \"http://aka.ms/pnp\" More information \u00b6 SharePoint \"modern\" sites classification: https://docs.microsoft.com/en-us/sharepoint/dev/solution-guidance/modern-experience-site-classification","title":"siteclassification set"},{"location":"cmd/aad/siteclassification/siteclassification-set/#aad-siteclassification-set","text":"Updates site classification configuration","title":"aad siteclassification set"},{"location":"cmd/aad/siteclassification/siteclassification-set/#usage","text":"m365 aad siteclassification set [ options ]","title":"Usage"},{"location":"cmd/aad/siteclassification/siteclassification-set/#options","text":"-c, --classifications [classifications] Comma-separated list of classifications -d, --defaultClassification [defaultClassification] Classification to use by default -u, --usageGuidelinesUrl [usageGuidelinesUrl] URL with usage guidelines for members -g, --guestUsageGuidelinesUrl [guestUsageGuidelinesUrl] URL with usage guidelines for guests -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/aad/siteclassification/siteclassification-set/#examples","text":"Update Microsoft 365 Tenant site classification configuration m365 aad siteclassification set --classifications \"High, Medium, Low\" --defaultClassification \"Medium\" Update only the default classification m365 aad siteclassification set --defaultClassification \"Low\" Update site classification with a usage guidelines URL m365 aad siteclassification set --usageGuidelinesUrl \"http://aka.ms/pnp\" Update site classification with usage guidelines URLs for guests and members m365 aad siteclassification set --usageGuidelinesUrl \"http://aka.ms/pnp\" --guestUsageGuidelinesUrl \"http://aka.ms/pnp\"","title":"Examples"},{"location":"cmd/aad/siteclassification/siteclassification-set/#more-information","text":"SharePoint \"modern\" sites classification: https://docs.microsoft.com/en-us/sharepoint/dev/solution-guidance/modern-experience-site-classification","title":"More information"},{"location":"cmd/aad/sp/sp-add/","text":"aad sp add \u00b6 Adds a service principal to a registered Azure AD app Usage \u00b6 m365 aad sp add [ options ] Options \u00b6 --appId [appId] ID of the application to which the service principal should be added --appName [appName] Display name of the application to which the service principal should be added --objectId [objectId] ObjectId of the application to which the service principal should be added -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 Specify either the appId , appName or objectId . If you specify more than one option value, the command will fail with an error. If you register an application in the portal, an application object as well as a service principal object are automatically created in your home tenant. If you register an application using CLI for Microsoft 365 or the Microsoft Graph, you'll need to create the service principal separately. To register/create an application using the CLI for Microsoft 365, use the m365 aad app add command. Examples \u00b6 Adds a service principal to a registered Azure AD app with appId b2307a39-e878-458b-bc90-03bc578531d6 . m365 aad sp add --appId b2307a39-e878-458b-bc90-03bc578531d6 Adds a service principal to a registered Azure AD app with appName Microsoft Graph . m365 aad sp add --appName \"Microsoft Graph\" Adds a service principal to a registered Azure AD app with objectId b2307a39-e878-458b-bc90-03bc578531d6 . m365 aad sp add --objectId b2307a39-e878-458b-bc90-03bc578531d6 More information \u00b6 Application and service principal objects in Azure Active Directory (Azure AD): https://docs.microsoft.com/en-us/azure/active-directory/develop/active-directory-application-objects Create servicePrincipal: https://docs.microsoft.com/en-us/graph/api/serviceprincipal-post-serviceprincipals?view=graph-rest-1.0","title":"sp add"},{"location":"cmd/aad/sp/sp-add/#aad-sp-add","text":"Adds a service principal to a registered Azure AD app","title":"aad sp add"},{"location":"cmd/aad/sp/sp-add/#usage","text":"m365 aad sp add [ options ]","title":"Usage"},{"location":"cmd/aad/sp/sp-add/#options","text":"--appId [appId] ID of the application to which the service principal should be added --appName [appName] Display name of the application to which the service principal should be added --objectId [objectId] ObjectId of the application to which the service principal should be added -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/aad/sp/sp-add/#remarks","text":"Specify either the appId , appName or objectId . If you specify more than one option value, the command will fail with an error. If you register an application in the portal, an application object as well as a service principal object are automatically created in your home tenant. If you register an application using CLI for Microsoft 365 or the Microsoft Graph, you'll need to create the service principal separately. To register/create an application using the CLI for Microsoft 365, use the m365 aad app add command.","title":"Remarks"},{"location":"cmd/aad/sp/sp-add/#examples","text":"Adds a service principal to a registered Azure AD app with appId b2307a39-e878-458b-bc90-03bc578531d6 . m365 aad sp add --appId b2307a39-e878-458b-bc90-03bc578531d6 Adds a service principal to a registered Azure AD app with appName Microsoft Graph . m365 aad sp add --appName \"Microsoft Graph\" Adds a service principal to a registered Azure AD app with objectId b2307a39-e878-458b-bc90-03bc578531d6 . m365 aad sp add --objectId b2307a39-e878-458b-bc90-03bc578531d6","title":"Examples"},{"location":"cmd/aad/sp/sp-add/#more-information","text":"Application and service principal objects in Azure Active Directory (Azure AD): https://docs.microsoft.com/en-us/azure/active-directory/develop/active-directory-application-objects Create servicePrincipal: https://docs.microsoft.com/en-us/graph/api/serviceprincipal-post-serviceprincipals?view=graph-rest-1.0","title":"More information"},{"location":"cmd/aad/sp/sp-get/","text":"aad sp get \u00b6 Gets information about the specific service principal Usage \u00b6 m365 aad sp get [ options ] Options \u00b6 -i, --appId [appId] ID of the application for which the service principal should be retrieved -n, --appDisplayName [appDisplayName] Display name of the application for which the service principal should be retrieved --appObjectId [appObjectId] ObjectId of the application for which the service principal should be retrieved -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 Specify either the appId , appObjectId or appDisplayName . If you specify more than one option value, the command will fail with an error. Examples \u00b6 Return details about the service principal with appId b2307a39-e878-458b-bc90-03bc578531d6 . m365 aad sp get --appId b2307a39-e878-458b-bc90-03bc578531d6 Return details about the Microsoft Graph service principal. m365 aad sp get --appDisplayName \"Microsoft Graph\" Return details about the service principal with ObjectId b2307a39-e878-458b-bc90-03bc578531dd . m365 aad sp get --appObjectId b2307a39-e878-458b-bc90-03bc578531dd More information \u00b6 Application and service principal objects in Azure Active Directory (Azure AD): https://docs.microsoft.com/en-us/azure/active-directory/develop/active-directory-application-objects Get servicePrincipal: https://docs.microsoft.com/en-us/graph/api/serviceprincipal-get?view=graph-rest-1.0","title":"sp get"},{"location":"cmd/aad/sp/sp-get/#aad-sp-get","text":"Gets information about the specific service principal","title":"aad sp get"},{"location":"cmd/aad/sp/sp-get/#usage","text":"m365 aad sp get [ options ]","title":"Usage"},{"location":"cmd/aad/sp/sp-get/#options","text":"-i, --appId [appId] ID of the application for which the service principal should be retrieved -n, --appDisplayName [appDisplayName] Display name of the application for which the service principal should be retrieved --appObjectId [appObjectId] ObjectId of the application for which the service principal should be retrieved -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/aad/sp/sp-get/#remarks","text":"Specify either the appId , appObjectId or appDisplayName . If you specify more than one option value, the command will fail with an error.","title":"Remarks"},{"location":"cmd/aad/sp/sp-get/#examples","text":"Return details about the service principal with appId b2307a39-e878-458b-bc90-03bc578531d6 . m365 aad sp get --appId b2307a39-e878-458b-bc90-03bc578531d6 Return details about the Microsoft Graph service principal. m365 aad sp get --appDisplayName \"Microsoft Graph\" Return details about the service principal with ObjectId b2307a39-e878-458b-bc90-03bc578531dd . m365 aad sp get --appObjectId b2307a39-e878-458b-bc90-03bc578531dd","title":"Examples"},{"location":"cmd/aad/sp/sp-get/#more-information","text":"Application and service principal objects in Azure Active Directory (Azure AD): https://docs.microsoft.com/en-us/azure/active-directory/develop/active-directory-application-objects Get servicePrincipal: https://docs.microsoft.com/en-us/graph/api/serviceprincipal-get?view=graph-rest-1.0","title":"More information"},{"location":"cmd/aad/user/user-get/","text":"aad user get \u00b6 Gets information about the specified user Usage \u00b6 m365 aad user get [ options ] Options \u00b6 -i, --id [id] The ID of the user to retrieve information for. Use either id , userName or email , but not all. -n, --userName [userName] The name of the user to retrieve information for. Use either id , userName or email , but not all. --email [email] The email of the user to retrieve information for. Use either id , userName or email , but not all. -p, --properties [properties] Comma-separated list of properties to retrieve -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 You can retrieve information about a user, either by specifying that user's id, user name ( userPrincipalName ), or email ( mail ), but not all. If the user with the specified id, user name, or email doesn't exist, you will get a Resource 'xyz' does not exist or one of its queried reference-property objects are not present. error. Examples \u00b6 Get information about the user with id 1caf7dcd-7e83-4c3a-94f7-932a1299c844 m365 aad user get --id 1caf7dcd-7e83-4c3a-94f7-932a1299c844 Get information about the user with user name AarifS@contoso.onmicrosoft.com m365 aad user get --userName AarifS@contoso.onmicrosoft.com Get information about the user with email AarifS@contoso.onmicrosoft.com m365 aad user get --email AarifS@contoso.onmicrosoft.com For the user with id 1caf7dcd-7e83-4c3a-94f7-932a1299c844 retrieve the user name, e-mail address and full name m365 aad user get --id 1caf7dcd-7e83-4c3a-94f7-932a1299c844 --properties \"userPrincipalName,mail,displayName\" Get information about the currently logged user using the Id token m365 aad user get --id \"@meId\" Get information about the currently logged in user using the UserName token m365 aad user get --userName \"@meUserName\" More information \u00b6 Microsoft Graph User properties: https://developer.microsoft.com/en-us/graph/docs/api-reference/v1.0/resources/user#properties","title":"user get"},{"location":"cmd/aad/user/user-get/#aad-user-get","text":"Gets information about the specified user","title":"aad user get"},{"location":"cmd/aad/user/user-get/#usage","text":"m365 aad user get [ options ]","title":"Usage"},{"location":"cmd/aad/user/user-get/#options","text":"-i, --id [id] The ID of the user to retrieve information for. Use either id , userName or email , but not all. -n, --userName [userName] The name of the user to retrieve information for. Use either id , userName or email , but not all. --email [email] The email of the user to retrieve information for. Use either id , userName or email , but not all. -p, --properties [properties] Comma-separated list of properties to retrieve -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/aad/user/user-get/#remarks","text":"You can retrieve information about a user, either by specifying that user's id, user name ( userPrincipalName ), or email ( mail ), but not all. If the user with the specified id, user name, or email doesn't exist, you will get a Resource 'xyz' does not exist or one of its queried reference-property objects are not present. error.","title":"Remarks"},{"location":"cmd/aad/user/user-get/#examples","text":"Get information about the user with id 1caf7dcd-7e83-4c3a-94f7-932a1299c844 m365 aad user get --id 1caf7dcd-7e83-4c3a-94f7-932a1299c844 Get information about the user with user name AarifS@contoso.onmicrosoft.com m365 aad user get --userName AarifS@contoso.onmicrosoft.com Get information about the user with email AarifS@contoso.onmicrosoft.com m365 aad user get --email AarifS@contoso.onmicrosoft.com For the user with id 1caf7dcd-7e83-4c3a-94f7-932a1299c844 retrieve the user name, e-mail address and full name m365 aad user get --id 1caf7dcd-7e83-4c3a-94f7-932a1299c844 --properties \"userPrincipalName,mail,displayName\" Get information about the currently logged user using the Id token m365 aad user get --id \"@meId\" Get information about the currently logged in user using the UserName token m365 aad user get --userName \"@meUserName\"","title":"Examples"},{"location":"cmd/aad/user/user-get/#more-information","text":"Microsoft Graph User properties: https://developer.microsoft.com/en-us/graph/docs/api-reference/v1.0/resources/user#properties","title":"More information"},{"location":"cmd/aad/user/user-guest-add/","text":"aad user guest add \u00b6 Invite an external user to the organization Usage \u00b6 m365 aad user guest add [ options ] Options \u00b6 --emailAddress <emailAddress> The email address of the user. --displayName [displayName] The display name of the user. --inviteRedirectUrl [inviteRedirectUrl] The URL the user should be redirected to once the invitation is redeemed. If not specified, default URL https://myapplications.microsoft.com will be set. --welcomeMessage [welcomeMessage] Personal welcome message which will be added to the email along with the default email. --ccRecipients [ccRecipients] Additional recipients the invitation message should be sent to. Currently only 1 additional recipient is supported. --messageLanguage [messageLanguage] The language you want to send the default message in. The language format should be in ISO 639 . The default is en-US . --sendInvitationMessage Indicates whether an email should be sent to the user. -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Invite a user via email and set the display name m365 aad user guest add --emailAddress john.doe@contoso.com --displayName \"John Doe\" --sendInvitationMessage Invite a user with a custom email and custom redirect url m365 aad user guest add --emailAddress john.doe@contoso.com --welcomeMessage \"Hi John, welcome to the organization!\" --sendInvitationMessage Invite a user and send an invitation mail in Dutch m365 aad user guest add --emailAddress john.doe@contoso.com --messageLanguage nl-BE --sendInvitationMessage Response \u00b6 JSON Text CSV { \"id\" : \"35f7f726-c541-4aef-a64e-a7b6868fe47f\" , \"inviteRedeemUrl\" : \"https://login.microsoftonline.com/redeem?rd=https%3a%2f%2finvitations.microsoft.com%2fredeem%2f%3ftenant%3db373bc30-03b3-49bc-be72-9dd3e9027da8%26user%3d35f7f726-c541-4aef-a64e-a7b6868fe47f%26ticket%3dCjO3u3ZpQF2uthfZETfZ8gURzod5egvYI0uhaSN1Loo%25253d%26ver%3d2.0\" , \"invitedUserDisplayName\" : \"John Doe\" , \"invitedUserType\" : \"Guest\" , \"invitedUserEmailAddress\" : \"john.doe@contoso.com\" , \"sendInvitationMessage\" : true , \"resetRedemption\" : false , \"inviteRedirectUrl\" : \"https://myapplications.microsoft.com/\" , \"status\" : \"PendingAcceptance\" , \"invitedUserMessageInfo\" : { \"messageLanguage\" : \"en-US\" , \"customizedMessageBody\" : \"Hi John, welcome to the organization!\" , \"ccRecipients\" : [ { \"emailAddress\" : { \"name\" : null , \"address\" : \"maria.jones@contoso.com\" } } ] }, \"invitedUser\" : { \"id\" : \"5257b5b2-4056-4a45-a05e-df5c92d53e6e\" } } id : 35f7f726-c541-4aef-a64e-a7b6868fe47f inviteRedeemUrl : https://login.microsoftonline.com/redeem?rd=https%3a%2f%2finvitations.microsoft.com%2fredeem%2f%3ftenant%3db373bc30-03b3-49bc-be72-9dd3e9027da8%26user%3d35f7f726-c541-4aef-a64e-a7b6868fe47f%26ticket%3dCjO3u3ZpQF2uthfZETfZ8gURzod5egvYI0uhaSN1Loo%25253d%26ver%3d2.0 invitedUserDisplayName : John Doe invitedUserEmailAddress: liwidit556@adroh.com invitedUserType : Guest resetRedemption : false sendInvitationMessage : true status : PendingAcceptance id,inviteRedeemUrl,invitedUserDisplayName,invitedUserEmailAddress,invitedUserType,resetRedemption,sendInvitationMessage,status 35f7f726-c541-4aef-a64e-a7b6868fe47f,https://login.microsoftonline.com/redeem?rd=https%3a%2f%2finvitations.microsoft.com%2fredeem%2f%3ftenant%3db373bc30-03b3-49bc-be72-9dd3e9027da8%26user%3d35f7f726-c541-4aef-a64e-a7b6868fe47f%26ticket%3dCjO3u3ZpQF2uthfZETfZ8gURzod5egvYI0uhaSN1Loo%25253d%26ver%3d2.0,John Doe,liwidit556@adroh.com,Guest,,1,PendingAcceptance","title":"user guest add"},{"location":"cmd/aad/user/user-guest-add/#aad-user-guest-add","text":"Invite an external user to the organization","title":"aad user guest add"},{"location":"cmd/aad/user/user-guest-add/#usage","text":"m365 aad user guest add [ options ]","title":"Usage"},{"location":"cmd/aad/user/user-guest-add/#options","text":"--emailAddress <emailAddress> The email address of the user. --displayName [displayName] The display name of the user. --inviteRedirectUrl [inviteRedirectUrl] The URL the user should be redirected to once the invitation is redeemed. If not specified, default URL https://myapplications.microsoft.com will be set. --welcomeMessage [welcomeMessage] Personal welcome message which will be added to the email along with the default email. --ccRecipients [ccRecipients] Additional recipients the invitation message should be sent to. Currently only 1 additional recipient is supported. --messageLanguage [messageLanguage] The language you want to send the default message in. The language format should be in ISO 639 . The default is en-US . --sendInvitationMessage Indicates whether an email should be sent to the user. -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/aad/user/user-guest-add/#examples","text":"Invite a user via email and set the display name m365 aad user guest add --emailAddress john.doe@contoso.com --displayName \"John Doe\" --sendInvitationMessage Invite a user with a custom email and custom redirect url m365 aad user guest add --emailAddress john.doe@contoso.com --welcomeMessage \"Hi John, welcome to the organization!\" --sendInvitationMessage Invite a user and send an invitation mail in Dutch m365 aad user guest add --emailAddress john.doe@contoso.com --messageLanguage nl-BE --sendInvitationMessage","title":"Examples"},{"location":"cmd/aad/user/user-guest-add/#response","text":"JSON Text CSV { \"id\" : \"35f7f726-c541-4aef-a64e-a7b6868fe47f\" , \"inviteRedeemUrl\" : \"https://login.microsoftonline.com/redeem?rd=https%3a%2f%2finvitations.microsoft.com%2fredeem%2f%3ftenant%3db373bc30-03b3-49bc-be72-9dd3e9027da8%26user%3d35f7f726-c541-4aef-a64e-a7b6868fe47f%26ticket%3dCjO3u3ZpQF2uthfZETfZ8gURzod5egvYI0uhaSN1Loo%25253d%26ver%3d2.0\" , \"invitedUserDisplayName\" : \"John Doe\" , \"invitedUserType\" : \"Guest\" , \"invitedUserEmailAddress\" : \"john.doe@contoso.com\" , \"sendInvitationMessage\" : true , \"resetRedemption\" : false , \"inviteRedirectUrl\" : \"https://myapplications.microsoft.com/\" , \"status\" : \"PendingAcceptance\" , \"invitedUserMessageInfo\" : { \"messageLanguage\" : \"en-US\" , \"customizedMessageBody\" : \"Hi John, welcome to the organization!\" , \"ccRecipients\" : [ { \"emailAddress\" : { \"name\" : null , \"address\" : \"maria.jones@contoso.com\" } } ] }, \"invitedUser\" : { \"id\" : \"5257b5b2-4056-4a45-a05e-df5c92d53e6e\" } } id : 35f7f726-c541-4aef-a64e-a7b6868fe47f inviteRedeemUrl : https://login.microsoftonline.com/redeem?rd=https%3a%2f%2finvitations.microsoft.com%2fredeem%2f%3ftenant%3db373bc30-03b3-49bc-be72-9dd3e9027da8%26user%3d35f7f726-c541-4aef-a64e-a7b6868fe47f%26ticket%3dCjO3u3ZpQF2uthfZETfZ8gURzod5egvYI0uhaSN1Loo%25253d%26ver%3d2.0 invitedUserDisplayName : John Doe invitedUserEmailAddress: liwidit556@adroh.com invitedUserType : Guest resetRedemption : false sendInvitationMessage : true status : PendingAcceptance id,inviteRedeemUrl,invitedUserDisplayName,invitedUserEmailAddress,invitedUserType,resetRedemption,sendInvitationMessage,status 35f7f726-c541-4aef-a64e-a7b6868fe47f,https://login.microsoftonline.com/redeem?rd=https%3a%2f%2finvitations.microsoft.com%2fredeem%2f%3ftenant%3db373bc30-03b3-49bc-be72-9dd3e9027da8%26user%3d35f7f726-c541-4aef-a64e-a7b6868fe47f%26ticket%3dCjO3u3ZpQF2uthfZETfZ8gURzod5egvYI0uhaSN1Loo%25253d%26ver%3d2.0,John Doe,liwidit556@adroh.com,Guest,,1,PendingAcceptance","title":"Response"},{"location":"cmd/aad/user/user-hibp/","text":"aad user hibp \u00b6 Allows you to retrieve all accounts that have been pwned with the specified username Usage \u00b6 m365 aad user hibp [ options ] Options \u00b6 -n, --userName <userName> The name of the user to retrieve information for. --apiKey, <apiKey> Have I been pwned API Key . You can buy it from https://haveibeenpwned.com/API/Key --domain, [domain] Limit the returned breaches only contain results with the domain specified. -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 If the user with the specified user name doesn't involved in any breach, you will get a No pwnage found message when running in debug or verbose mode. If API Key is invalid, you will get a Required option apiKey not specified error. Examples \u00b6 Check if user with user name account-exists@hibp-integration-tests.com is in a data breach m365 aad user hibp --userName account-exists@hibp-integration-tests.com --apiKey _YOUR-API-KEY_ Check if user with user name account-exists@hibp-integration-tests.com is in a data breach against the domain specified m365 aad user hibp --userName account-exists@hibp-integration-tests.com --apiKey _YOUR-API-KEY_ --domain adobe.com More information \u00b6 Have I been pwned API documentation: https://haveibeenpwned.com/API/v3","title":"user hibp"},{"location":"cmd/aad/user/user-hibp/#aad-user-hibp","text":"Allows you to retrieve all accounts that have been pwned with the specified username","title":"aad user hibp"},{"location":"cmd/aad/user/user-hibp/#usage","text":"m365 aad user hibp [ options ]","title":"Usage"},{"location":"cmd/aad/user/user-hibp/#options","text":"-n, --userName <userName> The name of the user to retrieve information for. --apiKey, <apiKey> Have I been pwned API Key . You can buy it from https://haveibeenpwned.com/API/Key --domain, [domain] Limit the returned breaches only contain results with the domain specified. -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/aad/user/user-hibp/#remarks","text":"If the user with the specified user name doesn't involved in any breach, you will get a No pwnage found message when running in debug or verbose mode. If API Key is invalid, you will get a Required option apiKey not specified error.","title":"Remarks"},{"location":"cmd/aad/user/user-hibp/#examples","text":"Check if user with user name account-exists@hibp-integration-tests.com is in a data breach m365 aad user hibp --userName account-exists@hibp-integration-tests.com --apiKey _YOUR-API-KEY_ Check if user with user name account-exists@hibp-integration-tests.com is in a data breach against the domain specified m365 aad user hibp --userName account-exists@hibp-integration-tests.com --apiKey _YOUR-API-KEY_ --domain adobe.com","title":"Examples"},{"location":"cmd/aad/user/user-hibp/#more-information","text":"Have I been pwned API documentation: https://haveibeenpwned.com/API/v3","title":"More information"},{"location":"cmd/aad/user/user-list/","text":"aad user list \u00b6 Lists users matching specified criteria Usage \u00b6 m365 aad user list [ options ] Options \u00b6 -p, --properties [properties] Comma-separated list of properties to retrieve -d, --deleted Use to retrieve deleted users -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 Using the --properties option, you can specify a comma-separated list of user properties to retrieve from the Microsoft Graph. If you don't specify any properties, the command will retrieve user's display name and account name. To filter the list of users, include additional options that match the user property that you want to filter with. For example --displayName Patt will return all users whose displayName starts with Patt . Multiple filters will be combined using the and operator. Certain properties cannot be returned within a user collection. The following properties are only supported when retrieving an single user using: aboutMe, birthday, hireDate, interests, mySite, pastProjects, preferredName, responsibilities, schools, skills, mailboxSettings . Examples \u00b6 List all users in the tenant m365 aad user list List all recently deleted users in the tenant m365 aad user list --deleted List all users in the tenant. For each one return the display name and e-mail address m365 aad user list --properties \"displayName,mail\" Show users whose display name starts with Patt m365 aad user list --displayName Patt Show all account managers whose display name starts with Patt m365 aad user list --displayName Patt --jobTitle 'Account manager' More information \u00b6 Microsoft Graph User properties: https://developer.microsoft.com/en-us/graph/docs/api-reference/v1.0/resources/user#properties","title":"user list"},{"location":"cmd/aad/user/user-list/#aad-user-list","text":"Lists users matching specified criteria","title":"aad user list"},{"location":"cmd/aad/user/user-list/#usage","text":"m365 aad user list [ options ]","title":"Usage"},{"location":"cmd/aad/user/user-list/#options","text":"-p, --properties [properties] Comma-separated list of properties to retrieve -d, --deleted Use to retrieve deleted users -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/aad/user/user-list/#remarks","text":"Using the --properties option, you can specify a comma-separated list of user properties to retrieve from the Microsoft Graph. If you don't specify any properties, the command will retrieve user's display name and account name. To filter the list of users, include additional options that match the user property that you want to filter with. For example --displayName Patt will return all users whose displayName starts with Patt . Multiple filters will be combined using the and operator. Certain properties cannot be returned within a user collection. The following properties are only supported when retrieving an single user using: aboutMe, birthday, hireDate, interests, mySite, pastProjects, preferredName, responsibilities, schools, skills, mailboxSettings .","title":"Remarks"},{"location":"cmd/aad/user/user-list/#examples","text":"List all users in the tenant m365 aad user list List all recently deleted users in the tenant m365 aad user list --deleted List all users in the tenant. For each one return the display name and e-mail address m365 aad user list --properties \"displayName,mail\" Show users whose display name starts with Patt m365 aad user list --displayName Patt Show all account managers whose display name starts with Patt m365 aad user list --displayName Patt --jobTitle 'Account manager'","title":"Examples"},{"location":"cmd/aad/user/user-list/#more-information","text":"Microsoft Graph User properties: https://developer.microsoft.com/en-us/graph/docs/api-reference/v1.0/resources/user#properties","title":"More information"},{"location":"cmd/aad/user/user-password-validate/","text":"aad user password validate \u00b6 Check a user's password against the organization's password validation policy Usage \u00b6 m365 aad user password validate [ options ] Options \u00b6 -p, --password <password> The password to be validated. -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 Attention This command is based on an API that is currently in preview and is subject to change once the API reached general availability. Examples \u00b6 Validate password cli365P@ssW0rd against the organization's password validation policy m365 aad user password validate --password \"cli365P@ssW0rd\"","title":"user password validate"},{"location":"cmd/aad/user/user-password-validate/#aad-user-password-validate","text":"Check a user's password against the organization's password validation policy","title":"aad user password validate"},{"location":"cmd/aad/user/user-password-validate/#usage","text":"m365 aad user password validate [ options ]","title":"Usage"},{"location":"cmd/aad/user/user-password-validate/#options","text":"-p, --password <password> The password to be validated. -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/aad/user/user-password-validate/#remarks","text":"Attention This command is based on an API that is currently in preview and is subject to change once the API reached general availability.","title":"Remarks"},{"location":"cmd/aad/user/user-password-validate/#examples","text":"Validate password cli365P@ssW0rd against the organization's password validation policy m365 aad user password validate --password \"cli365P@ssW0rd\"","title":"Examples"},{"location":"cmd/aad/user/user-set/","text":"aad user set \u00b6 Updates information of the specified user Usage \u00b6 m365 aad user set [ options ] Options \u00b6 -i, --objectId [objectId] The object ID of the user to update. Specify objectId or userPrincipalName but not both -n, --userPrincipalName [userPrincipalName] User principal name of the user to update. Specify objectId or userPrincipalName but not both --accountEnabled [accountEnabled] Boolean value specifying whether the account is enabled. Valid values are true,false -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 You can update information of a user, either by specifying that user's id ( objectId ) or user name ( userPrincipalName ), but not both. If the user with the specified id or user name doesn't exist, you will get a Resource 'xyz' does not exist or one of its queried reference-property objects are not present. error. Examples \u00b6 Update specific property department of user with id 1caf7dcd-7e83-4c3a-94f7-932a1299c844 m365 aad user set --objectId 1caf7dcd-7e83-4c3a-94f7-932a1299c844 --Department IT Update multiple properties of user with name steve@contoso.onmicrosoft.com m365 aad user set --userPrincipalName steve@contoso.onmicrosoft.com --Department \"Sales & Marketing\" --CompanyName Contoso Enable user with id 1caf7dcd-7e83-4c3a-94f7-932a1299c844 m365 aad user set --objectId 1caf7dcd-7e83-4c3a-94f7-932a1299c844 --accountEnabled true Disable user with id 1caf7dcd-7e83-4c3a-94f7-932a1299c844 m365 aad user set --objectId 1caf7dcd-7e83-4c3a-94f7-932a1299c844 --accountEnabled false Enable user with id 1caf7dcd-7e83-4c3a-94f7-932a1299c844 m365 aad user set --objectId 1caf7dcd-7e83-4c3a-94f7-932a1299c844 --accountEnabled true","title":"user set"},{"location":"cmd/aad/user/user-set/#aad-user-set","text":"Updates information of the specified user","title":"aad user set"},{"location":"cmd/aad/user/user-set/#usage","text":"m365 aad user set [ options ]","title":"Usage"},{"location":"cmd/aad/user/user-set/#options","text":"-i, --objectId [objectId] The object ID of the user to update. Specify objectId or userPrincipalName but not both -n, --userPrincipalName [userPrincipalName] User principal name of the user to update. Specify objectId or userPrincipalName but not both --accountEnabled [accountEnabled] Boolean value specifying whether the account is enabled. Valid values are true,false -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/aad/user/user-set/#remarks","text":"You can update information of a user, either by specifying that user's id ( objectId ) or user name ( userPrincipalName ), but not both. If the user with the specified id or user name doesn't exist, you will get a Resource 'xyz' does not exist or one of its queried reference-property objects are not present. error.","title":"Remarks"},{"location":"cmd/aad/user/user-set/#examples","text":"Update specific property department of user with id 1caf7dcd-7e83-4c3a-94f7-932a1299c844 m365 aad user set --objectId 1caf7dcd-7e83-4c3a-94f7-932a1299c844 --Department IT Update multiple properties of user with name steve@contoso.onmicrosoft.com m365 aad user set --userPrincipalName steve@contoso.onmicrosoft.com --Department \"Sales & Marketing\" --CompanyName Contoso Enable user with id 1caf7dcd-7e83-4c3a-94f7-932a1299c844 m365 aad user set --objectId 1caf7dcd-7e83-4c3a-94f7-932a1299c844 --accountEnabled true Disable user with id 1caf7dcd-7e83-4c3a-94f7-932a1299c844 m365 aad user set --objectId 1caf7dcd-7e83-4c3a-94f7-932a1299c844 --accountEnabled false Enable user with id 1caf7dcd-7e83-4c3a-94f7-932a1299c844 m365 aad user set --objectId 1caf7dcd-7e83-4c3a-94f7-932a1299c844 --accountEnabled true","title":"Examples"},{"location":"cmd/aad/user/user-signin-list/","text":"aad user signin list \u00b6 Retrieves the Azure AD user sign-ins for the tenant Usage \u00b6 m365 aad user signin list [ options ] Options \u00b6 -n, --userName [userName] Filter the user sign-ins by given User's UPN (user principal name), eg. johndoe@example.com . Specify either userName or userId --userId [userId] Filter the user sign-ins by given User's Id. Specify either userName or userId --appDisplayName [appDisplayName] Filter the user sign-ins by the given application display name. Specify either appDisplayName or appId --appId [appId] Filter the user sign-ins by the given application identifier. Specify either appDisplayName or appId -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Get all user's sign-ins in your tenant m365 aad user signin list Get all user's sign-ins filter by given user's UPN in the tenant m365 aad user signin list --userName 'johndoe@example.com' Get all user's sign-ins filter by given user's Id in the tenant m365 aad user signin list --userId '11111111-1111-1111-1111-111111111111' Get all user's sign-ins filter by given application display name in the tenant m365 aad user signin list --appDisplayName 'Graph explorer' Get all user's sign-ins filter by given application identifier in the tenant m365 aad user signin list --appId '00000000-0000-0000-0000-000000000000' Get all user's sign-ins filter by given user's UPN and application display name in the tenant m365 aad user signin list --userName 'johndoe@example.com' --appDisplayName 'Graph explorer' Get all user's sign-ins filter by given user's Id and application display name in the tenant m365 aad user signin list --userId '11111111-1111-1111-1111-111111111111' --appDisplayName 'Graph explorer' Get all user's sign-ins filter by given user's UPN and application identifier in the tenant m365 aad user signin list --userName 'johndoe@example.com' --appId '00000000-0000-0000-0000-000000000000' Get all user's sign-ins filter by given user's Id and application identifier in the tenant m365 aad user signin list --userId '11111111-1111-1111-1111-111111111111' --appId '00000000-0000-0000-0000-000000000000'","title":"user signin list"},{"location":"cmd/aad/user/user-signin-list/#aad-user-signin-list","text":"Retrieves the Azure AD user sign-ins for the tenant","title":"aad user signin list"},{"location":"cmd/aad/user/user-signin-list/#usage","text":"m365 aad user signin list [ options ]","title":"Usage"},{"location":"cmd/aad/user/user-signin-list/#options","text":"-n, --userName [userName] Filter the user sign-ins by given User's UPN (user principal name), eg. johndoe@example.com . Specify either userName or userId --userId [userId] Filter the user sign-ins by given User's Id. Specify either userName or userId --appDisplayName [appDisplayName] Filter the user sign-ins by the given application display name. Specify either appDisplayName or appId --appId [appId] Filter the user sign-ins by the given application identifier. Specify either appDisplayName or appId -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/aad/user/user-signin-list/#examples","text":"Get all user's sign-ins in your tenant m365 aad user signin list Get all user's sign-ins filter by given user's UPN in the tenant m365 aad user signin list --userName 'johndoe@example.com' Get all user's sign-ins filter by given user's Id in the tenant m365 aad user signin list --userId '11111111-1111-1111-1111-111111111111' Get all user's sign-ins filter by given application display name in the tenant m365 aad user signin list --appDisplayName 'Graph explorer' Get all user's sign-ins filter by given application identifier in the tenant m365 aad user signin list --appId '00000000-0000-0000-0000-000000000000' Get all user's sign-ins filter by given user's UPN and application display name in the tenant m365 aad user signin list --userName 'johndoe@example.com' --appDisplayName 'Graph explorer' Get all user's sign-ins filter by given user's Id and application display name in the tenant m365 aad user signin list --userId '11111111-1111-1111-1111-111111111111' --appDisplayName 'Graph explorer' Get all user's sign-ins filter by given user's UPN and application identifier in the tenant m365 aad user signin list --userName 'johndoe@example.com' --appId '00000000-0000-0000-0000-000000000000' Get all user's sign-ins filter by given user's Id and application identifier in the tenant m365 aad user signin list --userId '11111111-1111-1111-1111-111111111111' --appId '00000000-0000-0000-0000-000000000000'","title":"Examples"},{"location":"cmd/adaptivecard/adaptivecard-send/","text":"adaptivecard send \u00b6 Sends adaptive card to the specified URL Usage \u00b6 m365 adaptivecard send [ options ] Options \u00b6 -u, --url <url> URL where to send the card to -t, --title [title] Title of the card -d, --description [description] Contents of the card -i, --imageUrl [imageUrl] URL of the image to include on the card -a, --actionUrl [actionUrl] URL that users should be sent to after clicking the View button on the card --card [card] Card definition --cardData [cardData] Card data. If your card is a card template, using cardData you can apply data to it. If you specify cardData, unknown options will be ignored. -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 Using this command you can send either a predefined or a custom adaptive card to the specified URL. To send a predefined adaptive card, specify one or more options: title , description , imageUrl , actionUrl . To specify a custom card, specify the card's JSON contents using the card option. When sending both predefined and custom cards, you can specify arbitrary options. With predefined cards, these options will be listed in a FactSet. With custom card, you control how the data will be presented on the card. The predefined card is automatically adjusted based on which options have been specified ( title , description , imageUrl , actionUrl ). If you don't specify a particular option, that portion of the card will not be included in the sent card. If your custom card is a card template (card with placeholders like ${title} ), you can fill it with data either by specifying the complete data object using the cardData option, or by passing any number of arbitrary options that will be mapped onto the card. The arbitrary properties should not match any of the global options like output , query , debug , etc. Data options like title , description , imageUrl and actionUrl will be mapped onto the card as well. Escaping JSON in PowerShell When using the --card and --cardData options it's possible to enter a JSON string. In PowerShell 5 to 7.2 specific escaping rules apply due to an issue. Remember that you can also use file tokens instead. Examples \u00b6 Send a predefined adaptive card with just title m365 adaptivecard send --url https://contoso.webhook.office.com/webhookb2/892e8ed3-997c-4b6e-8f8a-7f32728a8a87@f7322380-f203-42ff-93e8-66e266f6d2e4/IncomingWebhook/fcc6565ec7a944928bd43d6fc193b258/4f0482d4-b147-4f67-8a61-11f0a5019547 --title \"CLI for Microsoft 365 v3.4\" Send a predefined adaptive card with just description m365 adaptivecard send --url https://contoso.webhook.office.com/webhookb2/892e8ed3-997c-4b6e-8f8a-7f32728a8a87@f7322380-f203-42ff-93e8-66e266f6d2e4/IncomingWebhook/fcc6565ec7a944928bd43d6fc193b258/4f0482d4-b147-4f67-8a61-11f0a5019547 --description \"New release of CLI for Microsoft 365\" Send card with title and description m365 adaptivecard send --url https://contoso.webhook.office.com/webhookb2/892e8ed3-997c-4b6e-8f8a-7f32728a8a87@f7322380-f203-42ff-93e8-66e266f6d2e4/IncomingWebhook/fcc6565ec7a944928bd43d6fc193b258/4f0482d4-b147-4f67-8a61-11f0a5019547 --title \"CLI for Microsoft 365 v3.4\" --description \"New release of CLI for Microsoft 365\" Send card with title, description and image m365 adaptivecard send --url https://contoso.webhook.office.com/webhookb2/892e8ed3-997c-4b6e-8f8a-7f32728a8a87@f7322380-f203-42ff-93e8-66e266f6d2e4/IncomingWebhook/fcc6565ec7a944928bd43d6fc193b258/4f0482d4-b147-4f67-8a61-11f0a5019547 --title \"CLI for Microsoft 365 v3.4\" --description \"New release of CLI for Microsoft 365\" --imageUrl \"https://contoso.com/image.gif\" Send card with title, description and action m365 adaptivecard send --url https://contoso.webhook.office.com/webhookb2/892e8ed3-997c-4b6e-8f8a-7f32728a8a87@f7322380-f203-42ff-93e8-66e266f6d2e4/IncomingWebhook/fcc6565ec7a944928bd43d6fc193b258/4f0482d4-b147-4f67-8a61-11f0a5019547 --title \"CLI for Microsoft 365 v3.4\" --description \"New release of CLI for Microsoft 365\" --actionUrl \"https://aka.ms/cli-m365\" Send card with title, description, image and action m365 adaptivecard send --url https://contoso.webhook.office.com/webhookb2/892e8ed3-997c-4b6e-8f8a-7f32728a8a87@f7322380-f203-42ff-93e8-66e266f6d2e4/IncomingWebhook/fcc6565ec7a944928bd43d6fc193b258/4f0482d4-b147-4f67-8a61-11f0a5019547 --title \"CLI for Microsoft 365 v3.4\" --description \"New release of CLI for Microsoft 365\" --imageUrl \"https://contoso.com/image.gif\" --actionUrl \"https://aka.ms/cli-m365\" Send card with title, description, action and unknown options m365 adaptivecard send --url https://contoso.webhook.office.com/webhookb2/892e8ed3-997c-4b6e-8f8a-7f32728a8a87@f7322380-f203-42ff-93e8-66e266f6d2e4/IncomingWebhook/fcc6565ec7a944928bd43d6fc193b258/4f0482d4-b147-4f67-8a61-11f0a5019547 --title \"CLI for Microsoft 365 v3.4\" --description \"New release of CLI for Microsoft 365\" --actionUrl \"https://aka.ms/cli-m365\" --Version \"v3.4.0\" --ReleaseNotes \"https://pnp.github.io/cli-microsoft365/about/release-notes/#v340\" Send custom card without any data m365 adaptivecard send --url https://contoso.webhook.office.com/webhookb2/892e8ed3-997c-4b6e-8f8a-7f32728a8a87@f7322380-f203-42ff-93e8-66e266f6d2e4/IncomingWebhook/fcc6565ec7a944928bd43d6fc193b258/4f0482d4-b147-4f67-8a61-11f0a5019547 --card '{\"type\":\"AdaptiveCard\",\"body\":[{\"type\":\"TextBlock\",\"size\":\"Medium\",\"weight\":\"Bolder\",\"text\":\"CLI for Microsoft 365 v3.4\"},{\"type\":\"TextBlock\",\"text\":\"New release of CLI for Microsoft 365\",\"wrap\":true}],\"actions\":[{\"type\":\"Action.OpenUrl\",\"title\":\"View\",\"url\":\"https://aka.ms/cli-m365\"}],\"$schema\":\"http://adaptivecards.io/schemas/adaptive-card.json\",\"version\":\"1.2\"}' Send custom card with just title merged m365 adaptivecard send --url https://contoso.webhook.office.com/webhookb2/892e8ed3-997c-4b6e-8f8a-7f32728a8a87@f7322380-f203-42ff-93e8-66e266f6d2e4/IncomingWebhook/fcc6565ec7a944928bd43d6fc193b258/4f0482d4-b147-4f67-8a61-11f0a5019547 --card '{\"type\":\"AdaptiveCard\",\"body\":[{\"type\":\"TextBlock\",\"size\":\"Medium\",\"weight\":\"Bolder\",\"text\":\"${title}\"}],\"$schema\":\"http://adaptivecards.io/schemas/adaptive-card.json\",\"version\":\"1.2\"}' --title \"CLI for Microsoft 365 v3.4\" Send custom card with all known options merged m365 adaptivecard send --url https://contoso.webhook.office.com/webhookb2/892e8ed3-997c-4b6e-8f8a-7f32728a8a87@f7322380-f203-42ff-93e8-66e266f6d2e4/IncomingWebhook/fcc6565ec7a944928bd43d6fc193b258/4f0482d4-b147-4f67-8a61-11f0a5019547 --card '{\"type\":\"AdaptiveCard\",\"body\":[{\"type\":\"TextBlock\",\"size\":\"Medium\",\"weight\":\"Bolder\",\"text\":\"${title}\"},{\"type\":\"TextBlock\",\"text\":\"${description}\",\"wrap\":true},{\"type\":\"FactSet\",\"facts\":[{\"$data\":\"${properties}\",\"title\":\"${key}:\",\"value\":\"${value}\"}]}],\"actions\":[{\"type\":\"Action.OpenUrl\",\"title\":\"View\",\"url\":\"${actionUrl}\"}],\"$schema\":\"http://adaptivecards.io/schemas/adaptive-card.json\",\"version\":\"1.2\"}' --title \"CLI for Microsoft 365 v3.4\" --description \"New release of CLI for Microsoft 365\" --imageUrl \"https://contoso.com/image.gif\" --actionUrl \"https://aka.ms/cli-m365\" Send custom card with unknown option merged m365 adaptivecard send --url https://contoso.webhook.office.com/webhookb2/892e8ed3-997c-4b6e-8f8a-7f32728a8a87@f7322380-f203-42ff-93e8-66e266f6d2e4/IncomingWebhook/fcc6565ec7a944928bd43d6fc193b258/4f0482d4-b147-4f67-8a61-11f0a5019547 --card '{\"type\":\"AdaptiveCard\",\"body\":[{\"type\":\"TextBlock\",\"size\":\"Medium\",\"weight\":\"Bolder\",\"text\":\"${Title}\"}],\"$schema\":\"http://adaptivecards.io/schemas/adaptive-card.json\",\"version\":\"1.2\"}' --Title \"CLI for Microsoft 365 v3.4\" Send custom card with card data m365 adaptivecard send --url https://contoso.webhook.office.com/webhookb2/892e8ed3-997c-4b6e-8f8a-7f32728a8a87@f7322380-f203-42ff-93e8-66e266f6d2e4/IncomingWebhook/fcc6565ec7a944928bd43d6fc193b258/4f0482d4-b147-4f67-8a61-11f0a5019547 --card '{\"type\":\"AdaptiveCard\",\"body\":[{\"type\":\"TextBlock\",\"size\":\"Medium\",\"weight\":\"Bolder\",\"text\":\"${title}\"},{\"type\":\"TextBlock\",\"text\":\"${description}\",\"wrap\":true},{\"type\":\"FactSet\",\"facts\":[{\"$data\":\"${properties}\",\"title\":\"${key}:\",\"value\":\"${value}\"}]}],\"actions\":[{\"type\":\"Action.OpenUrl\",\"title\":\"View\",\"url\":\"${viewUrl}\"}],\"$schema\":\"http://adaptivecards.io/schemas/adaptive-card.json\",\"version\":\"1.2\"}' --cardData '{\"title\":\"Publish Adaptive Card Schema\",\"description\":\"Now that we have defined the main rules and features of the format, we need to produce a schema and publish it to GitHub. The schema will be the starting point of our reference documentation.\",\"creator\":{\"name\":\"Matt Hidinger\",\"profileImage\":\"https://pbs.twimg.com/profile_images/3647943215/d7f12830b3c17a5a9e4afcc370e3a37e_400x400.jpeg\"},\"createdUtc\":\"2017-02-14T06:08:39Z\",\"viewUrl\":\"https://adaptivecards.io\",\"properties\":[{\"key\":\"Board\",\"value\":\"Adaptive Cards\"},{\"key\":\"List\",\"value\":\"Backlog\"},{\"key\":\"Assigned to\",\"value\":\"Matt Hidinger\"},{\"key\":\"Due date\",\"value\":\"Not set\"}]}'","title":"send"},{"location":"cmd/adaptivecard/adaptivecard-send/#adaptivecard-send","text":"Sends adaptive card to the specified URL","title":"adaptivecard send"},{"location":"cmd/adaptivecard/adaptivecard-send/#usage","text":"m365 adaptivecard send [ options ]","title":"Usage"},{"location":"cmd/adaptivecard/adaptivecard-send/#options","text":"-u, --url <url> URL where to send the card to -t, --title [title] Title of the card -d, --description [description] Contents of the card -i, --imageUrl [imageUrl] URL of the image to include on the card -a, --actionUrl [actionUrl] URL that users should be sent to after clicking the View button on the card --card [card] Card definition --cardData [cardData] Card data. If your card is a card template, using cardData you can apply data to it. If you specify cardData, unknown options will be ignored. -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/adaptivecard/adaptivecard-send/#remarks","text":"Using this command you can send either a predefined or a custom adaptive card to the specified URL. To send a predefined adaptive card, specify one or more options: title , description , imageUrl , actionUrl . To specify a custom card, specify the card's JSON contents using the card option. When sending both predefined and custom cards, you can specify arbitrary options. With predefined cards, these options will be listed in a FactSet. With custom card, you control how the data will be presented on the card. The predefined card is automatically adjusted based on which options have been specified ( title , description , imageUrl , actionUrl ). If you don't specify a particular option, that portion of the card will not be included in the sent card. If your custom card is a card template (card with placeholders like ${title} ), you can fill it with data either by specifying the complete data object using the cardData option, or by passing any number of arbitrary options that will be mapped onto the card. The arbitrary properties should not match any of the global options like output , query , debug , etc. Data options like title , description , imageUrl and actionUrl will be mapped onto the card as well. Escaping JSON in PowerShell When using the --card and --cardData options it's possible to enter a JSON string. In PowerShell 5 to 7.2 specific escaping rules apply due to an issue. Remember that you can also use file tokens instead.","title":"Remarks"},{"location":"cmd/adaptivecard/adaptivecard-send/#examples","text":"Send a predefined adaptive card with just title m365 adaptivecard send --url https://contoso.webhook.office.com/webhookb2/892e8ed3-997c-4b6e-8f8a-7f32728a8a87@f7322380-f203-42ff-93e8-66e266f6d2e4/IncomingWebhook/fcc6565ec7a944928bd43d6fc193b258/4f0482d4-b147-4f67-8a61-11f0a5019547 --title \"CLI for Microsoft 365 v3.4\" Send a predefined adaptive card with just description m365 adaptivecard send --url https://contoso.webhook.office.com/webhookb2/892e8ed3-997c-4b6e-8f8a-7f32728a8a87@f7322380-f203-42ff-93e8-66e266f6d2e4/IncomingWebhook/fcc6565ec7a944928bd43d6fc193b258/4f0482d4-b147-4f67-8a61-11f0a5019547 --description \"New release of CLI for Microsoft 365\" Send card with title and description m365 adaptivecard send --url https://contoso.webhook.office.com/webhookb2/892e8ed3-997c-4b6e-8f8a-7f32728a8a87@f7322380-f203-42ff-93e8-66e266f6d2e4/IncomingWebhook/fcc6565ec7a944928bd43d6fc193b258/4f0482d4-b147-4f67-8a61-11f0a5019547 --title \"CLI for Microsoft 365 v3.4\" --description \"New release of CLI for Microsoft 365\" Send card with title, description and image m365 adaptivecard send --url https://contoso.webhook.office.com/webhookb2/892e8ed3-997c-4b6e-8f8a-7f32728a8a87@f7322380-f203-42ff-93e8-66e266f6d2e4/IncomingWebhook/fcc6565ec7a944928bd43d6fc193b258/4f0482d4-b147-4f67-8a61-11f0a5019547 --title \"CLI for Microsoft 365 v3.4\" --description \"New release of CLI for Microsoft 365\" --imageUrl \"https://contoso.com/image.gif\" Send card with title, description and action m365 adaptivecard send --url https://contoso.webhook.office.com/webhookb2/892e8ed3-997c-4b6e-8f8a-7f32728a8a87@f7322380-f203-42ff-93e8-66e266f6d2e4/IncomingWebhook/fcc6565ec7a944928bd43d6fc193b258/4f0482d4-b147-4f67-8a61-11f0a5019547 --title \"CLI for Microsoft 365 v3.4\" --description \"New release of CLI for Microsoft 365\" --actionUrl \"https://aka.ms/cli-m365\" Send card with title, description, image and action m365 adaptivecard send --url https://contoso.webhook.office.com/webhookb2/892e8ed3-997c-4b6e-8f8a-7f32728a8a87@f7322380-f203-42ff-93e8-66e266f6d2e4/IncomingWebhook/fcc6565ec7a944928bd43d6fc193b258/4f0482d4-b147-4f67-8a61-11f0a5019547 --title \"CLI for Microsoft 365 v3.4\" --description \"New release of CLI for Microsoft 365\" --imageUrl \"https://contoso.com/image.gif\" --actionUrl \"https://aka.ms/cli-m365\" Send card with title, description, action and unknown options m365 adaptivecard send --url https://contoso.webhook.office.com/webhookb2/892e8ed3-997c-4b6e-8f8a-7f32728a8a87@f7322380-f203-42ff-93e8-66e266f6d2e4/IncomingWebhook/fcc6565ec7a944928bd43d6fc193b258/4f0482d4-b147-4f67-8a61-11f0a5019547 --title \"CLI for Microsoft 365 v3.4\" --description \"New release of CLI for Microsoft 365\" --actionUrl \"https://aka.ms/cli-m365\" --Version \"v3.4.0\" --ReleaseNotes \"https://pnp.github.io/cli-microsoft365/about/release-notes/#v340\" Send custom card without any data m365 adaptivecard send --url https://contoso.webhook.office.com/webhookb2/892e8ed3-997c-4b6e-8f8a-7f32728a8a87@f7322380-f203-42ff-93e8-66e266f6d2e4/IncomingWebhook/fcc6565ec7a944928bd43d6fc193b258/4f0482d4-b147-4f67-8a61-11f0a5019547 --card '{\"type\":\"AdaptiveCard\",\"body\":[{\"type\":\"TextBlock\",\"size\":\"Medium\",\"weight\":\"Bolder\",\"text\":\"CLI for Microsoft 365 v3.4\"},{\"type\":\"TextBlock\",\"text\":\"New release of CLI for Microsoft 365\",\"wrap\":true}],\"actions\":[{\"type\":\"Action.OpenUrl\",\"title\":\"View\",\"url\":\"https://aka.ms/cli-m365\"}],\"$schema\":\"http://adaptivecards.io/schemas/adaptive-card.json\",\"version\":\"1.2\"}' Send custom card with just title merged m365 adaptivecard send --url https://contoso.webhook.office.com/webhookb2/892e8ed3-997c-4b6e-8f8a-7f32728a8a87@f7322380-f203-42ff-93e8-66e266f6d2e4/IncomingWebhook/fcc6565ec7a944928bd43d6fc193b258/4f0482d4-b147-4f67-8a61-11f0a5019547 --card '{\"type\":\"AdaptiveCard\",\"body\":[{\"type\":\"TextBlock\",\"size\":\"Medium\",\"weight\":\"Bolder\",\"text\":\"${title}\"}],\"$schema\":\"http://adaptivecards.io/schemas/adaptive-card.json\",\"version\":\"1.2\"}' --title \"CLI for Microsoft 365 v3.4\" Send custom card with all known options merged m365 adaptivecard send --url https://contoso.webhook.office.com/webhookb2/892e8ed3-997c-4b6e-8f8a-7f32728a8a87@f7322380-f203-42ff-93e8-66e266f6d2e4/IncomingWebhook/fcc6565ec7a944928bd43d6fc193b258/4f0482d4-b147-4f67-8a61-11f0a5019547 --card '{\"type\":\"AdaptiveCard\",\"body\":[{\"type\":\"TextBlock\",\"size\":\"Medium\",\"weight\":\"Bolder\",\"text\":\"${title}\"},{\"type\":\"TextBlock\",\"text\":\"${description}\",\"wrap\":true},{\"type\":\"FactSet\",\"facts\":[{\"$data\":\"${properties}\",\"title\":\"${key}:\",\"value\":\"${value}\"}]}],\"actions\":[{\"type\":\"Action.OpenUrl\",\"title\":\"View\",\"url\":\"${actionUrl}\"}],\"$schema\":\"http://adaptivecards.io/schemas/adaptive-card.json\",\"version\":\"1.2\"}' --title \"CLI for Microsoft 365 v3.4\" --description \"New release of CLI for Microsoft 365\" --imageUrl \"https://contoso.com/image.gif\" --actionUrl \"https://aka.ms/cli-m365\" Send custom card with unknown option merged m365 adaptivecard send --url https://contoso.webhook.office.com/webhookb2/892e8ed3-997c-4b6e-8f8a-7f32728a8a87@f7322380-f203-42ff-93e8-66e266f6d2e4/IncomingWebhook/fcc6565ec7a944928bd43d6fc193b258/4f0482d4-b147-4f67-8a61-11f0a5019547 --card '{\"type\":\"AdaptiveCard\",\"body\":[{\"type\":\"TextBlock\",\"size\":\"Medium\",\"weight\":\"Bolder\",\"text\":\"${Title}\"}],\"$schema\":\"http://adaptivecards.io/schemas/adaptive-card.json\",\"version\":\"1.2\"}' --Title \"CLI for Microsoft 365 v3.4\" Send custom card with card data m365 adaptivecard send --url https://contoso.webhook.office.com/webhookb2/892e8ed3-997c-4b6e-8f8a-7f32728a8a87@f7322380-f203-42ff-93e8-66e266f6d2e4/IncomingWebhook/fcc6565ec7a944928bd43d6fc193b258/4f0482d4-b147-4f67-8a61-11f0a5019547 --card '{\"type\":\"AdaptiveCard\",\"body\":[{\"type\":\"TextBlock\",\"size\":\"Medium\",\"weight\":\"Bolder\",\"text\":\"${title}\"},{\"type\":\"TextBlock\",\"text\":\"${description}\",\"wrap\":true},{\"type\":\"FactSet\",\"facts\":[{\"$data\":\"${properties}\",\"title\":\"${key}:\",\"value\":\"${value}\"}]}],\"actions\":[{\"type\":\"Action.OpenUrl\",\"title\":\"View\",\"url\":\"${viewUrl}\"}],\"$schema\":\"http://adaptivecards.io/schemas/adaptive-card.json\",\"version\":\"1.2\"}' --cardData '{\"title\":\"Publish Adaptive Card Schema\",\"description\":\"Now that we have defined the main rules and features of the format, we need to produce a schema and publish it to GitHub. The schema will be the starting point of our reference documentation.\",\"creator\":{\"name\":\"Matt Hidinger\",\"profileImage\":\"https://pbs.twimg.com/profile_images/3647943215/d7f12830b3c17a5a9e4afcc370e3a37e_400x400.jpeg\"},\"createdUtc\":\"2017-02-14T06:08:39Z\",\"viewUrl\":\"https://adaptivecards.io\",\"properties\":[{\"key\":\"Board\",\"value\":\"Adaptive Cards\"},{\"key\":\"List\",\"value\":\"Backlog\"},{\"key\":\"Assigned to\",\"value\":\"Matt Hidinger\"},{\"key\":\"Due date\",\"value\":\"Not set\"}]}'","title":"Examples"},{"location":"cmd/app/app-get/","text":"app get \u00b6 Retrieves information about the current Azure AD app Usage \u00b6 m365 app get [ options ] Options \u00b6 --appId [appId] Client ID of the Azure AD app registered in the .m365rc.json file to retrieve information for -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 Use this command to quickly look up information for the Azure AD application registration registered in the .m365rc.json file in your current project (folder). If you have multiple apps registered in your .m365rc.json file, you can specify the app for which you'd like to retrieve permissions using the --appId option. If you don't specify the app using the --appId option, you'll be prompted to select one of the applications from your .m365rc.json file. Examples \u00b6 Retrieve information about your current Azure AD app m365 app get Retrieve information about the Azure AD app with client ID e23d235c-fcdf-45d1-ac5f-24ab2ee0695d specified in the .m365rc.json file m365 app get --appId e23d235c-fcdf-45d1-ac5f-24ab2ee0695d","title":"get"},{"location":"cmd/app/app-get/#app-get","text":"Retrieves information about the current Azure AD app","title":"app get"},{"location":"cmd/app/app-get/#usage","text":"m365 app get [ options ]","title":"Usage"},{"location":"cmd/app/app-get/#options","text":"--appId [appId] Client ID of the Azure AD app registered in the .m365rc.json file to retrieve information for -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/app/app-get/#remarks","text":"Use this command to quickly look up information for the Azure AD application registration registered in the .m365rc.json file in your current project (folder). If you have multiple apps registered in your .m365rc.json file, you can specify the app for which you'd like to retrieve permissions using the --appId option. If you don't specify the app using the --appId option, you'll be prompted to select one of the applications from your .m365rc.json file.","title":"Remarks"},{"location":"cmd/app/app-get/#examples","text":"Retrieve information about your current Azure AD app m365 app get Retrieve information about the Azure AD app with client ID e23d235c-fcdf-45d1-ac5f-24ab2ee0695d specified in the .m365rc.json file m365 app get --appId e23d235c-fcdf-45d1-ac5f-24ab2ee0695d","title":"Examples"},{"location":"cmd/app/app-open/","text":"aad app open \u00b6 Returns deep link of the current AD app to open the Azure portal on the Azure AD app registration management page. Usage \u00b6 m365 app open [ options ] Options \u00b6 --appId [appId] Optional Application (client) ID of the Azure AD application registration to open. Uses the app from the .m365rc.json file corresponding to the appId . If multiple apps are available, this will evade the prompt to choose an app. If the appId is not available in the list of apps, an error is thrown. --preview Use to open the url of the Azure AD preview portal. -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 If config setting autoOpenLinksInBrowser is configured to true, the command will automatically open the link to the Azure Portal in the browser. Gets the app from the .m365rc.json file in the current directory. If the --appId option is not used and multiple apps are available, it will prompt the user to choose one. Examples \u00b6 Prints the URL to the Azure AD application registration management page on the Azure Portal. m365 app open Prints the url of the Azure AD application registration management page on the preview Azure Portal. m365 app open --preview Prints the URL to the Azure AD application registration management page on the Azure Portal, evading a possible choice prompt in the case of multiple saved apps in the .m365rc.json file. m365 app open --appId d75be2e1-0204-4f95-857d-51a37cf40be8","title":"open"},{"location":"cmd/app/app-open/#aad-app-open","text":"Returns deep link of the current AD app to open the Azure portal on the Azure AD app registration management page.","title":"aad app open"},{"location":"cmd/app/app-open/#usage","text":"m365 app open [ options ]","title":"Usage"},{"location":"cmd/app/app-open/#options","text":"--appId [appId] Optional Application (client) ID of the Azure AD application registration to open. Uses the app from the .m365rc.json file corresponding to the appId . If multiple apps are available, this will evade the prompt to choose an app. If the appId is not available in the list of apps, an error is thrown. --preview Use to open the url of the Azure AD preview portal. -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/app/app-open/#remarks","text":"If config setting autoOpenLinksInBrowser is configured to true, the command will automatically open the link to the Azure Portal in the browser. Gets the app from the .m365rc.json file in the current directory. If the --appId option is not used and multiple apps are available, it will prompt the user to choose one.","title":"Remarks"},{"location":"cmd/app/app-open/#examples","text":"Prints the URL to the Azure AD application registration management page on the Azure Portal. m365 app open Prints the url of the Azure AD application registration management page on the preview Azure Portal. m365 app open --preview Prints the URL to the Azure AD application registration management page on the Azure Portal, evading a possible choice prompt in the case of multiple saved apps in the .m365rc.json file. m365 app open --appId d75be2e1-0204-4f95-857d-51a37cf40be8","title":"Examples"},{"location":"cmd/app/permission/permission-list/","text":"app permission list \u00b6 Lists API permissions for the current AAD app Usage \u00b6 m365 app permission list [ options ] Options \u00b6 --appId [appId] Client ID of the Azure AD app registered in the .m365rc.json file to retrieve API permissions for -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 Use this command to quickly look up API permissions for the Azure AD application registration registered in the .m365rc.json file in your current project (folder). If you have multiple apps registered in your .m365rc.json file, you can specify the app for which you'd like to retrieve permissions using the --appId option. If you don't specify the app using the --appId option, you'll be prompted to select one of the applications from your .m365rc.json file. Examples \u00b6 Retrieve API permissions for your current Azure AD app m365 app permission list Retrieve API permissions for the Azure AD app with client ID e23d235c-fcdf-45d1-ac5f-24ab2ee0695d specified in the .m365rc.json file m365 app permission list --appId e23d235c-fcdf-45d1-ac5f-24ab2ee0695d","title":"permission list"},{"location":"cmd/app/permission/permission-list/#app-permission-list","text":"Lists API permissions for the current AAD app","title":"app permission list"},{"location":"cmd/app/permission/permission-list/#usage","text":"m365 app permission list [ options ]","title":"Usage"},{"location":"cmd/app/permission/permission-list/#options","text":"--appId [appId] Client ID of the Azure AD app registered in the .m365rc.json file to retrieve API permissions for -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/app/permission/permission-list/#remarks","text":"Use this command to quickly look up API permissions for the Azure AD application registration registered in the .m365rc.json file in your current project (folder). If you have multiple apps registered in your .m365rc.json file, you can specify the app for which you'd like to retrieve permissions using the --appId option. If you don't specify the app using the --appId option, you'll be prompted to select one of the applications from your .m365rc.json file.","title":"Remarks"},{"location":"cmd/app/permission/permission-list/#examples","text":"Retrieve API permissions for your current Azure AD app m365 app permission list Retrieve API permissions for the Azure AD app with client ID e23d235c-fcdf-45d1-ac5f-24ab2ee0695d specified in the .m365rc.json file m365 app permission list --appId e23d235c-fcdf-45d1-ac5f-24ab2ee0695d","title":"Examples"},{"location":"cmd/booking/business/business-get/","text":"booking business get \u00b6 Retrieve the specified Microsoft Bookings business. Usage \u00b6 m365 booking business get [ options ] Options \u00b6 -i, --id [id] ID of the business. Specify either id or name but not both. -n, --name [name] Name of the business. Specify either id or name but not both. -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Retrieve the specified Microsoft Bookings business with id business@contoso.onmicrosoft.com . m365 booking business get --id 'business@contoso.onmicrosoft.com' Retrieve the specified Microsoft Bookings business with name business name . m365 booking business get --name 'business name'","title":"business get"},{"location":"cmd/booking/business/business-get/#booking-business-get","text":"Retrieve the specified Microsoft Bookings business.","title":"booking business get"},{"location":"cmd/booking/business/business-get/#usage","text":"m365 booking business get [ options ]","title":"Usage"},{"location":"cmd/booking/business/business-get/#options","text":"-i, --id [id] ID of the business. Specify either id or name but not both. -n, --name [name] Name of the business. Specify either id or name but not both. -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/booking/business/business-get/#examples","text":"Retrieve the specified Microsoft Bookings business with id business@contoso.onmicrosoft.com . m365 booking business get --id 'business@contoso.onmicrosoft.com' Retrieve the specified Microsoft Bookings business with name business name . m365 booking business get --name 'business name'","title":"Examples"},{"location":"cmd/booking/business/business-list/","text":"booking business list \u00b6 Lists all Microsoft Bookings businesses that are created for the tenant. Usage \u00b6 m365 booking business list [ options ] Options \u00b6 -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Returns a list of all Microsoft Bookings businesses that are created for the tenant. m365 booking business list","title":"business list"},{"location":"cmd/booking/business/business-list/#booking-business-list","text":"Lists all Microsoft Bookings businesses that are created for the tenant.","title":"booking business list"},{"location":"cmd/booking/business/business-list/#usage","text":"m365 booking business list [ options ]","title":"Usage"},{"location":"cmd/booking/business/business-list/#options","text":"-h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/booking/business/business-list/#examples","text":"Returns a list of all Microsoft Bookings businesses that are created for the tenant. m365 booking business list","title":"Examples"},{"location":"cmd/cli/cli-consent/","text":"cli consent \u00b6 Consent additional permissions for the Azure AD application used by the CLI for Microsoft 365 Usage \u00b6 m365 cli consent [ options ] Options \u00b6 -s, --service <service> Service for which to consent permissions. Allowed values: yammer -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 Using the cli consent command you can consent additional permissions for the Azure AD application used by the CLI for Microsoft 365. This is for example necessary to use Yammer commands, which require the Yammer API permission that isn't granted to the CLI by default. After executing the command, the CLI for Microsoft 365 will present you with a URL that you need to open in the web browser in order to consent the permissions for the selected Microsoft 365 service. To simplify things, rather than wondering which permissions you should grant for which CLI commands, this command allows you to easily grant all the necessary permissions for using commands for the specified Microsoft 365 service, like Yammer. Examples \u00b6 Consent permissions to the Yammer API m365 cli consent --service yammer","title":"consent"},{"location":"cmd/cli/cli-consent/#cli-consent","text":"Consent additional permissions for the Azure AD application used by the CLI for Microsoft 365","title":"cli consent"},{"location":"cmd/cli/cli-consent/#usage","text":"m365 cli consent [ options ]","title":"Usage"},{"location":"cmd/cli/cli-consent/#options","text":"-s, --service <service> Service for which to consent permissions. Allowed values: yammer -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/cli/cli-consent/#remarks","text":"Using the cli consent command you can consent additional permissions for the Azure AD application used by the CLI for Microsoft 365. This is for example necessary to use Yammer commands, which require the Yammer API permission that isn't granted to the CLI by default. After executing the command, the CLI for Microsoft 365 will present you with a URL that you need to open in the web browser in order to consent the permissions for the selected Microsoft 365 service. To simplify things, rather than wondering which permissions you should grant for which CLI commands, this command allows you to easily grant all the necessary permissions for using commands for the specified Microsoft 365 service, like Yammer.","title":"Remarks"},{"location":"cmd/cli/cli-consent/#examples","text":"Consent permissions to the Yammer API m365 cli consent --service yammer","title":"Examples"},{"location":"cmd/cli/cli-doctor/","text":"cli doctor \u00b6 Retrieves diagnostic information about the current environment Usage \u00b6 m365 cli doctor [ options ] Options \u00b6 -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 This command gets all the necessary diagnostic information needed to triage and debug CLI issues without exposing any security-sensitive details Examples \u00b6 Retrieve diagnostic information m365 cli doctor","title":"doctor"},{"location":"cmd/cli/cli-doctor/#cli-doctor","text":"Retrieves diagnostic information about the current environment","title":"cli doctor"},{"location":"cmd/cli/cli-doctor/#usage","text":"m365 cli doctor [ options ]","title":"Usage"},{"location":"cmd/cli/cli-doctor/#options","text":"-h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/cli/cli-doctor/#remarks","text":"This command gets all the necessary diagnostic information needed to triage and debug CLI issues without exposing any security-sensitive details","title":"Remarks"},{"location":"cmd/cli/cli-doctor/#examples","text":"Retrieve diagnostic information m365 cli doctor","title":"Examples"},{"location":"cmd/cli/cli-issue/","text":"cli issue \u00b6 Returns, or opens a URL that takes the user to the right place in the CLI GitHub repo to create a new issue reporting bug, feedback, ideas, etc. Usage \u00b6 m365 cli issue [ options ] Options \u00b6 -t, --type <type> The type of issue to raise. Supports bug , command and sample . -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 If you are running the command in a docker container, or the Azure Cloud Shell the CLI won't be able to open the URL directly and you'll need to copy the URL to a new tab or browser instance yourself. Examples \u00b6 Raise a new issue m365 cli issue --type bug Suggest a new command m365 cli issue --type command","title":"issue"},{"location":"cmd/cli/cli-issue/#cli-issue","text":"Returns, or opens a URL that takes the user to the right place in the CLI GitHub repo to create a new issue reporting bug, feedback, ideas, etc.","title":"cli issue"},{"location":"cmd/cli/cli-issue/#usage","text":"m365 cli issue [ options ]","title":"Usage"},{"location":"cmd/cli/cli-issue/#options","text":"-t, --type <type> The type of issue to raise. Supports bug , command and sample . -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/cli/cli-issue/#remarks","text":"If you are running the command in a docker container, or the Azure Cloud Shell the CLI won't be able to open the URL directly and you'll need to copy the URL to a new tab or browser instance yourself.","title":"Remarks"},{"location":"cmd/cli/cli-issue/#examples","text":"Raise a new issue m365 cli issue --type bug Suggest a new command m365 cli issue --type command","title":"Examples"},{"location":"cmd/cli/cli-reconsent/","text":"cli reconsent \u00b6 Returns Azure AD URL to open in the browser to re-consent CLI for Microsoft 365 permissions Usage \u00b6 m365 cli reconsent [ options ] Options \u00b6 -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Get the URL to open in the browser to re-consent CLI for Microsoft 365 permissions m365 cli reconsent More information \u00b6 Re-consent the PnP Microsoft 365 Management Shell Azure AD application: https://pnp.github.io/cli-microsoft365/user-guide/connecting-office-365/#re-consent-the-pnp-office-365-management-shell-azure-ad-application","title":"reconsent"},{"location":"cmd/cli/cli-reconsent/#cli-reconsent","text":"Returns Azure AD URL to open in the browser to re-consent CLI for Microsoft 365 permissions","title":"cli reconsent"},{"location":"cmd/cli/cli-reconsent/#usage","text":"m365 cli reconsent [ options ]","title":"Usage"},{"location":"cmd/cli/cli-reconsent/#options","text":"-h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/cli/cli-reconsent/#examples","text":"Get the URL to open in the browser to re-consent CLI for Microsoft 365 permissions m365 cli reconsent","title":"Examples"},{"location":"cmd/cli/cli-reconsent/#more-information","text":"Re-consent the PnP Microsoft 365 Management Shell Azure AD application: https://pnp.github.io/cli-microsoft365/user-guide/connecting-office-365/#re-consent-the-pnp-office-365-management-shell-azure-ad-application","title":"More information"},{"location":"cmd/cli/completion/completion-clink-update/","text":"cli completion clink update \u00b6 Updates command completion for Clink (cmder) Usage \u00b6 m365 cli completion clink update [ options ] Options \u00b6 -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Important Before running this command, change the working directory to where your shell stores completion plugins. For cmder, it's %CMDER_ROOT%\\vendor\\clink-completions , where %CMDER_ROOT% is the folder where you installed cmder. After running this command, restart your terminal to load the completion. Remarks \u00b6 This commands updates the list of commands and their options used by command completion in Clink (cmder). You should run this command each time after upgrading the CLI for Microsoft 365. Examples \u00b6 Write the list of commands for Clink (cmder) command completion to a file named m365.lua in the current directory cli completion clink update > m365 . lua More information \u00b6 Command completion: https://pnp.github.io/cli-microsoft365/user-guide/completion/","title":"completion clink update"},{"location":"cmd/cli/completion/completion-clink-update/#cli-completion-clink-update","text":"Updates command completion for Clink (cmder)","title":"cli completion clink update"},{"location":"cmd/cli/completion/completion-clink-update/#usage","text":"m365 cli completion clink update [ options ]","title":"Usage"},{"location":"cmd/cli/completion/completion-clink-update/#options","text":"-h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Important Before running this command, change the working directory to where your shell stores completion plugins. For cmder, it's %CMDER_ROOT%\\vendor\\clink-completions , where %CMDER_ROOT% is the folder where you installed cmder. After running this command, restart your terminal to load the completion.","title":"Options"},{"location":"cmd/cli/completion/completion-clink-update/#remarks","text":"This commands updates the list of commands and their options used by command completion in Clink (cmder). You should run this command each time after upgrading the CLI for Microsoft 365.","title":"Remarks"},{"location":"cmd/cli/completion/completion-clink-update/#examples","text":"Write the list of commands for Clink (cmder) command completion to a file named m365.lua in the current directory cli completion clink update > m365 . lua","title":"Examples"},{"location":"cmd/cli/completion/completion-clink-update/#more-information","text":"Command completion: https://pnp.github.io/cli-microsoft365/user-guide/completion/","title":"More information"},{"location":"cmd/cli/completion/completion-pwsh-setup/","text":"cli completion pwsh setup \u00b6 Sets up command completion for PowerShell Usage \u00b6 m365 cli completion pwsh setup [ options ] Options \u00b6 -p, --profile <profile> Path to the PowerShell profile file -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 This commands sets up command completion for the CLI for Microsoft 365 in PowerShell by registering a custom PowerShell argument completer in the specified profile. Because CLI for Microsoft 365 is not a native PowerShell module, it requires a custom completer to provide completion. If the specified profile path doesn't exist, the CLI will try to create it. Examples \u00b6 Set up command completion for PowerShell using the profile from the profile variable cli completion pwsh setup - -profile $profile More information \u00b6 Command completion: https://pnp.github.io/cli-microsoft365/user-guide/completion/","title":"completion pwsh setup"},{"location":"cmd/cli/completion/completion-pwsh-setup/#cli-completion-pwsh-setup","text":"Sets up command completion for PowerShell","title":"cli completion pwsh setup"},{"location":"cmd/cli/completion/completion-pwsh-setup/#usage","text":"m365 cli completion pwsh setup [ options ]","title":"Usage"},{"location":"cmd/cli/completion/completion-pwsh-setup/#options","text":"-p, --profile <profile> Path to the PowerShell profile file -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/cli/completion/completion-pwsh-setup/#remarks","text":"This commands sets up command completion for the CLI for Microsoft 365 in PowerShell by registering a custom PowerShell argument completer in the specified profile. Because CLI for Microsoft 365 is not a native PowerShell module, it requires a custom completer to provide completion. If the specified profile path doesn't exist, the CLI will try to create it.","title":"Remarks"},{"location":"cmd/cli/completion/completion-pwsh-setup/#examples","text":"Set up command completion for PowerShell using the profile from the profile variable cli completion pwsh setup - -profile $profile","title":"Examples"},{"location":"cmd/cli/completion/completion-pwsh-setup/#more-information","text":"Command completion: https://pnp.github.io/cli-microsoft365/user-guide/completion/","title":"More information"},{"location":"cmd/cli/completion/completion-pwsh-update/","text":"cli completion pwsh update \u00b6 Updates command completion for PowerShell Usage \u00b6 m365 cli completion pwsh update [ options ] Options \u00b6 -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 This commands updates the list of commands and their options used by command completion in PowerShell. You should run this command each time after upgrading the CLI for Microsoft 365. Examples \u00b6 Update list of commands for PowerShell command completion cli completion pwsh update More information \u00b6 Command completion: https://pnp.github.io/cli-microsoft365/user-guide/completion/","title":"completion pwsh update"},{"location":"cmd/cli/completion/completion-pwsh-update/#cli-completion-pwsh-update","text":"Updates command completion for PowerShell","title":"cli completion pwsh update"},{"location":"cmd/cli/completion/completion-pwsh-update/#usage","text":"m365 cli completion pwsh update [ options ]","title":"Usage"},{"location":"cmd/cli/completion/completion-pwsh-update/#options","text":"-h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/cli/completion/completion-pwsh-update/#remarks","text":"This commands updates the list of commands and their options used by command completion in PowerShell. You should run this command each time after upgrading the CLI for Microsoft 365.","title":"Remarks"},{"location":"cmd/cli/completion/completion-pwsh-update/#examples","text":"Update list of commands for PowerShell command completion cli completion pwsh update","title":"Examples"},{"location":"cmd/cli/completion/completion-pwsh-update/#more-information","text":"Command completion: https://pnp.github.io/cli-microsoft365/user-guide/completion/","title":"More information"},{"location":"cmd/cli/completion/completion-sh-setup/","text":"cli completion sh setup \u00b6 Sets up command completion for Zsh, Bash and Fish Usage \u00b6 m365 cli completion sh setup [ options ] Options \u00b6 -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Set up command completion for Zsh, Bash or Fish cli completion sh setup More information \u00b6 Command completion: https://pnp.github.io/cli-microsoft365/user-guide/completion/","title":"completion sh setup"},{"location":"cmd/cli/completion/completion-sh-setup/#cli-completion-sh-setup","text":"Sets up command completion for Zsh, Bash and Fish","title":"cli completion sh setup"},{"location":"cmd/cli/completion/completion-sh-setup/#usage","text":"m365 cli completion sh setup [ options ]","title":"Usage"},{"location":"cmd/cli/completion/completion-sh-setup/#options","text":"-h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/cli/completion/completion-sh-setup/#examples","text":"Set up command completion for Zsh, Bash or Fish cli completion sh setup","title":"Examples"},{"location":"cmd/cli/completion/completion-sh-setup/#more-information","text":"Command completion: https://pnp.github.io/cli-microsoft365/user-guide/completion/","title":"More information"},{"location":"cmd/cli/completion/completion-sh-update/","text":"cli completion sh update \u00b6 Updates command completion for Zsh, Bash and Fish Usage \u00b6 m365 cli completion sh update [ options ] Options \u00b6 -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 This commands updates the list of commands and their options used by command completion in Zsh, Bash and Fish. You should run this command each time after upgrading the CLI for Microsoft 365. Examples \u00b6 Update list of commands for Zsh, Bash and Fish command completion m365 cli completion sh update More information \u00b6 Command completion: https://pnp.github.io/cli-microsoft365/user-guide/completion/","title":"completion sh update"},{"location":"cmd/cli/completion/completion-sh-update/#cli-completion-sh-update","text":"Updates command completion for Zsh, Bash and Fish","title":"cli completion sh update"},{"location":"cmd/cli/completion/completion-sh-update/#usage","text":"m365 cli completion sh update [ options ]","title":"Usage"},{"location":"cmd/cli/completion/completion-sh-update/#options","text":"-h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/cli/completion/completion-sh-update/#remarks","text":"This commands updates the list of commands and their options used by command completion in Zsh, Bash and Fish. You should run this command each time after upgrading the CLI for Microsoft 365.","title":"Remarks"},{"location":"cmd/cli/completion/completion-sh-update/#examples","text":"Update list of commands for Zsh, Bash and Fish command completion m365 cli completion sh update","title":"Examples"},{"location":"cmd/cli/completion/completion-sh-update/#more-information","text":"Command completion: https://pnp.github.io/cli-microsoft365/user-guide/completion/","title":"More information"},{"location":"cmd/cli/config/config-get/","text":"cli config get \u00b6 Gets value of a CLI for Microsoft 365 configuration option Usage \u00b6 m365 cli config get [ options ] Options \u00b6 -k, --key <key> Config key to get the value of -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Available settings \u00b6 Following is the list of configuration settings available in CLI for Microsoft 365. Setting name Definition Default value autoOpenLinksInBrowser Automatically open the browser for all commands which return a url and expect the user to copy paste this to the browser. For example when logging in, using m365 login in device code mode. false copyDeviceCodeToClipboard Automatically copy the device code to the clipboard when running m365 login command in device code mode false csvEscape Single character used for escaping; only apply to characters matching the quote and the escape options \" csvHeader Display the column names on the first line true csvQuote The quote characters surrounding a field. An empty quote value will preserve the original field, whether it contains quotation marks or not. csvQuoted Quote all the non-empty fields even if not required false csvQuotedEmpty Quote empty strings and overrides quoted_string on empty strings when defined false errorOutput Defines if errors should be written to stdout or stderr stderr output Defines the default output when issuing a command json printErrorsAsPlainText When output mode is set to json , print error messages as plain-text rather than JSON true prompt Prompts for missing values in required options false showHelpOnFailure Automatically display help when executing a command failed true Remarks \u00b6 If the specified setting has not been configured, CLI will return no output. Examples \u00b6 Get the output configured for CLI for Microsoft 365 m365 cli config get --key output More information \u00b6 Configuring the CLI for Microsoft 365","title":"config get"},{"location":"cmd/cli/config/config-get/#cli-config-get","text":"Gets value of a CLI for Microsoft 365 configuration option","title":"cli config get"},{"location":"cmd/cli/config/config-get/#usage","text":"m365 cli config get [ options ]","title":"Usage"},{"location":"cmd/cli/config/config-get/#options","text":"-k, --key <key> Config key to get the value of -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/cli/config/config-get/#available-settings","text":"Following is the list of configuration settings available in CLI for Microsoft 365. Setting name Definition Default value autoOpenLinksInBrowser Automatically open the browser for all commands which return a url and expect the user to copy paste this to the browser. For example when logging in, using m365 login in device code mode. false copyDeviceCodeToClipboard Automatically copy the device code to the clipboard when running m365 login command in device code mode false csvEscape Single character used for escaping; only apply to characters matching the quote and the escape options \" csvHeader Display the column names on the first line true csvQuote The quote characters surrounding a field. An empty quote value will preserve the original field, whether it contains quotation marks or not. csvQuoted Quote all the non-empty fields even if not required false csvQuotedEmpty Quote empty strings and overrides quoted_string on empty strings when defined false errorOutput Defines if errors should be written to stdout or stderr stderr output Defines the default output when issuing a command json printErrorsAsPlainText When output mode is set to json , print error messages as plain-text rather than JSON true prompt Prompts for missing values in required options false showHelpOnFailure Automatically display help when executing a command failed true","title":"Available settings"},{"location":"cmd/cli/config/config-get/#remarks","text":"If the specified setting has not been configured, CLI will return no output.","title":"Remarks"},{"location":"cmd/cli/config/config-get/#examples","text":"Get the output configured for CLI for Microsoft 365 m365 cli config get --key output","title":"Examples"},{"location":"cmd/cli/config/config-get/#more-information","text":"Configuring the CLI for Microsoft 365","title":"More information"},{"location":"cmd/cli/config/config-reset/","text":"cli config reset \u00b6 Resets the specified CLI configuration option to its default value Usage \u00b6 m365 cli config reset [ options ] Options \u00b6 -k, --key [key] Config key to reset. If not specified, will reset all configuration settings to default -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Available settings \u00b6 Following is the list of configuration settings available in CLI for Microsoft 365. Setting name Definition Default value autoOpenLinksInBrowser Automatically open the browser for all commands which return a url and expect the user to copy paste this to the browser. For example when logging in, using m365 login in device code mode. false copyDeviceCodeToClipboard Automatically copy the device code to the clipboard when running m365 login command in device code mode false csvEscape Single character used for escaping; only apply to characters matching the quote and the escape options \" csvHeader Display the column names on the first line true csvQuote The quote characters surrounding a field. An empty quote value will preserve the original field, whether it contains quotation marks or not. csvQuoted Quote all the non-empty fields even if not required false csvQuotedEmpty Quote empty strings and overrides quoted_string on empty strings when defined false errorOutput Defines if errors should be written to stdout or stderr stderr output Defines the default output when issuing a command json printErrorsAsPlainText When output mode is set to json , print error messages as plain-text rather than JSON true prompt Prompts for missing values in required options false showHelpOnFailure Automatically display help when executing a command failed true Examples \u00b6 Reset CLI configuration option showHelpOnFailure to its default value m365 cli config reset --key showHelpOnFailure Reset all configuration settings to default m365 cli config reset More information \u00b6 Configuring the CLI for Microsoft 365","title":"config reset"},{"location":"cmd/cli/config/config-reset/#cli-config-reset","text":"Resets the specified CLI configuration option to its default value","title":"cli config reset"},{"location":"cmd/cli/config/config-reset/#usage","text":"m365 cli config reset [ options ]","title":"Usage"},{"location":"cmd/cli/config/config-reset/#options","text":"-k, --key [key] Config key to reset. If not specified, will reset all configuration settings to default -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/cli/config/config-reset/#available-settings","text":"Following is the list of configuration settings available in CLI for Microsoft 365. Setting name Definition Default value autoOpenLinksInBrowser Automatically open the browser for all commands which return a url and expect the user to copy paste this to the browser. For example when logging in, using m365 login in device code mode. false copyDeviceCodeToClipboard Automatically copy the device code to the clipboard when running m365 login command in device code mode false csvEscape Single character used for escaping; only apply to characters matching the quote and the escape options \" csvHeader Display the column names on the first line true csvQuote The quote characters surrounding a field. An empty quote value will preserve the original field, whether it contains quotation marks or not. csvQuoted Quote all the non-empty fields even if not required false csvQuotedEmpty Quote empty strings and overrides quoted_string on empty strings when defined false errorOutput Defines if errors should be written to stdout or stderr stderr output Defines the default output when issuing a command json printErrorsAsPlainText When output mode is set to json , print error messages as plain-text rather than JSON true prompt Prompts for missing values in required options false showHelpOnFailure Automatically display help when executing a command failed true","title":"Available settings"},{"location":"cmd/cli/config/config-reset/#examples","text":"Reset CLI configuration option showHelpOnFailure to its default value m365 cli config reset --key showHelpOnFailure Reset all configuration settings to default m365 cli config reset","title":"Examples"},{"location":"cmd/cli/config/config-reset/#more-information","text":"Configuring the CLI for Microsoft 365","title":"More information"},{"location":"cmd/cli/config/config-set/","text":"cli config set \u00b6 Sets CLI for Microsoft 365 configuration options Usage \u00b6 m365 cli config set [ options ] Options \u00b6 -k, --key <key> Config key to specify -v, --value <value> Config value to set -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Available settings \u00b6 Following is the list of configuration settings available in CLI for Microsoft 365. Setting name Definition Default value autoOpenLinksInBrowser Automatically open the browser for all commands which return a url and expect the user to copy paste this to the browser. For example when logging in, using m365 login in device code mode. false copyDeviceCodeToClipboard Automatically copy the device code to the clipboard when running m365 login command in device code mode false csvEscape Single character used for escaping; only apply to characters matching the quote and the escape options \" csvHeader Display the column names on the first line true csvQuote The quote characters surrounding a field. An empty quote value will preserve the original field, whether it contains quotation marks or not. csvQuoted Quote all the non-empty fields even if not required false csvQuotedEmpty Quote empty strings and overrides quoted_string on empty strings when defined false errorOutput Defines if errors should be written to stdout or stderr stderr output Defines the default output when issuing a command json printErrorsAsPlainText When output mode is set to json , print error messages as plain-text rather than JSON true prompt Prompts for missing values in required options false showHelpOnFailure Automatically display help when executing a command failed true Examples \u00b6 Configure CLI to automatically display help when executing a command failed m365 cli config set --key showHelpOnFailure --value true Configure the default CLI output to JSON m365 cli config set --key output --value json More information \u00b6 Configuring the CLI for Microsoft 365","title":"config set"},{"location":"cmd/cli/config/config-set/#cli-config-set","text":"Sets CLI for Microsoft 365 configuration options","title":"cli config set"},{"location":"cmd/cli/config/config-set/#usage","text":"m365 cli config set [ options ]","title":"Usage"},{"location":"cmd/cli/config/config-set/#options","text":"-k, --key <key> Config key to specify -v, --value <value> Config value to set -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/cli/config/config-set/#available-settings","text":"Following is the list of configuration settings available in CLI for Microsoft 365. Setting name Definition Default value autoOpenLinksInBrowser Automatically open the browser for all commands which return a url and expect the user to copy paste this to the browser. For example when logging in, using m365 login in device code mode. false copyDeviceCodeToClipboard Automatically copy the device code to the clipboard when running m365 login command in device code mode false csvEscape Single character used for escaping; only apply to characters matching the quote and the escape options \" csvHeader Display the column names on the first line true csvQuote The quote characters surrounding a field. An empty quote value will preserve the original field, whether it contains quotation marks or not. csvQuoted Quote all the non-empty fields even if not required false csvQuotedEmpty Quote empty strings and overrides quoted_string on empty strings when defined false errorOutput Defines if errors should be written to stdout or stderr stderr output Defines the default output when issuing a command json printErrorsAsPlainText When output mode is set to json , print error messages as plain-text rather than JSON true prompt Prompts for missing values in required options false showHelpOnFailure Automatically display help when executing a command failed true","title":"Available settings"},{"location":"cmd/cli/config/config-set/#examples","text":"Configure CLI to automatically display help when executing a command failed m365 cli config set --key showHelpOnFailure --value true Configure the default CLI output to JSON m365 cli config set --key output --value json","title":"Examples"},{"location":"cmd/cli/config/config-set/#more-information","text":"Configuring the CLI for Microsoft 365","title":"More information"},{"location":"cmd/file/file-add/","text":"file add \u00b6 Uploads file to the specified site using Microsoft Graph Usage \u00b6 m365 file add [ options ] Options \u00b6 -u, --folderUrl <folderUrl> The URL of the document library where the file should be uploaded to -p, --filePath <filePath> Local path to the file to upload --siteUrl [siteUrl] URL of the site to which upload the file. Specify to suppress lookup. -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 The folderUrl must be an absolute URL to the document library where the file should be uploaded. The document library can be located in any site collection in your tenant, including OneDrive for Business. The folderUrl can also point to a (sub)folder in the document library. By default, the file add command will automatically lookup the ID of the site where you want to upload the file based on the specified folderUrl . It will do this, by breaking the URL into chunks and incrementally calling Microsoft Graph to retrieve site information. This is necessary, because there is no other way looking at the URL to distinguish where the site URL ends and the document library URL starts. If you want to speed up uploading files, or you use resource-specific consent and your Azure AD app only has access to the specific site, you can use the siteUrl option to specify the URL of the site yourself. Examples \u00b6 Uploads file from the current folder to the root folder of a document library in the root site collection m365 file add --filePath file.pdf --folderUrl \"https://contoso.sharepoint.com/Shared Documents\" Uploads file from the current folder to a subfolder of a document library in the root site collection m365 file add --filePath file.pdf --folderUrl \"https://contoso.sharepoint.com/Shared Documents/Folder\" Uploads file from the current folder to a document library in OneDrive for Business m365 file add --filePath file.pdf --folderUrl \"https://contoso-my.sharepoint.com/personal/steve_contoso_com/Documents\" Uploads file from the current folder to a document library in a non-root site collection m365 file add --filePath file.pdf --folderUrl \"https://contoso.sharepoint.com/sites/Contoso/Shared Documents\" Uploads file from the current folder to a document library in the specified site m365 file add --filePath file.pdf --folderUrl \"https://contoso.sharepoint.com/sites/Contoso/Shared Documents\" --siteUrl \"https://contoso.sharepoint.com/sites/Contoso\"","title":"add"},{"location":"cmd/file/file-add/#file-add","text":"Uploads file to the specified site using Microsoft Graph","title":"file add"},{"location":"cmd/file/file-add/#usage","text":"m365 file add [ options ]","title":"Usage"},{"location":"cmd/file/file-add/#options","text":"-u, --folderUrl <folderUrl> The URL of the document library where the file should be uploaded to -p, --filePath <filePath> Local path to the file to upload --siteUrl [siteUrl] URL of the site to which upload the file. Specify to suppress lookup. -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/file/file-add/#remarks","text":"The folderUrl must be an absolute URL to the document library where the file should be uploaded. The document library can be located in any site collection in your tenant, including OneDrive for Business. The folderUrl can also point to a (sub)folder in the document library. By default, the file add command will automatically lookup the ID of the site where you want to upload the file based on the specified folderUrl . It will do this, by breaking the URL into chunks and incrementally calling Microsoft Graph to retrieve site information. This is necessary, because there is no other way looking at the URL to distinguish where the site URL ends and the document library URL starts. If you want to speed up uploading files, or you use resource-specific consent and your Azure AD app only has access to the specific site, you can use the siteUrl option to specify the URL of the site yourself.","title":"Remarks"},{"location":"cmd/file/file-add/#examples","text":"Uploads file from the current folder to the root folder of a document library in the root site collection m365 file add --filePath file.pdf --folderUrl \"https://contoso.sharepoint.com/Shared Documents\" Uploads file from the current folder to a subfolder of a document library in the root site collection m365 file add --filePath file.pdf --folderUrl \"https://contoso.sharepoint.com/Shared Documents/Folder\" Uploads file from the current folder to a document library in OneDrive for Business m365 file add --filePath file.pdf --folderUrl \"https://contoso-my.sharepoint.com/personal/steve_contoso_com/Documents\" Uploads file from the current folder to a document library in a non-root site collection m365 file add --filePath file.pdf --folderUrl \"https://contoso.sharepoint.com/sites/Contoso/Shared Documents\" Uploads file from the current folder to a document library in the specified site m365 file add --filePath file.pdf --folderUrl \"https://contoso.sharepoint.com/sites/Contoso/Shared Documents\" --siteUrl \"https://contoso.sharepoint.com/sites/Contoso\"","title":"Examples"},{"location":"cmd/file/file-list/","text":"file list \u00b6 Retrieves files from the specified folder and site Usage \u00b6 m365 file list [ options ] Options \u00b6 -u, --webUrl <webUrl> The URL of the site where the folder from which to retrieve files is located -f, --folderUrl <folderUrl> The server- or site-relative URL of the folder from which to retrieve files --recursive Set to retrieve files from subfolders -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 This command is an improved version of the spo file list command. The main difference between the two commands is, that file list uses Microsoft Graph and properly supports retrieving files from large folders. Because file list uses Microsoft Graph and spo file list uses SharePoint REST APIs, the data returned by both commands is different. Examples \u00b6 Return all files from the folder Shared Documents located in site https://contoso.sharepoint.com/sites/project-x m365 file list --webUrl https://contoso.sharepoint.com/sites/project-x --folderUrl 'Shared Documents' Return all files from the folder Shared Documents and all the sub-folders of Shared Documents located in site https://contoso.sharepoint.com/sites/project-x m365 file list --webUrl https://contoso.sharepoint.com/sites/project-x --folderUrl 'Shared Documents' --recursive Return all files from the Important folder in the Shared Documents document library located in site https://contoso.sharepoint.com/sites/project-x m365 file list --webUrl https://contoso.sharepoint.com/sites/project-x --folderUrl 'Shared Documents/Important'","title":"list"},{"location":"cmd/file/file-list/#file-list","text":"Retrieves files from the specified folder and site","title":"file list"},{"location":"cmd/file/file-list/#usage","text":"m365 file list [ options ]","title":"Usage"},{"location":"cmd/file/file-list/#options","text":"-u, --webUrl <webUrl> The URL of the site where the folder from which to retrieve files is located -f, --folderUrl <folderUrl> The server- or site-relative URL of the folder from which to retrieve files --recursive Set to retrieve files from subfolders -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/file/file-list/#remarks","text":"This command is an improved version of the spo file list command. The main difference between the two commands is, that file list uses Microsoft Graph and properly supports retrieving files from large folders. Because file list uses Microsoft Graph and spo file list uses SharePoint REST APIs, the data returned by both commands is different.","title":"Remarks"},{"location":"cmd/file/file-list/#examples","text":"Return all files from the folder Shared Documents located in site https://contoso.sharepoint.com/sites/project-x m365 file list --webUrl https://contoso.sharepoint.com/sites/project-x --folderUrl 'Shared Documents' Return all files from the folder Shared Documents and all the sub-folders of Shared Documents located in site https://contoso.sharepoint.com/sites/project-x m365 file list --webUrl https://contoso.sharepoint.com/sites/project-x --folderUrl 'Shared Documents' --recursive Return all files from the Important folder in the Shared Documents document library located in site https://contoso.sharepoint.com/sites/project-x m365 file list --webUrl https://contoso.sharepoint.com/sites/project-x --folderUrl 'Shared Documents/Important'","title":"Examples"},{"location":"cmd/file/convert/convert-pdf/","text":"file convert pdf \u00b6 Converts the specified file to PDF using Microsoft Graph Usage \u00b6 m365 file convert pdf [ options ] Options \u00b6 -s, --sourceFile <sourceFile> Local path or full URL to the source file to be converted to PDF -t, --targetFile <targetFile> Local path or full URL to where the generated PDF file should be saved -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 To convert a local file to PDF, CLI will temporarily upload the file to a document library. If you're using app-only authentication, CLI will upload the file to the default document library in the root site collection on your tenant. If you're authenticated as a user, CLI will upload the file to the default document library in your OneDrive for Business. After the conversion, CLI will remove the uploaded file. If you choose to store the converted file in a document library, CLI will store the converted PDF file temporarily in the temp folder on your computer. After the PDF file has been uploaded to the location you specified, CLI will remove the temporary file. If the conversion process fails, CLI will attempt to clean up the temporary files (the source file uploaded to your tenant, if you're converting a local file to PDF, and the converted PDF file on your disk if you chose to upload the converted file to your tenant). If removing the temporary files fails, you will need to clean them up yourself. CLI will list the URL and/or path of the files to remove. Examples \u00b6 Converts local file to PDF and stores the converted file on the disk m365 file convert pdf --sourceFile file.docx --targetFile file.pdf Converts local file to PDF and uploads the converted file to a document library m365 file convert pdf --sourceFile file.docx --targetFile \"https://contoso.sharepoint.com/Shared Documents/file.pdf\" Converts file from a document library to PDF and saves the converted file to disk m365 file convert pdf --sourceFile \"https://contoso.sharepoint.com/Shared Documents/file.docx\" --targetFile file.pdf Converts file from a document library to PDF and saves the converted file to the same document library m365 file convert pdf --sourceFile \"https://contoso.sharepoint.com/Shared Documents/file.docx\" --targetFile \"https://contoso.sharepoint.com/Shared Documents/file.pdf\"","title":"convert pdf"},{"location":"cmd/file/convert/convert-pdf/#file-convert-pdf","text":"Converts the specified file to PDF using Microsoft Graph","title":"file convert pdf"},{"location":"cmd/file/convert/convert-pdf/#usage","text":"m365 file convert pdf [ options ]","title":"Usage"},{"location":"cmd/file/convert/convert-pdf/#options","text":"-s, --sourceFile <sourceFile> Local path or full URL to the source file to be converted to PDF -t, --targetFile <targetFile> Local path or full URL to where the generated PDF file should be saved -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/file/convert/convert-pdf/#remarks","text":"To convert a local file to PDF, CLI will temporarily upload the file to a document library. If you're using app-only authentication, CLI will upload the file to the default document library in the root site collection on your tenant. If you're authenticated as a user, CLI will upload the file to the default document library in your OneDrive for Business. After the conversion, CLI will remove the uploaded file. If you choose to store the converted file in a document library, CLI will store the converted PDF file temporarily in the temp folder on your computer. After the PDF file has been uploaded to the location you specified, CLI will remove the temporary file. If the conversion process fails, CLI will attempt to clean up the temporary files (the source file uploaded to your tenant, if you're converting a local file to PDF, and the converted PDF file on your disk if you chose to upload the converted file to your tenant). If removing the temporary files fails, you will need to clean them up yourself. CLI will list the URL and/or path of the files to remove.","title":"Remarks"},{"location":"cmd/file/convert/convert-pdf/#examples","text":"Converts local file to PDF and stores the converted file on the disk m365 file convert pdf --sourceFile file.docx --targetFile file.pdf Converts local file to PDF and uploads the converted file to a document library m365 file convert pdf --sourceFile file.docx --targetFile \"https://contoso.sharepoint.com/Shared Documents/file.pdf\" Converts file from a document library to PDF and saves the converted file to disk m365 file convert pdf --sourceFile \"https://contoso.sharepoint.com/Shared Documents/file.docx\" --targetFile file.pdf Converts file from a document library to PDF and saves the converted file to the same document library m365 file convert pdf --sourceFile \"https://contoso.sharepoint.com/Shared Documents/file.docx\" --targetFile \"https://contoso.sharepoint.com/Shared Documents/file.pdf\"","title":"Examples"},{"location":"cmd/flow/flow-disable/","text":"flow disable \u00b6 Disables specified Power Automate flow Usage \u00b6 m365 flow disable [ options ] Options \u00b6 -n, --name <name> The name of the Power Automate flow to disable -e, --environmentName <environmentName> The name of the environment for which to disable Power Automate flow --asAdmin Set, to disable the flow as admin -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 Attention This command is based on an API that is currently in preview and is subject to change once the API reached general availability. By default, the command will try to disable Power Automate flows you own. If you want to disable Power Automate flows owned by another user, use the asAdmin flag. If the environment with the name you specified doesn't exist, you will get the Access to the environment 'xyz' is denied. error. If the Power Automate flow with the name you specified doesn't exist, you will get the The caller with object id 'abc' does not have permission for connection 'xyz' under Api 'shared_logicflows'. error. If you try to disable a non-existing flow as admin, you will get the Could not find flow 'xyz'. error. Examples \u00b6 Disables Power Automate flow owned by the currently signed-in user m365 flow disable --environmentName Default-d87a7535-dd31-4437-bfe1-95340acd55c5 --name 3989cb59-ce1a-4a5c-bb78-257c5c39381d Disables Power Automate flow owned by another user m365 flow disable --environmentName Default-d87a7535-dd31-4437-bfe1-95340acd55c5 --name 3989cb59-ce1a-4a5c-bb78-257c5c39381d --asAdmin","title":"disable"},{"location":"cmd/flow/flow-disable/#flow-disable","text":"Disables specified Power Automate flow","title":"flow disable"},{"location":"cmd/flow/flow-disable/#usage","text":"m365 flow disable [ options ]","title":"Usage"},{"location":"cmd/flow/flow-disable/#options","text":"-n, --name <name> The name of the Power Automate flow to disable -e, --environmentName <environmentName> The name of the environment for which to disable Power Automate flow --asAdmin Set, to disable the flow as admin -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/flow/flow-disable/#remarks","text":"Attention This command is based on an API that is currently in preview and is subject to change once the API reached general availability. By default, the command will try to disable Power Automate flows you own. If you want to disable Power Automate flows owned by another user, use the asAdmin flag. If the environment with the name you specified doesn't exist, you will get the Access to the environment 'xyz' is denied. error. If the Power Automate flow with the name you specified doesn't exist, you will get the The caller with object id 'abc' does not have permission for connection 'xyz' under Api 'shared_logicflows'. error. If you try to disable a non-existing flow as admin, you will get the Could not find flow 'xyz'. error.","title":"Remarks"},{"location":"cmd/flow/flow-disable/#examples","text":"Disables Power Automate flow owned by the currently signed-in user m365 flow disable --environmentName Default-d87a7535-dd31-4437-bfe1-95340acd55c5 --name 3989cb59-ce1a-4a5c-bb78-257c5c39381d Disables Power Automate flow owned by another user m365 flow disable --environmentName Default-d87a7535-dd31-4437-bfe1-95340acd55c5 --name 3989cb59-ce1a-4a5c-bb78-257c5c39381d --asAdmin","title":"Examples"},{"location":"cmd/flow/flow-enable/","text":"flow enable \u00b6 Enables specified Power Automate flow Usage \u00b6 m365 flow enable [ options ] Options \u00b6 -n, --name <name> The name of the Power Automate flow to enable -e, --environmentName <environmentName> The name of the environment for which to enable Power Automate --asAdmin Set, to enable the Power Automate flow as admin -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 Attention This command is based on an API that is currently in preview and is subject to change once the API reached general availability. By default, the command will try to enable Power Automate flows you own. If you want to enable flows owned by another user, use the asAdmin flag. If the environment with the name you specified doesn't exist, you will get the Access to the environment 'xyz' is denied. error. If the Power Automate flow with the name you specified doesn't exist, you will get the The caller with object id 'abc' does not have permission for connection 'xyz' under Api 'shared_logicflows'. error. If you try to enable a non-existing flow as admin, you will get the Could not find flow 'xyz'. error. Examples \u00b6 Enables Power Automate flow owned by the currently signed-in user m365 flow enable --environment Default-d87a7535-dd31-4437-bfe1-95340acd55c5 --name 3989cb59-ce1a-4a5c-bb78-257c5c39381d Enables Power Automate flow owned by another user m365 flow enable --environment Default-d87a7535-dd31-4437-bfe1-95340acd55c5 --name 3989cb59-ce1a-4a5c-bb78-257c5c39381d --asAdmin","title":"enable"},{"location":"cmd/flow/flow-enable/#flow-enable","text":"Enables specified Power Automate flow","title":"flow enable"},{"location":"cmd/flow/flow-enable/#usage","text":"m365 flow enable [ options ]","title":"Usage"},{"location":"cmd/flow/flow-enable/#options","text":"-n, --name <name> The name of the Power Automate flow to enable -e, --environmentName <environmentName> The name of the environment for which to enable Power Automate --asAdmin Set, to enable the Power Automate flow as admin -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/flow/flow-enable/#remarks","text":"Attention This command is based on an API that is currently in preview and is subject to change once the API reached general availability. By default, the command will try to enable Power Automate flows you own. If you want to enable flows owned by another user, use the asAdmin flag. If the environment with the name you specified doesn't exist, you will get the Access to the environment 'xyz' is denied. error. If the Power Automate flow with the name you specified doesn't exist, you will get the The caller with object id 'abc' does not have permission for connection 'xyz' under Api 'shared_logicflows'. error. If you try to enable a non-existing flow as admin, you will get the Could not find flow 'xyz'. error.","title":"Remarks"},{"location":"cmd/flow/flow-enable/#examples","text":"Enables Power Automate flow owned by the currently signed-in user m365 flow enable --environment Default-d87a7535-dd31-4437-bfe1-95340acd55c5 --name 3989cb59-ce1a-4a5c-bb78-257c5c39381d Enables Power Automate flow owned by another user m365 flow enable --environment Default-d87a7535-dd31-4437-bfe1-95340acd55c5 --name 3989cb59-ce1a-4a5c-bb78-257c5c39381d --asAdmin","title":"Examples"},{"location":"cmd/flow/flow-export/","text":"flow export \u00b6 Exports the specified Power Automate flow Usage \u00b6 m365 flow export [ options ] Options \u00b6 -i, --id <id> The id of the Power Automate flow to export -e, --environmentNameName <environmentName> The name of the environment for which to export the flow -n, --packageDisplayName [packageDisplayName] The display name to use in the exported package -d, --packageDescription [packageDescription] The description to use in the exported package -c, --packageCreatedBy [packageCreatedBy] The name of the person to be used as the creator of the exported package -s, --packageSourceEnvironment [packageSourceEnvironment] The name of the source environment from which the exported package was taken -f, --format [format] Export format type. json,zip . Default zip -p, --path [path] The path to save the exported package to -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 Attention This command is based on an API that is currently in preview and is subject to change once the API reached general availability. If the environment with the name you specified doesn't exist, you will get the Access to the environment 'xyz' is denied. error. If the Power Automate flow with the id you specified doesn't exist, you will get the The caller with object id 'abc' does not have permission for connection 'xyz' under Api 'shared_logicflows'. error. Examples \u00b6 Export the specified Power Automate flow as a ZIP file m365 flow export --environmentName Default-d87a7535-dd31-4437-bfe1-95340acd55c5 --id 3989cb59-ce1a-4a5c-bb78-257c5c39381d Export the specified Power Automate flow as a JSON file m365 flow export --environmentName Default-d87a7535-dd31-4437-bfe1-95340acd55c5 --id 3989cb59-ce1a-4a5c-bb78-257c5c39381d --format json Export the specified Power Automate flow as a ZIP file, specifying a Display Name of 'My flow name' to be embedded into the package m365 flow export --environmentName Default-d87a7535-dd31-4437-bfe1-95340acd55c5 --id 3989cb59-ce1a-4a5c-bb78-257c5c39381d --packageDisplayName 'My flow name' Export the specified Power Automate flow as a ZIP file with the filename 'MyFlow.zip' saved to the current directory m365 flow export --environmentName Default-d87a7535-dd31-4437-bfe1-95340acd55c5 --id 3989cb59-ce1a-4a5c-bb78-257c5c39381d --path './MyFlow.zip'","title":"export"},{"location":"cmd/flow/flow-export/#flow-export","text":"Exports the specified Power Automate flow","title":"flow export"},{"location":"cmd/flow/flow-export/#usage","text":"m365 flow export [ options ]","title":"Usage"},{"location":"cmd/flow/flow-export/#options","text":"-i, --id <id> The id of the Power Automate flow to export -e, --environmentNameName <environmentName> The name of the environment for which to export the flow -n, --packageDisplayName [packageDisplayName] The display name to use in the exported package -d, --packageDescription [packageDescription] The description to use in the exported package -c, --packageCreatedBy [packageCreatedBy] The name of the person to be used as the creator of the exported package -s, --packageSourceEnvironment [packageSourceEnvironment] The name of the source environment from which the exported package was taken -f, --format [format] Export format type. json,zip . Default zip -p, --path [path] The path to save the exported package to -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/flow/flow-export/#remarks","text":"Attention This command is based on an API that is currently in preview and is subject to change once the API reached general availability. If the environment with the name you specified doesn't exist, you will get the Access to the environment 'xyz' is denied. error. If the Power Automate flow with the id you specified doesn't exist, you will get the The caller with object id 'abc' does not have permission for connection 'xyz' under Api 'shared_logicflows'. error.","title":"Remarks"},{"location":"cmd/flow/flow-export/#examples","text":"Export the specified Power Automate flow as a ZIP file m365 flow export --environmentName Default-d87a7535-dd31-4437-bfe1-95340acd55c5 --id 3989cb59-ce1a-4a5c-bb78-257c5c39381d Export the specified Power Automate flow as a JSON file m365 flow export --environmentName Default-d87a7535-dd31-4437-bfe1-95340acd55c5 --id 3989cb59-ce1a-4a5c-bb78-257c5c39381d --format json Export the specified Power Automate flow as a ZIP file, specifying a Display Name of 'My flow name' to be embedded into the package m365 flow export --environmentName Default-d87a7535-dd31-4437-bfe1-95340acd55c5 --id 3989cb59-ce1a-4a5c-bb78-257c5c39381d --packageDisplayName 'My flow name' Export the specified Power Automate flow as a ZIP file with the filename 'MyFlow.zip' saved to the current directory m365 flow export --environmentName Default-d87a7535-dd31-4437-bfe1-95340acd55c5 --id 3989cb59-ce1a-4a5c-bb78-257c5c39381d --path './MyFlow.zip'","title":"Examples"},{"location":"cmd/flow/flow-get/","text":"flow get \u00b6 Gets information about the specified Power Automate flow Usage \u00b6 m365 flow get [ options ] Options \u00b6 -n, --name <name> The name of the Power Automate flow to get information about -e, --environmentNameName <environmentName> The name of the environment for which to retrieve available flows --asAdmin Set, to retrieve the Flow as admin -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 Attention This command is based on an API that is currently in preview and is subject to change once the API reached general availability. By default, the command will try to retrieve Power Automate flows you own. If you want to retrieve a flow owned by another user, use the asAdmin flag. If the environment with the name you specified doesn't exist, you will get the Access to the environment 'xyz' is denied. error. If the Power Automate flow with the name you specified doesn't exist, you will get the The caller with object id 'abc' does not have permission for connection 'xyz' under Api 'shared_logicflows'. error. If you try to retrieve a non-existing flow as admin, you will get the Could not find flow 'xyz'. error. Examples \u00b6 Get information about the specified Power Automate flow owned by the currently signed-in user m365 flow get --environmentName Default-d87a7535-dd31-4437-bfe1-95340acd55c5 --name 3989cb59-ce1a-4a5c-bb78-257c5c39381d Get information about the specified Power Automate flow owned by another user m365 flow get --environmentName Default-d87a7535-dd31-4437-bfe1-95340acd55c5 --name 3989cb59-ce1a-4a5c-bb78-257c5c39381d --asAdmin","title":"get"},{"location":"cmd/flow/flow-get/#flow-get","text":"Gets information about the specified Power Automate flow","title":"flow get"},{"location":"cmd/flow/flow-get/#usage","text":"m365 flow get [ options ]","title":"Usage"},{"location":"cmd/flow/flow-get/#options","text":"-n, --name <name> The name of the Power Automate flow to get information about -e, --environmentNameName <environmentName> The name of the environment for which to retrieve available flows --asAdmin Set, to retrieve the Flow as admin -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/flow/flow-get/#remarks","text":"Attention This command is based on an API that is currently in preview and is subject to change once the API reached general availability. By default, the command will try to retrieve Power Automate flows you own. If you want to retrieve a flow owned by another user, use the asAdmin flag. If the environment with the name you specified doesn't exist, you will get the Access to the environment 'xyz' is denied. error. If the Power Automate flow with the name you specified doesn't exist, you will get the The caller with object id 'abc' does not have permission for connection 'xyz' under Api 'shared_logicflows'. error. If you try to retrieve a non-existing flow as admin, you will get the Could not find flow 'xyz'. error.","title":"Remarks"},{"location":"cmd/flow/flow-get/#examples","text":"Get information about the specified Power Automate flow owned by the currently signed-in user m365 flow get --environmentName Default-d87a7535-dd31-4437-bfe1-95340acd55c5 --name 3989cb59-ce1a-4a5c-bb78-257c5c39381d Get information about the specified Power Automate flow owned by another user m365 flow get --environmentName Default-d87a7535-dd31-4437-bfe1-95340acd55c5 --name 3989cb59-ce1a-4a5c-bb78-257c5c39381d --asAdmin","title":"Examples"},{"location":"cmd/flow/flow-list/","text":"flow list \u00b6 Lists Power Automate flow in the given environment Usage \u00b6 m365 flow list [ options ] Options \u00b6 -e, --environmentName <environmentName> The name of the environment for which to retrieve available flows --asAdmin Set, to list all Flows as admin. Otherwise will return only your own flows -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 Attention This command is based on an API that is currently in preview and is subject to change once the API reached general availability. If the environment with the name you specified doesn't exist, you will get the Access to the environment 'xyz' is denied. error. By default, the flow list command returns only your flows. To list all flows, use the asAdmin option. Examples \u00b6 List all your flows in the given environment m365 flow list --environmentName Default-d87a7535-dd31-4437-bfe1-95340acd55c5 List all flows in the given environment m365 flow list --environmentName Default-d87a7535-dd31-4437-bfe1-95340acd55c5 --asAdmin","title":"list"},{"location":"cmd/flow/flow-list/#flow-list","text":"Lists Power Automate flow in the given environment","title":"flow list"},{"location":"cmd/flow/flow-list/#usage","text":"m365 flow list [ options ]","title":"Usage"},{"location":"cmd/flow/flow-list/#options","text":"-e, --environmentName <environmentName> The name of the environment for which to retrieve available flows --asAdmin Set, to list all Flows as admin. Otherwise will return only your own flows -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/flow/flow-list/#remarks","text":"Attention This command is based on an API that is currently in preview and is subject to change once the API reached general availability. If the environment with the name you specified doesn't exist, you will get the Access to the environment 'xyz' is denied. error. By default, the flow list command returns only your flows. To list all flows, use the asAdmin option.","title":"Remarks"},{"location":"cmd/flow/flow-list/#examples","text":"List all your flows in the given environment m365 flow list --environmentName Default-d87a7535-dd31-4437-bfe1-95340acd55c5 List all flows in the given environment m365 flow list --environmentName Default-d87a7535-dd31-4437-bfe1-95340acd55c5 --asAdmin","title":"Examples"},{"location":"cmd/flow/flow-remove/","text":"flow remove \u00b6 Removes the specified Power Automate flow Usage \u00b6 m365 flow remove [ options ] Options \u00b6 -n, --name <name> The name of the Power Automate flow to remove -e, --environmentName <environmentName> The name of the environment to which the flow belongs --asAdmin Set, to remove the flow as admin --confirm Don't prompt for confirmation -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 By default, the command will try to remove a Power Automate flow you own. If you want to remove a Flow owned by another user, use the asAdmin flag. If the environment with the name you specified doesn't exist, you will get the Access to the environment 'xyz' is denied. error. If the Power Automate flow with the name you specified doesn't exist, you will get the Error: Resource 'abc' does not exist in environment 'xyz' error. Examples \u00b6 Removes the specified Power Automate flow owned by the currently signed-in user m365 flow remove --environmentName Default-d87a7535-dd31-4437-bfe1-95340acd55c5 --name 3989cb59-ce1a-4a5c-bb78-257c5c39381d Removes the specified Power Automate flow owned by the currently signed-in user without confirmation m365 flow remove --environmentName Default-d87a7535-dd31-4437-bfe1-95340acd55c5 --name 3989cb59-ce1a-4a5c-bb78-257c5c39381d --confirm Removes the specified Power Automate flow owned by another user m365 flow remove --environmentName Default-d87a7535-dd31-4437-bfe1-95340acd55c5 --name 3989cb59-ce1a-4a5c-bb78-257c5c39381d --asAdmin Removes the specified Power Automate flow owned by another user without confirmation m365 flow remove --environmentName Default-d87a7535-dd31-4437-bfe1-95340acd55c5 --name 3989cb59-ce1a-4a5c-bb78-257c5c39381d --asAdmin --confirm","title":"remove"},{"location":"cmd/flow/flow-remove/#flow-remove","text":"Removes the specified Power Automate flow","title":"flow remove"},{"location":"cmd/flow/flow-remove/#usage","text":"m365 flow remove [ options ]","title":"Usage"},{"location":"cmd/flow/flow-remove/#options","text":"-n, --name <name> The name of the Power Automate flow to remove -e, --environmentName <environmentName> The name of the environment to which the flow belongs --asAdmin Set, to remove the flow as admin --confirm Don't prompt for confirmation -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/flow/flow-remove/#remarks","text":"By default, the command will try to remove a Power Automate flow you own. If you want to remove a Flow owned by another user, use the asAdmin flag. If the environment with the name you specified doesn't exist, you will get the Access to the environment 'xyz' is denied. error. If the Power Automate flow with the name you specified doesn't exist, you will get the Error: Resource 'abc' does not exist in environment 'xyz' error.","title":"Remarks"},{"location":"cmd/flow/flow-remove/#examples","text":"Removes the specified Power Automate flow owned by the currently signed-in user m365 flow remove --environmentName Default-d87a7535-dd31-4437-bfe1-95340acd55c5 --name 3989cb59-ce1a-4a5c-bb78-257c5c39381d Removes the specified Power Automate flow owned by the currently signed-in user without confirmation m365 flow remove --environmentName Default-d87a7535-dd31-4437-bfe1-95340acd55c5 --name 3989cb59-ce1a-4a5c-bb78-257c5c39381d --confirm Removes the specified Power Automate flow owned by another user m365 flow remove --environmentName Default-d87a7535-dd31-4437-bfe1-95340acd55c5 --name 3989cb59-ce1a-4a5c-bb78-257c5c39381d --asAdmin Removes the specified Power Automate flow owned by another user without confirmation m365 flow remove --environmentName Default-d87a7535-dd31-4437-bfe1-95340acd55c5 --name 3989cb59-ce1a-4a5c-bb78-257c5c39381d --asAdmin --confirm","title":"Examples"},{"location":"cmd/flow/environment/environment-get/","text":"flow environment get \u00b6 Gets information about the specified Microsoft Flow environment Usage \u00b6 m365 flow environment get [ options ] Options \u00b6 -n, --name <name> The name of the environment to get information about -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 Attention This command is based on an API that is currently in preview and is subject to change once the API reached general availability. If the environment with the name you specified doesn't exist, you will get the Access to the environment 'xyz' is denied. error. Examples \u00b6 Get information about the Microsoft Flow environment named Default-d87a7535-dd31-4437-bfe1-95340acd55c5 m365 flow environment get --name Default-d87a7535-dd31-4437-bfe1-95340acd55c5","title":"environment get"},{"location":"cmd/flow/environment/environment-get/#flow-environment-get","text":"Gets information about the specified Microsoft Flow environment","title":"flow environment get"},{"location":"cmd/flow/environment/environment-get/#usage","text":"m365 flow environment get [ options ]","title":"Usage"},{"location":"cmd/flow/environment/environment-get/#options","text":"-n, --name <name> The name of the environment to get information about -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/flow/environment/environment-get/#remarks","text":"Attention This command is based on an API that is currently in preview and is subject to change once the API reached general availability. If the environment with the name you specified doesn't exist, you will get the Access to the environment 'xyz' is denied. error.","title":"Remarks"},{"location":"cmd/flow/environment/environment-get/#examples","text":"Get information about the Microsoft Flow environment named Default-d87a7535-dd31-4437-bfe1-95340acd55c5 m365 flow environment get --name Default-d87a7535-dd31-4437-bfe1-95340acd55c5","title":"Examples"},{"location":"cmd/flow/environment/environment-list/","text":"flow environment list \u00b6 Lists Microsoft Flow environments in the current tenant Usage \u00b6 m365 flow environment list [ options ] Options \u00b6 -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 Attention This command is based on an API that is currently in preview and is subject to change once the API reached general availability. Examples \u00b6 List Microsoft Flow environments in the current tenant m365 flow environment list","title":"environment list"},{"location":"cmd/flow/environment/environment-list/#flow-environment-list","text":"Lists Microsoft Flow environments in the current tenant","title":"flow environment list"},{"location":"cmd/flow/environment/environment-list/#usage","text":"m365 flow environment list [ options ]","title":"Usage"},{"location":"cmd/flow/environment/environment-list/#options","text":"-h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/flow/environment/environment-list/#remarks","text":"Attention This command is based on an API that is currently in preview and is subject to change once the API reached general availability.","title":"Remarks"},{"location":"cmd/flow/environment/environment-list/#examples","text":"List Microsoft Flow environments in the current tenant m365 flow environment list","title":"Examples"},{"location":"cmd/flow/run/run-cancel/","text":"flow run cancel \u00b6 Cancels a specific run for the specified flow Usage \u00b6 m365 flow run cancel [ options ] Options \u00b6 -n, --name <name> The name of the run to cancel -f, --flowName <flowName> The name of the flow to cancel the run for -e, --environmentName <environmentName> The name of the environment where the flow is located -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 Attention This command is based on an API that is currently in preview and is subject to change once the API reached general availability. If the environment with the name you specified doesn't exist, you will get the Access to the environment 'xyz' is denied. error. If the flow with the name you specified doesn't exist, you will get the The caller with object id 'abc' does not have permission for connection 'xyz' under Api 'shared_logicflows'. error. If the run with the name you specified doesn't exist, you will get the The workflow 'xyz' run 'abc' could not be found. error. Examples \u00b6 Cancel the given run of the specified flow m365 flow run cancel --environmentName Default-d87a7535-dd31-4437-bfe1-95340acd55c5 --flowName 5923cb07-ce1a-4a5c-ab81-257ce820109a --name 08586653536760200319026785874CU62","title":"run cancel"},{"location":"cmd/flow/run/run-cancel/#flow-run-cancel","text":"Cancels a specific run for the specified flow","title":"flow run cancel"},{"location":"cmd/flow/run/run-cancel/#usage","text":"m365 flow run cancel [ options ]","title":"Usage"},{"location":"cmd/flow/run/run-cancel/#options","text":"-n, --name <name> The name of the run to cancel -f, --flowName <flowName> The name of the flow to cancel the run for -e, --environmentName <environmentName> The name of the environment where the flow is located -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/flow/run/run-cancel/#remarks","text":"Attention This command is based on an API that is currently in preview and is subject to change once the API reached general availability. If the environment with the name you specified doesn't exist, you will get the Access to the environment 'xyz' is denied. error. If the flow with the name you specified doesn't exist, you will get the The caller with object id 'abc' does not have permission for connection 'xyz' under Api 'shared_logicflows'. error. If the run with the name you specified doesn't exist, you will get the The workflow 'xyz' run 'abc' could not be found. error.","title":"Remarks"},{"location":"cmd/flow/run/run-cancel/#examples","text":"Cancel the given run of the specified flow m365 flow run cancel --environmentName Default-d87a7535-dd31-4437-bfe1-95340acd55c5 --flowName 5923cb07-ce1a-4a5c-ab81-257ce820109a --name 08586653536760200319026785874CU62","title":"Examples"},{"location":"cmd/flow/run/run-get/","text":"flow run get \u00b6 Gets information about a specific run of the specified Power Automate flow Usage \u00b6 m365 flow run get [ options ] Options \u00b6 -n, --name <name> The name of the run to get information about -f, --flowName <flowName> The name of the Power Automate flow for which to retrieve information -e, --environmentName <environmentName> The name of the environment where the flow is located -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 Attention This command is based on an API that is currently in preview and is subject to change once the API reached general availability. If the environment with the name you specified doesn't exist, you will get the Access to the environment 'xyz' is denied. error. If the Microsoft Flow with the name you specified doesn't exist, you will get the The caller with object id 'abc' does not have permission for connection 'xyz' under Api 'shared_logicflows'. error. If the run with the name you specified doesn't exist, you will get the The provided workflow run name is not valid. error. Examples \u00b6 Get information about the given run of the specified Power Automate flow m365 flow run get --environmentName Default-d87a7535-dd31-4437-bfe1-95340acd55c5 --flowName 5923cb07-ce1a-4a5c-ab81-257ce820109a --name 08586653536760200319026785874CU62","title":"run get"},{"location":"cmd/flow/run/run-get/#flow-run-get","text":"Gets information about a specific run of the specified Power Automate flow","title":"flow run get"},{"location":"cmd/flow/run/run-get/#usage","text":"m365 flow run get [ options ]","title":"Usage"},{"location":"cmd/flow/run/run-get/#options","text":"-n, --name <name> The name of the run to get information about -f, --flowName <flowName> The name of the Power Automate flow for which to retrieve information -e, --environmentName <environmentName> The name of the environment where the flow is located -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/flow/run/run-get/#remarks","text":"Attention This command is based on an API that is currently in preview and is subject to change once the API reached general availability. If the environment with the name you specified doesn't exist, you will get the Access to the environment 'xyz' is denied. error. If the Microsoft Flow with the name you specified doesn't exist, you will get the The caller with object id 'abc' does not have permission for connection 'xyz' under Api 'shared_logicflows'. error. If the run with the name you specified doesn't exist, you will get the The provided workflow run name is not valid. error.","title":"Remarks"},{"location":"cmd/flow/run/run-get/#examples","text":"Get information about the given run of the specified Power Automate flow m365 flow run get --environmentName Default-d87a7535-dd31-4437-bfe1-95340acd55c5 --flowName 5923cb07-ce1a-4a5c-ab81-257ce820109a --name 08586653536760200319026785874CU62","title":"Examples"},{"location":"cmd/flow/run/run-list/","text":"flow run list \u00b6 Lists runs of the specified Microsoft Flow Usage \u00b6 m365 flow run list [ options ] Options \u00b6 -f, --flowName <flowName> The name of the Microsoft Flow to retrieve the runs for -e, --environmentName <environmentName> The name of the environment to which the flow belongs -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 Attention This command is based on an API that is currently in preview and is subject to change once the API reached general availability. If the environment with the name you specified doesn't exist, you will get the Access to the environment 'xyz' is denied. error. If the Microsoft Flow with the name you specified doesn't exist, you will get the The caller with object id 'abc' does not have permission for connection 'xyz' under Api 'shared_logicflows'. error. Examples \u00b6 List runs of the specified Microsoft Flow m365 flow run list --environmentName Default-d87a7535-dd31-4437-bfe1-95340acd55c5 --flowName 5923cb07-ce1a-4a5c-ab81-257ce820109a","title":"run list"},{"location":"cmd/flow/run/run-list/#flow-run-list","text":"Lists runs of the specified Microsoft Flow","title":"flow run list"},{"location":"cmd/flow/run/run-list/#usage","text":"m365 flow run list [ options ]","title":"Usage"},{"location":"cmd/flow/run/run-list/#options","text":"-f, --flowName <flowName> The name of the Microsoft Flow to retrieve the runs for -e, --environmentName <environmentName> The name of the environment to which the flow belongs -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/flow/run/run-list/#remarks","text":"Attention This command is based on an API that is currently in preview and is subject to change once the API reached general availability. If the environment with the name you specified doesn't exist, you will get the Access to the environment 'xyz' is denied. error. If the Microsoft Flow with the name you specified doesn't exist, you will get the The caller with object id 'abc' does not have permission for connection 'xyz' under Api 'shared_logicflows'. error.","title":"Remarks"},{"location":"cmd/flow/run/run-list/#examples","text":"List runs of the specified Microsoft Flow m365 flow run list --environmentName Default-d87a7535-dd31-4437-bfe1-95340acd55c5 --flowName 5923cb07-ce1a-4a5c-ab81-257ce820109a","title":"Examples"},{"location":"cmd/flow/run/run-resubmit/","text":"flow run resubmit \u00b6 Resubmits a specific flow run for the specified Microsoft Flow Usage \u00b6 m365 flow run resubmit [ options ] Options \u00b6 -n, --name <name> The name of the run to resubmit -f, --flowName <flowName> The name of the flow to resubmit the run for -e, --environmentName <environmentName> The name of the environment where the Flow is located --confirm Don't prompt for confirmation -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 Attention This command is based on an API that is currently in preview and is subject to change once the API reached general availability. If the environment with the name you specified doesn't exist, you will get the Access to the environment 'xyz' is denied. error. If the Microsoft Flow with the name you specified doesn't exist, you will get the The caller with object id 'abc' does not have permission for connection 'xyz' under Api 'shared_logicflows'. error. If the run with the name you specified doesn't exist, you will get the The workflow 'xyz' run 'abc' could not be found. error. Examples \u00b6 Resubmits a specific flow run for the specified Microsoft Flow m365 flow run resubmit --environmentName Default-d87a7535-dd31-4437-bfe1-95340acd55c5 --flowName 5923cb07-ce1a-4a5c-ab81-257ce820109a --name 08586653536760200319026785874CU62 Resubmits a specific flow run for the specified Microsoft Flow without prompting for confirmation m365 flow run resubmit --environmentName Default-d87a7535-dd31-4437-bfe1-95340acd55c5 --flowName 5923cb07-ce1a-4a5c-ab81-257ce820109a --name 08586653536760200319026785874CU62 --confirm","title":"run resubmit"},{"location":"cmd/flow/run/run-resubmit/#flow-run-resubmit","text":"Resubmits a specific flow run for the specified Microsoft Flow","title":"flow run resubmit"},{"location":"cmd/flow/run/run-resubmit/#usage","text":"m365 flow run resubmit [ options ]","title":"Usage"},{"location":"cmd/flow/run/run-resubmit/#options","text":"-n, --name <name> The name of the run to resubmit -f, --flowName <flowName> The name of the flow to resubmit the run for -e, --environmentName <environmentName> The name of the environment where the Flow is located --confirm Don't prompt for confirmation -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/flow/run/run-resubmit/#remarks","text":"Attention This command is based on an API that is currently in preview and is subject to change once the API reached general availability. If the environment with the name you specified doesn't exist, you will get the Access to the environment 'xyz' is denied. error. If the Microsoft Flow with the name you specified doesn't exist, you will get the The caller with object id 'abc' does not have permission for connection 'xyz' under Api 'shared_logicflows'. error. If the run with the name you specified doesn't exist, you will get the The workflow 'xyz' run 'abc' could not be found. error.","title":"Remarks"},{"location":"cmd/flow/run/run-resubmit/#examples","text":"Resubmits a specific flow run for the specified Microsoft Flow m365 flow run resubmit --environmentName Default-d87a7535-dd31-4437-bfe1-95340acd55c5 --flowName 5923cb07-ce1a-4a5c-ab81-257ce820109a --name 08586653536760200319026785874CU62 Resubmits a specific flow run for the specified Microsoft Flow without prompting for confirmation m365 flow run resubmit --environmentName Default-d87a7535-dd31-4437-bfe1-95340acd55c5 --flowName 5923cb07-ce1a-4a5c-ab81-257ce820109a --name 08586653536760200319026785874CU62 --confirm","title":"Examples"},{"location":"cmd/graph/changelog/changelog-list/","text":"graph changelog list \u00b6 Gets an overview of specific API-level changes in Microsoft Graph v1.0 and beta Usage \u00b6 m365 graph changelog list [ options ] Options \u00b6 -v, --versions [versions] Comma-separated list of versions to show changes for. Beta, v1.0 . When no version is selected all versions are returned. -c, --changeType [changeType] Change type to show changes for. Addition, Change, Deletion . When no changeType is selected all change types are returned. -s, --services [services] Comma-separated list of services to show changes for. Applications, Calendar, Change notifications, Cloud communications, Compliance, Cross-device experiences, Customer booking, Device and app management, Education, Files, Financials, Groups, Identity and access, Mail, Notes, Notifications, People and workplace intelligence, Personal contacts, Reports, Search, Security, Sites and lists, Tasks and plans, Teamwork, To-do tasks, Users, Workbooks and charts . When no service is selected all services are returned. --startDate [startDate] The startdate used to query for changes. Supported date format is YYYY-MM-DD . When no date is specified all changes are returned. --endDate [endDate] The enddate used to query for changes. Supported date format is YYYY-MM-DD . When no date is specified all changes are returned. -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 Attention This command is based on an API that is currently in preview and is subject to change once the API reached general availability. Examples \u00b6 Get all changes within Microsoft Graph. m365 graph changelog list Get all changes within Microsoft Graph for the services Groups and Users . m365 graph changelog list --services 'Groups,Users' Get all changes within Microsoft Graph that happend between 2021-01-01 and 2021-05-01 . m365 graph changelog list --startDate '2021-01-01' --endDate '2021-05-01'","title":"changelog list"},{"location":"cmd/graph/changelog/changelog-list/#graph-changelog-list","text":"Gets an overview of specific API-level changes in Microsoft Graph v1.0 and beta","title":"graph changelog list"},{"location":"cmd/graph/changelog/changelog-list/#usage","text":"m365 graph changelog list [ options ]","title":"Usage"},{"location":"cmd/graph/changelog/changelog-list/#options","text":"-v, --versions [versions] Comma-separated list of versions to show changes for. Beta, v1.0 . When no version is selected all versions are returned. -c, --changeType [changeType] Change type to show changes for. Addition, Change, Deletion . When no changeType is selected all change types are returned. -s, --services [services] Comma-separated list of services to show changes for. Applications, Calendar, Change notifications, Cloud communications, Compliance, Cross-device experiences, Customer booking, Device and app management, Education, Files, Financials, Groups, Identity and access, Mail, Notes, Notifications, People and workplace intelligence, Personal contacts, Reports, Search, Security, Sites and lists, Tasks and plans, Teamwork, To-do tasks, Users, Workbooks and charts . When no service is selected all services are returned. --startDate [startDate] The startdate used to query for changes. Supported date format is YYYY-MM-DD . When no date is specified all changes are returned. --endDate [endDate] The enddate used to query for changes. Supported date format is YYYY-MM-DD . When no date is specified all changes are returned. -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/graph/changelog/changelog-list/#remarks","text":"Attention This command is based on an API that is currently in preview and is subject to change once the API reached general availability.","title":"Remarks"},{"location":"cmd/graph/changelog/changelog-list/#examples","text":"Get all changes within Microsoft Graph. m365 graph changelog list Get all changes within Microsoft Graph for the services Groups and Users . m365 graph changelog list --services 'Groups,Users' Get all changes within Microsoft Graph that happend between 2021-01-01 and 2021-05-01 . m365 graph changelog list --startDate '2021-01-01' --endDate '2021-05-01'","title":"Examples"},{"location":"cmd/graph/schemaextension/schemaextension-add/","text":"graph schemaextension add \u00b6 Creates a Microsoft Graph schema extension Usage \u00b6 m365 graph schemaextension add [ options ] Options \u00b6 -i, --id <id> The unique identifier for the schema extension definition -d, --description [description] Description of the schema extension --owner <owner> The Id ID the Azure AD application that is the owner of the schema extension -t, --targetTypes <targetTypes> Comma-separated list of Microsoft Graph resource types the schema extension targets -p, --properties The collection of property names and types that make up the schema extension definition formatted as a JSON string -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 To create a schema extension, you have to specify a unique ID for the schema extension. You can assign a value in one of two ways: concatenate the name of one of your verified domains with a name for the schema extension to form a unique string in this format, {domainName}_{schemaName} , eg. contoso_mySchema . NOTE: Only verified domains under the following top-level domains are supported: .com, .net, .gov, .edu or .org. Provide a schema name, and let Microsoft Graph use that schema name to complete the id assignment in this format: ext{8-random-alphanumeric-chars}_{schema-name} , eg. extkvbmkofy_mySchema . The schema extension ID cannot be changed after creation. The schema extension owner is the ID of the Azure AD application that is the owner of the schema extension. Once set, this property is read-only and cannot be changed. The target types are the set of Microsoft Graph resource types (that support schema extensions) that this schema extension definition can be applied to. This option is specified as a comma-separated list Escaping JSON in PowerShell When using the --properties option it's possible to enter a JSON string. In PowerShell 5 to 7.2 specific escaping rules apply due to an issue. Remember that you can also use file tokens instead. Examples \u00b6 Create a schema extension m365 graph schemaextension add --id MySchemaExtension --description \"My Schema Extension\" --targetTypes Group --owner 62375ab9-6b52-47ed-826b-58e47e0e304b --properties '[{\"name\":\"myProp1\",\"type\":\"Integer\"},{\"name\":\"myProp2\",\"type\":\"String\"}]' Create a schema extension with a verified domain m365 graph schemaextension add --id contoso_MySchemaExtension --description \"My Schema Extension\" --targetTypes Group --owner 62375ab9-6b52-47ed-826b-58e47e0e304b --properties '[{\"name\":\"myProp1\",\"type\":\"Integer\"},{\"name\":\"myProp2\",\"type\":\"String\"}]'","title":"schemaextension add"},{"location":"cmd/graph/schemaextension/schemaextension-add/#graph-schemaextension-add","text":"Creates a Microsoft Graph schema extension","title":"graph schemaextension add"},{"location":"cmd/graph/schemaextension/schemaextension-add/#usage","text":"m365 graph schemaextension add [ options ]","title":"Usage"},{"location":"cmd/graph/schemaextension/schemaextension-add/#options","text":"-i, --id <id> The unique identifier for the schema extension definition -d, --description [description] Description of the schema extension --owner <owner> The Id ID the Azure AD application that is the owner of the schema extension -t, --targetTypes <targetTypes> Comma-separated list of Microsoft Graph resource types the schema extension targets -p, --properties The collection of property names and types that make up the schema extension definition formatted as a JSON string -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/graph/schemaextension/schemaextension-add/#remarks","text":"To create a schema extension, you have to specify a unique ID for the schema extension. You can assign a value in one of two ways: concatenate the name of one of your verified domains with a name for the schema extension to form a unique string in this format, {domainName}_{schemaName} , eg. contoso_mySchema . NOTE: Only verified domains under the following top-level domains are supported: .com, .net, .gov, .edu or .org. Provide a schema name, and let Microsoft Graph use that schema name to complete the id assignment in this format: ext{8-random-alphanumeric-chars}_{schema-name} , eg. extkvbmkofy_mySchema . The schema extension ID cannot be changed after creation. The schema extension owner is the ID of the Azure AD application that is the owner of the schema extension. Once set, this property is read-only and cannot be changed. The target types are the set of Microsoft Graph resource types (that support schema extensions) that this schema extension definition can be applied to. This option is specified as a comma-separated list Escaping JSON in PowerShell When using the --properties option it's possible to enter a JSON string. In PowerShell 5 to 7.2 specific escaping rules apply due to an issue. Remember that you can also use file tokens instead.","title":"Remarks"},{"location":"cmd/graph/schemaextension/schemaextension-add/#examples","text":"Create a schema extension m365 graph schemaextension add --id MySchemaExtension --description \"My Schema Extension\" --targetTypes Group --owner 62375ab9-6b52-47ed-826b-58e47e0e304b --properties '[{\"name\":\"myProp1\",\"type\":\"Integer\"},{\"name\":\"myProp2\",\"type\":\"String\"}]' Create a schema extension with a verified domain m365 graph schemaextension add --id contoso_MySchemaExtension --description \"My Schema Extension\" --targetTypes Group --owner 62375ab9-6b52-47ed-826b-58e47e0e304b --properties '[{\"name\":\"myProp1\",\"type\":\"Integer\"},{\"name\":\"myProp2\",\"type\":\"String\"}]'","title":"Examples"},{"location":"cmd/graph/schemaextension/schemaextension-get/","text":"graph schemaextension get \u00b6 Gets the properties of the specified schema extension definition Usage \u00b6 m365 graph schemaextension get [ options ] Options \u00b6 -i, --id <id> The unique identifier for the schema extension definition -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 To get properties of a schema extension definition, you have to pass the ID of the schema extension. Examples \u00b6 Gets properties of a schema extension definition with ID domain_myExtension m365 graph schemaextension get --id domain_myExtension","title":"schemaextension get"},{"location":"cmd/graph/schemaextension/schemaextension-get/#graph-schemaextension-get","text":"Gets the properties of the specified schema extension definition","title":"graph schemaextension get"},{"location":"cmd/graph/schemaextension/schemaextension-get/#usage","text":"m365 graph schemaextension get [ options ]","title":"Usage"},{"location":"cmd/graph/schemaextension/schemaextension-get/#options","text":"-i, --id <id> The unique identifier for the schema extension definition -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/graph/schemaextension/schemaextension-get/#remarks","text":"To get properties of a schema extension definition, you have to pass the ID of the schema extension.","title":"Remarks"},{"location":"cmd/graph/schemaextension/schemaextension-get/#examples","text":"Gets properties of a schema extension definition with ID domain_myExtension m365 graph schemaextension get --id domain_myExtension","title":"Examples"},{"location":"cmd/graph/schemaextension/schemaextension-list/","text":"graph schemaextension list \u00b6 Get a list of schemaExtension objects created in the current tenant, that can be InDevelopment, Available, or Deprecated. Usage \u00b6 m365 graph schemaextension list [ options ] Options \u00b6 -s, --status [status] The status to filter on. Available values are Available, InDevelopment, Deprecated --owner [owner] The id of the owner to filter on -p, --pageSize [pageSize] Number of objects to return -n, --pageNumber [pageNumber] Page number to return if pageSize is specified (first page is indexed as value of 0) -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 pageNumber is specified as a 0-based index. A value of 2 returns the third page of items. Examples \u00b6 Get a list of schemaExtension objects created in the current tenant, that can be InDevelopment, Available, or Deprecated. m365 graph schemaextension list Get a list of schemaExtension objects created in the current tenant, with owner 617720dc-85fc-45d7-a187-cee75eaf239e m365 graph schemaextension list --owner 617720dc-85fc-45d7-a187-cee75eaf239e Get a list of schemaExtension objects created in the current tenant, with owner 617720dc-85fc-45d7-a187-cee75eaf239e and return the third page of results of 10 m365 graph schemaextension list --owner 617720dc-85fc-45d7-a187-cee75eaf239e --pageNumber 2 --pageSize 10 More information \u00b6 https://developer.microsoft.com/en-us/graph/docs/api-reference/v1.0/api/schemaextension_list","title":"schemaextension list"},{"location":"cmd/graph/schemaextension/schemaextension-list/#graph-schemaextension-list","text":"Get a list of schemaExtension objects created in the current tenant, that can be InDevelopment, Available, or Deprecated.","title":"graph schemaextension list"},{"location":"cmd/graph/schemaextension/schemaextension-list/#usage","text":"m365 graph schemaextension list [ options ]","title":"Usage"},{"location":"cmd/graph/schemaextension/schemaextension-list/#options","text":"-s, --status [status] The status to filter on. Available values are Available, InDevelopment, Deprecated --owner [owner] The id of the owner to filter on -p, --pageSize [pageSize] Number of objects to return -n, --pageNumber [pageNumber] Page number to return if pageSize is specified (first page is indexed as value of 0) -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/graph/schemaextension/schemaextension-list/#remarks","text":"pageNumber is specified as a 0-based index. A value of 2 returns the third page of items.","title":"Remarks"},{"location":"cmd/graph/schemaextension/schemaextension-list/#examples","text":"Get a list of schemaExtension objects created in the current tenant, that can be InDevelopment, Available, or Deprecated. m365 graph schemaextension list Get a list of schemaExtension objects created in the current tenant, with owner 617720dc-85fc-45d7-a187-cee75eaf239e m365 graph schemaextension list --owner 617720dc-85fc-45d7-a187-cee75eaf239e Get a list of schemaExtension objects created in the current tenant, with owner 617720dc-85fc-45d7-a187-cee75eaf239e and return the third page of results of 10 m365 graph schemaextension list --owner 617720dc-85fc-45d7-a187-cee75eaf239e --pageNumber 2 --pageSize 10","title":"Examples"},{"location":"cmd/graph/schemaextension/schemaextension-list/#more-information","text":"https://developer.microsoft.com/en-us/graph/docs/api-reference/v1.0/api/schemaextension_list","title":"More information"},{"location":"cmd/graph/schemaextension/schemaextension-remove/","text":"graph schemaextension remove \u00b6 Removes specified Microsoft Graph schema extension Usage \u00b6 m365 graph schemaextension remove [ options ] Options \u00b6 -i, --id <id> The unique identifier for the schema extension definition --confirm Don't prompt for confirming removing the specified schema extension -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 To remove specified schema extension definition, you have to pass the ID of the schema extension. Examples \u00b6 Removes specified Microsoft Graph schema extension with ID domain_myExtension. Will prompt for confirmation m365 graph schemaextension remove --id domain_myExtension Removes specified Microsoft Graph schema extension with ID domain_myExtension without prompt for confirmation m365 graph schemaextension remove --id domain_myExtension --confirm","title":"schemaextension remove"},{"location":"cmd/graph/schemaextension/schemaextension-remove/#graph-schemaextension-remove","text":"Removes specified Microsoft Graph schema extension","title":"graph schemaextension remove"},{"location":"cmd/graph/schemaextension/schemaextension-remove/#usage","text":"m365 graph schemaextension remove [ options ]","title":"Usage"},{"location":"cmd/graph/schemaextension/schemaextension-remove/#options","text":"-i, --id <id> The unique identifier for the schema extension definition --confirm Don't prompt for confirming removing the specified schema extension -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/graph/schemaextension/schemaextension-remove/#remarks","text":"To remove specified schema extension definition, you have to pass the ID of the schema extension.","title":"Remarks"},{"location":"cmd/graph/schemaextension/schemaextension-remove/#examples","text":"Removes specified Microsoft Graph schema extension with ID domain_myExtension. Will prompt for confirmation m365 graph schemaextension remove --id domain_myExtension Removes specified Microsoft Graph schema extension with ID domain_myExtension without prompt for confirmation m365 graph schemaextension remove --id domain_myExtension --confirm","title":"Examples"},{"location":"cmd/graph/schemaextension/schemaextension-set/","text":"graph schemaextension set \u00b6 Updates a Microsoft Graph schema extension Usage \u00b6 m365 graph schemaextension set [ options ] Options \u00b6 -i, --id <id> The unique identifier for the schema extension definition --owner <owner> The ID of the Azure AD application that is the owner of the schema extension -d, --description [description] Description of the schema extension -s, --status [status] The lifecycle state of the schema extension. Accepted values are Available or Deprecated -t, --targetTypes [targetTypes] Comma-separated list of Microsoft Graph resource types the schema extension targets -p, --properties [properties] The collection of property names and types that make up the schema extension definition formatted as a JSON string -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 The lifecycle state of the schema extension. The initial state upon creation is InDevelopment . Possible states transitions are from InDevelopment to Available and Available to Deprecated . The target types are the set of Microsoft Graph resource types (that support schema extensions) that this schema extension definition can be applied to. This option is specified as a comma-separated list. Escaping JSON in PowerShell When using the --properties option it's possible to enter a JSON string. In PowerShell 5 to 7.2 specific escaping rules apply due to an issue. Remember that you can also use file tokens instead. Examples \u00b6 Update the description of a schema extension m365 graph schemaextension set --id MySchemaExtension --owner 62375ab9-6b52-47ed-826b-58e47e0e304b --description \"My schema extension\" Update the target types and properties of a schema extension m365 graph schemaextension set --id contoso_MySchemaExtension --owner 62375ab9-6b52-47ed-826b-58e47e0e304b --targetTypes \"Group,User\" --properties '[{\"name\":\"myProp1\",\"type\":\"Integer\"},{\"name\":\"myProp2\",\"type\":\"String\"}]' Change the status of a schema extension to 'Available' m365 graph schemaextension set --id contoso_MySchemaExtension --owner 62375ab9-6b52-47ed-826b-58e47e0e304b --status Available","title":"schemaextension set"},{"location":"cmd/graph/schemaextension/schemaextension-set/#graph-schemaextension-set","text":"Updates a Microsoft Graph schema extension","title":"graph schemaextension set"},{"location":"cmd/graph/schemaextension/schemaextension-set/#usage","text":"m365 graph schemaextension set [ options ]","title":"Usage"},{"location":"cmd/graph/schemaextension/schemaextension-set/#options","text":"-i, --id <id> The unique identifier for the schema extension definition --owner <owner> The ID of the Azure AD application that is the owner of the schema extension -d, --description [description] Description of the schema extension -s, --status [status] The lifecycle state of the schema extension. Accepted values are Available or Deprecated -t, --targetTypes [targetTypes] Comma-separated list of Microsoft Graph resource types the schema extension targets -p, --properties [properties] The collection of property names and types that make up the schema extension definition formatted as a JSON string -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/graph/schemaextension/schemaextension-set/#remarks","text":"The lifecycle state of the schema extension. The initial state upon creation is InDevelopment . Possible states transitions are from InDevelopment to Available and Available to Deprecated . The target types are the set of Microsoft Graph resource types (that support schema extensions) that this schema extension definition can be applied to. This option is specified as a comma-separated list. Escaping JSON in PowerShell When using the --properties option it's possible to enter a JSON string. In PowerShell 5 to 7.2 specific escaping rules apply due to an issue. Remember that you can also use file tokens instead.","title":"Remarks"},{"location":"cmd/graph/schemaextension/schemaextension-set/#examples","text":"Update the description of a schema extension m365 graph schemaextension set --id MySchemaExtension --owner 62375ab9-6b52-47ed-826b-58e47e0e304b --description \"My schema extension\" Update the target types and properties of a schema extension m365 graph schemaextension set --id contoso_MySchemaExtension --owner 62375ab9-6b52-47ed-826b-58e47e0e304b --targetTypes \"Group,User\" --properties '[{\"name\":\"myProp1\",\"type\":\"Integer\"},{\"name\":\"myProp2\",\"type\":\"String\"}]' Change the status of a schema extension to 'Available' m365 graph schemaextension set --id contoso_MySchemaExtension --owner 62375ab9-6b52-47ed-826b-58e47e0e304b --status Available","title":"Examples"},{"location":"cmd/graph/subscription/subscription-add/","text":"graph subscription add \u00b6 Creates a Microsoft Graph subscription Usage \u00b6 m365 graph subscription add [ options ] Options \u00b6 -r, --resource <resource> The resource that will be monitored for changes -c, --changeType <changeType> The type of change in the subscribed resource that will raise a notification. The supported values are: created , updated , deleted . Multiple values can be combined using a comma-separated list -u, --notificationUrl <notificationUrl> The URL of the endpoint that will receive the notifications. This URL must use the HTTPS protocol -e, --expirationDateTime [expirationDateTime] The date and time when the webhook subscription expires. The time is in UTC, and can be an amount of time from subscription creation that varies for the resource subscribed to. If not specified, the maximum allowed expiration for the specified resource will be used -s, --clientState [clientState] The value of the clientState property sent by the service in each notification. The maximum length is 128 characters -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 On personal OneDrive, you can subscribe to the root folder or any subfolder in that drive. On OneDrive for Business, you can subscribe to only the root folder. Notifications are sent for the requested types of changes on the subscribed folder, or any file, folder, or other driveItem instances in its hierarchy. You cannot subscribe to drive or driveItem instances that are not folders, such as individual files. In Outlook, delegated permission supports subscribing to items in folders in only the signed-in user's mailbox. That means, for example, you cannot use the delegated permission Calendars.Read to subscribe to events in another user\u2019s mailbox. To subscribe to change notifications of Outlook contacts, events, or messages in shared or delegated folders: Use the corresponding application permission to subscribe to changes of items in a folder or mailbox of any user in the tenant. Do not use the Outlook sharing permissions (Contacts.Read.Shared, Calendars.Read.Shared, Mail.Read.Shared, and their read/write counterparts), as they do not support subscribing to change notifications on items in shared or delegated folders. Examples \u00b6 Create a subscription m365 graph subscription add --resource \"me/mailFolders('Inbox')/messages\" --changeType \"updated\" --notificationUrl \"https://webhook.azurewebsites.net/api/send/myNotifyClient\" --expirationDateTime \"2016-11-20T18:23:45.935Z\" --clientState \"secretClientState\" Create a subscription on multiple change types m365 graph subscription add --resource groups --changeType updated,deleted --notificationUrl \"https://webhook.azurewebsites.net/api/send/myNotifyClient\" --expirationDateTime \"2016-11-20T18:23:45.935Z\" --clientState \"secretClientState\" Create a subscription using the maximum allowed expiration for Group resources m365 graph subscription add --resource groups --changeType \"updated\" --notificationUrl \"https://webhook.azurewebsites.net/api/send/myNotifyClient\"","title":"subscription add"},{"location":"cmd/graph/subscription/subscription-add/#graph-subscription-add","text":"Creates a Microsoft Graph subscription","title":"graph subscription add"},{"location":"cmd/graph/subscription/subscription-add/#usage","text":"m365 graph subscription add [ options ]","title":"Usage"},{"location":"cmd/graph/subscription/subscription-add/#options","text":"-r, --resource <resource> The resource that will be monitored for changes -c, --changeType <changeType> The type of change in the subscribed resource that will raise a notification. The supported values are: created , updated , deleted . Multiple values can be combined using a comma-separated list -u, --notificationUrl <notificationUrl> The URL of the endpoint that will receive the notifications. This URL must use the HTTPS protocol -e, --expirationDateTime [expirationDateTime] The date and time when the webhook subscription expires. The time is in UTC, and can be an amount of time from subscription creation that varies for the resource subscribed to. If not specified, the maximum allowed expiration for the specified resource will be used -s, --clientState [clientState] The value of the clientState property sent by the service in each notification. The maximum length is 128 characters -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/graph/subscription/subscription-add/#remarks","text":"On personal OneDrive, you can subscribe to the root folder or any subfolder in that drive. On OneDrive for Business, you can subscribe to only the root folder. Notifications are sent for the requested types of changes on the subscribed folder, or any file, folder, or other driveItem instances in its hierarchy. You cannot subscribe to drive or driveItem instances that are not folders, such as individual files. In Outlook, delegated permission supports subscribing to items in folders in only the signed-in user's mailbox. That means, for example, you cannot use the delegated permission Calendars.Read to subscribe to events in another user\u2019s mailbox. To subscribe to change notifications of Outlook contacts, events, or messages in shared or delegated folders: Use the corresponding application permission to subscribe to changes of items in a folder or mailbox of any user in the tenant. Do not use the Outlook sharing permissions (Contacts.Read.Shared, Calendars.Read.Shared, Mail.Read.Shared, and their read/write counterparts), as they do not support subscribing to change notifications on items in shared or delegated folders.","title":"Remarks"},{"location":"cmd/graph/subscription/subscription-add/#examples","text":"Create a subscription m365 graph subscription add --resource \"me/mailFolders('Inbox')/messages\" --changeType \"updated\" --notificationUrl \"https://webhook.azurewebsites.net/api/send/myNotifyClient\" --expirationDateTime \"2016-11-20T18:23:45.935Z\" --clientState \"secretClientState\" Create a subscription on multiple change types m365 graph subscription add --resource groups --changeType updated,deleted --notificationUrl \"https://webhook.azurewebsites.net/api/send/myNotifyClient\" --expirationDateTime \"2016-11-20T18:23:45.935Z\" --clientState \"secretClientState\" Create a subscription using the maximum allowed expiration for Group resources m365 graph subscription add --resource groups --changeType \"updated\" --notificationUrl \"https://webhook.azurewebsites.net/api/send/myNotifyClient\"","title":"Examples"},{"location":"cmd/onedrive/onedrive-list/","text":"onedrive list \u00b6 Retrieves a list of OneDrive sites Usage \u00b6 m365 onedrive list [ options ] Options \u00b6 -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Retrieves a list of OneDrive sites from the tenant. m365 onedrive list","title":"list"},{"location":"cmd/onedrive/onedrive-list/#onedrive-list","text":"Retrieves a list of OneDrive sites","title":"onedrive list"},{"location":"cmd/onedrive/onedrive-list/#usage","text":"m365 onedrive list [ options ]","title":"Usage"},{"location":"cmd/onedrive/onedrive-list/#options","text":"-h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/onedrive/onedrive-list/#examples","text":"Retrieves a list of OneDrive sites from the tenant. m365 onedrive list","title":"Examples"},{"location":"cmd/onedrive/report/report-activityfilecounts/","text":"onedrive report activityfilecounts \u00b6 Gets the number of unique, licensed users that performed file interactions against any OneDrive account Usage \u00b6 m365 onedrive report activityfilecounts [ options ] Options \u00b6 -p, --period <period> The length of time over which the report is aggregated. Supported values D7,D30,D90,D180 -f, --outputFile [outputFile] Path to the file where the report should be stored in -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Gets the number of unique, licensed users that performed file interactions against any OneDrive account for the last week m365 onedrive report activityfilecounts --period D7 Gets the number of unique, licensed users that performed file interactions against any OneDrive account for the last week and exports the report data in the specified path in text format m365 onedrive report activityfilecounts --period D7 --output text > \"activityfilecounts.txt\" Gets the number of unique, licensed users that performed file interactions against any OneDrive account for the last week and exports the report data in the specified path in json format m365 onedrive report activityfilecounts --period D7 --output json > \"activityfilecounts.json\"","title":"report activityfilecounts"},{"location":"cmd/onedrive/report/report-activityfilecounts/#onedrive-report-activityfilecounts","text":"Gets the number of unique, licensed users that performed file interactions against any OneDrive account","title":"onedrive report activityfilecounts"},{"location":"cmd/onedrive/report/report-activityfilecounts/#usage","text":"m365 onedrive report activityfilecounts [ options ]","title":"Usage"},{"location":"cmd/onedrive/report/report-activityfilecounts/#options","text":"-p, --period <period> The length of time over which the report is aggregated. Supported values D7,D30,D90,D180 -f, --outputFile [outputFile] Path to the file where the report should be stored in -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/onedrive/report/report-activityfilecounts/#examples","text":"Gets the number of unique, licensed users that performed file interactions against any OneDrive account for the last week m365 onedrive report activityfilecounts --period D7 Gets the number of unique, licensed users that performed file interactions against any OneDrive account for the last week and exports the report data in the specified path in text format m365 onedrive report activityfilecounts --period D7 --output text > \"activityfilecounts.txt\" Gets the number of unique, licensed users that performed file interactions against any OneDrive account for the last week and exports the report data in the specified path in json format m365 onedrive report activityfilecounts --period D7 --output json > \"activityfilecounts.json\"","title":"Examples"},{"location":"cmd/onedrive/report/report-activityusercounts/","text":"onedrive report activityusercounts \u00b6 Gets the trend in the number of active OneDrive users Usage \u00b6 m365 onedrive report activityusercounts [ options ] Options \u00b6 -p, --period <period> The length of time over which the report is aggregated. Supported values D7,D30,D90,D180 -f, --outputFile [outputFile] Path to the file where the report should be stored in -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Gets the trend in the number of active OneDrive users for the last week m365 onedrive report activityusercounts --period D7 Gets the trend in the number of active OneDrive users for the last week and exports the report data in the specified path in text format m365 onedrive report activityusercounts --period D7 --output text > \"activityusercounts.txt\" Gets the trend in the number of active OneDrive users for the last week and exports the report data in the specified path in json format m365 onedrive report activityusercounts --period D7 --output json > \"activityusercounts.json\"","title":"report activityusercounts"},{"location":"cmd/onedrive/report/report-activityusercounts/#onedrive-report-activityusercounts","text":"Gets the trend in the number of active OneDrive users","title":"onedrive report activityusercounts"},{"location":"cmd/onedrive/report/report-activityusercounts/#usage","text":"m365 onedrive report activityusercounts [ options ]","title":"Usage"},{"location":"cmd/onedrive/report/report-activityusercounts/#options","text":"-p, --period <period> The length of time over which the report is aggregated. Supported values D7,D30,D90,D180 -f, --outputFile [outputFile] Path to the file where the report should be stored in -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/onedrive/report/report-activityusercounts/#examples","text":"Gets the trend in the number of active OneDrive users for the last week m365 onedrive report activityusercounts --period D7 Gets the trend in the number of active OneDrive users for the last week and exports the report data in the specified path in text format m365 onedrive report activityusercounts --period D7 --output text > \"activityusercounts.txt\" Gets the trend in the number of active OneDrive users for the last week and exports the report data in the specified path in json format m365 onedrive report activityusercounts --period D7 --output json > \"activityusercounts.json\"","title":"Examples"},{"location":"cmd/onedrive/report/report-activityuserdetail/","text":"onedrive report activityuserdetail \u00b6 Gets details about OneDrive activity by user Usage \u00b6 m365 onedrive report activityuserdetail [ options ] Options \u00b6 -p, --period [period] The length of time over which the report is aggregated. Supported values D7,D30,D90,D180 -d, --date [date] The date for which you would like to view the users who performed any activity. Supported date format is YYYY-MM-DD. Specify the date or period, but not both` -f, --outputFile [outputFile] Path to the file where the report should be stored in -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Gets details about OneDrive activity by user for the last week m365 onedrive report activityuserdetail --period D7 Gets details about OneDrive activity by user for May 1, 2019 m365 onedrive report activityuserdetail --date 2019 -05-01 Gets details about OneDrive activity by user for the last week and exports the report data in the specified path in text format m365 onedrive report activityuserdetail --period D7 --output text > \"onedriveactivityuserdetail.txt\" Gets details about OneDrive activity by user for the last week and exports the report data in the specified path in json format m365 onedrive report activityuserdetail --period D7 --output json > \"onedriveactivityuserdetail.json\"","title":"report activityuserdetail"},{"location":"cmd/onedrive/report/report-activityuserdetail/#onedrive-report-activityuserdetail","text":"Gets details about OneDrive activity by user","title":"onedrive report activityuserdetail"},{"location":"cmd/onedrive/report/report-activityuserdetail/#usage","text":"m365 onedrive report activityuserdetail [ options ]","title":"Usage"},{"location":"cmd/onedrive/report/report-activityuserdetail/#options","text":"-p, --period [period] The length of time over which the report is aggregated. Supported values D7,D30,D90,D180 -d, --date [date] The date for which you would like to view the users who performed any activity. Supported date format is YYYY-MM-DD. Specify the date or period, but not both` -f, --outputFile [outputFile] Path to the file where the report should be stored in -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/onedrive/report/report-activityuserdetail/#examples","text":"Gets details about OneDrive activity by user for the last week m365 onedrive report activityuserdetail --period D7 Gets details about OneDrive activity by user for May 1, 2019 m365 onedrive report activityuserdetail --date 2019 -05-01 Gets details about OneDrive activity by user for the last week and exports the report data in the specified path in text format m365 onedrive report activityuserdetail --period D7 --output text > \"onedriveactivityuserdetail.txt\" Gets details about OneDrive activity by user for the last week and exports the report data in the specified path in json format m365 onedrive report activityuserdetail --period D7 --output json > \"onedriveactivityuserdetail.json\"","title":"Examples"},{"location":"cmd/onedrive/report/report-usageaccountcounts/","text":"onedrive report usageaccountcounts \u00b6 Gets the trend in the number of active OneDrive for Business sites Usage \u00b6 m365 onedrive report usageaccountcounts [ options ] Options \u00b6 -p, --period <period> The length of time over which the report is aggregated. Supported values D7,D30,D90,D180 -f, --outputFile [outputFile] Path to the file where the report should be stored in -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 Any site on which users viewed, modified, uploaded, downloaded, shared, or synced files is considered an active site Examples \u00b6 Gets the trend in the number of active OneDrive for Business sites for the last week m365 onedrive report usageaccountcounts --period D7 Gets the trend in the number of active OneDrive for Business sites for the last week and exports the report data in the specified path in text format m365 onedrive report usageaccountcounts --period D7 --output text > \"usageaccountcounts.txt\" Gets the trend in the number of active OneDrive for Business sites for the last week and exports the report data in the specified path in json format m365 onedrive report usageaccountcounts --period D7 --output json > \"usageaccountcounts.json\"","title":"report usageaccountcounts"},{"location":"cmd/onedrive/report/report-usageaccountcounts/#onedrive-report-usageaccountcounts","text":"Gets the trend in the number of active OneDrive for Business sites","title":"onedrive report usageaccountcounts"},{"location":"cmd/onedrive/report/report-usageaccountcounts/#usage","text":"m365 onedrive report usageaccountcounts [ options ]","title":"Usage"},{"location":"cmd/onedrive/report/report-usageaccountcounts/#options","text":"-p, --period <period> The length of time over which the report is aggregated. Supported values D7,D30,D90,D180 -f, --outputFile [outputFile] Path to the file where the report should be stored in -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/onedrive/report/report-usageaccountcounts/#remarks","text":"Any site on which users viewed, modified, uploaded, downloaded, shared, or synced files is considered an active site","title":"Remarks"},{"location":"cmd/onedrive/report/report-usageaccountcounts/#examples","text":"Gets the trend in the number of active OneDrive for Business sites for the last week m365 onedrive report usageaccountcounts --period D7 Gets the trend in the number of active OneDrive for Business sites for the last week and exports the report data in the specified path in text format m365 onedrive report usageaccountcounts --period D7 --output text > \"usageaccountcounts.txt\" Gets the trend in the number of active OneDrive for Business sites for the last week and exports the report data in the specified path in json format m365 onedrive report usageaccountcounts --period D7 --output json > \"usageaccountcounts.json\"","title":"Examples"},{"location":"cmd/onedrive/report/report-usageaccountdetail/","text":"onedrive report usageaccountdetail \u00b6 Gets details about OneDrive usage by account Usage \u00b6 m365 onedrive report usageaccountdetail [ options ] Options \u00b6 -p, --period [period] The length of time over which the report is aggregated. Supported values D7,D30,D90,D180 -d, --date [date] The date for which you would like to view the users who performed any activity. Supported date format is YYYY-MM-DD. Specify the date or period, but not both` -f, --outputFile [outputFile] Path to the file where the report should be stored in -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Gets details about OneDrive usage by account for the last week m365 onedrive report usageaccountdetail --period D7 Gets details about OneDrive usage by account for May 1, 2019 m365 onedrive report usageaccountdetail --date 2019 -05-01 Gets details about OneDrive usage by account for the last week and exports the report data in the specified path in text format m365 onedrive report usageaccountdetail --period D7 --output text > \"onedriveusageaccountdetail.txt\" Gets details about OneDrive usage by account for the last week and exports the report data in the specified path in json format m365 onedrive report usageaccountdetail --period D7 --output json > \"onedriveusageaccountdetail.json\"","title":"report usageaccountdetail"},{"location":"cmd/onedrive/report/report-usageaccountdetail/#onedrive-report-usageaccountdetail","text":"Gets details about OneDrive usage by account","title":"onedrive report usageaccountdetail"},{"location":"cmd/onedrive/report/report-usageaccountdetail/#usage","text":"m365 onedrive report usageaccountdetail [ options ]","title":"Usage"},{"location":"cmd/onedrive/report/report-usageaccountdetail/#options","text":"-p, --period [period] The length of time over which the report is aggregated. Supported values D7,D30,D90,D180 -d, --date [date] The date for which you would like to view the users who performed any activity. Supported date format is YYYY-MM-DD. Specify the date or period, but not both` -f, --outputFile [outputFile] Path to the file where the report should be stored in -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/onedrive/report/report-usageaccountdetail/#examples","text":"Gets details about OneDrive usage by account for the last week m365 onedrive report usageaccountdetail --period D7 Gets details about OneDrive usage by account for May 1, 2019 m365 onedrive report usageaccountdetail --date 2019 -05-01 Gets details about OneDrive usage by account for the last week and exports the report data in the specified path in text format m365 onedrive report usageaccountdetail --period D7 --output text > \"onedriveusageaccountdetail.txt\" Gets details about OneDrive usage by account for the last week and exports the report data in the specified path in json format m365 onedrive report usageaccountdetail --period D7 --output json > \"onedriveusageaccountdetail.json\"","title":"Examples"},{"location":"cmd/onedrive/report/report-usagefilecounts/","text":"onedrive report usagefilecounts \u00b6 Gets the total number of files across all sites and how many are active files Usage \u00b6 m365 onedrive report usagefilecounts [ options ] Options \u00b6 -p, --period <period> The length of time over which the report is aggregated. Supported values D7,D30,D90,D180 -f, --outputFile [outputFile] Path to the file where the report should be stored in -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 A file is considered active if it has been saved, synced, modified, or shared within the specified time period. Examples \u00b6 Gets the total number of files across all sites and how many are active files for the last week m365 onedrive report usagefilecounts --period D7 Gets the total number of files across all sites and how many are active files for the last week and exports the report data in the specified path in text format m365 onedrive report usagefilecounts --period D7 --output text > \"usagefilecounts.txt\" Gets the total number of files across all sites and how many are active files for the last week and exports the report data in the specified path in json format m365 onedrive report usagefilecounts --period D7 --output json > \"usagefilecounts.json\"","title":"report usagefilecounts"},{"location":"cmd/onedrive/report/report-usagefilecounts/#onedrive-report-usagefilecounts","text":"Gets the total number of files across all sites and how many are active files","title":"onedrive report usagefilecounts"},{"location":"cmd/onedrive/report/report-usagefilecounts/#usage","text":"m365 onedrive report usagefilecounts [ options ]","title":"Usage"},{"location":"cmd/onedrive/report/report-usagefilecounts/#options","text":"-p, --period <period> The length of time over which the report is aggregated. Supported values D7,D30,D90,D180 -f, --outputFile [outputFile] Path to the file where the report should be stored in -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/onedrive/report/report-usagefilecounts/#remarks","text":"A file is considered active if it has been saved, synced, modified, or shared within the specified time period.","title":"Remarks"},{"location":"cmd/onedrive/report/report-usagefilecounts/#examples","text":"Gets the total number of files across all sites and how many are active files for the last week m365 onedrive report usagefilecounts --period D7 Gets the total number of files across all sites and how many are active files for the last week and exports the report data in the specified path in text format m365 onedrive report usagefilecounts --period D7 --output text > \"usagefilecounts.txt\" Gets the total number of files across all sites and how many are active files for the last week and exports the report data in the specified path in json format m365 onedrive report usagefilecounts --period D7 --output json > \"usagefilecounts.json\"","title":"Examples"},{"location":"cmd/onedrive/report/report-usagestorage/","text":"onedrive report usagestorage \u00b6 Gets the trend on the amount of storage you are using in OneDrive for Business Usage \u00b6 m365 onedrive report usagestorage [ options ] Options \u00b6 -p, --period <period> The length of time over which the report is aggregated. Supported values D7,D30,D90,D180 -f, --outputFile [outputFile] Path to the file where the report should be stored in -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Gets the trend on the amount of storage you are using in OneDrive for Business for the last week m365 onedrive report usagestorage --period D7 Gets the trend on the amount of storage you are using in OneDrive for Business for the last week and exports the report data in the specified path in text format m365 onedrive report usagestorage --period D7 --output text > \"usagestorage.txt\" Gets the trend on the amount of storage you are using in OneDrive for Business for the last week and exports the report data in the specified path in json format m365 onedrive report usagestorage --period D7 --output json > \"usagestorage.json\"","title":"report usagestorage"},{"location":"cmd/onedrive/report/report-usagestorage/#onedrive-report-usagestorage","text":"Gets the trend on the amount of storage you are using in OneDrive for Business","title":"onedrive report usagestorage"},{"location":"cmd/onedrive/report/report-usagestorage/#usage","text":"m365 onedrive report usagestorage [ options ]","title":"Usage"},{"location":"cmd/onedrive/report/report-usagestorage/#options","text":"-p, --period <period> The length of time over which the report is aggregated. Supported values D7,D30,D90,D180 -f, --outputFile [outputFile] Path to the file where the report should be stored in -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/onedrive/report/report-usagestorage/#examples","text":"Gets the trend on the amount of storage you are using in OneDrive for Business for the last week m365 onedrive report usagestorage --period D7 Gets the trend on the amount of storage you are using in OneDrive for Business for the last week and exports the report data in the specified path in text format m365 onedrive report usagestorage --period D7 --output text > \"usagestorage.txt\" Gets the trend on the amount of storage you are using in OneDrive for Business for the last week and exports the report data in the specified path in json format m365 onedrive report usagestorage --period D7 --output json > \"usagestorage.json\"","title":"Examples"},{"location":"cmd/onenote/notebook/notebook-list/","text":"onenote notebook list \u00b6 Retrieve a list of notebooks. Usage \u00b6 m365 onenote notebook list [ options ] Options \u00b6 --userId [userId] Id of the user. Use either userId or userName, but not both. --userName [userName] Name of the user. Use either userId or userName, but not both. --groupId [groupId] Id of the SharePoint group. Use either groupName or groupId, but not both --groupName [groupName] Name of the SharePoint group. Use either groupName or groupId, but not both. -u, --webUrl [webUrl] URL of the SharePoint site. -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 List Microsoft OneNote notebooks for the currently logged in user m365 onenote notebook list List Microsoft OneNote notebooks in group 233e43d0-dc6a-482e-9b4e-0de7a7bce9b4 m365 onenote notebook list --groupId 233e43d0-dc6a-482e-9b4e-0de7a7bce9b4 List Microsoft OneNote notebooks in group My Group m365 onenote notebook list --groupName \"MyGroup\" List Microsoft OneNote notebooks for user user1@contoso.onmicrosoft.com m365 onenote notebook list --userName user1@contoso.onmicrosoft.com List Microsoft OneNote notebooks for user 2609af39-7775-4f94-a3dc-0dd67657e900 m365 onenote notebook list --userId 2609af39-7775-4f94-a3dc-0dd67657e900 List Microsoft OneNote notebooks for site https://contoso.sharepoint.com/sites/testsite m365 onenote notebook list --webUrl https://contoso.sharepoint.com/sites/testsite More information \u00b6 List notebooks (MS Graph docs): https://docs.microsoft.com/en-us/graph/api/onenote-list-notebooks?view=graph-rest-1.0&tabs=http","title":"notebook list"},{"location":"cmd/onenote/notebook/notebook-list/#onenote-notebook-list","text":"Retrieve a list of notebooks.","title":"onenote notebook list"},{"location":"cmd/onenote/notebook/notebook-list/#usage","text":"m365 onenote notebook list [ options ]","title":"Usage"},{"location":"cmd/onenote/notebook/notebook-list/#options","text":"--userId [userId] Id of the user. Use either userId or userName, but not both. --userName [userName] Name of the user. Use either userId or userName, but not both. --groupId [groupId] Id of the SharePoint group. Use either groupName or groupId, but not both --groupName [groupName] Name of the SharePoint group. Use either groupName or groupId, but not both. -u, --webUrl [webUrl] URL of the SharePoint site. -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/onenote/notebook/notebook-list/#examples","text":"List Microsoft OneNote notebooks for the currently logged in user m365 onenote notebook list List Microsoft OneNote notebooks in group 233e43d0-dc6a-482e-9b4e-0de7a7bce9b4 m365 onenote notebook list --groupId 233e43d0-dc6a-482e-9b4e-0de7a7bce9b4 List Microsoft OneNote notebooks in group My Group m365 onenote notebook list --groupName \"MyGroup\" List Microsoft OneNote notebooks for user user1@contoso.onmicrosoft.com m365 onenote notebook list --userName user1@contoso.onmicrosoft.com List Microsoft OneNote notebooks for user 2609af39-7775-4f94-a3dc-0dd67657e900 m365 onenote notebook list --userId 2609af39-7775-4f94-a3dc-0dd67657e900 List Microsoft OneNote notebooks for site https://contoso.sharepoint.com/sites/testsite m365 onenote notebook list --webUrl https://contoso.sharepoint.com/sites/testsite","title":"Examples"},{"location":"cmd/onenote/notebook/notebook-list/#more-information","text":"List notebooks (MS Graph docs): https://docs.microsoft.com/en-us/graph/api/onenote-list-notebooks?view=graph-rest-1.0&tabs=http","title":"More information"},{"location":"cmd/outlook/mail/mail-send/","text":"outlook mail send \u00b6 Sends an email Usage \u00b6 m365 outlook mail send [ options ] Options \u00b6 -s, --subject <subject> Email subject -t, --to <to> Comma-separated list of emails to send the message to. --cc [cc] Comma-separated list of CC recipients for the message. --bcc [bcc] Comma-separated list of BCC recipients for the message. --sender [sender] Optional upn or user id to specify what account to send the message from. Also see the remarks section. -m, --mailbox [mailbox] Specify this option to send the email on behalf of another mailbox, for example a shared mailbox, group or distribution list. The sender needs to be a delegate on the specified mailbox. Also see the remarks section. --bodyContents <bodyContents> String containing the body of the email to send. --bodyContentType [bodyContentType] Type of the body content. Available options: Text,HTML . Default Text . --importance [importance] The importance of the message. Available options: low , normal or high . Default is normal . --attachment [attachment] Path to the file that will be added as attachment to the email. This option can be used multiple times to attach multiple attachments. --saveToSentItems [saveToSentItems] Save email in the sent items folder. Default true . -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 Attachments \u00b6 When using the attachment option, note that the total size of all attachment files cannot exceed 3 MB. If you are connected using app only authentication \u00b6 Always specify a user id or upn in the --sender option. The email will be sent as if it came from the specified user, and can optionally be saved in the sent folder of that user account. You can optionally also specify the --mailbox option to send mail on behalf of a shared mailbox, group or distribution list. The account used in the --sender option, needs to have 'Send on behalf of' permissions on the mailbox in question. Important You need Mail.Send application permissions on the Microsoft Graph to be able to send mails using an application identity. If you are connected with a regular user account \u00b6 Specify the --mailbox option if you want to send an email on behalf of another mailbox. This can be a shared mailbox, group or distribution list. It will be visible in the email that the email was sent by you. You need to be assigned Send on behalf of permissions on the mailbox in question. You can specify the --sender option if you want to send an email as if you were the other user. The sent email can optionally be saved in the sent folder of that user account. You'll need Read and manage (Full Access) permissions on the mailbox of the other user. You can combine the --sender and --mailbox options to let the other user send a mail on behalf of the specified mailbox. Important You need at least Mail.Send delegated permissions on the Microsoft Graph to be able to send emails. When specifying another user as sender, you'll need Mail.Send.Shared permissions. Examples \u00b6 Send a text email to the specified email address m365 outlook mail send --to chris@contoso.com --subject \"DG2000 Data Sheets\" --bodyContents \"The latest data sheets are in the team site\" Send an HTML email to the specified email addresses m365 outlook mail send --to \"chris@contoso.com,brian@contoso.com\" --subject \"DG2000 Data Sheets\" --bodyContents \"The latest data sheets are in the <a href='https://contoso.sharepoint.com/sites/marketing'>team site</a>\" --bodyContentType HTML Send an HTML email to the specified email address loading email contents from a file on disk m365 outlook mail send --to chris@contoso.com --subject \"DG2000 Data Sheets\" --bodyContents @email.html --bodyContentType HTML Send a text email to the specified email address. Don't store the email in sent items m365 outlook mail send --to chris@contoso.com --subject \"DG2000 Data Sheets\" --bodyContents \"The latest data sheets are in the team site\" --saveToSentItems false Send an email on behalf of a shared mailbox using the signed in user m365 outlook mail send --to chris@contoso.com --subject \"DG2000 Data Sheets\" --bodyContents \"The latest data sheets are in the team site\" --mailbox sales@contoso.com Send an email as another user m365 outlook mail send --to chris@contoso.com --subject \"DG2000 Data Sheets\" --bodyContents \"The latest data sheets are in the team site\" --sender svc_project@contoso.com Send an email as another user, on behalf of a shared mailbox m365 outlook mail send --to chris@contoso.com --subject \"DG2000 Data Sheets\" --bodyContents \"The latest data sheets are in the team site\" --sender svc_project@contoso.com --mailbox sales@contoso.com Send an email with cc and bcc recipients marked as important m365 outlook mail send --to chris@contoso.com --cc claire@contoso.com --bcc randy@contoso.com --subject \"DG2000 Data Sheets\" --bodyContents \"The latest data sheets are in the team site\" --importance high Send an email with multiple attachments m365 outlook mail send --to chris@contoso.com --subject \"Monthly reports\" --bodyContents \"Here are the reports of this month.\" --attachment \"C:/Reports/File1.jpg\" --attachment \"C:/Reports/File2.docx\" --attachment \"C:/Reports/File3.xlsx\"","title":"mail send"},{"location":"cmd/outlook/mail/mail-send/#outlook-mail-send","text":"Sends an email","title":"outlook mail send"},{"location":"cmd/outlook/mail/mail-send/#usage","text":"m365 outlook mail send [ options ]","title":"Usage"},{"location":"cmd/outlook/mail/mail-send/#options","text":"-s, --subject <subject> Email subject -t, --to <to> Comma-separated list of emails to send the message to. --cc [cc] Comma-separated list of CC recipients for the message. --bcc [bcc] Comma-separated list of BCC recipients for the message. --sender [sender] Optional upn or user id to specify what account to send the message from. Also see the remarks section. -m, --mailbox [mailbox] Specify this option to send the email on behalf of another mailbox, for example a shared mailbox, group or distribution list. The sender needs to be a delegate on the specified mailbox. Also see the remarks section. --bodyContents <bodyContents> String containing the body of the email to send. --bodyContentType [bodyContentType] Type of the body content. Available options: Text,HTML . Default Text . --importance [importance] The importance of the message. Available options: low , normal or high . Default is normal . --attachment [attachment] Path to the file that will be added as attachment to the email. This option can be used multiple times to attach multiple attachments. --saveToSentItems [saveToSentItems] Save email in the sent items folder. Default true . -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/outlook/mail/mail-send/#remarks","text":"","title":"Remarks"},{"location":"cmd/outlook/mail/mail-send/#attachments","text":"When using the attachment option, note that the total size of all attachment files cannot exceed 3 MB.","title":"Attachments"},{"location":"cmd/outlook/mail/mail-send/#if-you-are-connected-using-app-only-authentication","text":"Always specify a user id or upn in the --sender option. The email will be sent as if it came from the specified user, and can optionally be saved in the sent folder of that user account. You can optionally also specify the --mailbox option to send mail on behalf of a shared mailbox, group or distribution list. The account used in the --sender option, needs to have 'Send on behalf of' permissions on the mailbox in question. Important You need Mail.Send application permissions on the Microsoft Graph to be able to send mails using an application identity.","title":"If you are connected using app only authentication"},{"location":"cmd/outlook/mail/mail-send/#if-you-are-connected-with-a-regular-user-account","text":"Specify the --mailbox option if you want to send an email on behalf of another mailbox. This can be a shared mailbox, group or distribution list. It will be visible in the email that the email was sent by you. You need to be assigned Send on behalf of permissions on the mailbox in question. You can specify the --sender option if you want to send an email as if you were the other user. The sent email can optionally be saved in the sent folder of that user account. You'll need Read and manage (Full Access) permissions on the mailbox of the other user. You can combine the --sender and --mailbox options to let the other user send a mail on behalf of the specified mailbox. Important You need at least Mail.Send delegated permissions on the Microsoft Graph to be able to send emails. When specifying another user as sender, you'll need Mail.Send.Shared permissions.","title":"If you are connected with a regular user account"},{"location":"cmd/outlook/mail/mail-send/#examples","text":"Send a text email to the specified email address m365 outlook mail send --to chris@contoso.com --subject \"DG2000 Data Sheets\" --bodyContents \"The latest data sheets are in the team site\" Send an HTML email to the specified email addresses m365 outlook mail send --to \"chris@contoso.com,brian@contoso.com\" --subject \"DG2000 Data Sheets\" --bodyContents \"The latest data sheets are in the <a href='https://contoso.sharepoint.com/sites/marketing'>team site</a>\" --bodyContentType HTML Send an HTML email to the specified email address loading email contents from a file on disk m365 outlook mail send --to chris@contoso.com --subject \"DG2000 Data Sheets\" --bodyContents @email.html --bodyContentType HTML Send a text email to the specified email address. Don't store the email in sent items m365 outlook mail send --to chris@contoso.com --subject \"DG2000 Data Sheets\" --bodyContents \"The latest data sheets are in the team site\" --saveToSentItems false Send an email on behalf of a shared mailbox using the signed in user m365 outlook mail send --to chris@contoso.com --subject \"DG2000 Data Sheets\" --bodyContents \"The latest data sheets are in the team site\" --mailbox sales@contoso.com Send an email as another user m365 outlook mail send --to chris@contoso.com --subject \"DG2000 Data Sheets\" --bodyContents \"The latest data sheets are in the team site\" --sender svc_project@contoso.com Send an email as another user, on behalf of a shared mailbox m365 outlook mail send --to chris@contoso.com --subject \"DG2000 Data Sheets\" --bodyContents \"The latest data sheets are in the team site\" --sender svc_project@contoso.com --mailbox sales@contoso.com Send an email with cc and bcc recipients marked as important m365 outlook mail send --to chris@contoso.com --cc claire@contoso.com --bcc randy@contoso.com --subject \"DG2000 Data Sheets\" --bodyContents \"The latest data sheets are in the team site\" --importance high Send an email with multiple attachments m365 outlook mail send --to chris@contoso.com --subject \"Monthly reports\" --bodyContents \"Here are the reports of this month.\" --attachment \"C:/Reports/File1.jpg\" --attachment \"C:/Reports/File2.docx\" --attachment \"C:/Reports/File3.xlsx\"","title":"Examples"},{"location":"cmd/outlook/message/message-get/","text":"outlook message get \u00b6 Retrieves specified message Usage \u00b6 m365 outlook message get [ options ] Options \u00b6 -i, --id <id> ID of the message --userId [userId] ID of the user from which to retrieve the message. Specify either userId or userPrincipalName , but not both. This option is required when using application permissions. --userPrincipalName [userPrincipalName] UPN of the user from which to retrieve the message Specify either userId or userPrincipalName , but not both. This option is required when using application permissions. -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Get a specific message using delegated permissions m365 outlook message get --id AAMkAGVmMDEzMTM4LTZmYWUtNDdkNC1hMDZiLTU1OGY5OTZhYmY4OABGAAAAAAAiQ8W967B7TKBjgx9rVEURBwAiIsqMbYjsT5e-T7KzowPTAAAAAAEMAAAiIsqMbYjsT5e-T7KzowPTAALvuv07AAA = Get a specific message using delegated permissions from a shared mailbox m365 outlook message get --id AAMkAGVmMDEzMTM4LTZmYWUtNDdkNC1hMDZiLTU1OGY5OTZhYmY4OABGAAAAAAAiQ8W967B7TKBjgx9rVEURBwAiIsqMbYjsT5e-T7KzowPTAAAAAAEMAAAiIsqMbYjsT5e-T7KzowPTAALvuv07AAA = --userPrincipalName sharedmailbox@tenant.com Get a specific message from a specific user retrieved by user ID using application permissions m365 outlook message get --id AAMkAGVmMDEzMTM4LTZmYWUtNDdkNC1hMDZiLTU1OGY5OTZhYmY4OABGAAAAAAAiQ8W967B7TKBjgx9rVEURBwAiIsqMbYjsT5e-T7KzowPTAAAAAAEMAAAiIsqMbYjsT5e-T7KzowPTAALvuv07AAA = --userId 6799fd1a-723b-4eb7-8e52-41ae530274ca Get a specific message from a specific user retrieved by user principal name using application permissions m365 outlook message get --id AAMkAGVmMDEzMTM4LTZmYWUtNDdkNC1hMDZiLTU1OGY5OTZhYmY4OABGAAAAAAAiQ8W967B7TKBjgx9rVEURBwAiIsqMbYjsT5e-T7KzowPTAAAAAAEMAAAiIsqMbYjsT5e-T7KzowPTAALvuv07AAA = --userPrincipalName user@tenant.com","title":"message get"},{"location":"cmd/outlook/message/message-get/#outlook-message-get","text":"Retrieves specified message","title":"outlook message get"},{"location":"cmd/outlook/message/message-get/#usage","text":"m365 outlook message get [ options ]","title":"Usage"},{"location":"cmd/outlook/message/message-get/#options","text":"-i, --id <id> ID of the message --userId [userId] ID of the user from which to retrieve the message. Specify either userId or userPrincipalName , but not both. This option is required when using application permissions. --userPrincipalName [userPrincipalName] UPN of the user from which to retrieve the message Specify either userId or userPrincipalName , but not both. This option is required when using application permissions. -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/outlook/message/message-get/#examples","text":"Get a specific message using delegated permissions m365 outlook message get --id AAMkAGVmMDEzMTM4LTZmYWUtNDdkNC1hMDZiLTU1OGY5OTZhYmY4OABGAAAAAAAiQ8W967B7TKBjgx9rVEURBwAiIsqMbYjsT5e-T7KzowPTAAAAAAEMAAAiIsqMbYjsT5e-T7KzowPTAALvuv07AAA = Get a specific message using delegated permissions from a shared mailbox m365 outlook message get --id AAMkAGVmMDEzMTM4LTZmYWUtNDdkNC1hMDZiLTU1OGY5OTZhYmY4OABGAAAAAAAiQ8W967B7TKBjgx9rVEURBwAiIsqMbYjsT5e-T7KzowPTAAAAAAEMAAAiIsqMbYjsT5e-T7KzowPTAALvuv07AAA = --userPrincipalName sharedmailbox@tenant.com Get a specific message from a specific user retrieved by user ID using application permissions m365 outlook message get --id AAMkAGVmMDEzMTM4LTZmYWUtNDdkNC1hMDZiLTU1OGY5OTZhYmY4OABGAAAAAAAiQ8W967B7TKBjgx9rVEURBwAiIsqMbYjsT5e-T7KzowPTAAAAAAEMAAAiIsqMbYjsT5e-T7KzowPTAALvuv07AAA = --userId 6799fd1a-723b-4eb7-8e52-41ae530274ca Get a specific message from a specific user retrieved by user principal name using application permissions m365 outlook message get --id AAMkAGVmMDEzMTM4LTZmYWUtNDdkNC1hMDZiLTU1OGY5OTZhYmY4OABGAAAAAAAiQ8W967B7TKBjgx9rVEURBwAiIsqMbYjsT5e-T7KzowPTAAAAAAEMAAAiIsqMbYjsT5e-T7KzowPTAALvuv07AAA = --userPrincipalName user@tenant.com","title":"Examples"},{"location":"cmd/outlook/message/message-list/","text":"outlook message list \u00b6 Gets all mail messages from the specified folder Usage \u00b6 m365 outlook message list [ options ] Options \u00b6 --folderName [folderName] Name of the folder from which to list messages --folderId [folderId] ID of the folder from which to list messages -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 List all messages in the folder with the specified name m365 outlook message list --folderName Archive List all messages in the folder with the specified ID m365 outlook message list --folderId AAMkAGVmMDEzMTM4LTZmYWUtNDdkNC1hMDZiLTU1OGY5OTZhYmY4OAAuAAAAAAAiQ8W967B7TKBjgx9rVEURAQAiIsqMbYjsT5e-T7KzowPTAAAAAAFNAAA = List all messages in the folder with the specified well-known name m365 outlook message list --folderName inbox More information \u00b6 Well-known folder names: https://docs.microsoft.com/en-us/graph/api/resources/mailfolder?view=graph-rest-1.0","title":"message list"},{"location":"cmd/outlook/message/message-list/#outlook-message-list","text":"Gets all mail messages from the specified folder","title":"outlook message list"},{"location":"cmd/outlook/message/message-list/#usage","text":"m365 outlook message list [ options ]","title":"Usage"},{"location":"cmd/outlook/message/message-list/#options","text":"--folderName [folderName] Name of the folder from which to list messages --folderId [folderId] ID of the folder from which to list messages -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/outlook/message/message-list/#examples","text":"List all messages in the folder with the specified name m365 outlook message list --folderName Archive List all messages in the folder with the specified ID m365 outlook message list --folderId AAMkAGVmMDEzMTM4LTZmYWUtNDdkNC1hMDZiLTU1OGY5OTZhYmY4OAAuAAAAAAAiQ8W967B7TKBjgx9rVEURAQAiIsqMbYjsT5e-T7KzowPTAAAAAAFNAAA = List all messages in the folder with the specified well-known name m365 outlook message list --folderName inbox","title":"Examples"},{"location":"cmd/outlook/message/message-list/#more-information","text":"Well-known folder names: https://docs.microsoft.com/en-us/graph/api/resources/mailfolder?view=graph-rest-1.0","title":"More information"},{"location":"cmd/outlook/message/message-move/","text":"outlook message move \u00b6 Moves message to the specified folder Usage \u00b6 m365 outlook message move [ options ] Options \u00b6 --id <id> ID of the message to move --sourceFolderName [sourceFolderName] Name of the folder to move the message from --sourceFolderId [sourceFolderId] ID of the folder to move the message from --targetFolderName [targetFolderName] Name of the folder to move the message to --targetFolderId [targetFolderId] ID of the folder to move the message to -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Move the specified message to another folder specified by ID m365 outlook message move --id AAMkAGVmMDEzMTM4LTZmYWUtNDdkNC1hMDZiLTU1OGY5OTZhYmY4OABGAAAAAAAiQ8W967B7TKBjgx9rVEURBwAiIsqMbYjsT5e-T7KzowPTAAAAAAEMAAAiIsqMbYjsT5e-T7KzowPTAALdyzhHAAA = --sourceFolderId AAMkAGVmMDEzMTM4LTZmYWUtNDdkNC1hMDZiLTU1OGY5OTZhYmY4OAAuAAAAAAAiQ8W967B7TKBjgx9rVEURAQAiIsqMbYjsT5e-T7KzowPTAAAAAAEKAAA = --targetFolderId AAMkAGVmMDEzMTM4LTZmYWUtNDdkNC1hMDZiLTU1OGY5OTZhYmY4OAAuAAAAAAAiQ8W967B7TKBjgx9rVEURAQAiIsqMbYjsT5e-T7KzowPTAAAeUO-fAAA = Move the specified message to another folder specified by name m365 outlook message move --id AAMkAGVmMDEzMTM4LTZmYWUtNDdkNC1hMDZiLTU1OGY5OTZhYmY4OABGAAAAAAAiQ8W967B7TKBjgx9rVEURBwAiIsqMbYjsT5e-T7KzowPTAAAAAAEMAAAiIsqMbYjsT5e-T7KzowPTAALdyzhHAAA = --sourceFolderName Inbox --targetFolderName \"Project X\" Move the specified message to another folder specified by its well-known name m365 outlook message move --id AAMkAGVmMDEzMTM4LTZmYWUtNDdkNC1hMDZiLTU1OGY5OTZhYmY4OABGAAAAAAAiQ8W967B7TKBjgx9rVEURBwAiIsqMbYjsT5e-T7KzowPTAAAAAAEMAAAiIsqMbYjsT5e-T7KzowPTAALdyzhHAAA = --sourceFolderName inbox --targetFolderName archive More information \u00b6 Well-known folder names: https://docs.microsoft.com/en-us/graph/api/resources/mailfolder?view=graph-rest-1.0","title":"message move"},{"location":"cmd/outlook/message/message-move/#outlook-message-move","text":"Moves message to the specified folder","title":"outlook message move"},{"location":"cmd/outlook/message/message-move/#usage","text":"m365 outlook message move [ options ]","title":"Usage"},{"location":"cmd/outlook/message/message-move/#options","text":"--id <id> ID of the message to move --sourceFolderName [sourceFolderName] Name of the folder to move the message from --sourceFolderId [sourceFolderId] ID of the folder to move the message from --targetFolderName [targetFolderName] Name of the folder to move the message to --targetFolderId [targetFolderId] ID of the folder to move the message to -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/outlook/message/message-move/#examples","text":"Move the specified message to another folder specified by ID m365 outlook message move --id AAMkAGVmMDEzMTM4LTZmYWUtNDdkNC1hMDZiLTU1OGY5OTZhYmY4OABGAAAAAAAiQ8W967B7TKBjgx9rVEURBwAiIsqMbYjsT5e-T7KzowPTAAAAAAEMAAAiIsqMbYjsT5e-T7KzowPTAALdyzhHAAA = --sourceFolderId AAMkAGVmMDEzMTM4LTZmYWUtNDdkNC1hMDZiLTU1OGY5OTZhYmY4OAAuAAAAAAAiQ8W967B7TKBjgx9rVEURAQAiIsqMbYjsT5e-T7KzowPTAAAAAAEKAAA = --targetFolderId AAMkAGVmMDEzMTM4LTZmYWUtNDdkNC1hMDZiLTU1OGY5OTZhYmY4OAAuAAAAAAAiQ8W967B7TKBjgx9rVEURAQAiIsqMbYjsT5e-T7KzowPTAAAeUO-fAAA = Move the specified message to another folder specified by name m365 outlook message move --id AAMkAGVmMDEzMTM4LTZmYWUtNDdkNC1hMDZiLTU1OGY5OTZhYmY4OABGAAAAAAAiQ8W967B7TKBjgx9rVEURBwAiIsqMbYjsT5e-T7KzowPTAAAAAAEMAAAiIsqMbYjsT5e-T7KzowPTAALdyzhHAAA = --sourceFolderName Inbox --targetFolderName \"Project X\" Move the specified message to another folder specified by its well-known name m365 outlook message move --id AAMkAGVmMDEzMTM4LTZmYWUtNDdkNC1hMDZiLTU1OGY5OTZhYmY4OABGAAAAAAAiQ8W967B7TKBjgx9rVEURBwAiIsqMbYjsT5e-T7KzowPTAAAAAAEMAAAiIsqMbYjsT5e-T7KzowPTAALdyzhHAAA = --sourceFolderName inbox --targetFolderName archive","title":"Examples"},{"location":"cmd/outlook/message/message-move/#more-information","text":"Well-known folder names: https://docs.microsoft.com/en-us/graph/api/resources/mailfolder?view=graph-rest-1.0","title":"More information"},{"location":"cmd/outlook/report/report-mailactivitycounts/","text":"outlook report mailactivitycounts \u00b6 Enables you to understand the trends of email activity (like how many were sent, read, and received) in your organization Usage \u00b6 m365 outlook report mailactivitycounts [ options ] Options \u00b6 -p, --period <period> The length of time over which the report is aggregated. Supported values D7,D30,D90,D180 -f, --outputFile [outputFile] Path to the file where the report should be stored in -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Gets the trends of email activity (like how many were sent, read, and received) in your organization for the last week m365 outlook report mailactivitycounts --period D7 Gets the trends of email activity (like how many were sent, read, and received) in your organization for the last week and exports the report data in the specified path in text format m365 outlook report mailactivitycounts --period D7 --output text > \"mailactivitycounts.txt\" Gets the trends of email activity (like how many were sent, read, and received) in your organization for the last week and exports the report data in the specified path in json format m365 outlook report mailactivitycounts --period D7 --output json > \"mailactivitycounts.json\"","title":"report mailactivitycounts"},{"location":"cmd/outlook/report/report-mailactivitycounts/#outlook-report-mailactivitycounts","text":"Enables you to understand the trends of email activity (like how many were sent, read, and received) in your organization","title":"outlook report mailactivitycounts"},{"location":"cmd/outlook/report/report-mailactivitycounts/#usage","text":"m365 outlook report mailactivitycounts [ options ]","title":"Usage"},{"location":"cmd/outlook/report/report-mailactivitycounts/#options","text":"-p, --period <period> The length of time over which the report is aggregated. Supported values D7,D30,D90,D180 -f, --outputFile [outputFile] Path to the file where the report should be stored in -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/outlook/report/report-mailactivitycounts/#examples","text":"Gets the trends of email activity (like how many were sent, read, and received) in your organization for the last week m365 outlook report mailactivitycounts --period D7 Gets the trends of email activity (like how many were sent, read, and received) in your organization for the last week and exports the report data in the specified path in text format m365 outlook report mailactivitycounts --period D7 --output text > \"mailactivitycounts.txt\" Gets the trends of email activity (like how many were sent, read, and received) in your organization for the last week and exports the report data in the specified path in json format m365 outlook report mailactivitycounts --period D7 --output json > \"mailactivitycounts.json\"","title":"Examples"},{"location":"cmd/outlook/report/report-mailactivityusercounts/","text":"outlook report mailactivityusercounts \u00b6 Enables you to understand trends on the number of unique users who are performing email activities like send, read, and receive Usage \u00b6 m365 outlook report mailactivityusercounts [ options ] Options \u00b6 -p, --period <period> The length of time over which the report is aggregated. Supported values D7,D30,D90,D180 -f, --outputFile [outputFile] Path to the file where the report should be stored in -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Gets the trends on the number of unique users who are performing email activities like send, read, and receive for the last week m365 outlook report mailactivityusercounts --period D7 Gets the trends on the number of unique users who are performing email activities like send, read, and receive for the last week and exports the report data in the specified path in text format m365 outlook report mailactivityusercounts --period D7 --output text > \"mailactivityusercounts.txt\" Gets the trends on the number of unique users who are performing email activities like send, read, and receive for the last week and exports the report data in the specified path in json format m365 outlook report mailactivityusercounts --period D7 --output json > \"mailactivityusercounts.json\"","title":"report mailactivityusercounts"},{"location":"cmd/outlook/report/report-mailactivityusercounts/#outlook-report-mailactivityusercounts","text":"Enables you to understand trends on the number of unique users who are performing email activities like send, read, and receive","title":"outlook report mailactivityusercounts"},{"location":"cmd/outlook/report/report-mailactivityusercounts/#usage","text":"m365 outlook report mailactivityusercounts [ options ]","title":"Usage"},{"location":"cmd/outlook/report/report-mailactivityusercounts/#options","text":"-p, --period <period> The length of time over which the report is aggregated. Supported values D7,D30,D90,D180 -f, --outputFile [outputFile] Path to the file where the report should be stored in -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/outlook/report/report-mailactivityusercounts/#examples","text":"Gets the trends on the number of unique users who are performing email activities like send, read, and receive for the last week m365 outlook report mailactivityusercounts --period D7 Gets the trends on the number of unique users who are performing email activities like send, read, and receive for the last week and exports the report data in the specified path in text format m365 outlook report mailactivityusercounts --period D7 --output text > \"mailactivityusercounts.txt\" Gets the trends on the number of unique users who are performing email activities like send, read, and receive for the last week and exports the report data in the specified path in json format m365 outlook report mailactivityusercounts --period D7 --output json > \"mailactivityusercounts.json\"","title":"Examples"},{"location":"cmd/outlook/report/report-mailactivityuserdetail/","text":"outlook report mailactivityuserdetail \u00b6 Gets details about email activity users have performed Usage \u00b6 m365 outlook report mailactivityuserdetail [ options ] Options \u00b6 -p, --period [period] The length of time over which the report is aggregated. Supported values D7,D30,D90,D180 -d, --date [date] The date for which you would like to view the users who performed any activity. Supported date format is YYYY-MM-DD. Specify the date or period, but not both -f, --outputFile [outputFile] Path to the file where the report should be stored in -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Gets details about email activity users have performed for the last week m365 outlook report mailactivityuserdetail --period D7 Gets details about email activity users have performed for May 1st, 2019 m365 outlook report mailactivityuserdetail --date 2019 -05-01 Gets details about email activity users have performed for the last week and exports the report data in the specified path in text format m365 outlook report mailactivityuserdetail --period D7 --output text > \"mailactivityuserdetail.txt\" Gets details about email activity users have performed for the last week and exports the report data in the specified path in json format m365 outlook report mailactivityuserdetail --period D7 --output json > \"mailactivityuserdetail.json\"","title":"report mailactivityuserdetail"},{"location":"cmd/outlook/report/report-mailactivityuserdetail/#outlook-report-mailactivityuserdetail","text":"Gets details about email activity users have performed","title":"outlook report mailactivityuserdetail"},{"location":"cmd/outlook/report/report-mailactivityuserdetail/#usage","text":"m365 outlook report mailactivityuserdetail [ options ]","title":"Usage"},{"location":"cmd/outlook/report/report-mailactivityuserdetail/#options","text":"-p, --period [period] The length of time over which the report is aggregated. Supported values D7,D30,D90,D180 -d, --date [date] The date for which you would like to view the users who performed any activity. Supported date format is YYYY-MM-DD. Specify the date or period, but not both -f, --outputFile [outputFile] Path to the file where the report should be stored in -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/outlook/report/report-mailactivityuserdetail/#examples","text":"Gets details about email activity users have performed for the last week m365 outlook report mailactivityuserdetail --period D7 Gets details about email activity users have performed for May 1st, 2019 m365 outlook report mailactivityuserdetail --date 2019 -05-01 Gets details about email activity users have performed for the last week and exports the report data in the specified path in text format m365 outlook report mailactivityuserdetail --period D7 --output text > \"mailactivityuserdetail.txt\" Gets details about email activity users have performed for the last week and exports the report data in the specified path in json format m365 outlook report mailactivityuserdetail --period D7 --output json > \"mailactivityuserdetail.json\"","title":"Examples"},{"location":"cmd/outlook/report/report-mailappusageappsusercounts/","text":"outlook report mailappusageappsusercounts \u00b6 Gets the count of unique users per email app Usage \u00b6 m365 outlook report mailappusageappsusercounts [ options ] Options \u00b6 -p, --period <period> The length of time over which the report is aggregated. Supported values D7,D30,D90,D180 -f, --outputFile [outputFile] Path to the file where the report should be stored in -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Gets the count of unique users per email app for the last week m365 outlook report mailappusageappsusercounts --period D7 Gets the count of unique users per email app for the last week and exports the report data in the specified path in text format m365 outlook report mailappusageappsusercounts --period D7 --output text > \"mailappusageappsusercounts.txt\" Gets the count of unique users per email app for the last week and exports the report data in the specified path in json format m365 outlook report mailappusageappsusercounts --period D7 --output json > \"mailappusageappsusercounts.json\"","title":"report mailappusageappsusercounts"},{"location":"cmd/outlook/report/report-mailappusageappsusercounts/#outlook-report-mailappusageappsusercounts","text":"Gets the count of unique users per email app","title":"outlook report mailappusageappsusercounts"},{"location":"cmd/outlook/report/report-mailappusageappsusercounts/#usage","text":"m365 outlook report mailappusageappsusercounts [ options ]","title":"Usage"},{"location":"cmd/outlook/report/report-mailappusageappsusercounts/#options","text":"-p, --period <period> The length of time over which the report is aggregated. Supported values D7,D30,D90,D180 -f, --outputFile [outputFile] Path to the file where the report should be stored in -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/outlook/report/report-mailappusageappsusercounts/#examples","text":"Gets the count of unique users per email app for the last week m365 outlook report mailappusageappsusercounts --period D7 Gets the count of unique users per email app for the last week and exports the report data in the specified path in text format m365 outlook report mailappusageappsusercounts --period D7 --output text > \"mailappusageappsusercounts.txt\" Gets the count of unique users per email app for the last week and exports the report data in the specified path in json format m365 outlook report mailappusageappsusercounts --period D7 --output json > \"mailappusageappsusercounts.json\"","title":"Examples"},{"location":"cmd/outlook/report/report-mailappusageusercounts/","text":"outlook report mailappusageusercounts \u00b6 Gets the count of unique users that connected to Exchange Online using any email app Usage \u00b6 m365 outlook report mailappusageusercounts [ options ] Options \u00b6 -p, --period <period> The length of time over which the report is aggregated. Supported values D7,D30,D90,D180 -f, --outputFile [outputFile] Path to the file where the report should be stored in -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Gets the count of unique users that connected to Exchange Online using any email app for the last week m365 outlook report mailappusageusercounts --period D7 Gets the count of unique users that connected to Exchange Online using any email app for the last week and exports the report data in the specified path in text format m365 outlook report mailappusageusercounts --period D7 --output text > \"mailappusageusercounts.txt\" Gets the count of unique users that connected to Exchange Online using any email app for the last week and exports the report data in the specified path in json format m365 outlook report mailappusageusercounts --period D7 --output json > \"mailappusageusercounts.json\"","title":"report mailappusageusercounts"},{"location":"cmd/outlook/report/report-mailappusageusercounts/#outlook-report-mailappusageusercounts","text":"Gets the count of unique users that connected to Exchange Online using any email app","title":"outlook report mailappusageusercounts"},{"location":"cmd/outlook/report/report-mailappusageusercounts/#usage","text":"m365 outlook report mailappusageusercounts [ options ]","title":"Usage"},{"location":"cmd/outlook/report/report-mailappusageusercounts/#options","text":"-p, --period <period> The length of time over which the report is aggregated. Supported values D7,D30,D90,D180 -f, --outputFile [outputFile] Path to the file where the report should be stored in -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/outlook/report/report-mailappusageusercounts/#examples","text":"Gets the count of unique users that connected to Exchange Online using any email app for the last week m365 outlook report mailappusageusercounts --period D7 Gets the count of unique users that connected to Exchange Online using any email app for the last week and exports the report data in the specified path in text format m365 outlook report mailappusageusercounts --period D7 --output text > \"mailappusageusercounts.txt\" Gets the count of unique users that connected to Exchange Online using any email app for the last week and exports the report data in the specified path in json format m365 outlook report mailappusageusercounts --period D7 --output json > \"mailappusageusercounts.json\"","title":"Examples"},{"location":"cmd/outlook/report/report-mailappusageuserdetail/","text":"outlook report mailappusageuserdetail \u00b6 Gets details about which activities users performed on the various email apps Usage \u00b6 m365 outlook report mailappusageuserdetail [ options ] Options \u00b6 -p, --period [period] The length of time over which the report is aggregated. Supported values D7,D30,D90,D180 -d, --date [date] The date for which you would like to view the users who performed any activity. Supported date format is YYYY-MM-DD. Specify the date or period, but not both -f, --outputFile [outputFile] Path to the file where the report should be stored in -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Gets details about which activities users performed on the various email apps for the last week m365 outlook report mailappusageuserdetail --period D7 Gets details about which activities users performed on the various email apps for May 1st, 2019 m365 outlook report mailappusageuserdetail --date 2019 -05-01 Gets details about which activities users performed on the various email apps for the last week and exports the report data in the specified path in text format m365 outlook report mailappusageuserdetail --period D7 --output text > \"mailappusageuserdetail.txt\" Gets details about which activities users performed on the various email apps for the last week and exports the report data in the specified path in json format m365 outlook report mailappusageuserdetail --period D7 --output json > \"mailappusageuserdetail.json\"","title":"report mailappusageuserdetail"},{"location":"cmd/outlook/report/report-mailappusageuserdetail/#outlook-report-mailappusageuserdetail","text":"Gets details about which activities users performed on the various email apps","title":"outlook report mailappusageuserdetail"},{"location":"cmd/outlook/report/report-mailappusageuserdetail/#usage","text":"m365 outlook report mailappusageuserdetail [ options ]","title":"Usage"},{"location":"cmd/outlook/report/report-mailappusageuserdetail/#options","text":"-p, --period [period] The length of time over which the report is aggregated. Supported values D7,D30,D90,D180 -d, --date [date] The date for which you would like to view the users who performed any activity. Supported date format is YYYY-MM-DD. Specify the date or period, but not both -f, --outputFile [outputFile] Path to the file where the report should be stored in -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/outlook/report/report-mailappusageuserdetail/#examples","text":"Gets details about which activities users performed on the various email apps for the last week m365 outlook report mailappusageuserdetail --period D7 Gets details about which activities users performed on the various email apps for May 1st, 2019 m365 outlook report mailappusageuserdetail --date 2019 -05-01 Gets details about which activities users performed on the various email apps for the last week and exports the report data in the specified path in text format m365 outlook report mailappusageuserdetail --period D7 --output text > \"mailappusageuserdetail.txt\" Gets details about which activities users performed on the various email apps for the last week and exports the report data in the specified path in json format m365 outlook report mailappusageuserdetail --period D7 --output json > \"mailappusageuserdetail.json\"","title":"Examples"},{"location":"cmd/outlook/report/report-mailappusageversionsusercounts/","text":"outlook report mailappusageversionsusercounts \u00b6 Gets the count of unique users by Outlook desktop version. Usage \u00b6 m365 outlook report mailappusageversionsusercounts [ options ] Options \u00b6 -p, --period <period> The length of time over which the report is aggregated. Supported values D7,D30,D90,D180 -f, --outputFile [outputFile] Path to the file where the report should be stored in -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Gets the count of unique users by Outlook desktop version for the last week m365 outlook report mailappusageversionsusercounts --period D7 Gets the count of unique users by Outlook desktop version for the last week and exports the report data in the specified path in text format m365 outlook report mailappusageversionsusercounts --period D7 --output text > \"mailappusageversionsusercounts.txt\" Gets the count of unique users by Outlook desktop version for the last week and exports the report data in the specified path in json format m365 outlook report mailappusageversionsusercounts --period D7 --output json > \"mailappusageversionsusercounts.json\"","title":"report mailappusageversionsusercounts"},{"location":"cmd/outlook/report/report-mailappusageversionsusercounts/#outlook-report-mailappusageversionsusercounts","text":"Gets the count of unique users by Outlook desktop version.","title":"outlook report mailappusageversionsusercounts"},{"location":"cmd/outlook/report/report-mailappusageversionsusercounts/#usage","text":"m365 outlook report mailappusageversionsusercounts [ options ]","title":"Usage"},{"location":"cmd/outlook/report/report-mailappusageversionsusercounts/#options","text":"-p, --period <period> The length of time over which the report is aggregated. Supported values D7,D30,D90,D180 -f, --outputFile [outputFile] Path to the file where the report should be stored in -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/outlook/report/report-mailappusageversionsusercounts/#examples","text":"Gets the count of unique users by Outlook desktop version for the last week m365 outlook report mailappusageversionsusercounts --period D7 Gets the count of unique users by Outlook desktop version for the last week and exports the report data in the specified path in text format m365 outlook report mailappusageversionsusercounts --period D7 --output text > \"mailappusageversionsusercounts.txt\" Gets the count of unique users by Outlook desktop version for the last week and exports the report data in the specified path in json format m365 outlook report mailappusageversionsusercounts --period D7 --output json > \"mailappusageversionsusercounts.json\"","title":"Examples"},{"location":"cmd/outlook/report/report-mailboxusagedetail/","text":"outlook report mailboxusagedetail \u00b6 Gets details about mailbox usage Usage \u00b6 m365 outlook report mailboxusagedetail [ options ] Options \u00b6 -p, --period <period> The length of time over which the report is aggregated. Supported values D7,D30,D90,D180 -f, --outputFile [outputFile] Path to the file where the report should be stored in -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Gets details about mailbox usage for the last week m365 outlook report mailboxusagedetail --period D7 Gets details about mailbox usage for the last week and exports the report data in the specified path in text format m365 outlook report mailboxusagedetail --period D7 --output text > \"mailboxusagedetail.txt\" Gets details about mailbox usage for the last week and exports the report data in the specified path in json format m365 outlook report mailboxusagedetail --period D7 --output json > \"mailboxusagedetail.json\"","title":"report mailboxusagedetail"},{"location":"cmd/outlook/report/report-mailboxusagedetail/#outlook-report-mailboxusagedetail","text":"Gets details about mailbox usage","title":"outlook report mailboxusagedetail"},{"location":"cmd/outlook/report/report-mailboxusagedetail/#usage","text":"m365 outlook report mailboxusagedetail [ options ]","title":"Usage"},{"location":"cmd/outlook/report/report-mailboxusagedetail/#options","text":"-p, --period <period> The length of time over which the report is aggregated. Supported values D7,D30,D90,D180 -f, --outputFile [outputFile] Path to the file where the report should be stored in -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/outlook/report/report-mailboxusagedetail/#examples","text":"Gets details about mailbox usage for the last week m365 outlook report mailboxusagedetail --period D7 Gets details about mailbox usage for the last week and exports the report data in the specified path in text format m365 outlook report mailboxusagedetail --period D7 --output text > \"mailboxusagedetail.txt\" Gets details about mailbox usage for the last week and exports the report data in the specified path in json format m365 outlook report mailboxusagedetail --period D7 --output json > \"mailboxusagedetail.json\"","title":"Examples"},{"location":"cmd/outlook/report/report-mailboxusagemailboxcount/","text":"outlook report mailboxusagemailboxcount \u00b6 Gets the total number of user mailboxes in your organization and how many are active each day of the reporting period. Usage \u00b6 m365 outlook report mailboxusagemailboxcount [ options ] Options \u00b6 -p, --period <period> The length of time over which the report is aggregated. Supported values D7,D30,D90,D180 -f, --outputFile [outputFile] Path to the file where the report should be stored in -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 A mailbox is considered active if the user sent or read any email. Examples \u00b6 Gets the total number of user mailboxes in your organization and how many are active each day for the last week. m365 outlook report mailboxusagemailboxcount --period D7 Gets the total number of user mailboxes in your organization and how many are active each day for the last week and exports the report data in the specified path in text format m365 outlook report mailboxusagemailboxcount --period D7 --output text > \"mailboxusagemailboxcount.txt\" Gets the total number of user mailboxes in your organization and how many are active each day for the last week and exports the report data in the specified path in json format m365 outlook report mailboxusagemailboxcount --period D7 --output json > \"mailboxusagemailboxcount.json\"","title":"report mailboxusagemailboxcount"},{"location":"cmd/outlook/report/report-mailboxusagemailboxcount/#outlook-report-mailboxusagemailboxcount","text":"Gets the total number of user mailboxes in your organization and how many are active each day of the reporting period.","title":"outlook report mailboxusagemailboxcount"},{"location":"cmd/outlook/report/report-mailboxusagemailboxcount/#usage","text":"m365 outlook report mailboxusagemailboxcount [ options ]","title":"Usage"},{"location":"cmd/outlook/report/report-mailboxusagemailboxcount/#options","text":"-p, --period <period> The length of time over which the report is aggregated. Supported values D7,D30,D90,D180 -f, --outputFile [outputFile] Path to the file where the report should be stored in -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/outlook/report/report-mailboxusagemailboxcount/#remarks","text":"A mailbox is considered active if the user sent or read any email.","title":"Remarks"},{"location":"cmd/outlook/report/report-mailboxusagemailboxcount/#examples","text":"Gets the total number of user mailboxes in your organization and how many are active each day for the last week. m365 outlook report mailboxusagemailboxcount --period D7 Gets the total number of user mailboxes in your organization and how many are active each day for the last week and exports the report data in the specified path in text format m365 outlook report mailboxusagemailboxcount --period D7 --output text > \"mailboxusagemailboxcount.txt\" Gets the total number of user mailboxes in your organization and how many are active each day for the last week and exports the report data in the specified path in json format m365 outlook report mailboxusagemailboxcount --period D7 --output json > \"mailboxusagemailboxcount.json\"","title":"Examples"},{"location":"cmd/outlook/report/report-mailboxusagequotastatusmailboxcounts/","text":"outlook report mailboxusagequotastatusmailboxcounts \u00b6 Gets the count of user mailboxes in each quota category Usage \u00b6 m365 outlook report mailboxusagequotastatusmailboxcounts [ options ] Options \u00b6 -p, --period <period> The length of time over which the report is aggregated. Supported values D7,D30,D90,D180 -f, --outputFile [outputFile] Path to the file where the report should be stored in -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Gets the count of user mailboxes in each quota category for the last week m365 outlook report mailboxusagequotastatusmailboxcounts --period D7 Gets the count of user mailboxes in each quota category for the last week and exports the report data in the specified path in text format m365 outlook report mailboxusagequotastatusmailboxcounts --period D7 --output text > \"mailboxusagequotastatusmailboxcounts.txt\" Gets the count of user mailboxes in each quota category for the last week and exports the report data in the specified path in json format m365 outlook report mailboxusagequotastatusmailboxcounts --period D7 --output json > \"mailboxusagequotastatusmailboxcounts.json\"","title":"report mailboxusagequotastatusmailboxcounts"},{"location":"cmd/outlook/report/report-mailboxusagequotastatusmailboxcounts/#outlook-report-mailboxusagequotastatusmailboxcounts","text":"Gets the count of user mailboxes in each quota category","title":"outlook report mailboxusagequotastatusmailboxcounts"},{"location":"cmd/outlook/report/report-mailboxusagequotastatusmailboxcounts/#usage","text":"m365 outlook report mailboxusagequotastatusmailboxcounts [ options ]","title":"Usage"},{"location":"cmd/outlook/report/report-mailboxusagequotastatusmailboxcounts/#options","text":"-p, --period <period> The length of time over which the report is aggregated. Supported values D7,D30,D90,D180 -f, --outputFile [outputFile] Path to the file where the report should be stored in -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/outlook/report/report-mailboxusagequotastatusmailboxcounts/#examples","text":"Gets the count of user mailboxes in each quota category for the last week m365 outlook report mailboxusagequotastatusmailboxcounts --period D7 Gets the count of user mailboxes in each quota category for the last week and exports the report data in the specified path in text format m365 outlook report mailboxusagequotastatusmailboxcounts --period D7 --output text > \"mailboxusagequotastatusmailboxcounts.txt\" Gets the count of user mailboxes in each quota category for the last week and exports the report data in the specified path in json format m365 outlook report mailboxusagequotastatusmailboxcounts --period D7 --output json > \"mailboxusagequotastatusmailboxcounts.json\"","title":"Examples"},{"location":"cmd/outlook/report/report-mailboxusagestorage/","text":"outlook report mailboxusagestorage \u00b6 Gets the amount of mailbox storage used in your organization Usage \u00b6 m365 outlook report mailboxusagestorage [ options ] Options \u00b6 -p, --period <period> The length of time over which the report is aggregated. Supported values D7,D30,D90,D180 -f, --outputFile [outputFile] Path to the file where the report should be stored in -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Gets the amount of mailbox storage used in your organization for the last week m365 outlook report mailboxusagestorage --period D7 Gets the amount of mailbox storage used in your organization for the last week and exports the report data in the specified path in text format m365 outlook report mailboxusagestorage --period D7 --output text > \"mailboxusagestorage.txt\" Gets the amount of mailbox storage used in your organization for the last week and exports the report data in the specified path in json format m365 outlook report mailboxusagestorage --period D7 --output json > \"mailboxusagestorage.json\"","title":"report mailboxusagestorage"},{"location":"cmd/outlook/report/report-mailboxusagestorage/#outlook-report-mailboxusagestorage","text":"Gets the amount of mailbox storage used in your organization","title":"outlook report mailboxusagestorage"},{"location":"cmd/outlook/report/report-mailboxusagestorage/#usage","text":"m365 outlook report mailboxusagestorage [ options ]","title":"Usage"},{"location":"cmd/outlook/report/report-mailboxusagestorage/#options","text":"-p, --period <period> The length of time over which the report is aggregated. Supported values D7,D30,D90,D180 -f, --outputFile [outputFile] Path to the file where the report should be stored in -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/outlook/report/report-mailboxusagestorage/#examples","text":"Gets the amount of mailbox storage used in your organization for the last week m365 outlook report mailboxusagestorage --period D7 Gets the amount of mailbox storage used in your organization for the last week and exports the report data in the specified path in text format m365 outlook report mailboxusagestorage --period D7 --output text > \"mailboxusagestorage.txt\" Gets the amount of mailbox storage used in your organization for the last week and exports the report data in the specified path in json format m365 outlook report mailboxusagestorage --period D7 --output json > \"mailboxusagestorage.json\"","title":"Examples"},{"location":"cmd/outlook/room/room-list/","text":"outlook room list \u00b6 Get a collection of all available rooms Usage \u00b6 m365 outlook room list [ options ] Options \u00b6 --roomlistEmail [roomlistEmail] Use to filter returned rooms by their roomlist email (eg. bldg2@contoso.com) -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Get all the rooms m365 outlook room list Get all the rooms of specified roomlist e-mail address m365 outlook room list --roomlistEmail \"bldg2@contoso.com\"","title":"room list"},{"location":"cmd/outlook/room/room-list/#outlook-room-list","text":"Get a collection of all available rooms","title":"outlook room list"},{"location":"cmd/outlook/room/room-list/#usage","text":"m365 outlook room list [ options ]","title":"Usage"},{"location":"cmd/outlook/room/room-list/#options","text":"--roomlistEmail [roomlistEmail] Use to filter returned rooms by their roomlist email (eg. bldg2@contoso.com) -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/outlook/room/room-list/#examples","text":"Get all the rooms m365 outlook room list Get all the rooms of specified roomlist e-mail address m365 outlook room list --roomlistEmail \"bldg2@contoso.com\"","title":"Examples"},{"location":"cmd/outlook/roomlist/roomlist-list/","text":"outlook roomlist list \u00b6 Get a collection of available roomlists Usage \u00b6 m365 outlook roomlist list [ options ] Options \u00b6 -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Get all roomlists in your tenant m365 outlook roomlist list","title":"roomlist list"},{"location":"cmd/outlook/roomlist/roomlist-list/#outlook-roomlist-list","text":"Get a collection of available roomlists","title":"outlook roomlist list"},{"location":"cmd/outlook/roomlist/roomlist-list/#usage","text":"m365 outlook roomlist list [ options ]","title":"Usage"},{"location":"cmd/outlook/roomlist/roomlist-list/#options","text":"-h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/outlook/roomlist/roomlist-list/#examples","text":"Get all roomlists in your tenant m365 outlook roomlist list","title":"Examples"},{"location":"cmd/pa/app/app-get/","text":"pa app get \u00b6 Gets information about the specified Microsoft Power App Usage \u00b6 pa app get [ options ] Options \u00b6 -n, --name [name] The name of the Microsoft Power App to get information about -d, --displayName [displayName] The display name of the Microsoft Power App to get information about -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 Attention This command is based on an API that is currently in preview and is subject to change once the API reaches general availability. If you try to retrieve a non-existing Microsoft Power App, you will get the Request failed with status code 404 error. Examples \u00b6 Get information about the specified Microsoft Power App by the app's name m365 pa app get --name 3989cb59-ce1a-4a5c-bb78-257c5c39381d Get information about the specified Microsoft Power App by the app's display name m365 pa app get --displayName App","title":"app get"},{"location":"cmd/pa/app/app-get/#pa-app-get","text":"Gets information about the specified Microsoft Power App","title":"pa app get"},{"location":"cmd/pa/app/app-get/#usage","text":"pa app get [ options ]","title":"Usage"},{"location":"cmd/pa/app/app-get/#options","text":"-n, --name [name] The name of the Microsoft Power App to get information about -d, --displayName [displayName] The display name of the Microsoft Power App to get information about -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/pa/app/app-get/#remarks","text":"Attention This command is based on an API that is currently in preview and is subject to change once the API reaches general availability. If you try to retrieve a non-existing Microsoft Power App, you will get the Request failed with status code 404 error.","title":"Remarks"},{"location":"cmd/pa/app/app-get/#examples","text":"Get information about the specified Microsoft Power App by the app's name m365 pa app get --name 3989cb59-ce1a-4a5c-bb78-257c5c39381d Get information about the specified Microsoft Power App by the app's display name m365 pa app get --displayName App","title":"Examples"},{"location":"cmd/pa/app/app-list/","text":"pa app list \u00b6 Lists all Power Apps apps Usage \u00b6 pa app list [ options ] Options \u00b6 -e, --environment [environment] The name of the environment for which to retrieve available apps --asAdmin Set, to list all Power Apps as admin. Otherwise will return only your own apps -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 Attention This command is based on an API that is currently in preview and is subject to change once the API reaches general availability. If the environment with the name you specified doesn't exist, you will get the Access to the environment 'xyz' is denied. error. By default, the app list command returns only your apps. To list all apps, use the asAdmin option and make sure to specify the environment option. You cannot specify only one of the options, when specifying the environment option the asAdmin option has to be present as well. Examples \u00b6 List all your apps m365 pa app list List all apps in a given environment m365 pa app list --environment Default-d87a7535-dd31-4437-bfe1-95340acd55c5 --asAdmin","title":"app list"},{"location":"cmd/pa/app/app-list/#pa-app-list","text":"Lists all Power Apps apps","title":"pa app list"},{"location":"cmd/pa/app/app-list/#usage","text":"pa app list [ options ]","title":"Usage"},{"location":"cmd/pa/app/app-list/#options","text":"-e, --environment [environment] The name of the environment for which to retrieve available apps --asAdmin Set, to list all Power Apps as admin. Otherwise will return only your own apps -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/pa/app/app-list/#remarks","text":"Attention This command is based on an API that is currently in preview and is subject to change once the API reaches general availability. If the environment with the name you specified doesn't exist, you will get the Access to the environment 'xyz' is denied. error. By default, the app list command returns only your apps. To list all apps, use the asAdmin option and make sure to specify the environment option. You cannot specify only one of the options, when specifying the environment option the asAdmin option has to be present as well.","title":"Remarks"},{"location":"cmd/pa/app/app-list/#examples","text":"List all your apps m365 pa app list List all apps in a given environment m365 pa app list --environment Default-d87a7535-dd31-4437-bfe1-95340acd55c5 --asAdmin","title":"Examples"},{"location":"cmd/pa/app/app-remove/","text":"pa app remove \u00b6 Removes the specified Power App Usage \u00b6 m365 pa app remove [ options ] Options \u00b6 -n, --name <name> The name of the Power App to remove --confirm Don't prompt for confirmation -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 By default, the command will try to remove a Power App. As maker, you are able to delete the Power Apps you own. As administrator, you are also able to delete Power Apps from other users. To remove a model-driven Power App you need administrator permissions. If the Power App with the name you specified doesn't exist, you will get the Error: App 'abc' does not exist error. Examples \u00b6 Removes the specified Power App m365 pa app remove --name 3989cb59-ce1a-4a5c-bb78-257c5c39381d Removes the specified Power App without confirmation m365 pa app remove --name 3989cb59-ce1a-4a5c-bb78-257c5c39381d --confirm","title":"app remove"},{"location":"cmd/pa/app/app-remove/#pa-app-remove","text":"Removes the specified Power App","title":"pa app remove"},{"location":"cmd/pa/app/app-remove/#usage","text":"m365 pa app remove [ options ]","title":"Usage"},{"location":"cmd/pa/app/app-remove/#options","text":"-n, --name <name> The name of the Power App to remove --confirm Don't prompt for confirmation -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/pa/app/app-remove/#remarks","text":"By default, the command will try to remove a Power App. As maker, you are able to delete the Power Apps you own. As administrator, you are also able to delete Power Apps from other users. To remove a model-driven Power App you need administrator permissions. If the Power App with the name you specified doesn't exist, you will get the Error: App 'abc' does not exist error.","title":"Remarks"},{"location":"cmd/pa/app/app-remove/#examples","text":"Removes the specified Power App m365 pa app remove --name 3989cb59-ce1a-4a5c-bb78-257c5c39381d Removes the specified Power App without confirmation m365 pa app remove --name 3989cb59-ce1a-4a5c-bb78-257c5c39381d --confirm","title":"Examples"},{"location":"cmd/pa/connector/connector-export/","text":"pa connector export \u00b6 Exports the specified Power Automate or Power Apps custom connector Usage \u00b6 m365 pa connector export [ options ] Alias \u00b6 m365 flow connector export Options \u00b6 -e, --environmentName <environmentName> The name of the environment where the custom connector to export is located -c, --connector <connector> The name of the custom connector to export --outputFolder [outputFolder] Path where the folder with connector's files should be saved. If not specified, will create the connector's folder in the current folder. -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 Attention This command is based on an API that is currently in preview and is subject to change once the API reached general availability. If no output folder has been specified, the pa connector export command will create a folder named after the connector in the current folder. If the output folder has been specified, the folder named after the connector will be created in that folder. Examples \u00b6 Export the specified custom connector m365 pa connector export --environmentName Default-d87a7535-dd31-4437-bfe1-95340acd55c5 --connector shared_connector-201-5f20a1f2d8d6777a75-5fa602f410652f4dfa Export the specified custom connector to the specific directory m365 pa connector export --environmentName Default-d87a7535-dd31-4437-bfe1-95340acd55c5 --connector shared_connector-201-5f20a1f2d8d6777a75-5fa602f410652f4dfa --outputFolder connector","title":"connector export"},{"location":"cmd/pa/connector/connector-export/#pa-connector-export","text":"Exports the specified Power Automate or Power Apps custom connector","title":"pa connector export"},{"location":"cmd/pa/connector/connector-export/#usage","text":"m365 pa connector export [ options ]","title":"Usage"},{"location":"cmd/pa/connector/connector-export/#alias","text":"m365 flow connector export","title":"Alias"},{"location":"cmd/pa/connector/connector-export/#options","text":"-e, --environmentName <environmentName> The name of the environment where the custom connector to export is located -c, --connector <connector> The name of the custom connector to export --outputFolder [outputFolder] Path where the folder with connector's files should be saved. If not specified, will create the connector's folder in the current folder. -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/pa/connector/connector-export/#remarks","text":"Attention This command is based on an API that is currently in preview and is subject to change once the API reached general availability. If no output folder has been specified, the pa connector export command will create a folder named after the connector in the current folder. If the output folder has been specified, the folder named after the connector will be created in that folder.","title":"Remarks"},{"location":"cmd/pa/connector/connector-export/#examples","text":"Export the specified custom connector m365 pa connector export --environmentName Default-d87a7535-dd31-4437-bfe1-95340acd55c5 --connector shared_connector-201-5f20a1f2d8d6777a75-5fa602f410652f4dfa Export the specified custom connector to the specific directory m365 pa connector export --environmentName Default-d87a7535-dd31-4437-bfe1-95340acd55c5 --connector shared_connector-201-5f20a1f2d8d6777a75-5fa602f410652f4dfa --outputFolder connector","title":"Examples"},{"location":"cmd/pa/connector/connector-list/","text":"pa connector list \u00b6 Lists custom connectors in the given environment Usage \u00b6 m365 pa connector list [ options ] Alias \u00b6 m365 flow connector list Options \u00b6 -e, --environmentName <environmentName> The name of the environment for which to retrieve custom connectors -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 Attention This command is based on an API that is currently in preview and is subject to change once the API reached general availability. Examples \u00b6 List all custom connectors in the given environment m365 pa connector list --environmentName Default-d87a7535-dd31-4437-bfe1-95340acd55c5","title":"connector list"},{"location":"cmd/pa/connector/connector-list/#pa-connector-list","text":"Lists custom connectors in the given environment","title":"pa connector list"},{"location":"cmd/pa/connector/connector-list/#usage","text":"m365 pa connector list [ options ]","title":"Usage"},{"location":"cmd/pa/connector/connector-list/#alias","text":"m365 flow connector list","title":"Alias"},{"location":"cmd/pa/connector/connector-list/#options","text":"-e, --environmentName <environmentName> The name of the environment for which to retrieve custom connectors -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/pa/connector/connector-list/#remarks","text":"Attention This command is based on an API that is currently in preview and is subject to change once the API reached general availability.","title":"Remarks"},{"location":"cmd/pa/connector/connector-list/#examples","text":"List all custom connectors in the given environment m365 pa connector list --environmentName Default-d87a7535-dd31-4437-bfe1-95340acd55c5","title":"Examples"},{"location":"cmd/pa/environment/environment-get/","text":"pa environment get \u00b6 Gets information about the specified Power Apps environment Usage \u00b6 m365 pa environment get [ options ] Options \u00b6 -n, --name <name> The name of the environment to get information about -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 Attention This command is based on an API that is currently in preview and is subject to change once the API reached general availability. If the environment with the name you specified doesn't exist, you will get the Access to the environment 'xyz' is denied. error. Examples \u00b6 Get information about the Power Apps environment named Default-d87a7535-dd31-4437-bfe1-95340acd55c5 m365 pa environment get --name Default-d87a7535-dd31-4437-bfe1-95340acd55c5","title":"environment get"},{"location":"cmd/pa/environment/environment-get/#pa-environment-get","text":"Gets information about the specified Power Apps environment","title":"pa environment get"},{"location":"cmd/pa/environment/environment-get/#usage","text":"m365 pa environment get [ options ]","title":"Usage"},{"location":"cmd/pa/environment/environment-get/#options","text":"-n, --name <name> The name of the environment to get information about -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/pa/environment/environment-get/#remarks","text":"Attention This command is based on an API that is currently in preview and is subject to change once the API reached general availability. If the environment with the name you specified doesn't exist, you will get the Access to the environment 'xyz' is denied. error.","title":"Remarks"},{"location":"cmd/pa/environment/environment-get/#examples","text":"Get information about the Power Apps environment named Default-d87a7535-dd31-4437-bfe1-95340acd55c5 m365 pa environment get --name Default-d87a7535-dd31-4437-bfe1-95340acd55c5","title":"Examples"},{"location":"cmd/pa/environment/environment-list/","text":"pa environment list \u00b6 Lists Microsoft Power Apps environments in the current tenant Usage \u00b6 m365 pa environment list [ options ] Options \u00b6 -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 Attention This command is based on an API that is currently in preview and is subject to change once the API reached general availability. Examples \u00b6 List Microsoft Power Apps environments in the current tenant m365 pa environment list","title":"environment list"},{"location":"cmd/pa/environment/environment-list/#pa-environment-list","text":"Lists Microsoft Power Apps environments in the current tenant","title":"pa environment list"},{"location":"cmd/pa/environment/environment-list/#usage","text":"m365 pa environment list [ options ]","title":"Usage"},{"location":"cmd/pa/environment/environment-list/#options","text":"-h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/pa/environment/environment-list/#remarks","text":"Attention This command is based on an API that is currently in preview and is subject to change once the API reached general availability.","title":"Remarks"},{"location":"cmd/pa/environment/environment-list/#examples","text":"List Microsoft Power Apps environments in the current tenant m365 pa environment list","title":"Examples"},{"location":"cmd/pa/pcf/pcf-init/","text":"pa pcf init \u00b6 Creates new PowerApps component framework project Usage \u00b6 m365 pa pcf init [ options ] Options \u00b6 --namespace <namespace> The namespace for the component. --name <name> The name for the component. --template <template> Choose a template for the component. Field,Dataset . -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 Name cannot contain reserved Javascript words. Only characters within the ranges [A-Z], [a-z] or [0-9] are allowed. The first character may not be a number. Namespace cannot contain reserved Javascript words. Only characters within the ranges [A-Z], [a-z], [0-9], or '.' are allowed. The first and last character may not be the '.' character. Consecutive '.' characters are not allowed. Numbers are not allowed as the first character or immediately after a period. Template currently only supports Field or Dataset. Examples \u00b6 Initialize the PowerApps Component Framework for a Field component m365 pa pcf init --namespace yourNamespace --name yourCustomFieldComponent --template Field Initialize the PowerApps Component Framework for a Dataset component m365 pa pcf init --namespace yourNamespace --name yourCustomFieldComponent --template Dataset More information \u00b6 Create and build a custom component: https://docs.microsoft.com/en-us/powerapps/developer/component-framework/create-custom-controls-using-pcf","title":"pcf init"},{"location":"cmd/pa/pcf/pcf-init/#pa-pcf-init","text":"Creates new PowerApps component framework project","title":"pa pcf init"},{"location":"cmd/pa/pcf/pcf-init/#usage","text":"m365 pa pcf init [ options ]","title":"Usage"},{"location":"cmd/pa/pcf/pcf-init/#options","text":"--namespace <namespace> The namespace for the component. --name <name> The name for the component. --template <template> Choose a template for the component. Field,Dataset . -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/pa/pcf/pcf-init/#remarks","text":"Name cannot contain reserved Javascript words. Only characters within the ranges [A-Z], [a-z] or [0-9] are allowed. The first character may not be a number. Namespace cannot contain reserved Javascript words. Only characters within the ranges [A-Z], [a-z], [0-9], or '.' are allowed. The first and last character may not be the '.' character. Consecutive '.' characters are not allowed. Numbers are not allowed as the first character or immediately after a period. Template currently only supports Field or Dataset.","title":"Remarks"},{"location":"cmd/pa/pcf/pcf-init/#examples","text":"Initialize the PowerApps Component Framework for a Field component m365 pa pcf init --namespace yourNamespace --name yourCustomFieldComponent --template Field Initialize the PowerApps Component Framework for a Dataset component m365 pa pcf init --namespace yourNamespace --name yourCustomFieldComponent --template Dataset","title":"Examples"},{"location":"cmd/pa/pcf/pcf-init/#more-information","text":"Create and build a custom component: https://docs.microsoft.com/en-us/powerapps/developer/component-framework/create-custom-controls-using-pcf","title":"More information"},{"location":"cmd/pa/solution/solution-init/","text":"pa solution init \u00b6 Initializes a directory with a new CDS solution project Usage \u00b6 m365 pa solution init [ options ] Options \u00b6 --publisherName <publisherName> Name of the CDS solution publisher. --publisherPrefix <publisherPrefix> Customization prefix value for the CDS solution publisher. -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 PublisherName only allows characters within the ranges [A-Z] , [a-z] , [0-9] , or _ . The first character may only be in the ranges [A-Z] , [a-z] , or _ . PublisherPrefix must be 2 to 8 characters long, can only consist of alpha-numerics, must start with a letter, and cannot start with 'mscrm'. Examples \u00b6 Initializes a CDS solution project using yourPublisherName as publisher name and ypn as publisher prefix m365 pa solution init --publisherName yourPublisherName --publisherPrefix ypn More information \u00b6 Create and build a custom component: https://docs.microsoft.com/en-us/powerapps/developer/component-framework/create-custom-controls-using-pcf","title":"solution init"},{"location":"cmd/pa/solution/solution-init/#pa-solution-init","text":"Initializes a directory with a new CDS solution project","title":"pa solution init"},{"location":"cmd/pa/solution/solution-init/#usage","text":"m365 pa solution init [ options ]","title":"Usage"},{"location":"cmd/pa/solution/solution-init/#options","text":"--publisherName <publisherName> Name of the CDS solution publisher. --publisherPrefix <publisherPrefix> Customization prefix value for the CDS solution publisher. -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/pa/solution/solution-init/#remarks","text":"PublisherName only allows characters within the ranges [A-Z] , [a-z] , [0-9] , or _ . The first character may only be in the ranges [A-Z] , [a-z] , or _ . PublisherPrefix must be 2 to 8 characters long, can only consist of alpha-numerics, must start with a letter, and cannot start with 'mscrm'.","title":"Remarks"},{"location":"cmd/pa/solution/solution-init/#examples","text":"Initializes a CDS solution project using yourPublisherName as publisher name and ypn as publisher prefix m365 pa solution init --publisherName yourPublisherName --publisherPrefix ypn","title":"Examples"},{"location":"cmd/pa/solution/solution-init/#more-information","text":"Create and build a custom component: https://docs.microsoft.com/en-us/powerapps/developer/component-framework/create-custom-controls-using-pcf","title":"More information"},{"location":"cmd/pa/solution/solution-reference-add/","text":"pa solution reference add \u00b6 Adds a project reference to the solution in the current directory Usage \u00b6 m365 pa solution reference add [ options ] Options \u00b6 -p, --projectPath <projectPath> The path to the referenced project -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 This commands expects a CDS solution project in the current directory, and references a PowerApps component framework project. The CDS solution project and the PowerApps component framework project cannot have the same name. Examples \u00b6 Adds a reference inside the CDS Solution project in the current directory to the PowerApps component framework project at ./projects/ExampleProject m365 pa solution reference add --projectPath ./projects/ExampleProject More information \u00b6 Create and build a custom component: https://docs.microsoft.com/en-us/powerapps/developer/component-framework/create-custom-controls-using-pcf","title":"solution reference add"},{"location":"cmd/pa/solution/solution-reference-add/#pa-solution-reference-add","text":"Adds a project reference to the solution in the current directory","title":"pa solution reference add"},{"location":"cmd/pa/solution/solution-reference-add/#usage","text":"m365 pa solution reference add [ options ]","title":"Usage"},{"location":"cmd/pa/solution/solution-reference-add/#options","text":"-p, --projectPath <projectPath> The path to the referenced project -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/pa/solution/solution-reference-add/#remarks","text":"This commands expects a CDS solution project in the current directory, and references a PowerApps component framework project. The CDS solution project and the PowerApps component framework project cannot have the same name.","title":"Remarks"},{"location":"cmd/pa/solution/solution-reference-add/#examples","text":"Adds a reference inside the CDS Solution project in the current directory to the PowerApps component framework project at ./projects/ExampleProject m365 pa solution reference add --projectPath ./projects/ExampleProject","title":"Examples"},{"location":"cmd/pa/solution/solution-reference-add/#more-information","text":"Create and build a custom component: https://docs.microsoft.com/en-us/powerapps/developer/component-framework/create-custom-controls-using-pcf","title":"More information"},{"location":"cmd/planner/bucket/bucket-add/","text":"planner bucket add \u00b6 Adds a new Microsoft Planner bucket Usage \u00b6 m365 planner bucket add [ options ] Options \u00b6 -n, --name <name> Name of the bucket to add. --planId [planId] ID of the plan to which the bucket belongs. Specify either planId or planTitle but not both. --planTitle [planTitle] Title of the plan to which the bucket belongs. Specify either planId or planTitle but not both. --ownerGroupId [ownerGroupId] ID of the group to which the plan belongs. Specify ownerGroupId or ownerGroupName when using planTitle . --ownerGroupName [ownerGroupName] Name of the group to which the plan belongs. Specify ownerGroupId or ownerGroupName when using planTitle . --orderHint [orderHint] Hint used to order items of this type in a list view. The format is defined as outlined here . -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Adds a Microsoft Planner bucket with the name My Planner Bucket for plan with the ID xqQg5FS2LkCp935s-FIFm2QAFkHM with order hint m365 planner bucket add --name \"My Planner Bucket\" --planId \"xqQg5FS2LkCp935s-FIFm2QAFkHM\" --orderHint \" !\" Adds a Microsoft Planner bucket with the name My Planner Bucket for plan with the title My Planner Plan owned by group My Planner Group m365 planner bucket add --name \"My Planner Bucket\" --planTitle \"My Planner Plan\" --ownerGroupName \"My Planner Group\" Response \u00b6 JSON Text CSV { \"name\" : \"My Planner Bucket\" , \"planId\" : \"xqQg5FS2LkCp935s-FIFm2QAFkHM\" , \"orderHint\" : \"8585363889524958496\" , \"id\" : \"ttEB_Uj690STdR3GC1MIDZgANq1U\" } id : ttEB_Uj690STdR3GC1MIDZgANq1U name : My Planner Bucket orderHint: 8585363889524958496 planId : xqQg5FS2LkCp935s-FIFm2QAFkHM id,name,planId,orderHint ttEB_Uj690STdR3GC1MIDZgANq1U,My Planner Bucket,xqQg5FS2LkCp935s-FIFm2QAFkHM,8585363889524958496","title":"bucket add"},{"location":"cmd/planner/bucket/bucket-add/#planner-bucket-add","text":"Adds a new Microsoft Planner bucket","title":"planner bucket add"},{"location":"cmd/planner/bucket/bucket-add/#usage","text":"m365 planner bucket add [ options ]","title":"Usage"},{"location":"cmd/planner/bucket/bucket-add/#options","text":"-n, --name <name> Name of the bucket to add. --planId [planId] ID of the plan to which the bucket belongs. Specify either planId or planTitle but not both. --planTitle [planTitle] Title of the plan to which the bucket belongs. Specify either planId or planTitle but not both. --ownerGroupId [ownerGroupId] ID of the group to which the plan belongs. Specify ownerGroupId or ownerGroupName when using planTitle . --ownerGroupName [ownerGroupName] Name of the group to which the plan belongs. Specify ownerGroupId or ownerGroupName when using planTitle . --orderHint [orderHint] Hint used to order items of this type in a list view. The format is defined as outlined here . -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/planner/bucket/bucket-add/#examples","text":"Adds a Microsoft Planner bucket with the name My Planner Bucket for plan with the ID xqQg5FS2LkCp935s-FIFm2QAFkHM with order hint m365 planner bucket add --name \"My Planner Bucket\" --planId \"xqQg5FS2LkCp935s-FIFm2QAFkHM\" --orderHint \" !\" Adds a Microsoft Planner bucket with the name My Planner Bucket for plan with the title My Planner Plan owned by group My Planner Group m365 planner bucket add --name \"My Planner Bucket\" --planTitle \"My Planner Plan\" --ownerGroupName \"My Planner Group\"","title":"Examples"},{"location":"cmd/planner/bucket/bucket-add/#response","text":"JSON Text CSV { \"name\" : \"My Planner Bucket\" , \"planId\" : \"xqQg5FS2LkCp935s-FIFm2QAFkHM\" , \"orderHint\" : \"8585363889524958496\" , \"id\" : \"ttEB_Uj690STdR3GC1MIDZgANq1U\" } id : ttEB_Uj690STdR3GC1MIDZgANq1U name : My Planner Bucket orderHint: 8585363889524958496 planId : xqQg5FS2LkCp935s-FIFm2QAFkHM id,name,planId,orderHint ttEB_Uj690STdR3GC1MIDZgANq1U,My Planner Bucket,xqQg5FS2LkCp935s-FIFm2QAFkHM,8585363889524958496","title":"Response"},{"location":"cmd/planner/bucket/bucket-get/","text":"planner bucket get \u00b6 Gets the Microsoft Planner bucket in a plan Usage \u00b6 m365 planner bucket get [ options ] Options \u00b6 -i, --id [id] ID of the bucket to retrieve details. Specify either id or name but not both. -n, --name [name] Name of the bucket to retrieve details. Specify either id or name but not both. --planId [planId] ID of the plan to which the bucket belongs. Specify either planId or planTitle when using name . --planTitle [planTitle] Title of the plan to which the bucket belongs. Specify either planId or planTitle when using name . --ownerGroupId [ownerGroupId] ID of the group to which the plan belongs. Specify ownerGroupId or ownerGroupName when using planTitle . --ownerGroupName [ownerGroupName] Name of the group to which the plan belongs. Specify ownerGroupId or ownerGroupName when using planTitle . -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Gets the specified Microsoft Planner bucket m365 planner bucket get --id \"5h1uuYFk4kKQ0hfoTUkRLpgALtYi\" Gets the Microsoft Planner bucket in the PlanId xqQg5FS2LkCp935s-FIFm2QAFkHM m365 planner bucket get --name \"Planner Bucket A\" --planId \"xqQg5FS2LkCp935s-FIFm2QAFkHM\" Gets the Microsoft Planner bucket in the Plan My Plan owned by group My Group m365 planner bucket get --name \"Planner Bucket A\" --planTitle \"My Plan\" --ownerGroupName \"My Group\" Gets the Microsoft Planner bucket in the Plan My Plan owned by groupId ee0f40fc-b2f7-45c7-b62d-11b90dd2ea8e m365 planner bucket get --name \"Planner Bucket A\" --planTitle \"My Plan\" --ownerGroupId \"ee0f40fc-b2f7-45c7-b62d-11b90dd2ea8e\" Response \u00b6 JSON Text CSV { \"name\" : \"My Planner Bucket\" , \"planId\" : \"xqQg5FS2LkCp935s-FIFm2QAFkHM\" , \"orderHint\" : \"8585363889524958496\" , \"id\" : \"ttEB_Uj690STdR3GC1MIDZgANq1U\" } id : ttEB_Uj690STdR3GC1MIDZgANq1U name : My Planner Bucket orderHint: 8585363889524958496 planId : xqQg5FS2LkCp935s-FIFm2QAFkHM id,name,planId,orderHint ttEB_Uj690STdR3GC1MIDZgANq1U,My Planner Bucket,xqQg5FS2LkCp935s-FIFm2QAFkHM,8585363889524958496","title":"bucket get"},{"location":"cmd/planner/bucket/bucket-get/#planner-bucket-get","text":"Gets the Microsoft Planner bucket in a plan","title":"planner bucket get"},{"location":"cmd/planner/bucket/bucket-get/#usage","text":"m365 planner bucket get [ options ]","title":"Usage"},{"location":"cmd/planner/bucket/bucket-get/#options","text":"-i, --id [id] ID of the bucket to retrieve details. Specify either id or name but not both. -n, --name [name] Name of the bucket to retrieve details. Specify either id or name but not both. --planId [planId] ID of the plan to which the bucket belongs. Specify either planId or planTitle when using name . --planTitle [planTitle] Title of the plan to which the bucket belongs. Specify either planId or planTitle when using name . --ownerGroupId [ownerGroupId] ID of the group to which the plan belongs. Specify ownerGroupId or ownerGroupName when using planTitle . --ownerGroupName [ownerGroupName] Name of the group to which the plan belongs. Specify ownerGroupId or ownerGroupName when using planTitle . -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/planner/bucket/bucket-get/#examples","text":"Gets the specified Microsoft Planner bucket m365 planner bucket get --id \"5h1uuYFk4kKQ0hfoTUkRLpgALtYi\" Gets the Microsoft Planner bucket in the PlanId xqQg5FS2LkCp935s-FIFm2QAFkHM m365 planner bucket get --name \"Planner Bucket A\" --planId \"xqQg5FS2LkCp935s-FIFm2QAFkHM\" Gets the Microsoft Planner bucket in the Plan My Plan owned by group My Group m365 planner bucket get --name \"Planner Bucket A\" --planTitle \"My Plan\" --ownerGroupName \"My Group\" Gets the Microsoft Planner bucket in the Plan My Plan owned by groupId ee0f40fc-b2f7-45c7-b62d-11b90dd2ea8e m365 planner bucket get --name \"Planner Bucket A\" --planTitle \"My Plan\" --ownerGroupId \"ee0f40fc-b2f7-45c7-b62d-11b90dd2ea8e\"","title":"Examples"},{"location":"cmd/planner/bucket/bucket-get/#response","text":"JSON Text CSV { \"name\" : \"My Planner Bucket\" , \"planId\" : \"xqQg5FS2LkCp935s-FIFm2QAFkHM\" , \"orderHint\" : \"8585363889524958496\" , \"id\" : \"ttEB_Uj690STdR3GC1MIDZgANq1U\" } id : ttEB_Uj690STdR3GC1MIDZgANq1U name : My Planner Bucket orderHint: 8585363889524958496 planId : xqQg5FS2LkCp935s-FIFm2QAFkHM id,name,planId,orderHint ttEB_Uj690STdR3GC1MIDZgANq1U,My Planner Bucket,xqQg5FS2LkCp935s-FIFm2QAFkHM,8585363889524958496","title":"Response"},{"location":"cmd/planner/bucket/bucket-list/","text":"planner bucket list \u00b6 Lists the Microsoft Planner buckets in a plan Usage \u00b6 m365 planner bucket list [ options ] Options \u00b6 --planId [planId] ID of the plan to list the buckets of. Specify either planId or planTitle but not both. --planTitle [planTitle] Title of the plan to list the buckets of. Specify either planId or planTitle but not both. --ownerGroupId [ownerGroupId] ID of the group to which the plan belongs. Specify ownerGroupId or ownerGroupName when using planTitle . --ownerGroupName [ownerGroupName] Name of the group to which the plan belongs. Specify ownerGroupId or ownerGroupName when using planTitle . -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Lists the Microsoft Planner buckets in the Plan xqQg5FS2LkCp935s-FIFm2QAFkHM m365 planner bucket list --planId \"xqQg5FS2LkCp935s-FIFm2QAFkHM\" Lists the Microsoft Planner buckets in the Plan My Plan owned by group My Group m365 planner bucket list --planTitle \"My Plan\" --ownerGroupName \"My Group\" Response \u00b6 JSON Text CSV [ { \"name\" : \"My Planner Bucket\" , \"planId\" : \"xqQg5FS2LkCp935s-FIFm2QAFkHM\" , \"orderHint\" : \"8585363889524958496\" , \"id\" : \"ttEB_Uj690STdR3GC1MIDZgANq1U\" } ] id name planId orderHint ---------------------------- ----------------- ---------------------------- ------------------- ttEB_Uj690STdR3GC1MIDZgANq1U My Planner Bucket xqQg5FS2LkCp935s-FIFm2QAFkHM 8585363889524958496 id,name,planId,orderHint ttEB_Uj690STdR3GC1MIDZgANq1U,My Planner Bucket,xqQg5FS2LkCp935s-FIFm2QAFkHM,8585363889524958496","title":"bucket list"},{"location":"cmd/planner/bucket/bucket-list/#planner-bucket-list","text":"Lists the Microsoft Planner buckets in a plan","title":"planner bucket list"},{"location":"cmd/planner/bucket/bucket-list/#usage","text":"m365 planner bucket list [ options ]","title":"Usage"},{"location":"cmd/planner/bucket/bucket-list/#options","text":"--planId [planId] ID of the plan to list the buckets of. Specify either planId or planTitle but not both. --planTitle [planTitle] Title of the plan to list the buckets of. Specify either planId or planTitle but not both. --ownerGroupId [ownerGroupId] ID of the group to which the plan belongs. Specify ownerGroupId or ownerGroupName when using planTitle . --ownerGroupName [ownerGroupName] Name of the group to which the plan belongs. Specify ownerGroupId or ownerGroupName when using planTitle . -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/planner/bucket/bucket-list/#examples","text":"Lists the Microsoft Planner buckets in the Plan xqQg5FS2LkCp935s-FIFm2QAFkHM m365 planner bucket list --planId \"xqQg5FS2LkCp935s-FIFm2QAFkHM\" Lists the Microsoft Planner buckets in the Plan My Plan owned by group My Group m365 planner bucket list --planTitle \"My Plan\" --ownerGroupName \"My Group\"","title":"Examples"},{"location":"cmd/planner/bucket/bucket-list/#response","text":"JSON Text CSV [ { \"name\" : \"My Planner Bucket\" , \"planId\" : \"xqQg5FS2LkCp935s-FIFm2QAFkHM\" , \"orderHint\" : \"8585363889524958496\" , \"id\" : \"ttEB_Uj690STdR3GC1MIDZgANq1U\" } ] id name planId orderHint ---------------------------- ----------------- ---------------------------- ------------------- ttEB_Uj690STdR3GC1MIDZgANq1U My Planner Bucket xqQg5FS2LkCp935s-FIFm2QAFkHM 8585363889524958496 id,name,planId,orderHint ttEB_Uj690STdR3GC1MIDZgANq1U,My Planner Bucket,xqQg5FS2LkCp935s-FIFm2QAFkHM,8585363889524958496","title":"Response"},{"location":"cmd/planner/bucket/bucket-remove/","text":"planner bucket remove \u00b6 Removes the Microsoft Planner bucket from a plan Usage \u00b6 m365 planner bucket remove [ options ] Options \u00b6 -i, --id [id] ID of the bucket to remove. Specify either id or name but not both. -n, --name [name] Name of the bucket to remove. Specify either id or name but not both. --planId [planId] ID of the plan to which the bucket to remove belongs. Specify either planId or planTitle when using name . --planTitle [planTitle] Title of the plan to which the bucket to remove belongs. Specify either planId or planTitle when using name . --ownerGroupId [ownerGroupId] ID of the group to which the plan belongs. Specify either ownerGroupId or ownerGroupName when using planTitle . --ownerGroupName [ownerGroupName] Name of the group to which the plan belongs. Specify either ownerGroupId or ownerGroupName when using planTitle . --confirm Don't prompt for confirmation -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Removes the Microsoft Planner bucket by ID m365 planner bucket remove --id \"vncYUXCRBke28qMLB-d4xJcACtNz\" Removes the Microsoft Planner bucket by ID without confirmation m365 planner bucket remove --id \"vncYUXCRBke28qMLB-d4xJcACtNz\" --confirm Removes the Microsoft Planner bucket with name My Bucket in the Plan with ID oUHpnKBFekqfGE_PS6GGUZcAFY7b m365 planner bucket remove --name \"My Bucket\" --planId \"oUHpnKBFekqfGE_PS6GGUZcAFY7b\" Removes the Microsoft Planner bucket with name My Bucket in the Plan My Plan owned by group My Group m365 planner bucket remove --name \"My Bucket\" --planTitle \"My Plan\" --ownerGroupName \"My Group\" Response \u00b6 The command won't return a response on success.","title":"bucket remove"},{"location":"cmd/planner/bucket/bucket-remove/#planner-bucket-remove","text":"Removes the Microsoft Planner bucket from a plan","title":"planner bucket remove"},{"location":"cmd/planner/bucket/bucket-remove/#usage","text":"m365 planner bucket remove [ options ]","title":"Usage"},{"location":"cmd/planner/bucket/bucket-remove/#options","text":"-i, --id [id] ID of the bucket to remove. Specify either id or name but not both. -n, --name [name] Name of the bucket to remove. Specify either id or name but not both. --planId [planId] ID of the plan to which the bucket to remove belongs. Specify either planId or planTitle when using name . --planTitle [planTitle] Title of the plan to which the bucket to remove belongs. Specify either planId or planTitle when using name . --ownerGroupId [ownerGroupId] ID of the group to which the plan belongs. Specify either ownerGroupId or ownerGroupName when using planTitle . --ownerGroupName [ownerGroupName] Name of the group to which the plan belongs. Specify either ownerGroupId or ownerGroupName when using planTitle . --confirm Don't prompt for confirmation -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/planner/bucket/bucket-remove/#examples","text":"Removes the Microsoft Planner bucket by ID m365 planner bucket remove --id \"vncYUXCRBke28qMLB-d4xJcACtNz\" Removes the Microsoft Planner bucket by ID without confirmation m365 planner bucket remove --id \"vncYUXCRBke28qMLB-d4xJcACtNz\" --confirm Removes the Microsoft Planner bucket with name My Bucket in the Plan with ID oUHpnKBFekqfGE_PS6GGUZcAFY7b m365 planner bucket remove --name \"My Bucket\" --planId \"oUHpnKBFekqfGE_PS6GGUZcAFY7b\" Removes the Microsoft Planner bucket with name My Bucket in the Plan My Plan owned by group My Group m365 planner bucket remove --name \"My Bucket\" --planTitle \"My Plan\" --ownerGroupName \"My Group\"","title":"Examples"},{"location":"cmd/planner/bucket/bucket-remove/#response","text":"The command won't return a response on success.","title":"Response"},{"location":"cmd/planner/bucket/bucket-set/","text":"planner bucket set \u00b6 Updates a Microsoft Planner bucket Usage \u00b6 m365 planner bucket set [ options ] Options \u00b6 -i, --id [id] ID of the bucket. Specify either id or name but not both. -n, --name [name] Name of the bucket. Specify either id or name but not both. --planId [planId] ID of the plan to update the bucket of. Specify either planId or planTitle when using name . --planTitle [planTitle] Title of the plan to update the bucket of. Specify either planId or planTitle when using name . Always use in combination with either ownerGroupId or ownerGroupName . --ownerGroupId [ownerGroupId] ID of the group to which the plan belongs. Specify ownerGroupId or ownerGroupName when using planTitle . --ownerGroupName [ownerGroupName] Name of the group to which the plan belongs. Specify ownerGroupId or ownerGroupName when using planTitle . --newName [newName] New name of the bucket. --orderHint [orderHint] Hint used to order items of this type in a list view. The format is defined as outlined here . -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Updates the Microsoft Planner bucket with ID vncYUXCRBke28qMLB-d4xJcACtNz m365 planner bucket set --id \"vncYUXCRBke28qMLB-d4xJcACtNz\" --newName \"New bucket name\" Updates the Microsoft Planner bucket named My Bucket in the Plan My Plan owned by group My Group m365 planner bucket set --name \"My Bucket\" --planTitle \"My Plan\" --ownerGroupName \"My Group\" --newName \"New bucket name\" Updates the Microsoft Planner bucket named My Bucket in the Plan My Plan owned by group with ID 00000000-0000-0000-0000-000000000000 m365 planner bucket set --name \"My Bucket\" --planTitle \"My Plan\" --ownerGroupId 00000000 -0000-0000-0000-000000000000 --newName \"New bucket name\" Response \u00b6 The command won't return a response on success.","title":"bucket set"},{"location":"cmd/planner/bucket/bucket-set/#planner-bucket-set","text":"Updates a Microsoft Planner bucket","title":"planner bucket set"},{"location":"cmd/planner/bucket/bucket-set/#usage","text":"m365 planner bucket set [ options ]","title":"Usage"},{"location":"cmd/planner/bucket/bucket-set/#options","text":"-i, --id [id] ID of the bucket. Specify either id or name but not both. -n, --name [name] Name of the bucket. Specify either id or name but not both. --planId [planId] ID of the plan to update the bucket of. Specify either planId or planTitle when using name . --planTitle [planTitle] Title of the plan to update the bucket of. Specify either planId or planTitle when using name . Always use in combination with either ownerGroupId or ownerGroupName . --ownerGroupId [ownerGroupId] ID of the group to which the plan belongs. Specify ownerGroupId or ownerGroupName when using planTitle . --ownerGroupName [ownerGroupName] Name of the group to which the plan belongs. Specify ownerGroupId or ownerGroupName when using planTitle . --newName [newName] New name of the bucket. --orderHint [orderHint] Hint used to order items of this type in a list view. The format is defined as outlined here . -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/planner/bucket/bucket-set/#examples","text":"Updates the Microsoft Planner bucket with ID vncYUXCRBke28qMLB-d4xJcACtNz m365 planner bucket set --id \"vncYUXCRBke28qMLB-d4xJcACtNz\" --newName \"New bucket name\" Updates the Microsoft Planner bucket named My Bucket in the Plan My Plan owned by group My Group m365 planner bucket set --name \"My Bucket\" --planTitle \"My Plan\" --ownerGroupName \"My Group\" --newName \"New bucket name\" Updates the Microsoft Planner bucket named My Bucket in the Plan My Plan owned by group with ID 00000000-0000-0000-0000-000000000000 m365 planner bucket set --name \"My Bucket\" --planTitle \"My Plan\" --ownerGroupId 00000000 -0000-0000-0000-000000000000 --newName \"New bucket name\"","title":"Examples"},{"location":"cmd/planner/bucket/bucket-set/#response","text":"The command won't return a response on success.","title":"Response"},{"location":"cmd/planner/plan/plan-add/","text":"planner plan add \u00b6 Adds a new Microsoft Planner plan Usage \u00b6 m365 planner plan add [ options ] Options \u00b6 -t, --title <title> Title of the plan to add. --ownerGroupId [ownerGroupId] ID of the Group that owns the plan. A valid group must exist before this option can be set. Specify either ownerGroupId or ownerGroupName but not both. --ownerGroupName [ownerGroupName] Name of the Group that owns the plan. A valid group must exist before this option can be set. Specify either ownerGroupId or ownerGroupName but not both. --shareWithUserIds [shareWithUserIds] The comma-separated IDs of the users with whom you want to share the plan. Specify either shareWithUserIds or shareWithUserNames but not both. --shareWithUserNames [shareWithUserNames] The comma-separated UPNs of the users with whom you want to share the plan. Specify either shareWithUserIds or shareWithUserNames but not both. -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 Related to the options --shareWithUserIds and --shareWithUserNames . If you are leveraging Microsoft 365 groups, use the aad o365group user commands to manage group membership to share the group's plan. You can also add existing members of the group to this collection though it is not required for them to access the plan owned by the group. Examples \u00b6 Adds a Microsoft Planner plan with the name My Planner Plan for Group 233e43d0-dc6a-482e-9b4e-0de7a7bce9b4 m365 planner plan add --title 'My Planner Plan' --ownerGroupId '233e43d0-dc6a-482e-9b4e-0de7a7bce9b4' Adds a Microsoft Planner plan with the name My Planner Plan for Group My Planner Group m365 planner plan add --title 'My Planner Plan' --ownerGroupName 'My Planner Group' Adds a Microsoft Planner plan with the name My Planner Plan for Group My Planner Group and share it with the users Allan.Carroll@contoso.com and Ida.Stevens@contoso.com m365 planner plan add --title 'My Planner Plan' --ownerGroupName 'My Planner Group' --shareWithUserNames 'Allan.Carroll@contoso.com,Ida.Stevens@contoso.com' Response \u00b6 Standard response \u00b6 JSON Text CSV { \"createdDateTime\" : \"2015-03-30T18:36:49.2407981Z\" , \"owner\" : \"ebf3b108-5234-4e22-b93d-656d7dae5874\" , \"title\" : \"My Planner Plan\" , \"id\" : \"xqQg5FS2LkCp935s-FIFm2QAFkHM\" , \"createdBy\" : { \"user\" : { \"displayName\" : null , \"id\" : \"95e27074-6c4a-447a-aa24-9d718a0b86fa\" }, \"application\" : { \"displayName\" : null , \"id\" : \"ebf3b108-5234-4e22-b93d-656d7dae5874\" } }, \"container\" : { \"containerId\" : \"ebf3b108-5234-4e22-b93d-656d7dae5874\" , \"type\" : \"group\" , \"url\" : \"https://graph.microsoft.com/v1.0/groups/ebf3b108-5234-4e22-b93d-656d7dae5874\" } } createdDateTime: 2015-03-30T18:36:49.2407981Z id : xqQg5FS2LkCp935s-FIFm2QAFkHM owner : ebf3b108-5234-4e22-b93d-656d7dae5874 title : My Planner Plan id,title,createdDateTime,owner xqQg5FS2LkCp935s-FIFm2QAFkHM,My Planner Plan,2015-03-30T18:36:49.2407981Z,ebf3b108-5234-4e22-b93d-656d7dae5874 shareWithUserIds , shareWithUserNames response \u00b6 When we make use of the option shareWithUserIds or shareWithUserNames the response will differ. JSON Text CSV { \"createdDateTime\" : \"2015-03-30T18:36:49.2407981Z\" , \"owner\" : \"ebf3b108-5234-4e22-b93d-656d7dae5874\" , \"title\" : \"My Planner Plan\" , \"id\" : \"xqQg5FS2LkCp935s-FIFm2QAFkHM\" , \"createdBy\" : { \"user\" : { \"displayName\" : null , \"id\" : \"95e27074-6c4a-447a-aa24-9d718a0b86fa\" }, \"application\" : { \"displayName\" : null , \"id\" : \"ebf3b108-5234-4e22-b93d-656d7dae5874\" } }, \"container\" : { \"containerId\" : \"ebf3b108-5234-4e22-b93d-656d7dae5874\" , \"type\" : \"group\" , \"url\" : \"https://graph.microsoft.com/v1.0/groups/ebf3b108-5234-4e22-b93d-656d7dae5874\" }, \"sharedWith\" : { \"ebf3b108-5234-4e22-b93d-656d7dae5874\" : true , \"6463a5ce-2119-4198-9f2a-628761df4a62\" : true }, \"categoryDescriptions\" : { \"category1\" : null , \"category2\" : null , \"category3\" : null , \"category4\" : null , \"category5\" : null , \"category6\" : null , \"category7\" : null , \"category8\" : null , \"category9\" : null , \"category10\" : null , \"category11\" : null , \"category12\" : null , \"category13\" : null , \"category14\" : null , \"category15\" : null , \"category16\" : null , \"category17\" : null , \"category18\" : null , \"category19\" : null , \"category20\" : null , \"category21\" : null , \"category22\" : null , \"category23\" : null , \"category24\" : null , \"category25\" : null } } createdDateTime: 2015-03-30T18:36:49.2407981Z id : xqQg5FS2LkCp935s-FIFm2QAFkHM owner : ebf3b108-5234-4e22-b93d-656d7dae5874 title : My Planner Plan id,title,createdDateTime,owner xqQg5FS2LkCp935s-FIFm2QAFkHM,My Planner Plan,2015-03-30T18:36:49.2407981Z,ebf3b108-5234-4e22-b93d-656d7dae5874","title":"plan add"},{"location":"cmd/planner/plan/plan-add/#planner-plan-add","text":"Adds a new Microsoft Planner plan","title":"planner plan add"},{"location":"cmd/planner/plan/plan-add/#usage","text":"m365 planner plan add [ options ]","title":"Usage"},{"location":"cmd/planner/plan/plan-add/#options","text":"-t, --title <title> Title of the plan to add. --ownerGroupId [ownerGroupId] ID of the Group that owns the plan. A valid group must exist before this option can be set. Specify either ownerGroupId or ownerGroupName but not both. --ownerGroupName [ownerGroupName] Name of the Group that owns the plan. A valid group must exist before this option can be set. Specify either ownerGroupId or ownerGroupName but not both. --shareWithUserIds [shareWithUserIds] The comma-separated IDs of the users with whom you want to share the plan. Specify either shareWithUserIds or shareWithUserNames but not both. --shareWithUserNames [shareWithUserNames] The comma-separated UPNs of the users with whom you want to share the plan. Specify either shareWithUserIds or shareWithUserNames but not both. -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/planner/plan/plan-add/#remarks","text":"Related to the options --shareWithUserIds and --shareWithUserNames . If you are leveraging Microsoft 365 groups, use the aad o365group user commands to manage group membership to share the group's plan. You can also add existing members of the group to this collection though it is not required for them to access the plan owned by the group.","title":"Remarks"},{"location":"cmd/planner/plan/plan-add/#examples","text":"Adds a Microsoft Planner plan with the name My Planner Plan for Group 233e43d0-dc6a-482e-9b4e-0de7a7bce9b4 m365 planner plan add --title 'My Planner Plan' --ownerGroupId '233e43d0-dc6a-482e-9b4e-0de7a7bce9b4' Adds a Microsoft Planner plan with the name My Planner Plan for Group My Planner Group m365 planner plan add --title 'My Planner Plan' --ownerGroupName 'My Planner Group' Adds a Microsoft Planner plan with the name My Planner Plan for Group My Planner Group and share it with the users Allan.Carroll@contoso.com and Ida.Stevens@contoso.com m365 planner plan add --title 'My Planner Plan' --ownerGroupName 'My Planner Group' --shareWithUserNames 'Allan.Carroll@contoso.com,Ida.Stevens@contoso.com'","title":"Examples"},{"location":"cmd/planner/plan/plan-add/#response","text":"","title":"Response"},{"location":"cmd/planner/plan/plan-add/#standard-response","text":"JSON Text CSV { \"createdDateTime\" : \"2015-03-30T18:36:49.2407981Z\" , \"owner\" : \"ebf3b108-5234-4e22-b93d-656d7dae5874\" , \"title\" : \"My Planner Plan\" , \"id\" : \"xqQg5FS2LkCp935s-FIFm2QAFkHM\" , \"createdBy\" : { \"user\" : { \"displayName\" : null , \"id\" : \"95e27074-6c4a-447a-aa24-9d718a0b86fa\" }, \"application\" : { \"displayName\" : null , \"id\" : \"ebf3b108-5234-4e22-b93d-656d7dae5874\" } }, \"container\" : { \"containerId\" : \"ebf3b108-5234-4e22-b93d-656d7dae5874\" , \"type\" : \"group\" , \"url\" : \"https://graph.microsoft.com/v1.0/groups/ebf3b108-5234-4e22-b93d-656d7dae5874\" } } createdDateTime: 2015-03-30T18:36:49.2407981Z id : xqQg5FS2LkCp935s-FIFm2QAFkHM owner : ebf3b108-5234-4e22-b93d-656d7dae5874 title : My Planner Plan id,title,createdDateTime,owner xqQg5FS2LkCp935s-FIFm2QAFkHM,My Planner Plan,2015-03-30T18:36:49.2407981Z,ebf3b108-5234-4e22-b93d-656d7dae5874","title":"Standard response"},{"location":"cmd/planner/plan/plan-add/#sharewithuserids-sharewithusernames-response","text":"When we make use of the option shareWithUserIds or shareWithUserNames the response will differ. JSON Text CSV { \"createdDateTime\" : \"2015-03-30T18:36:49.2407981Z\" , \"owner\" : \"ebf3b108-5234-4e22-b93d-656d7dae5874\" , \"title\" : \"My Planner Plan\" , \"id\" : \"xqQg5FS2LkCp935s-FIFm2QAFkHM\" , \"createdBy\" : { \"user\" : { \"displayName\" : null , \"id\" : \"95e27074-6c4a-447a-aa24-9d718a0b86fa\" }, \"application\" : { \"displayName\" : null , \"id\" : \"ebf3b108-5234-4e22-b93d-656d7dae5874\" } }, \"container\" : { \"containerId\" : \"ebf3b108-5234-4e22-b93d-656d7dae5874\" , \"type\" : \"group\" , \"url\" : \"https://graph.microsoft.com/v1.0/groups/ebf3b108-5234-4e22-b93d-656d7dae5874\" }, \"sharedWith\" : { \"ebf3b108-5234-4e22-b93d-656d7dae5874\" : true , \"6463a5ce-2119-4198-9f2a-628761df4a62\" : true }, \"categoryDescriptions\" : { \"category1\" : null , \"category2\" : null , \"category3\" : null , \"category4\" : null , \"category5\" : null , \"category6\" : null , \"category7\" : null , \"category8\" : null , \"category9\" : null , \"category10\" : null , \"category11\" : null , \"category12\" : null , \"category13\" : null , \"category14\" : null , \"category15\" : null , \"category16\" : null , \"category17\" : null , \"category18\" : null , \"category19\" : null , \"category20\" : null , \"category21\" : null , \"category22\" : null , \"category23\" : null , \"category24\" : null , \"category25\" : null } } createdDateTime: 2015-03-30T18:36:49.2407981Z id : xqQg5FS2LkCp935s-FIFm2QAFkHM owner : ebf3b108-5234-4e22-b93d-656d7dae5874 title : My Planner Plan id,title,createdDateTime,owner xqQg5FS2LkCp935s-FIFm2QAFkHM,My Planner Plan,2015-03-30T18:36:49.2407981Z,ebf3b108-5234-4e22-b93d-656d7dae5874","title":"shareWithUserIds, shareWithUserNames response"},{"location":"cmd/planner/plan/plan-get/","text":"planner plan get \u00b6 Retrieve information about the specified plan Usage \u00b6 m365 planner plan get [ options ] Options \u00b6 -i, --id [id] ID of the plan. Specify either id or title but not both. -t, --title [title] Title of the plan. Specify either id or title but not both. --ownerGroupId [ownerGroupId] ID of the Group that owns the plan. Specify either ownerGroupId or ownerGroupName when using title or the deprecated planTitle . --ownerGroupName [ownerGroupName] Name of the Group that owns the plan. Specify either ownerGroupId or ownerGroupName when using title or the deprecated planTitle . -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Returns the Microsoft Planner plan with id gndWOTSK60GfPQfiDDj43JgACDCb m365 planner plan get --id \"gndWOTSK60GfPQfiDDj43JgACDCb\" Returns the Microsoft Planner plan with title MyPlan for Group 233e43d0-dc6a-482e-9b4e-0de7a7bce9b4 m365 planner plan get --title \"MyPlan\" --ownerGroupId \"233e43d0-dc6a-482e-9b4e-0de7a7bce9b4\" Returns the Microsoft Planner plan with title MyPlan for Group My Planner Group m365 planner plan get --title \"MyPlan\" --ownerGroupName \"My Planner Group\" Response \u00b6 JSON Text CSV { \"createdDateTime\" : \"2015-03-30T18:36:49.2407981Z\" , \"owner\" : \"ebf3b108-5234-4e22-b93d-656d7dae5874\" , \"title\" : \"My Planner Plan\" , \"id\" : \"xqQg5FS2LkCp935s-FIFm2QAFkHM\" , \"createdBy\" : { \"user\" : { \"displayName\" : null , \"id\" : \"95e27074-6c4a-447a-aa24-9d718a0b86fa\" }, \"application\" : { \"displayName\" : null , \"id\" : \"ebf3b108-5234-4e22-b93d-656d7dae5874\" } }, \"container\" : { \"containerId\" : \"ebf3b108-5234-4e22-b93d-656d7dae5874\" , \"type\" : \"group\" , \"url\" : \"https://graph.microsoft.com/v1.0/groups/ebf3b108-5234-4e22-b93d-656d7dae5874\" }, \"sharedWith\" : { \"ebf3b108-5234-4e22-b93d-656d7dae5874\" : true , \"6463a5ce-2119-4198-9f2a-628761df4a62\" : true }, \"categoryDescriptions\" : { \"category1\" : null , \"category2\" : null , \"category3\" : null , \"category4\" : null , \"category5\" : null , \"category6\" : null , \"category7\" : null , \"category8\" : null , \"category9\" : null , \"category10\" : null , \"category11\" : null , \"category12\" : null , \"category13\" : null , \"category14\" : null , \"category15\" : null , \"category16\" : null , \"category17\" : null , \"category18\" : null , \"category19\" : null , \"category20\" : null , \"category21\" : null , \"category22\" : null , \"category23\" : null , \"category24\" : null , \"category25\" : null } } createdDateTime: 2015-03-30T18:36:49.2407981Z id : xqQg5FS2LkCp935s-FIFm2QAFkHM owner : ebf3b108-5234-4e22-b93d-656d7dae5874 title : My Planner Plan id,title,createdDateTime,owner xqQg5FS2LkCp935s-FIFm2QAFkHM,My Planner Plan,2015-03-30T18:36:49.2407981Z,ebf3b108-5234-4e22-b93d-656d7dae5874","title":"plan get"},{"location":"cmd/planner/plan/plan-get/#planner-plan-get","text":"Retrieve information about the specified plan","title":"planner plan get"},{"location":"cmd/planner/plan/plan-get/#usage","text":"m365 planner plan get [ options ]","title":"Usage"},{"location":"cmd/planner/plan/plan-get/#options","text":"-i, --id [id] ID of the plan. Specify either id or title but not both. -t, --title [title] Title of the plan. Specify either id or title but not both. --ownerGroupId [ownerGroupId] ID of the Group that owns the plan. Specify either ownerGroupId or ownerGroupName when using title or the deprecated planTitle . --ownerGroupName [ownerGroupName] Name of the Group that owns the plan. Specify either ownerGroupId or ownerGroupName when using title or the deprecated planTitle . -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/planner/plan/plan-get/#examples","text":"Returns the Microsoft Planner plan with id gndWOTSK60GfPQfiDDj43JgACDCb m365 planner plan get --id \"gndWOTSK60GfPQfiDDj43JgACDCb\" Returns the Microsoft Planner plan with title MyPlan for Group 233e43d0-dc6a-482e-9b4e-0de7a7bce9b4 m365 planner plan get --title \"MyPlan\" --ownerGroupId \"233e43d0-dc6a-482e-9b4e-0de7a7bce9b4\" Returns the Microsoft Planner plan with title MyPlan for Group My Planner Group m365 planner plan get --title \"MyPlan\" --ownerGroupName \"My Planner Group\"","title":"Examples"},{"location":"cmd/planner/plan/plan-get/#response","text":"JSON Text CSV { \"createdDateTime\" : \"2015-03-30T18:36:49.2407981Z\" , \"owner\" : \"ebf3b108-5234-4e22-b93d-656d7dae5874\" , \"title\" : \"My Planner Plan\" , \"id\" : \"xqQg5FS2LkCp935s-FIFm2QAFkHM\" , \"createdBy\" : { \"user\" : { \"displayName\" : null , \"id\" : \"95e27074-6c4a-447a-aa24-9d718a0b86fa\" }, \"application\" : { \"displayName\" : null , \"id\" : \"ebf3b108-5234-4e22-b93d-656d7dae5874\" } }, \"container\" : { \"containerId\" : \"ebf3b108-5234-4e22-b93d-656d7dae5874\" , \"type\" : \"group\" , \"url\" : \"https://graph.microsoft.com/v1.0/groups/ebf3b108-5234-4e22-b93d-656d7dae5874\" }, \"sharedWith\" : { \"ebf3b108-5234-4e22-b93d-656d7dae5874\" : true , \"6463a5ce-2119-4198-9f2a-628761df4a62\" : true }, \"categoryDescriptions\" : { \"category1\" : null , \"category2\" : null , \"category3\" : null , \"category4\" : null , \"category5\" : null , \"category6\" : null , \"category7\" : null , \"category8\" : null , \"category9\" : null , \"category10\" : null , \"category11\" : null , \"category12\" : null , \"category13\" : null , \"category14\" : null , \"category15\" : null , \"category16\" : null , \"category17\" : null , \"category18\" : null , \"category19\" : null , \"category20\" : null , \"category21\" : null , \"category22\" : null , \"category23\" : null , \"category24\" : null , \"category25\" : null } } createdDateTime: 2015-03-30T18:36:49.2407981Z id : xqQg5FS2LkCp935s-FIFm2QAFkHM owner : ebf3b108-5234-4e22-b93d-656d7dae5874 title : My Planner Plan id,title,createdDateTime,owner xqQg5FS2LkCp935s-FIFm2QAFkHM,My Planner Plan,2015-03-30T18:36:49.2407981Z,ebf3b108-5234-4e22-b93d-656d7dae5874","title":"Response"},{"location":"cmd/planner/plan/plan-list/","text":"planner plan list \u00b6 Returns a list of plans associated with a specified group Usage \u00b6 m365 planner plan list [ options ] Options \u00b6 --ownerGroupId [ownerGroupId] ID of the Group that owns the plan. Specify either ownerGroupId or ownerGroupName but not both. --ownerGroupName [ownerGroupName] Name of the Group that owns the plan. Specify either ownerGroupId or ownerGroupName but not both. -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Returns a list of Microsoft Planner plans for Group 233e43d0-dc6a-482e-9b4e-0de7a7bce9b4 m365 planner plan list --ownerGroupId \"233e43d0-dc6a-482e-9b4e-0de7a7bce9b4\" Returns a list of Microsoft Planner plans for Group My Planner Group m365 planner plan list --ownerGroupName \"My Planner Group\" Response \u00b6 JSON Text CSV [ { \"createdDateTime\" : \"2015-03-30T18:36:49.2407981Z\" , \"owner\" : \"ebf3b108-5234-4e22-b93d-656d7dae5874\" , \"title\" : \"My Planner Plan\" , \"id\" : \"xqQg5FS2LkCp935s-FIFm2QAFkHM\" , \"createdBy\" : { \"user\" : { \"displayName\" : null , \"id\" : \"95e27074-6c4a-447a-aa24-9d718a0b86fa\" }, \"application\" : { \"displayName\" : null , \"id\" : \"ebf3b108-5234-4e22-b93d-656d7dae5874\" } }, \"container\" : { \"containerId\" : \"ebf3b108-5234-4e22-b93d-656d7dae5874\" , \"type\" : \"group\" , \"url\" : \"https://graph.microsoft.com/v1.0/groups/ebf3b108-5234-4e22-b93d-656d7dae5874\" } } ] id title createdDateTime owner ---------------------------- --------------- ---------------------------- ------------------------------------ xqQg5FS2LkCp935s-FIFm2QAFkHM My Planner Plan 2015-03-30T18:36:49.2407981Z ebf3b108-5234-4e22-b93d-656d7dae5874 id,title,createdDateTime,owner xqQg5FS2LkCp935s-FIFm2QAFkHM,My Planner Plan,2015-03-30T18:36:49.2407981Z,ebf3b108-5234-4e22-b93d-656d7dae5874","title":"plan list"},{"location":"cmd/planner/plan/plan-list/#planner-plan-list","text":"Returns a list of plans associated with a specified group","title":"planner plan list"},{"location":"cmd/planner/plan/plan-list/#usage","text":"m365 planner plan list [ options ]","title":"Usage"},{"location":"cmd/planner/plan/plan-list/#options","text":"--ownerGroupId [ownerGroupId] ID of the Group that owns the plan. Specify either ownerGroupId or ownerGroupName but not both. --ownerGroupName [ownerGroupName] Name of the Group that owns the plan. Specify either ownerGroupId or ownerGroupName but not both. -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/planner/plan/plan-list/#examples","text":"Returns a list of Microsoft Planner plans for Group 233e43d0-dc6a-482e-9b4e-0de7a7bce9b4 m365 planner plan list --ownerGroupId \"233e43d0-dc6a-482e-9b4e-0de7a7bce9b4\" Returns a list of Microsoft Planner plans for Group My Planner Group m365 planner plan list --ownerGroupName \"My Planner Group\"","title":"Examples"},{"location":"cmd/planner/plan/plan-list/#response","text":"JSON Text CSV [ { \"createdDateTime\" : \"2015-03-30T18:36:49.2407981Z\" , \"owner\" : \"ebf3b108-5234-4e22-b93d-656d7dae5874\" , \"title\" : \"My Planner Plan\" , \"id\" : \"xqQg5FS2LkCp935s-FIFm2QAFkHM\" , \"createdBy\" : { \"user\" : { \"displayName\" : null , \"id\" : \"95e27074-6c4a-447a-aa24-9d718a0b86fa\" }, \"application\" : { \"displayName\" : null , \"id\" : \"ebf3b108-5234-4e22-b93d-656d7dae5874\" } }, \"container\" : { \"containerId\" : \"ebf3b108-5234-4e22-b93d-656d7dae5874\" , \"type\" : \"group\" , \"url\" : \"https://graph.microsoft.com/v1.0/groups/ebf3b108-5234-4e22-b93d-656d7dae5874\" } } ] id title createdDateTime owner ---------------------------- --------------- ---------------------------- ------------------------------------ xqQg5FS2LkCp935s-FIFm2QAFkHM My Planner Plan 2015-03-30T18:36:49.2407981Z ebf3b108-5234-4e22-b93d-656d7dae5874 id,title,createdDateTime,owner xqQg5FS2LkCp935s-FIFm2QAFkHM,My Planner Plan,2015-03-30T18:36:49.2407981Z,ebf3b108-5234-4e22-b93d-656d7dae5874","title":"Response"},{"location":"cmd/planner/plan/plan-remove/","text":"planner plan remove \u00b6 Removes the Microsoft Planner plan Usage \u00b6 m365 planner plan remove [ options ] Options \u00b6 i, --id [id] ID of the plan to remove. Specify either id or title but not both. -t, --title [title] Title of the plan to remove. Specify either id or title but not both. --ownerGroupId [ownerGroupId] ID of the Group that owns the plan. Specify either ownerGroupId or ownerGroupName when using title . --ownerGroupName [ownerGroupName] Name of the Group that owns the plan. Specify either ownerGroupId or ownerGroupName when using title . --confirm Don't prompt for confirmation. -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Removes the Microsoft Planner plan by ID m365 planner plan remove --id gndWOTSK60GfPQfiDDj43JgACDCb Removes the Microsoft Planner plan with title My Plan in group with specific ID m365 planner plan remove --title \"My Plan\" --ownerGroupId 00000000 -0000-0000-0000-000000000000 Removes the Microsoft Planner plan with title My Plan in group with name My Planner Group without confirmation prompt m365 planner plan remove --title \"My Plan\" --ownerGroupName \"My Planner Group\" --confirm Response \u00b6 The command won't return a response on success.","title":"plan remove"},{"location":"cmd/planner/plan/plan-remove/#planner-plan-remove","text":"Removes the Microsoft Planner plan","title":"planner plan remove"},{"location":"cmd/planner/plan/plan-remove/#usage","text":"m365 planner plan remove [ options ]","title":"Usage"},{"location":"cmd/planner/plan/plan-remove/#options","text":"i, --id [id] ID of the plan to remove. Specify either id or title but not both. -t, --title [title] Title of the plan to remove. Specify either id or title but not both. --ownerGroupId [ownerGroupId] ID of the Group that owns the plan. Specify either ownerGroupId or ownerGroupName when using title . --ownerGroupName [ownerGroupName] Name of the Group that owns the plan. Specify either ownerGroupId or ownerGroupName when using title . --confirm Don't prompt for confirmation. -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/planner/plan/plan-remove/#examples","text":"Removes the Microsoft Planner plan by ID m365 planner plan remove --id gndWOTSK60GfPQfiDDj43JgACDCb Removes the Microsoft Planner plan with title My Plan in group with specific ID m365 planner plan remove --title \"My Plan\" --ownerGroupId 00000000 -0000-0000-0000-000000000000 Removes the Microsoft Planner plan with title My Plan in group with name My Planner Group without confirmation prompt m365 planner plan remove --title \"My Plan\" --ownerGroupName \"My Planner Group\" --confirm","title":"Examples"},{"location":"cmd/planner/plan/plan-remove/#response","text":"The command won't return a response on success.","title":"Response"},{"location":"cmd/planner/task/task-add/","text":"planner task add \u00b6 Adds a new Microsoft Planner task Usage \u00b6 m365 planner task add [ options ] Options \u00b6 -t, --title <title> Title of the task to add. --planId [planId] ID of the plan to which the task belongs. Specify either planId or planTitle but not both. --planTitle [planTitle] Title of the plan to which the task belongs. Specify either planId or planTitle but not both. --ownerGroupId [ownerGroupId] ID of the group to which the plan belongs. Specify ownerGroupId or ownerGroupName when using planTitle . --ownerGroupName [ownerGroupName] Name of the group to which the plan belongs. Specify ownerGroupId or ownerGroupName when using planTitle . --bucketId [bucketId] ID of the bucket to which the task belongs. The bucket needs to exist in the selected plan. Specify either bucketId or bucketName but not both. --bucketName [bucketName] Name of the bucket to which the task belongs. The bucket needs to exist in the selected plan. Specify either bucketId or bucketName but not both. --startDateTime [startDateTime] The date and time when the task started. This should be defined as a valid ISO 8601 string. 2021-12-16T18:28:48.6964197Z --dueDateTime [dueDateTime] The date and time when the task is due. This should be defined as a valid ISO 8601 string. 2021-12-16T18:28:48.6964197Z --percentComplete [percentComplete] Percentage of task completion. Number between 0 and 100. --assignedToUserIds [assignedToUserIds] The comma-separated IDs of the assignees the task is assigned to. Specify either assignedToUserIds or assignedToUserNames but not both. --assignedToUserNames [assignedToUserNames] The comma-separated UPNs of the assignees the task is assigned to. Specify either assignedToUserIds or assignedToUserNames but not both. --assigneePriority [assigneePriority] Hint used to order items of this type in a list view. The format is defined as outlined here . --description [description] Description of the task --appliedCategories [appliedCategories] Comma-separated categories that should be added to the task. The possible options are: category1 , category2 , category3 , category4 , category5 and/or category6 . Additional info defined here . --previewType [previewType] This sets the type of preview that shows up on the task. The possible values are: automatic , noPreview , checklist , description , reference . When set to automatic the displayed preview is chosen by the app viewing the task. Default automatic . --orderHint [orderHint] Hint used to order items of this type in a list view. The format is defined as outlined here . --priority [priority] Priority of the task: Urgent, Important, Medium, Low. Or an integer between 0 and 10 (check remarks section for more info). Default value is Medium. -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 When you specify the value for percentComplete , consider the following: when set to 0, the task is considered Not started when set between 1 and 99, the task is considered In progress when set to 100, the task is considered Completed When you specify an integer value for priority , consider the following: values 0 and 1 are interpreted as Urgent values 2, 3 and 4 are interpreted as Important values 5, 6 and 7 are interpreted as Medium values 8, 9 and 10 are interpreted as Low Examples \u00b6 Adds a Microsoft Planner task with the name My Planner Task for plan with the ID 8QZEH7b3wkSbGQobscsM5gADCBa and for the bucket with the ID IK8tuFTwQEa5vTonM7ZMRZgAKdna m365 planner task add --title \"My Planner Task\" --planId \"8QZEH7b3wkSbGQobscsM5gADCBa\" --bucketId \"IK8tuFTwQEa5vTonM7ZMRZgAKdna\" Adds a Completed Microsoft Planner task with the name My Planner Task for plan with the title My Planner Plan owned by group My Planner Group and for the bucket with the ID IK8tuFTwQEa5vTonM7ZMRZgAKdna m365 planner task add --title \"My Planner task\" --planTitle \"My Planner Plan\" --ownerGroupName \"My Planner Group\" --bucketId \"IK8tuFTwQEa5vTonM7ZMRZgAKdna\" --percentComplete 100 Adds a Microsoft Planner task with the name My Planner Task for plan with the ID 8QZEH7b3wkbGQobscsM5gADCBa and for the bucket with the ID IK8tuFTwQEa5vTonM7ZMRZgAKdna . The new task will be assigned to the users Allan.Carroll@contoso.com and Ida.Stevens@contoso.com and receive a due date for 2021-12-16 m365 planner task add --title \"My Planner Task\" --planId \"8QZEH7b3wkSbGQobscsM5gADCBa\" --bucketId \"IK8tuFTwQEa5vTonM7ZMRZgAKdna\" --assignedToUserNames \"Allan.Carroll@contoso.com,Ida.Stevens@contoso.com\" --dueDateTime \"2021-12-16\" Adds a Microsoft Planner task with the name My Planner Task for plan with the ID 8QZEH7b3wkbGQobscsM5gADCBa and for the bucket with the ID IK8tuFTwQEa5vTonM7ZMRZgAKdna . The new task will be assigned to the users Allan.Carroll@contoso.com and Ida.Stevens@contoso.com who will appear first with the asssignee priority ' !' m365 planner task add --title \"My Planner Task\" --planId \"8QZEH7b3wkSbGQobscsM5gADCBa\" --bucketId \"IK8tuFTwQEa5vTonM7ZMRZgAKdna\" --assignedToUserNames \"Allan.Carroll@contoso.com,Ida.Stevens@contoso.com\" --asssigneePriority ' !' Adds a Microsoft Planner task with the name My Planner Task for plan with the ID 8QZEH7b3wkbGQobscsM5gADCBa and for the bucket with the ID IK8tuFTwQEa5vTonM7ZMRZgAKdna . The new task will receive the categories category1,category3 and get a preview with the type noPreview m365 planner task add --title \"My Planner Task\" --planId \"8QZEH7b3wkSbGQobscsM5gADCBa\" --bucketId \"IK8tuFTwQEa5vTonM7ZMRZgAKdna\" --appliedCategories \"category1,category3\" --previewType \"noPreview\"","title":"task add"},{"location":"cmd/planner/task/task-add/#planner-task-add","text":"Adds a new Microsoft Planner task","title":"planner task add"},{"location":"cmd/planner/task/task-add/#usage","text":"m365 planner task add [ options ]","title":"Usage"},{"location":"cmd/planner/task/task-add/#options","text":"-t, --title <title> Title of the task to add. --planId [planId] ID of the plan to which the task belongs. Specify either planId or planTitle but not both. --planTitle [planTitle] Title of the plan to which the task belongs. Specify either planId or planTitle but not both. --ownerGroupId [ownerGroupId] ID of the group to which the plan belongs. Specify ownerGroupId or ownerGroupName when using planTitle . --ownerGroupName [ownerGroupName] Name of the group to which the plan belongs. Specify ownerGroupId or ownerGroupName when using planTitle . --bucketId [bucketId] ID of the bucket to which the task belongs. The bucket needs to exist in the selected plan. Specify either bucketId or bucketName but not both. --bucketName [bucketName] Name of the bucket to which the task belongs. The bucket needs to exist in the selected plan. Specify either bucketId or bucketName but not both. --startDateTime [startDateTime] The date and time when the task started. This should be defined as a valid ISO 8601 string. 2021-12-16T18:28:48.6964197Z --dueDateTime [dueDateTime] The date and time when the task is due. This should be defined as a valid ISO 8601 string. 2021-12-16T18:28:48.6964197Z --percentComplete [percentComplete] Percentage of task completion. Number between 0 and 100. --assignedToUserIds [assignedToUserIds] The comma-separated IDs of the assignees the task is assigned to. Specify either assignedToUserIds or assignedToUserNames but not both. --assignedToUserNames [assignedToUserNames] The comma-separated UPNs of the assignees the task is assigned to. Specify either assignedToUserIds or assignedToUserNames but not both. --assigneePriority [assigneePriority] Hint used to order items of this type in a list view. The format is defined as outlined here . --description [description] Description of the task --appliedCategories [appliedCategories] Comma-separated categories that should be added to the task. The possible options are: category1 , category2 , category3 , category4 , category5 and/or category6 . Additional info defined here . --previewType [previewType] This sets the type of preview that shows up on the task. The possible values are: automatic , noPreview , checklist , description , reference . When set to automatic the displayed preview is chosen by the app viewing the task. Default automatic . --orderHint [orderHint] Hint used to order items of this type in a list view. The format is defined as outlined here . --priority [priority] Priority of the task: Urgent, Important, Medium, Low. Or an integer between 0 and 10 (check remarks section for more info). Default value is Medium. -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/planner/task/task-add/#remarks","text":"When you specify the value for percentComplete , consider the following: when set to 0, the task is considered Not started when set between 1 and 99, the task is considered In progress when set to 100, the task is considered Completed When you specify an integer value for priority , consider the following: values 0 and 1 are interpreted as Urgent values 2, 3 and 4 are interpreted as Important values 5, 6 and 7 are interpreted as Medium values 8, 9 and 10 are interpreted as Low","title":"Remarks"},{"location":"cmd/planner/task/task-add/#examples","text":"Adds a Microsoft Planner task with the name My Planner Task for plan with the ID 8QZEH7b3wkSbGQobscsM5gADCBa and for the bucket with the ID IK8tuFTwQEa5vTonM7ZMRZgAKdna m365 planner task add --title \"My Planner Task\" --planId \"8QZEH7b3wkSbGQobscsM5gADCBa\" --bucketId \"IK8tuFTwQEa5vTonM7ZMRZgAKdna\" Adds a Completed Microsoft Planner task with the name My Planner Task for plan with the title My Planner Plan owned by group My Planner Group and for the bucket with the ID IK8tuFTwQEa5vTonM7ZMRZgAKdna m365 planner task add --title \"My Planner task\" --planTitle \"My Planner Plan\" --ownerGroupName \"My Planner Group\" --bucketId \"IK8tuFTwQEa5vTonM7ZMRZgAKdna\" --percentComplete 100 Adds a Microsoft Planner task with the name My Planner Task for plan with the ID 8QZEH7b3wkbGQobscsM5gADCBa and for the bucket with the ID IK8tuFTwQEa5vTonM7ZMRZgAKdna . The new task will be assigned to the users Allan.Carroll@contoso.com and Ida.Stevens@contoso.com and receive a due date for 2021-12-16 m365 planner task add --title \"My Planner Task\" --planId \"8QZEH7b3wkSbGQobscsM5gADCBa\" --bucketId \"IK8tuFTwQEa5vTonM7ZMRZgAKdna\" --assignedToUserNames \"Allan.Carroll@contoso.com,Ida.Stevens@contoso.com\" --dueDateTime \"2021-12-16\" Adds a Microsoft Planner task with the name My Planner Task for plan with the ID 8QZEH7b3wkbGQobscsM5gADCBa and for the bucket with the ID IK8tuFTwQEa5vTonM7ZMRZgAKdna . The new task will be assigned to the users Allan.Carroll@contoso.com and Ida.Stevens@contoso.com who will appear first with the asssignee priority ' !' m365 planner task add --title \"My Planner Task\" --planId \"8QZEH7b3wkSbGQobscsM5gADCBa\" --bucketId \"IK8tuFTwQEa5vTonM7ZMRZgAKdna\" --assignedToUserNames \"Allan.Carroll@contoso.com,Ida.Stevens@contoso.com\" --asssigneePriority ' !' Adds a Microsoft Planner task with the name My Planner Task for plan with the ID 8QZEH7b3wkbGQobscsM5gADCBa and for the bucket with the ID IK8tuFTwQEa5vTonM7ZMRZgAKdna . The new task will receive the categories category1,category3 and get a preview with the type noPreview m365 planner task add --title \"My Planner Task\" --planId \"8QZEH7b3wkSbGQobscsM5gADCBa\" --bucketId \"IK8tuFTwQEa5vTonM7ZMRZgAKdna\" --appliedCategories \"category1,category3\" --previewType \"noPreview\"","title":"Examples"},{"location":"cmd/planner/task/task-checklistitem-add/","text":"planner task checklistitem add \u00b6 Adds a new checklist item to a Planner task Usage \u00b6 m365 planner task checklistitem add [ options ] Options \u00b6 -i, --taskId <taskId> ID of the task. -t, --title <title> Title of the checklist item. --isChecked Mark the checklist item as checked. -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Adds an unchecked checklist item with title My checklist item to a Microsoft Planner task with ID 2Vf8JHgsBUiIf-nuvBtv-ZgAAYw2 m365 planner task checklistitem add --taskId 2Vf8JHgsBUiIf-nuvBtv-ZgAAYw2 --title \"My checklist item\" Adds a checked checklist item with title My checklist item to a Microsoft Planner task with ID 2Vf8JHgsBUiIf-nuvBtv-ZgAAYw2 m365 planner task checklistitem add --taskId 2Vf8JHgsBUiIf-nuvBtv-ZgAAYw2 --title \"My checklist item\" --isChecked","title":"task checklistitem add"},{"location":"cmd/planner/task/task-checklistitem-add/#planner-task-checklistitem-add","text":"Adds a new checklist item to a Planner task","title":"planner task checklistitem add"},{"location":"cmd/planner/task/task-checklistitem-add/#usage","text":"m365 planner task checklistitem add [ options ]","title":"Usage"},{"location":"cmd/planner/task/task-checklistitem-add/#options","text":"-i, --taskId <taskId> ID of the task. -t, --title <title> Title of the checklist item. --isChecked Mark the checklist item as checked. -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/planner/task/task-checklistitem-add/#examples","text":"Adds an unchecked checklist item with title My checklist item to a Microsoft Planner task with ID 2Vf8JHgsBUiIf-nuvBtv-ZgAAYw2 m365 planner task checklistitem add --taskId 2Vf8JHgsBUiIf-nuvBtv-ZgAAYw2 --title \"My checklist item\" Adds a checked checklist item with title My checklist item to a Microsoft Planner task with ID 2Vf8JHgsBUiIf-nuvBtv-ZgAAYw2 m365 planner task checklistitem add --taskId 2Vf8JHgsBUiIf-nuvBtv-ZgAAYw2 --title \"My checklist item\" --isChecked","title":"Examples"},{"location":"cmd/planner/task/task-checklistitem-list/","text":"planner task checklistitem list \u00b6 Lists the checklist items of a Planner task. Usage \u00b6 m365 planner task checklistitem list [ options ] Options \u00b6 -i, --taskId <taskId> ID of the task -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Lists the checklist items of a Planner task. m365 planner task checklistitem list --taskId 'vzCcZoOv-U27PwydxHB8opcADJo-'","title":"task checklistitem list"},{"location":"cmd/planner/task/task-checklistitem-list/#planner-task-checklistitem-list","text":"Lists the checklist items of a Planner task.","title":"planner task checklistitem list"},{"location":"cmd/planner/task/task-checklistitem-list/#usage","text":"m365 planner task checklistitem list [ options ]","title":"Usage"},{"location":"cmd/planner/task/task-checklistitem-list/#options","text":"-i, --taskId <taskId> ID of the task -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/planner/task/task-checklistitem-list/#examples","text":"Lists the checklist items of a Planner task. m365 planner task checklistitem list --taskId 'vzCcZoOv-U27PwydxHB8opcADJo-'","title":"Examples"},{"location":"cmd/planner/task/task-checklistitem-remove/","text":"planner task checklistitem remove \u00b6 Removes the checklist item from the Planner task. Usage \u00b6 m365 planner task checklistitem remove [ options ] Options \u00b6 -i, --id <id> ID of the checklist item. --taskId <taskId> ID of the task. --confirm Don't prompt for confirmation -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Removes a checklist item with the id 40012 from the Planner task with the id 2Vf8JHgsBUiIf-nuvBtv-ZgAAYw2 m365 planner task checklistitem remove --id \"40012\" --taskId \"2Vf8JHgsBUiIf-nuvBtv-ZgAAYw2\" Removes a checklist item with the id 40012 from the Planner task with the id 2Vf8JHgsBUiIf-nuvBtv-ZgAAYw2 without prompt m365 planner task checklistitem remove --id \"40012\" --taskId \"2Vf8JHgsBUiIf-nuvBtv-ZgAAYw2\" --confirm","title":"task checklistitem remove"},{"location":"cmd/planner/task/task-checklistitem-remove/#planner-task-checklistitem-remove","text":"Removes the checklist item from the Planner task.","title":"planner task checklistitem remove"},{"location":"cmd/planner/task/task-checklistitem-remove/#usage","text":"m365 planner task checklistitem remove [ options ]","title":"Usage"},{"location":"cmd/planner/task/task-checklistitem-remove/#options","text":"-i, --id <id> ID of the checklist item. --taskId <taskId> ID of the task. --confirm Don't prompt for confirmation -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/planner/task/task-checklistitem-remove/#examples","text":"Removes a checklist item with the id 40012 from the Planner task with the id 2Vf8JHgsBUiIf-nuvBtv-ZgAAYw2 m365 planner task checklistitem remove --id \"40012\" --taskId \"2Vf8JHgsBUiIf-nuvBtv-ZgAAYw2\" Removes a checklist item with the id 40012 from the Planner task with the id 2Vf8JHgsBUiIf-nuvBtv-ZgAAYw2 without prompt m365 planner task checklistitem remove --id \"40012\" --taskId \"2Vf8JHgsBUiIf-nuvBtv-ZgAAYw2\" --confirm","title":"Examples"},{"location":"cmd/planner/task/task-get/","text":"planner task get \u00b6 Retrieve the specified planner task Usage \u00b6 m365 planner task get [ options ] Alias \u00b6 m365 planner task details get [ options ] Options \u00b6 -i, --id [id] ID of the task. Specify either id or title but not both. When you specify the task ID, you no longer need to provide the information for bucket , plan , and ownerGroup . -t, --title [title] Title of the task. Specify either id or title but not both. --bucketId [bucketId] ID of the bucket to which the task belongs. Specify bucketId or bucketName when using title . --bucketName [bucketName] Name of the bucket to which the task belongs. Specify bucketId or bucketName when using title . --planId [planId] ID of the plan to which the task belongs. Specify planId or planTitle when using bucketName . --planTitle [planTitle] Title of the plan to which the task belongs. Specify planId or planTitle when using bucketName . --ownerGroupId [ownerGroupId] ID of the group to which the plan belongs. Specify ownerGroupId or ownerGroupName when using planTitle . --ownerGroupName [ownerGroupName] Name of the group to which the plan belongs. Specify ownerGroupId or ownerGroupName when using planTitle . -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Retrieve the specified planner task by id m365 planner task get --id \"vzCcZoOv-U27PwydxHB8opcADJo-\" Retrieve the specified planner task with the title My Planner Task from the bucket named My Planner Bucket . Based on the plan with the title My Planner Plan owned by the group My Planner Group . m365 planner task get --title \"My Planner Task\" --bucketName \"My Planner Bucket\" --planTitle \"My Planner Plan\" --ownerGroupName \"My Planner Group\"","title":"task get"},{"location":"cmd/planner/task/task-get/#planner-task-get","text":"Retrieve the specified planner task","title":"planner task get"},{"location":"cmd/planner/task/task-get/#usage","text":"m365 planner task get [ options ]","title":"Usage"},{"location":"cmd/planner/task/task-get/#alias","text":"m365 planner task details get [ options ]","title":"Alias"},{"location":"cmd/planner/task/task-get/#options","text":"-i, --id [id] ID of the task. Specify either id or title but not both. When you specify the task ID, you no longer need to provide the information for bucket , plan , and ownerGroup . -t, --title [title] Title of the task. Specify either id or title but not both. --bucketId [bucketId] ID of the bucket to which the task belongs. Specify bucketId or bucketName when using title . --bucketName [bucketName] Name of the bucket to which the task belongs. Specify bucketId or bucketName when using title . --planId [planId] ID of the plan to which the task belongs. Specify planId or planTitle when using bucketName . --planTitle [planTitle] Title of the plan to which the task belongs. Specify planId or planTitle when using bucketName . --ownerGroupId [ownerGroupId] ID of the group to which the plan belongs. Specify ownerGroupId or ownerGroupName when using planTitle . --ownerGroupName [ownerGroupName] Name of the group to which the plan belongs. Specify ownerGroupId or ownerGroupName when using planTitle . -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/planner/task/task-get/#examples","text":"Retrieve the specified planner task by id m365 planner task get --id \"vzCcZoOv-U27PwydxHB8opcADJo-\" Retrieve the specified planner task with the title My Planner Task from the bucket named My Planner Bucket . Based on the plan with the title My Planner Plan owned by the group My Planner Group . m365 planner task get --title \"My Planner Task\" --bucketName \"My Planner Bucket\" --planTitle \"My Planner Plan\" --ownerGroupName \"My Planner Group\"","title":"Examples"},{"location":"cmd/planner/task/task-list/","text":"planner task list \u00b6 Lists planner tasks in a bucket, plan, or tasks for the currently logged in user Usage \u00b6 m365 planner task list [ options ] Options \u00b6 --bucketId [bucketId] ID of the bucket to list the tasks of. To retrieve tasks from a bucket, specify bucketId or bucketName , but not both. --bucketName [bucketName] Name of the bucket to list the tasks of. To retrieve tasks from a bucket, specify bucketId or bucketName , but not both. --planId [planId] ID of a plan to list the tasks of. To retrieve all tasks from a plan, specify either planId or planTitle but not both. Use in combination with bucketName to retrieve tasks from a specific bucket. --planTitle [planTitle] Title of a plan to list the tasks of. To retrieve all tasks from a plan, specify either planId or planTitle but not both. Always use in combination with either ownerGroupId or ownerGroupName . Use in combination with bucketName to retrieve tasks from a specific bucket. --ownerGroupId [ownerGroupId] ID of the group to which the plan belongs. Specify ownerGroupId or ownerGroupName when using planTitle . --ownerGroupName [ownerGroupName] Name of the group to which the plan belongs. Specify ownerGroupId or ownerGroupName when using planTitle . -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 Attention This command uses API that is currently in preview to enrich the results with the priority field. Keep in mind that this preview API is subject to change once the API reached general availability. Examples \u00b6 List tasks for the currently logged in user m365 planner task list List the Microsoft Planner tasks in the plan iVPMIgdku0uFlou-KLNg6MkAE1O2 m365 planner task list --planId \"iVPMIgdku0uFlou-KLNg6MkAE1O2\" ` List the Microsoft Planner tasks in the plan My Plan in group My Group m365 planner task list --planTitle \"My Plan\" --ownerGroupName \"My Group\" List the Microsoft Planner tasks in the bucket FtzysDykv0-9s9toWiZhdskAD67z m365 planner task list --bucketId \"FtzysDykv0-9s9toWiZhdskAD67z\" List the Microsoft Planner tasks in the bucket My Bucket belonging to plan iVPMIgdku0uFlou-KLNg6MkAE1O2 m365 planner task list --bucketName \"My Bucket\" --planId \"iVPMIgdku0uFlou-KLNg6MkAE1O2\" List the Microsoft Planner tasks in the bucket My Bucket belonging to plan My Plan in group My Group m365 planner task list --bucketName \"My Bucket\" --planTitle \"My Plan\" --ownerGroupName \"My Group\"","title":"task list"},{"location":"cmd/planner/task/task-list/#planner-task-list","text":"Lists planner tasks in a bucket, plan, or tasks for the currently logged in user","title":"planner task list"},{"location":"cmd/planner/task/task-list/#usage","text":"m365 planner task list [ options ]","title":"Usage"},{"location":"cmd/planner/task/task-list/#options","text":"--bucketId [bucketId] ID of the bucket to list the tasks of. To retrieve tasks from a bucket, specify bucketId or bucketName , but not both. --bucketName [bucketName] Name of the bucket to list the tasks of. To retrieve tasks from a bucket, specify bucketId or bucketName , but not both. --planId [planId] ID of a plan to list the tasks of. To retrieve all tasks from a plan, specify either planId or planTitle but not both. Use in combination with bucketName to retrieve tasks from a specific bucket. --planTitle [planTitle] Title of a plan to list the tasks of. To retrieve all tasks from a plan, specify either planId or planTitle but not both. Always use in combination with either ownerGroupId or ownerGroupName . Use in combination with bucketName to retrieve tasks from a specific bucket. --ownerGroupId [ownerGroupId] ID of the group to which the plan belongs. Specify ownerGroupId or ownerGroupName when using planTitle . --ownerGroupName [ownerGroupName] Name of the group to which the plan belongs. Specify ownerGroupId or ownerGroupName when using planTitle . -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/planner/task/task-list/#remarks","text":"Attention This command uses API that is currently in preview to enrich the results with the priority field. Keep in mind that this preview API is subject to change once the API reached general availability.","title":"Remarks"},{"location":"cmd/planner/task/task-list/#examples","text":"List tasks for the currently logged in user m365 planner task list List the Microsoft Planner tasks in the plan iVPMIgdku0uFlou-KLNg6MkAE1O2 m365 planner task list --planId \"iVPMIgdku0uFlou-KLNg6MkAE1O2\" ` List the Microsoft Planner tasks in the plan My Plan in group My Group m365 planner task list --planTitle \"My Plan\" --ownerGroupName \"My Group\" List the Microsoft Planner tasks in the bucket FtzysDykv0-9s9toWiZhdskAD67z m365 planner task list --bucketId \"FtzysDykv0-9s9toWiZhdskAD67z\" List the Microsoft Planner tasks in the bucket My Bucket belonging to plan iVPMIgdku0uFlou-KLNg6MkAE1O2 m365 planner task list --bucketName \"My Bucket\" --planId \"iVPMIgdku0uFlou-KLNg6MkAE1O2\" List the Microsoft Planner tasks in the bucket My Bucket belonging to plan My Plan in group My Group m365 planner task list --bucketName \"My Bucket\" --planTitle \"My Plan\" --ownerGroupName \"My Group\"","title":"Examples"},{"location":"cmd/planner/task/task-reference-add/","text":"planner task reference add \u00b6 Adds a new reference to a Planner task. Usage \u00b6 m365 planner task reference add [ options ] Options \u00b6 -i, --taskId <taskId> ID of the task. -u, --url <url> URL location of the reference. --alias [alias] A name alias to describe the reference. --type [type] Used to describe the type of the reference. Types include: PowerPoint , Word , Excel , Other . -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Add a new reference with the url https://www.microsoft.com to a Planner task with the id 2Vf8JHgsBUiIf-nuvBtv-ZgAAYw2 m365 planner task reference add --taskId \"2Vf8JHgsBUiIf-nuvBtv-ZgAAYw2\" --url \"https://www.microsoft.com\" Add a new reference with the url https://www.microsoft.com and with the alias Parker to a Planner task with the id 2Vf8JHgsBUiIf-nuvBtv-ZgAAYw2 m365 planner task reference add --taskId \"2Vf8JHgsBUiIf-nuvBtv-ZgAAYw2\" --url \"https://www.microsoft.com\" --alias \"Parker\" Add a new reference with the url https://www.microsoft.com and with the type Excel to a Planner task with the id 2Vf8JHgsBUiIf-nuvBtv-ZgAAYw2 m365 planner task reference add --taskId \"2Vf8JHgsBUiIf-nuvBtv-ZgAAYw2\" --url \"https://www.microsoft.com\" --type \"Excel\"","title":"task reference add"},{"location":"cmd/planner/task/task-reference-add/#planner-task-reference-add","text":"Adds a new reference to a Planner task.","title":"planner task reference add"},{"location":"cmd/planner/task/task-reference-add/#usage","text":"m365 planner task reference add [ options ]","title":"Usage"},{"location":"cmd/planner/task/task-reference-add/#options","text":"-i, --taskId <taskId> ID of the task. -u, --url <url> URL location of the reference. --alias [alias] A name alias to describe the reference. --type [type] Used to describe the type of the reference. Types include: PowerPoint , Word , Excel , Other . -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/planner/task/task-reference-add/#examples","text":"Add a new reference with the url https://www.microsoft.com to a Planner task with the id 2Vf8JHgsBUiIf-nuvBtv-ZgAAYw2 m365 planner task reference add --taskId \"2Vf8JHgsBUiIf-nuvBtv-ZgAAYw2\" --url \"https://www.microsoft.com\" Add a new reference with the url https://www.microsoft.com and with the alias Parker to a Planner task with the id 2Vf8JHgsBUiIf-nuvBtv-ZgAAYw2 m365 planner task reference add --taskId \"2Vf8JHgsBUiIf-nuvBtv-ZgAAYw2\" --url \"https://www.microsoft.com\" --alias \"Parker\" Add a new reference with the url https://www.microsoft.com and with the type Excel to a Planner task with the id 2Vf8JHgsBUiIf-nuvBtv-ZgAAYw2 m365 planner task reference add --taskId \"2Vf8JHgsBUiIf-nuvBtv-ZgAAYw2\" --url \"https://www.microsoft.com\" --type \"Excel\"","title":"Examples"},{"location":"cmd/planner/task/task-reference-list/","text":"planner task reference list \u00b6 Retrieve the references associated to a Planner task. Usage \u00b6 m365 planner task reference list [ options ] Options \u00b6 -i, --taskId <taskId> ID of the task to retrieve references from -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Retrieve the references of the specified planner task m365 planner task reference list --taskId uBk5fK_MHkeyuPYlCo4OFpcAM","title":"task reference list"},{"location":"cmd/planner/task/task-reference-list/#planner-task-reference-list","text":"Retrieve the references associated to a Planner task.","title":"planner task reference list"},{"location":"cmd/planner/task/task-reference-list/#usage","text":"m365 planner task reference list [ options ]","title":"Usage"},{"location":"cmd/planner/task/task-reference-list/#options","text":"-i, --taskId <taskId> ID of the task to retrieve references from -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/planner/task/task-reference-list/#examples","text":"Retrieve the references of the specified planner task m365 planner task reference list --taskId uBk5fK_MHkeyuPYlCo4OFpcAM","title":"Examples"},{"location":"cmd/planner/task/task-reference-remove/","text":"planner task reference remove \u00b6 Removes the reference from the Planner task. Usage \u00b6 m365 planner task reference remove [ options ] Options \u00b6 -u, --url [url] URL location of the reference. Specify either alias or url but not both. --alias [alias] The alias of the reference. Specify either alias or url but not both. -i, --taskId <taskId> ID of the task. --confirm Don't prompt for confirmation -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Removes a reference with the url https://www.microsoft.com from the Planner task with the id 2Vf8JHgsBUiIf-nuvBtv-ZgAAYw2 m365 planner task reference remove --url \"https://www.microsoft.com\" --taskId \"2Vf8JHgsBUiIf-nuvBtv-ZgAAYw2\" Removes a reference with the alias Parker from the Planner task with the id 2Vf8JHgsBUiIf-nuvBtv-ZgAAYw2 m365 planner task reference remove --alias \"Parker\" --taskId \"2Vf8JHgsBUiIf-nuvBtv-ZgAAYw2\"","title":"task reference remove"},{"location":"cmd/planner/task/task-reference-remove/#planner-task-reference-remove","text":"Removes the reference from the Planner task.","title":"planner task reference remove"},{"location":"cmd/planner/task/task-reference-remove/#usage","text":"m365 planner task reference remove [ options ]","title":"Usage"},{"location":"cmd/planner/task/task-reference-remove/#options","text":"-u, --url [url] URL location of the reference. Specify either alias or url but not both. --alias [alias] The alias of the reference. Specify either alias or url but not both. -i, --taskId <taskId> ID of the task. --confirm Don't prompt for confirmation -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/planner/task/task-reference-remove/#examples","text":"Removes a reference with the url https://www.microsoft.com from the Planner task with the id 2Vf8JHgsBUiIf-nuvBtv-ZgAAYw2 m365 planner task reference remove --url \"https://www.microsoft.com\" --taskId \"2Vf8JHgsBUiIf-nuvBtv-ZgAAYw2\" Removes a reference with the alias Parker from the Planner task with the id 2Vf8JHgsBUiIf-nuvBtv-ZgAAYw2 m365 planner task reference remove --alias \"Parker\" --taskId \"2Vf8JHgsBUiIf-nuvBtv-ZgAAYw2\"","title":"Examples"},{"location":"cmd/planner/task/task-remove/","text":"planner task remove \u00b6 Removes the Microsoft Planner task from a plan Usage \u00b6 m365 planner task remove [ options ] Options \u00b6 --id [id] ID of the task to remove. Specify either id or title but not both. --title [title] Title of the task to remove. Specify either id or title but not both. --bucketId [bucketId] ID of the bucket to which the task to remove belongs. Specify either bucketId or bucketName but not both. --bucketName [bucketName] Name of the bucket to which the task to remove belongs. Specify either bucketId or bucketName but not both. --planId [planId] ID of the plan to which the task to remove belongs. Specify either planId or planTitle when using title . --planTitle [planTitle] Title of the plan to which the task to remove belongs. Specify either planId or planTitle when using title . --ownerGroupId [ownerGroupId] ID of the group to which the plan belongs. Specify either ownerGroupId or ownerGroupName when using planTitle . --ownerGroupName [ownerGroupName] Name of the group to which the plan belongs. Specify either ownerGroupId or ownerGroupName when using planTitle . --confirm Don't prompt for confirmation -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Removes the Microsoft Planner task by ID m365 planner task remove --id \"2Vf8JHgsBUiIf-nuvBtv-ZgAAYw2\" Removes the Microsoft Planner task by ID without confirmation m365 planner task remove --id \"2Vf8JHgsBUiIf-nuvBtv-ZgAAYw2\" --confirm Removes the Microsoft Planner task with title My Task in the bucket with ID vncYUXCRBke28qMLB-d4xJcACtNz m365 planner task remove --title \"My Task\" --bucketId \"vncYUXCRBke28qMLB-d4xJcACtNz\" Removes the Microsoft Planner task with title My Task in the bucket with name My Bucket in the Plan with ID oUHpnKBFekqfGE_PS6GGUZcAFY7b m365 planner task remove --title \"My Task\" --bucketName \"My Bucket\" --planId \"oUHpnKBFekqfGE_PS6GGUZcAFY7b\" Removes the Microsoft Planner task with title My Task in the bucket with name My Bucket in the Plan My Plan owned by group My Group m365 planner task remove --title \"My Task\" --bucketName \"My Bucket\" --planTitle \"My Plan\" --ownerGroupName \"My Group\" Removes the Microsoft Planner task with title My Task in the bucket with name My Bucket in the Plan My Plan owned by group with ID 00000000-0000-0000-0000-000000000000 m365 planner task remove --title \"My Task\" --bucketName \"My Bucket\" --planTitle \"My Plan\" --ownerGroupId \"00000000-0000-0000-0000-000000000000\"","title":"task remove"},{"location":"cmd/planner/task/task-remove/#planner-task-remove","text":"Removes the Microsoft Planner task from a plan","title":"planner task remove"},{"location":"cmd/planner/task/task-remove/#usage","text":"m365 planner task remove [ options ]","title":"Usage"},{"location":"cmd/planner/task/task-remove/#options","text":"--id [id] ID of the task to remove. Specify either id or title but not both. --title [title] Title of the task to remove. Specify either id or title but not both. --bucketId [bucketId] ID of the bucket to which the task to remove belongs. Specify either bucketId or bucketName but not both. --bucketName [bucketName] Name of the bucket to which the task to remove belongs. Specify either bucketId or bucketName but not both. --planId [planId] ID of the plan to which the task to remove belongs. Specify either planId or planTitle when using title . --planTitle [planTitle] Title of the plan to which the task to remove belongs. Specify either planId or planTitle when using title . --ownerGroupId [ownerGroupId] ID of the group to which the plan belongs. Specify either ownerGroupId or ownerGroupName when using planTitle . --ownerGroupName [ownerGroupName] Name of the group to which the plan belongs. Specify either ownerGroupId or ownerGroupName when using planTitle . --confirm Don't prompt for confirmation -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/planner/task/task-remove/#examples","text":"Removes the Microsoft Planner task by ID m365 planner task remove --id \"2Vf8JHgsBUiIf-nuvBtv-ZgAAYw2\" Removes the Microsoft Planner task by ID without confirmation m365 planner task remove --id \"2Vf8JHgsBUiIf-nuvBtv-ZgAAYw2\" --confirm Removes the Microsoft Planner task with title My Task in the bucket with ID vncYUXCRBke28qMLB-d4xJcACtNz m365 planner task remove --title \"My Task\" --bucketId \"vncYUXCRBke28qMLB-d4xJcACtNz\" Removes the Microsoft Planner task with title My Task in the bucket with name My Bucket in the Plan with ID oUHpnKBFekqfGE_PS6GGUZcAFY7b m365 planner task remove --title \"My Task\" --bucketName \"My Bucket\" --planId \"oUHpnKBFekqfGE_PS6GGUZcAFY7b\" Removes the Microsoft Planner task with title My Task in the bucket with name My Bucket in the Plan My Plan owned by group My Group m365 planner task remove --title \"My Task\" --bucketName \"My Bucket\" --planTitle \"My Plan\" --ownerGroupName \"My Group\" Removes the Microsoft Planner task with title My Task in the bucket with name My Bucket in the Plan My Plan owned by group with ID 00000000-0000-0000-0000-000000000000 m365 planner task remove --title \"My Task\" --bucketName \"My Bucket\" --planTitle \"My Plan\" --ownerGroupId \"00000000-0000-0000-0000-000000000000\"","title":"Examples"},{"location":"cmd/planner/task/task-set/","text":"planner task set \u00b6 Updates a Microsoft Planner task Usage \u00b6 m365 planner task set [ options ] Options \u00b6 -i, --id <id> ID of the task. -t, --title [title] New title of the task. --bucketId [bucketId] ID of the bucket to move the task to. Specify either bucketId or bucketName when using title . --bucketName [bucketName] Name of the bucket to move the task to. The bucket needs to exist in the selected plan. Specify either bucketId or bucketName when using title . --planId [planId] ID of the plan to which the bucket belongs to. Specify either planId or planTitle when using bucketName . --planTitle [planTitle] Title of the plan to which the bucket belongs to. Specify either planId or planTitle when using bucketName . --ownerGroupId [ownerGroupId] ID of the group to which the plan belongs. Specify ownerGroupId or ownerGroupName when using planTitle . --ownerGroupName [ownerGroupName] Name of the group to which the plan belongs. Specify ownerGroupId or ownerGroupName when using planTitle . --startDateTime [startDateTime] The date and time when the task started. This should be defined as a valid ISO 8601 string. 2021-12-16T18:28:48.6964197Z --dueDateTime [dueDateTime] The date and time when the task is due. This should be defined as a valid ISO 8601 string. 2021-12-16T18:28:48.6964197Z --percentComplete [percentComplete] Percentage of task completion. Number between 0 and 100. --assignedToUserIds [assignedToUserIds] Comma-separated IDs of the assignees that should be added to the task assignment. Specify either assignedToUserIds or assignedToUserNames but not both. --assignedToUserNames [assignedToUserNames] Comma-separated UPNs of the assignees that should be added to the task assignment. Specify either assignedToUserIds or assignedToUserNames but not both. --description [description] Description of the task --orderHint [orderHint] Hint used to order items of this type in a list view --assigneePriority [assigneePriority] Hint used to order items of this type in a list view --appliedCategories [appliedCategories] Comma-separated categories that should be added to the task --priority [priority] Priority of the task: Urgent, Important, Medium, Low. Or an integer between 0 and 10 (check remarks section for more info). -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 When you specify the value for percentComplete , consider the following: when set to 0, the task is considered Not started when set between 1 and 99, the task is considered In progress when set to 100, the task is considered Completed When you specify an integer value for priority , consider the following: values 0 and 1 are interpreted as Urgent values 2, 3 and 4 are interpreted as Important values 5, 6 and 7 are interpreted as Medium values 8, 9 and 10 are interpreted as Low You can add up to 6 categories to the task. An example to add category1 and category3 would be category1,category3 . Examples \u00b6 Updates a Microsoft Planner task name to My Planner Task for the task with the ID Z-RLQGfppU6H3663DBzfs5gAMD3o m365 planner task set --id \"Z-RLQGfppU6H3663DBzfs5gAMD3o\" --title \"My Planner Task\" Moves a Microsoft Planner task with the ID Z-RLQGfppU6H3663DBzfs5gAMD3o to the bucket named My Planner Bucket . Based on the plan with the title My Planner Plan owned by the group My Planner Group m365 planner task set --id \"2Vf8JHgsBUiIf-nuvBtv-ZgAAYw2\" --bucketName \"My Planner Bucket\" --planTitle \"My Planner Plan\" --ownerGroupName \"My Planner Group\" Marks a Microsoft Planner task with the ID Z-RLQGfppU6H3663DBzfs5gAMD3o as 50% complete and assigned to categories 1 and 3. m365 planner task set --id \"2Vf8JHgsBUiIf-nuvBtv-ZgAAYw2\" --percentComplete 50 --appliedCategories \"category1,category3\" Additional information \u00b6 Using order hints in Planner: https://docs.microsoft.com/graph/api/resources/planner-order-hint-format?view=graph-rest-1.0 Applied categories in Planner: https://docs.microsoft.com/graph/api/resources/plannerappliedcategories?view=graph-rest-1.0","title":"task set"},{"location":"cmd/planner/task/task-set/#planner-task-set","text":"Updates a Microsoft Planner task","title":"planner task set"},{"location":"cmd/planner/task/task-set/#usage","text":"m365 planner task set [ options ]","title":"Usage"},{"location":"cmd/planner/task/task-set/#options","text":"-i, --id <id> ID of the task. -t, --title [title] New title of the task. --bucketId [bucketId] ID of the bucket to move the task to. Specify either bucketId or bucketName when using title . --bucketName [bucketName] Name of the bucket to move the task to. The bucket needs to exist in the selected plan. Specify either bucketId or bucketName when using title . --planId [planId] ID of the plan to which the bucket belongs to. Specify either planId or planTitle when using bucketName . --planTitle [planTitle] Title of the plan to which the bucket belongs to. Specify either planId or planTitle when using bucketName . --ownerGroupId [ownerGroupId] ID of the group to which the plan belongs. Specify ownerGroupId or ownerGroupName when using planTitle . --ownerGroupName [ownerGroupName] Name of the group to which the plan belongs. Specify ownerGroupId or ownerGroupName when using planTitle . --startDateTime [startDateTime] The date and time when the task started. This should be defined as a valid ISO 8601 string. 2021-12-16T18:28:48.6964197Z --dueDateTime [dueDateTime] The date and time when the task is due. This should be defined as a valid ISO 8601 string. 2021-12-16T18:28:48.6964197Z --percentComplete [percentComplete] Percentage of task completion. Number between 0 and 100. --assignedToUserIds [assignedToUserIds] Comma-separated IDs of the assignees that should be added to the task assignment. Specify either assignedToUserIds or assignedToUserNames but not both. --assignedToUserNames [assignedToUserNames] Comma-separated UPNs of the assignees that should be added to the task assignment. Specify either assignedToUserIds or assignedToUserNames but not both. --description [description] Description of the task --orderHint [orderHint] Hint used to order items of this type in a list view --assigneePriority [assigneePriority] Hint used to order items of this type in a list view --appliedCategories [appliedCategories] Comma-separated categories that should be added to the task --priority [priority] Priority of the task: Urgent, Important, Medium, Low. Or an integer between 0 and 10 (check remarks section for more info). -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/planner/task/task-set/#remarks","text":"When you specify the value for percentComplete , consider the following: when set to 0, the task is considered Not started when set between 1 and 99, the task is considered In progress when set to 100, the task is considered Completed When you specify an integer value for priority , consider the following: values 0 and 1 are interpreted as Urgent values 2, 3 and 4 are interpreted as Important values 5, 6 and 7 are interpreted as Medium values 8, 9 and 10 are interpreted as Low You can add up to 6 categories to the task. An example to add category1 and category3 would be category1,category3 .","title":"Remarks"},{"location":"cmd/planner/task/task-set/#examples","text":"Updates a Microsoft Planner task name to My Planner Task for the task with the ID Z-RLQGfppU6H3663DBzfs5gAMD3o m365 planner task set --id \"Z-RLQGfppU6H3663DBzfs5gAMD3o\" --title \"My Planner Task\" Moves a Microsoft Planner task with the ID Z-RLQGfppU6H3663DBzfs5gAMD3o to the bucket named My Planner Bucket . Based on the plan with the title My Planner Plan owned by the group My Planner Group m365 planner task set --id \"2Vf8JHgsBUiIf-nuvBtv-ZgAAYw2\" --bucketName \"My Planner Bucket\" --planTitle \"My Planner Plan\" --ownerGroupName \"My Planner Group\" Marks a Microsoft Planner task with the ID Z-RLQGfppU6H3663DBzfs5gAMD3o as 50% complete and assigned to categories 1 and 3. m365 planner task set --id \"2Vf8JHgsBUiIf-nuvBtv-ZgAAYw2\" --percentComplete 50 --appliedCategories \"category1,category3\"","title":"Examples"},{"location":"cmd/planner/task/task-set/#additional-information","text":"Using order hints in Planner: https://docs.microsoft.com/graph/api/resources/planner-order-hint-format?view=graph-rest-1.0 Applied categories in Planner: https://docs.microsoft.com/graph/api/resources/plannerappliedcategories?view=graph-rest-1.0","title":"Additional information"},{"location":"cmd/planner/tenant/tenant-settings-list/","text":"planner tenant settings list \u00b6 Lists the Microsoft Planner configuration of the tenant Usage \u00b6 m365 planner tenant settings list [ options ] Options \u00b6 -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 Important To use this command you must be a global administrator. After executing the command planner tenant settings set , it can take some time for all changes to propagate across the tenant. Because of this, executing this command right away can return some unexpected results. Examples \u00b6 Lists the Microsoft Planner settings of the tenant m365 planner tenant settings list","title":"tenant settings list"},{"location":"cmd/planner/tenant/tenant-settings-list/#planner-tenant-settings-list","text":"Lists the Microsoft Planner configuration of the tenant","title":"planner tenant settings list"},{"location":"cmd/planner/tenant/tenant-settings-list/#usage","text":"m365 planner tenant settings list [ options ]","title":"Usage"},{"location":"cmd/planner/tenant/tenant-settings-list/#options","text":"-h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/planner/tenant/tenant-settings-list/#remarks","text":"Important To use this command you must be a global administrator. After executing the command planner tenant settings set , it can take some time for all changes to propagate across the tenant. Because of this, executing this command right away can return some unexpected results.","title":"Remarks"},{"location":"cmd/planner/tenant/tenant-settings-list/#examples","text":"Lists the Microsoft Planner settings of the tenant m365 planner tenant settings list","title":"Examples"},{"location":"cmd/planner/tenant/tenant-settings-set/","text":"planner tenant settings set \u00b6 Sets Microsoft Planner configuration of the tenant Usage \u00b6 m365 planner tenant settings set [ options ] Options \u00b6 --isPlannerAllowed [isPlannerAllowed] Configure whether Planner should be enabled on the tenant. --allowCalendarSharing [allowCalendarSharing] Configure whether Outlook calendar sync is enabled. --allowTenantMoveWithDataLoss [allowTenantMoveWithDataLoss] Configure whether a tenant move into a new region is authorized. --allowTenantMoveWithDataMigration [allowTenantMoveWithDataMigration] Configure whether a tenant move with data migration is authorized. --allowRosterCreation [allowRosterCreation] Configure whether Planner roster creation is allowed. --allowPlannerMobilePushNotifications [allowPlannerMobilePushNotifications] Configure whether push notifications are enabled in the mobile app. -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 Important To use this command you must be a global administrator. Examples \u00b6 Disable Microsoft Planner in the tenant m365 planner tenant settings set --isPlannerAllowed false Disable Outlook calendar sync and mobile push notifications m365 planner tenant settings set --allowCalendarSharing false --allowPlannerMobilePushNotifications false Enable Microsoft Planner but disallow roster plans to be created m365 planner tenant settings set --isPlannerAllowed true --allowRosterCreation false","title":"tenant settings set"},{"location":"cmd/planner/tenant/tenant-settings-set/#planner-tenant-settings-set","text":"Sets Microsoft Planner configuration of the tenant","title":"planner tenant settings set"},{"location":"cmd/planner/tenant/tenant-settings-set/#usage","text":"m365 planner tenant settings set [ options ]","title":"Usage"},{"location":"cmd/planner/tenant/tenant-settings-set/#options","text":"--isPlannerAllowed [isPlannerAllowed] Configure whether Planner should be enabled on the tenant. --allowCalendarSharing [allowCalendarSharing] Configure whether Outlook calendar sync is enabled. --allowTenantMoveWithDataLoss [allowTenantMoveWithDataLoss] Configure whether a tenant move into a new region is authorized. --allowTenantMoveWithDataMigration [allowTenantMoveWithDataMigration] Configure whether a tenant move with data migration is authorized. --allowRosterCreation [allowRosterCreation] Configure whether Planner roster creation is allowed. --allowPlannerMobilePushNotifications [allowPlannerMobilePushNotifications] Configure whether push notifications are enabled in the mobile app. -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/planner/tenant/tenant-settings-set/#remarks","text":"Important To use this command you must be a global administrator.","title":"Remarks"},{"location":"cmd/planner/tenant/tenant-settings-set/#examples","text":"Disable Microsoft Planner in the tenant m365 planner tenant settings set --isPlannerAllowed false Disable Outlook calendar sync and mobile push notifications m365 planner tenant settings set --allowCalendarSharing false --allowPlannerMobilePushNotifications false Enable Microsoft Planner but disallow roster plans to be created m365 planner tenant settings set --isPlannerAllowed true --allowRosterCreation false","title":"Examples"},{"location":"cmd/pp/card/card-get/","text":"pp card get \u00b6 Gets a specific Microsoft Power Platform card in the specified Power Platform environment Usage \u00b6 pp card get [ options ] Options \u00b6 -e, --environment <environment> The name of the environment. -i, --id [id] The id of the card. Specify either id or name but not both. -n, --name [name] The name of the card. Specify either id or name but not both. -a, --asAdmin Run the command as admin for environments you do not have explicitly assigned permissions to. -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Get a specific card in a specific environment based on name m365 pp card get --environment \"Default-d87a7535-dd31-4437-bfe1-95340acd55c5\" --name \"CLI 365 Card\" Get a specific card in a specific environment based on name as admin m365 pp card get --environment \"Default-d87a7535-dd31-4437-bfe1-95340acd55c5\" --name \"CLI 365 Card\" --asAdmin Get a specific card in a specific environment based on id m365 pp card get --environment \"Default-d87a7535-dd31-4437-bfe1-95340acd55c5\" --id \"408e3f42-4c9e-4c93-8aaf-3cbdea9179aa\" Get a specific card in a specific environment based on id as admin m365 pp card get --environment \"Default-d87a7535-dd31-4437-bfe1-95340acd55c5\" --id \"408e3f42-4c9e-4c93-8aaf-3cbdea9179aa\" --asAdmin","title":"card get"},{"location":"cmd/pp/card/card-get/#pp-card-get","text":"Gets a specific Microsoft Power Platform card in the specified Power Platform environment","title":"pp card get"},{"location":"cmd/pp/card/card-get/#usage","text":"pp card get [ options ]","title":"Usage"},{"location":"cmd/pp/card/card-get/#options","text":"-e, --environment <environment> The name of the environment. -i, --id [id] The id of the card. Specify either id or name but not both. -n, --name [name] The name of the card. Specify either id or name but not both. -a, --asAdmin Run the command as admin for environments you do not have explicitly assigned permissions to. -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/pp/card/card-get/#examples","text":"Get a specific card in a specific environment based on name m365 pp card get --environment \"Default-d87a7535-dd31-4437-bfe1-95340acd55c5\" --name \"CLI 365 Card\" Get a specific card in a specific environment based on name as admin m365 pp card get --environment \"Default-d87a7535-dd31-4437-bfe1-95340acd55c5\" --name \"CLI 365 Card\" --asAdmin Get a specific card in a specific environment based on id m365 pp card get --environment \"Default-d87a7535-dd31-4437-bfe1-95340acd55c5\" --id \"408e3f42-4c9e-4c93-8aaf-3cbdea9179aa\" Get a specific card in a specific environment based on id as admin m365 pp card get --environment \"Default-d87a7535-dd31-4437-bfe1-95340acd55c5\" --id \"408e3f42-4c9e-4c93-8aaf-3cbdea9179aa\" --asAdmin","title":"Examples"},{"location":"cmd/pp/card/card-list/","text":"pp card list \u00b6 Lists Microsoft Power Platform cards in the specified Power Platform environment. Usage \u00b6 pp card list [ options ] Options \u00b6 -e, --environment <environment> The name of the environment. -a, --asAdmin Run the command as admin for environments you do not have explicitly assigned permissions to. -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 List cards in a specific environment. m365 pp card list --environment \"Default-d87a7535-dd31-4437-bfe1-95340acd55c5\" List cards in a specific environment as admin. m365 pp card list --environment \"Default-d87a7535-dd31-4437-bfe1-95340acd55c5\" --asAdmin","title":"card list"},{"location":"cmd/pp/card/card-list/#pp-card-list","text":"Lists Microsoft Power Platform cards in the specified Power Platform environment.","title":"pp card list"},{"location":"cmd/pp/card/card-list/#usage","text":"pp card list [ options ]","title":"Usage"},{"location":"cmd/pp/card/card-list/#options","text":"-e, --environment <environment> The name of the environment. -a, --asAdmin Run the command as admin for environments you do not have explicitly assigned permissions to. -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/pp/card/card-list/#examples","text":"List cards in a specific environment. m365 pp card list --environment \"Default-d87a7535-dd31-4437-bfe1-95340acd55c5\" List cards in a specific environment as admin. m365 pp card list --environment \"Default-d87a7535-dd31-4437-bfe1-95340acd55c5\" --asAdmin","title":"Examples"},{"location":"cmd/pp/card/card-remove/","text":"pp card remove \u00b6 Removes the specified Microsoft Power Platform card in the specified Power Platform environment Usage \u00b6 m365 pp card remove [ options ] Options \u00b6 -e, --environment <environment> The name of the environment. -i, --id [id] The id of the card. Specify either id or name but not both. -n, --name [name] The name of the card. Specify either id or name but not both. --asAdmin Run the command as admin for environments you do not have explicitly assigned permissions to. --confirm Don't prompt for confirmation. -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Removes the specified Microsoft Power Platform card owned by the currently signed-in user based on the name parameter m365 pp card remove --environment Default-d87a7535-dd31-4437-bfe1-95340acd55c5 --name \"Card Name\" Removes the specified Microsoft Power Platform card owned by the currently signed-in user based on the name parameter without confirmation m365 pp card remove --environment Default-d87a7535-dd31-4437-bfe1-95340acd55c5 --name \"Card Name\" --confirm Removes the specified Microsoft Power Platform card owned by another user based on the name parameter m365 pp card remove --environment Default-d87a7535-dd31-4437-bfe1-95340acd55c5 --name \"Card Name\" --asAdmin Removes the specified Microsoft Power Platform card owned by another user based on the name parameter without confirmation m365 pp card remove --environment Default-d87a7535-dd31-4437-bfe1-95340acd55c5 --name \"Card Name\" --asAdmin --confirm Removes the specified Microsoft Power Platform card owned by the currently signed-in user based on the id parameter m365 pp card remove --environment Default-d87a7535-dd31-4437-bfe1-95340acd55c5 --id 9d9a13d0-6255-ed11-bba2-000d3adf774e Removes the specified Microsoft Power Platform card owned by the currently signed-in user based on the id parameter without confirmation m365 pp card remove --environment Default-d87a7535-dd31-4437-bfe1-95340acd55c5 --id 9d9a13d0-6255-ed11-bba2-000d3adf774e --confirm Removes the specified Microsoft Power Platform card owned by another user based on the id parameter m365 pp card remove --environment Default-d87a7535-dd31-4437-bfe1-95340acd55c5 --id 9d9a13d0-6255-ed11-bba2-000d3adf774e --asAdmin Removes the specified Microsoft Power Platform card owned by another user based on the id parameter without confirmation m365 pp card remove --environment Default-d87a7535-dd31-4437-bfe1-95340acd55c5 --id 9d9a13d0-6255-ed11-bba2-000d3adf774e --asAdmin --confirm Response \u00b6 The command won't return a response on success.","title":"card remove"},{"location":"cmd/pp/card/card-remove/#pp-card-remove","text":"Removes the specified Microsoft Power Platform card in the specified Power Platform environment","title":"pp card remove"},{"location":"cmd/pp/card/card-remove/#usage","text":"m365 pp card remove [ options ]","title":"Usage"},{"location":"cmd/pp/card/card-remove/#options","text":"-e, --environment <environment> The name of the environment. -i, --id [id] The id of the card. Specify either id or name but not both. -n, --name [name] The name of the card. Specify either id or name but not both. --asAdmin Run the command as admin for environments you do not have explicitly assigned permissions to. --confirm Don't prompt for confirmation. -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/pp/card/card-remove/#examples","text":"Removes the specified Microsoft Power Platform card owned by the currently signed-in user based on the name parameter m365 pp card remove --environment Default-d87a7535-dd31-4437-bfe1-95340acd55c5 --name \"Card Name\" Removes the specified Microsoft Power Platform card owned by the currently signed-in user based on the name parameter without confirmation m365 pp card remove --environment Default-d87a7535-dd31-4437-bfe1-95340acd55c5 --name \"Card Name\" --confirm Removes the specified Microsoft Power Platform card owned by another user based on the name parameter m365 pp card remove --environment Default-d87a7535-dd31-4437-bfe1-95340acd55c5 --name \"Card Name\" --asAdmin Removes the specified Microsoft Power Platform card owned by another user based on the name parameter without confirmation m365 pp card remove --environment Default-d87a7535-dd31-4437-bfe1-95340acd55c5 --name \"Card Name\" --asAdmin --confirm Removes the specified Microsoft Power Platform card owned by the currently signed-in user based on the id parameter m365 pp card remove --environment Default-d87a7535-dd31-4437-bfe1-95340acd55c5 --id 9d9a13d0-6255-ed11-bba2-000d3adf774e Removes the specified Microsoft Power Platform card owned by the currently signed-in user based on the id parameter without confirmation m365 pp card remove --environment Default-d87a7535-dd31-4437-bfe1-95340acd55c5 --id 9d9a13d0-6255-ed11-bba2-000d3adf774e --confirm Removes the specified Microsoft Power Platform card owned by another user based on the id parameter m365 pp card remove --environment Default-d87a7535-dd31-4437-bfe1-95340acd55c5 --id 9d9a13d0-6255-ed11-bba2-000d3adf774e --asAdmin Removes the specified Microsoft Power Platform card owned by another user based on the id parameter without confirmation m365 pp card remove --environment Default-d87a7535-dd31-4437-bfe1-95340acd55c5 --id 9d9a13d0-6255-ed11-bba2-000d3adf774e --asAdmin --confirm","title":"Examples"},{"location":"cmd/pp/card/card-remove/#response","text":"The command won't return a response on success.","title":"Response"},{"location":"cmd/pp/dataverse/dataverse-table-list/","text":"pp dataverse table list \u00b6 Lists dataverse tables in a given environment Usage \u00b6 pp dataverse table list [ options ] Options \u00b6 -e, --environment <environment> The name of the environment to list all tables for -a, --asAdmin Set, to retrieve the dataverse tables as admin for environments you are not a member of. -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 List all tables for the given environment m365 pp dataverse table list -e \"Default-2ca3eaa5-140f-4175-8261-3272edf9f339\" List all tables for the given environment as Admin m365 pp dataverse table list -e \"Default-2ca3eaa5-140f-4175-8261-3272edf9f339\" --asAdmin","title":"dataverse table list"},{"location":"cmd/pp/dataverse/dataverse-table-list/#pp-dataverse-table-list","text":"Lists dataverse tables in a given environment","title":"pp dataverse table list"},{"location":"cmd/pp/dataverse/dataverse-table-list/#usage","text":"pp dataverse table list [ options ]","title":"Usage"},{"location":"cmd/pp/dataverse/dataverse-table-list/#options","text":"-e, --environment <environment> The name of the environment to list all tables for -a, --asAdmin Set, to retrieve the dataverse tables as admin for environments you are not a member of. -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/pp/dataverse/dataverse-table-list/#examples","text":"List all tables for the given environment m365 pp dataverse table list -e \"Default-2ca3eaa5-140f-4175-8261-3272edf9f339\" List all tables for the given environment as Admin m365 pp dataverse table list -e \"Default-2ca3eaa5-140f-4175-8261-3272edf9f339\" --asAdmin","title":"Examples"},{"location":"cmd/pp/environment/environment-get/","text":"pp environment get \u00b6 Gets information about the specified Power Platform environment Usage \u00b6 m365 pp environment get [ options ] Options \u00b6 -n, --name <name> The name of the environment to get information about -a, --asAdmin Run the command as admin and retrieve details of environments you do not have explicitly assigned permissions to Remarks \u00b6 Attention This command is based on an API that is currently in preview and is subject to change once the API reached general availability. Register CLI for Microsoft 365 or Azure AD application as a management application for the Power Platform using m365 pp managementapp add [options] Examples \u00b6 Get information about the Power Platform environment by name m365 pp environment get --name Default-d87a7535-dd31-4437-bfe1-95340acd55c5 Get information as admin about the Power Platform environment by name m365 pp environment get --name Default-d87a7535-dd31-4437-bfe1-95340acd55c5 --asAdmin","title":"environment get"},{"location":"cmd/pp/environment/environment-get/#pp-environment-get","text":"Gets information about the specified Power Platform environment","title":"pp environment get"},{"location":"cmd/pp/environment/environment-get/#usage","text":"m365 pp environment get [ options ]","title":"Usage"},{"location":"cmd/pp/environment/environment-get/#options","text":"-n, --name <name> The name of the environment to get information about -a, --asAdmin Run the command as admin and retrieve details of environments you do not have explicitly assigned permissions to","title":"Options"},{"location":"cmd/pp/environment/environment-get/#remarks","text":"Attention This command is based on an API that is currently in preview and is subject to change once the API reached general availability. Register CLI for Microsoft 365 or Azure AD application as a management application for the Power Platform using m365 pp managementapp add [options]","title":"Remarks"},{"location":"cmd/pp/environment/environment-get/#examples","text":"Get information about the Power Platform environment by name m365 pp environment get --name Default-d87a7535-dd31-4437-bfe1-95340acd55c5 Get information as admin about the Power Platform environment by name m365 pp environment get --name Default-d87a7535-dd31-4437-bfe1-95340acd55c5 --asAdmin","title":"Examples"},{"location":"cmd/pp/environment/environment-list/","text":"pp environment list \u00b6 Lists Microsoft Power Platform environments Usage \u00b6 m365 pp environment list [ options ] Options \u00b6 -a, --asAdmin Run the command as admin and retrieve all environments. Lists only environments you have explicitly are assigned permissions to by default. -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 Attention This command is based on an API that is currently in preview and is subject to change once the API reached general availability. Register CLI for Microsoft 365 or Azure AD application as a management application for the Power Platform using m365 pp managementapp add [options] Examples \u00b6 List Microsoft Power Platform environments m365 pp environment list List all Microsoft Power Platform environments m365 pp environment list --asAdmin","title":"environment list"},{"location":"cmd/pp/environment/environment-list/#pp-environment-list","text":"Lists Microsoft Power Platform environments","title":"pp environment list"},{"location":"cmd/pp/environment/environment-list/#usage","text":"m365 pp environment list [ options ]","title":"Usage"},{"location":"cmd/pp/environment/environment-list/#options","text":"-a, --asAdmin Run the command as admin and retrieve all environments. Lists only environments you have explicitly are assigned permissions to by default. -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/pp/environment/environment-list/#remarks","text":"Attention This command is based on an API that is currently in preview and is subject to change once the API reached general availability. Register CLI for Microsoft 365 or Azure AD application as a management application for the Power Platform using m365 pp managementapp add [options]","title":"Remarks"},{"location":"cmd/pp/environment/environment-list/#examples","text":"List Microsoft Power Platform environments m365 pp environment list List all Microsoft Power Platform environments m365 pp environment list --asAdmin","title":"Examples"},{"location":"cmd/pp/gateway/gateway-get/","text":"pp gateway get \u00b6 Get information about the specified gateway Usage \u00b6 m365 pp gateway get [ options ] Options \u00b6 -i, --id <id> ID of the Gateway. -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Get information about the specified gateway. m365 pp gateway get --id 1f69e798-5852-4fdd-ab01-33bb14b6e934","title":"gateway get"},{"location":"cmd/pp/gateway/gateway-get/#pp-gateway-get","text":"Get information about the specified gateway","title":"pp gateway get"},{"location":"cmd/pp/gateway/gateway-get/#usage","text":"m365 pp gateway get [ options ]","title":"Usage"},{"location":"cmd/pp/gateway/gateway-get/#options","text":"-i, --id <id> ID of the Gateway. -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/pp/gateway/gateway-get/#examples","text":"Get information about the specified gateway. m365 pp gateway get --id 1f69e798-5852-4fdd-ab01-33bb14b6e934","title":"Examples"},{"location":"cmd/pp/gateway/gateway-list/","text":"pp gateway list \u00b6 Returns a list of gateways for which the user is an admin Usage \u00b6 m365 pp gateway list [ options ] Options \u00b6 -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 List gateways for which the user is an admin m365 pp gateway list","title":"gateway list"},{"location":"cmd/pp/gateway/gateway-list/#pp-gateway-list","text":"Returns a list of gateways for which the user is an admin","title":"pp gateway list"},{"location":"cmd/pp/gateway/gateway-list/#usage","text":"m365 pp gateway list [ options ]","title":"Usage"},{"location":"cmd/pp/gateway/gateway-list/#options","text":"-h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/pp/gateway/gateway-list/#examples","text":"List gateways for which the user is an admin m365 pp gateway list","title":"Examples"},{"location":"cmd/pp/managementapp/managementapp-add/","text":"pp managementapp add \u00b6 Register management application for Power Platform Usage \u00b6 m365 pp managementapp add [ options ] Options \u00b6 --appId [appId] Application (client) ID of the Azure AD application registration to register as a management app. Specify either appId , objectId or name --objectId [objectId] Object ID of the Azure AD application registration to register as a management app. Specify either appId , objectId or name --name [name] Name of the Azure AD application registration to register as a management app. Specify either appId , objectId or name -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 To execute this command the first time you'll need sign in using the Microsoft Azure PowerShell app registration. You can do this by executing m365 login --appId 1950a258-227b-4e31-a9cf-717495945fc2 . To register the Azure AD app registration that CLI for Microsoft 365 uses by default, execute m365 pp managementapp add--appId 31359c7f-bd7e-475c-86db-fdb8c937548e . For best performance use the appId option to reference the Azure AD application registration to update. If you use objectId or name , this command will first need to find the corresponding appId for that application. If the command finds multiple Azure AD application registrations with the specified app name, it will prompt you to disambiguate which app it should use, listing the discovered object IDs. Examples \u00b6 Register CLI for Microsoft 365 as a management application for the Power Platform m365 pp managementapp add --appId 31359c7f-bd7e-475c-86db-fdb8c937548e Register Azure AD application with the specified object ID as a management application for the Power Platform m365 pp managementapp add --objectId d75be2e1-0204-4f95-857d-51a37cf40be8 Register Azure AD application named My app as a management application for the Power Platform m365 pp managementapp add --name \"My app\"","title":"managementapp add"},{"location":"cmd/pp/managementapp/managementapp-add/#pp-managementapp-add","text":"Register management application for Power Platform","title":"pp managementapp add"},{"location":"cmd/pp/managementapp/managementapp-add/#usage","text":"m365 pp managementapp add [ options ]","title":"Usage"},{"location":"cmd/pp/managementapp/managementapp-add/#options","text":"--appId [appId] Application (client) ID of the Azure AD application registration to register as a management app. Specify either appId , objectId or name --objectId [objectId] Object ID of the Azure AD application registration to register as a management app. Specify either appId , objectId or name --name [name] Name of the Azure AD application registration to register as a management app. Specify either appId , objectId or name -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/pp/managementapp/managementapp-add/#remarks","text":"To execute this command the first time you'll need sign in using the Microsoft Azure PowerShell app registration. You can do this by executing m365 login --appId 1950a258-227b-4e31-a9cf-717495945fc2 . To register the Azure AD app registration that CLI for Microsoft 365 uses by default, execute m365 pp managementapp add--appId 31359c7f-bd7e-475c-86db-fdb8c937548e . For best performance use the appId option to reference the Azure AD application registration to update. If you use objectId or name , this command will first need to find the corresponding appId for that application. If the command finds multiple Azure AD application registrations with the specified app name, it will prompt you to disambiguate which app it should use, listing the discovered object IDs.","title":"Remarks"},{"location":"cmd/pp/managementapp/managementapp-add/#examples","text":"Register CLI for Microsoft 365 as a management application for the Power Platform m365 pp managementapp add --appId 31359c7f-bd7e-475c-86db-fdb8c937548e Register Azure AD application with the specified object ID as a management application for the Power Platform m365 pp managementapp add --objectId d75be2e1-0204-4f95-857d-51a37cf40be8 Register Azure AD application named My app as a management application for the Power Platform m365 pp managementapp add --name \"My app\"","title":"Examples"},{"location":"cmd/pp/managementapp/managementapp-list/","text":"pp managementapp list \u00b6 Lists management applications for Power Platform Usage \u00b6 m365 pp managementapp list [ options ] Options \u00b6 -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Lists management applications for Power Platform m365 pp managementapp list","title":"managementapp list"},{"location":"cmd/pp/managementapp/managementapp-list/#pp-managementapp-list","text":"Lists management applications for Power Platform","title":"pp managementapp list"},{"location":"cmd/pp/managementapp/managementapp-list/#usage","text":"m365 pp managementapp list [ options ]","title":"Usage"},{"location":"cmd/pp/managementapp/managementapp-list/#options","text":"-h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/pp/managementapp/managementapp-list/#examples","text":"Lists management applications for Power Platform m365 pp managementapp list","title":"Examples"},{"location":"cmd/pp/solution/solution-get/","text":"pp solution get \u00b6 Gets a specific solution in a given environment. Usage \u00b6 m365 pp solution get [ options ] Options \u00b6 -e, --environment <environment> The name of the environment. -i --id [id] The ID of the solution. Specify either id or name but not both. -n, --name [name] The unique name (not the display name) of the solution. Specify either id or name but not both. -a, --asAdmin Run the command as admin for environments you do not have explicitly assigned permissions to. -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Gets a specific solution in a specific environment based on name m365 pp solution get --environment \"Default-2ca3eaa5-140f-4175-8261-3272edf9f339\" --name \"Default\" Gets a specific solution in a specific environment based on name as Admin m365 pp solution get --environment \"Default-2ca3eaa5-140f-4175-8261-3272edf9f339\" --name \"Default\" --asAdmin Gets a specific solution in a specific environment based on id m365 pp solution get --environment \"Default-2ca3eaa5-140f-4175-8261-3272edf9f339\" --id \"ee62fd63-e49e-4c09-80de-8fae1b9a427e\" Gets a specific solution in a specific environment based on id as Admin m365 pp solution get --environment \"Default-2ca3eaa5-140f-4175-8261-3272edf9f339\" --id \"ee62fd63-e49e-4c09-80de-8fae1b9a427e\" --asAdmin","title":"solution get"},{"location":"cmd/pp/solution/solution-get/#pp-solution-get","text":"Gets a specific solution in a given environment.","title":"pp solution get"},{"location":"cmd/pp/solution/solution-get/#usage","text":"m365 pp solution get [ options ]","title":"Usage"},{"location":"cmd/pp/solution/solution-get/#options","text":"-e, --environment <environment> The name of the environment. -i --id [id] The ID of the solution. Specify either id or name but not both. -n, --name [name] The unique name (not the display name) of the solution. Specify either id or name but not both. -a, --asAdmin Run the command as admin for environments you do not have explicitly assigned permissions to. -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/pp/solution/solution-get/#examples","text":"Gets a specific solution in a specific environment based on name m365 pp solution get --environment \"Default-2ca3eaa5-140f-4175-8261-3272edf9f339\" --name \"Default\" Gets a specific solution in a specific environment based on name as Admin m365 pp solution get --environment \"Default-2ca3eaa5-140f-4175-8261-3272edf9f339\" --name \"Default\" --asAdmin Gets a specific solution in a specific environment based on id m365 pp solution get --environment \"Default-2ca3eaa5-140f-4175-8261-3272edf9f339\" --id \"ee62fd63-e49e-4c09-80de-8fae1b9a427e\" Gets a specific solution in a specific environment based on id as Admin m365 pp solution get --environment \"Default-2ca3eaa5-140f-4175-8261-3272edf9f339\" --id \"ee62fd63-e49e-4c09-80de-8fae1b9a427e\" --asAdmin","title":"Examples"},{"location":"cmd/pp/solution/solution-list/","text":"pp solution list \u00b6 Lists solutions in a given environment. Usage \u00b6 m365 pp solution list [ options ] Options \u00b6 -e, --environment <environment> The name of the environment -a, --asAdmin Run the command as admin for environments you do not have explicitly assigned permissions to. -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 List all solutions in a specific environment m365 pp solution list --environment \"Default-2ca3eaa5-140f-4175-8261-3272edf9f339\" List all solutions in a specific environment as Admin m365 pp solution list --environment \"Default-2ca3eaa5-140f-4175-8261-3272edf9f339\" --asAdmin","title":"solution list"},{"location":"cmd/pp/solution/solution-list/#pp-solution-list","text":"Lists solutions in a given environment.","title":"pp solution list"},{"location":"cmd/pp/solution/solution-list/#usage","text":"m365 pp solution list [ options ]","title":"Usage"},{"location":"cmd/pp/solution/solution-list/#options","text":"-e, --environment <environment> The name of the environment -a, --asAdmin Run the command as admin for environments you do not have explicitly assigned permissions to. -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/pp/solution/solution-list/#examples","text":"List all solutions in a specific environment m365 pp solution list --environment \"Default-2ca3eaa5-140f-4175-8261-3272edf9f339\" List all solutions in a specific environment as Admin m365 pp solution list --environment \"Default-2ca3eaa5-140f-4175-8261-3272edf9f339\" --asAdmin","title":"Examples"},{"location":"cmd/pp/tenant/tenant-settings-list/","text":"pp tenant settings list \u00b6 Lists the global Power Platform tenant settings Usage \u00b6 m365 pp tenant settings list [ options ] Options \u00b6 -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 Attention This command is based on an API that is currently in preview and is subject to change once the API reached general availability. Examples \u00b6 Lists the global Power Platform settings of the tenant m365 pp tenant settings list","title":"tenant settings list"},{"location":"cmd/pp/tenant/tenant-settings-list/#pp-tenant-settings-list","text":"Lists the global Power Platform tenant settings","title":"pp tenant settings list"},{"location":"cmd/pp/tenant/tenant-settings-list/#usage","text":"m365 pp tenant settings list [ options ]","title":"Usage"},{"location":"cmd/pp/tenant/tenant-settings-list/#options","text":"-h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/pp/tenant/tenant-settings-list/#remarks","text":"Attention This command is based on an API that is currently in preview and is subject to change once the API reached general availability.","title":"Remarks"},{"location":"cmd/pp/tenant/tenant-settings-list/#examples","text":"Lists the global Power Platform settings of the tenant m365 pp tenant settings list","title":"Examples"},{"location":"cmd/search/externalconnection/externalconnection-add/","text":"search externalconnection add \u00b6 Add a new external connection to be defined for Microsoft Search Usage \u00b6 m365 search externalconnection add [ options ] Options \u00b6 -i, --id <id> Developer-provided unique ID of the connection within the Azure Active Directory tenant -n, --name <name> The display name of the connection to be displayed in the Microsoft 365 admin center. Maximum length of 128 characters -d, --description <description> Description of the connection displayed in the Microsoft 365 admin center --authorizedAppIds [authorizedAppIds] Comma-separated collection of application IDs for registered Azure Active Directory apps that are allowed to manage the external connection and to index content in the external connection. -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 The id must be at least 3 and no more than 32 characters long. It can contain only alphanumeric characters, can't begin with Microsoft and can be any of the following values: None, Directory, Exchange, ExchangeArchive, LinkedIn, Mailbox, OneDriveBusiness, SharePoint, Teams, Yammer, Connectors, TaskFabric, PowerBI, Assistant, TopicEngine, MSFT_All_Connectors . Examples \u00b6 Adds a new external connection with name and description of test app m365 search externalconnection add --id MyApp --name \"Test\" --description \"Test\" Adds a new external connection with a limited number of authorized apps m365 search externalconnection add --id MyApp --name \"Test\" --description \"Test\" --authorizedAppIds \"00000000-0000-0000-0000-000000000000,00000000-0000-0000-0000-000000000001,00000000-0000-0000-0000-000000000002\"","title":"externalconnection add"},{"location":"cmd/search/externalconnection/externalconnection-add/#search-externalconnection-add","text":"Add a new external connection to be defined for Microsoft Search","title":"search externalconnection add"},{"location":"cmd/search/externalconnection/externalconnection-add/#usage","text":"m365 search externalconnection add [ options ]","title":"Usage"},{"location":"cmd/search/externalconnection/externalconnection-add/#options","text":"-i, --id <id> Developer-provided unique ID of the connection within the Azure Active Directory tenant -n, --name <name> The display name of the connection to be displayed in the Microsoft 365 admin center. Maximum length of 128 characters -d, --description <description> Description of the connection displayed in the Microsoft 365 admin center --authorizedAppIds [authorizedAppIds] Comma-separated collection of application IDs for registered Azure Active Directory apps that are allowed to manage the external connection and to index content in the external connection. -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/search/externalconnection/externalconnection-add/#remarks","text":"The id must be at least 3 and no more than 32 characters long. It can contain only alphanumeric characters, can't begin with Microsoft and can be any of the following values: None, Directory, Exchange, ExchangeArchive, LinkedIn, Mailbox, OneDriveBusiness, SharePoint, Teams, Yammer, Connectors, TaskFabric, PowerBI, Assistant, TopicEngine, MSFT_All_Connectors .","title":"Remarks"},{"location":"cmd/search/externalconnection/externalconnection-add/#examples","text":"Adds a new external connection with name and description of test app m365 search externalconnection add --id MyApp --name \"Test\" --description \"Test\" Adds a new external connection with a limited number of authorized apps m365 search externalconnection add --id MyApp --name \"Test\" --description \"Test\" --authorizedAppIds \"00000000-0000-0000-0000-000000000000,00000000-0000-0000-0000-000000000001,00000000-0000-0000-0000-000000000002\"","title":"Examples"},{"location":"cmd/search/externalconnection/externalconnection-get/","text":"search externalconnection get \u00b6 Allow the administrator to get a specific external connection for use in Microsoft Search. Usage \u00b6 m365 search externalconnection get [ options ] Options \u00b6 -i, --id [id] ID of the External Connection to get. Specify either id or name -n, --name [name] Name of the External Connection to get. Specify either id or name -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Get the External Connection by its id m365 search externalconnection get --id \"MyApp\" Get the External Connection by its name m365 search externalconnection get --name \"Test\"","title":"externalconnection get"},{"location":"cmd/search/externalconnection/externalconnection-get/#search-externalconnection-get","text":"Allow the administrator to get a specific external connection for use in Microsoft Search.","title":"search externalconnection get"},{"location":"cmd/search/externalconnection/externalconnection-get/#usage","text":"m365 search externalconnection get [ options ]","title":"Usage"},{"location":"cmd/search/externalconnection/externalconnection-get/#options","text":"-i, --id [id] ID of the External Connection to get. Specify either id or name -n, --name [name] Name of the External Connection to get. Specify either id or name -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/search/externalconnection/externalconnection-get/#examples","text":"Get the External Connection by its id m365 search externalconnection get --id \"MyApp\" Get the External Connection by its name m365 search externalconnection get --name \"Test\"","title":"Examples"},{"location":"cmd/search/externalconnection/externalconnection-list/","text":"search externalconnection list \u00b6 Lists external connections defined in Microsoft Search Usage \u00b6 m365 search externalconnection list [ options ] Options \u00b6 -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 List external connections defined in Microsoft Search m365 search externalconnection list","title":"externalconnection list"},{"location":"cmd/search/externalconnection/externalconnection-list/#search-externalconnection-list","text":"Lists external connections defined in Microsoft Search","title":"search externalconnection list"},{"location":"cmd/search/externalconnection/externalconnection-list/#usage","text":"m365 search externalconnection list [ options ]","title":"Usage"},{"location":"cmd/search/externalconnection/externalconnection-list/#options","text":"-h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/search/externalconnection/externalconnection-list/#examples","text":"List external connections defined in Microsoft Search m365 search externalconnection list","title":"Examples"},{"location":"cmd/search/externalconnection/externalconnection-remove/","text":"search externalconnection remove \u00b6 Allow the administrator to remove a specific external connection used in Microsoft Search. Usage \u00b6 m365 search externalconnection remove [ options ] Options \u00b6 -i, --id [id] ID of the External Connection to remove. Specify either id or name -n, --name [name] Name of the External Connection to remove. Specify either id or name --confirm Don't prompt for confirming removing the connection -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 If the command finds multiple external connections used in Microsoft Search with the specified name, it will prompt you to disambiguate which external connection it should remove, listing the discovered IDs. Examples \u00b6 Removes external connection with id MyApp m365 search externalconnection remove --id \"MyApp\" Removes external connection with name Test . Will NOT prompt for confirmation before removing. m365 search externalconnection remove --name \"Test\" --confirm","title":"externalconnection remove"},{"location":"cmd/search/externalconnection/externalconnection-remove/#search-externalconnection-remove","text":"Allow the administrator to remove a specific external connection used in Microsoft Search.","title":"search externalconnection remove"},{"location":"cmd/search/externalconnection/externalconnection-remove/#usage","text":"m365 search externalconnection remove [ options ]","title":"Usage"},{"location":"cmd/search/externalconnection/externalconnection-remove/#options","text":"-i, --id [id] ID of the External Connection to remove. Specify either id or name -n, --name [name] Name of the External Connection to remove. Specify either id or name --confirm Don't prompt for confirming removing the connection -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/search/externalconnection/externalconnection-remove/#remarks","text":"If the command finds multiple external connections used in Microsoft Search with the specified name, it will prompt you to disambiguate which external connection it should remove, listing the discovered IDs.","title":"Remarks"},{"location":"cmd/search/externalconnection/externalconnection-remove/#examples","text":"Removes external connection with id MyApp m365 search externalconnection remove --id \"MyApp\" Removes external connection with name Test . Will NOT prompt for confirmation before removing. m365 search externalconnection remove --name \"Test\" --confirm","title":"Examples"},{"location":"cmd/skype/report/report-activitycounts/","text":"skype report activitycounts \u00b6 Gets the trends on how many users organized and participated in conference sessions held in your organization through Skype for Business. The report also includes the number of peer-to-peer sessions Usage \u00b6 m365 skype report activitycounts [ options ] Options \u00b6 -p, --period <period> The length of time over which the report is aggregated. Supported values D7,D30,D90,D180 -f, --outputFile [outputFile] Path to the file where the report should be stored in -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Gets the trends on how many users organized and participated in conference sessions held in your organization through Skype for Business. The report also includes the number of peer-to-peer sessions for the last week m365 skype report activitycounts --period D7 Gets the trends on how many users organized and participated in conference sessions held in your organization through Skype for Business. The report also includes the number of peer-to-peer sessions for the last week and exports the report data in the specified path in text format m365 skype report activitycounts --period D7 --output text > \"activitycounts.txt\" Gets the trends on how many users organized and participated in conference sessions held in your organization through Skype for Business. The report also includes the number of peer-to-peer sessions for the last week and exports the report data in the specified path in json format m365 skype report activitycounts --period D7 --output json > \"activitycounts.json\"","title":"report activitycounts"},{"location":"cmd/skype/report/report-activitycounts/#skype-report-activitycounts","text":"Gets the trends on how many users organized and participated in conference sessions held in your organization through Skype for Business. The report also includes the number of peer-to-peer sessions","title":"skype report activitycounts"},{"location":"cmd/skype/report/report-activitycounts/#usage","text":"m365 skype report activitycounts [ options ]","title":"Usage"},{"location":"cmd/skype/report/report-activitycounts/#options","text":"-p, --period <period> The length of time over which the report is aggregated. Supported values D7,D30,D90,D180 -f, --outputFile [outputFile] Path to the file where the report should be stored in -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/skype/report/report-activitycounts/#examples","text":"Gets the trends on how many users organized and participated in conference sessions held in your organization through Skype for Business. The report also includes the number of peer-to-peer sessions for the last week m365 skype report activitycounts --period D7 Gets the trends on how many users organized and participated in conference sessions held in your organization through Skype for Business. The report also includes the number of peer-to-peer sessions for the last week and exports the report data in the specified path in text format m365 skype report activitycounts --period D7 --output text > \"activitycounts.txt\" Gets the trends on how many users organized and participated in conference sessions held in your organization through Skype for Business. The report also includes the number of peer-to-peer sessions for the last week and exports the report data in the specified path in json format m365 skype report activitycounts --period D7 --output json > \"activitycounts.json\"","title":"Examples"},{"location":"cmd/skype/report/report-activityusercounts/","text":"skype report activityusercounts \u00b6 Gets the trends on how many unique users organized and participated in conference sessions held in your organization through Skype for Business. The report also includes the number of peer-to-peer sessions Usage \u00b6 m365 skype report activityusercounts [ options ] Options \u00b6 -p, --period <period> The length of time over which the report is aggregated. Supported values D7,D30,D90,D180 -f, --outputFile [outputFile] Path to the file where the report should be stored in -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Gets the trends on how many unique users organized and participated in conference sessions held in your organization through Skype for Business. The report also includes the number of peer-to-peer sessions for the last week m365 skype report activityusercounts --period D7 Gets the trends on how many unique users organized and participated in conference sessions held in your organization through Skype for Business. The report also includes the number of peer-to-peer sessions for the last week and exports the report data in the specified path in text format m365 skype report activityusercounts --period D7 --output text > \"activityusercounts.txt\" Gets the trends on how many unique users organized and participated in conference sessions held in your organization through Skype for Business. The report also includes the number of peer-to-peer sessions for the last week and exports the report data in the specified path in json format m365 skype report activityusercounts --period D7 --output json > \"activityusercounts.json\"","title":"report activityusercounts"},{"location":"cmd/skype/report/report-activityusercounts/#skype-report-activityusercounts","text":"Gets the trends on how many unique users organized and participated in conference sessions held in your organization through Skype for Business. The report also includes the number of peer-to-peer sessions","title":"skype report activityusercounts"},{"location":"cmd/skype/report/report-activityusercounts/#usage","text":"m365 skype report activityusercounts [ options ]","title":"Usage"},{"location":"cmd/skype/report/report-activityusercounts/#options","text":"-p, --period <period> The length of time over which the report is aggregated. Supported values D7,D30,D90,D180 -f, --outputFile [outputFile] Path to the file where the report should be stored in -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/skype/report/report-activityusercounts/#examples","text":"Gets the trends on how many unique users organized and participated in conference sessions held in your organization through Skype for Business. The report also includes the number of peer-to-peer sessions for the last week m365 skype report activityusercounts --period D7 Gets the trends on how many unique users organized and participated in conference sessions held in your organization through Skype for Business. The report also includes the number of peer-to-peer sessions for the last week and exports the report data in the specified path in text format m365 skype report activityusercounts --period D7 --output text > \"activityusercounts.txt\" Gets the trends on how many unique users organized and participated in conference sessions held in your organization through Skype for Business. The report also includes the number of peer-to-peer sessions for the last week and exports the report data in the specified path in json format m365 skype report activityusercounts --period D7 --output json > \"activityusercounts.json\"","title":"Examples"},{"location":"cmd/skype/report/report-activityuserdetail/","text":"skype report activityuserdetail \u00b6 Gets details about Skype for Business activity by user Usage \u00b6 m365 skype report activityuserdetail [ options ] Options \u00b6 -p, --period [period] The length of time over which the report is aggregated. Supported values D7,D30,D90,D180 -d, --date [date] The date for which you would like to view the users who performed any activity. Supported date format is YYYY-MM-DD. Specify the date or period, but not both -f, --outputFile [outputFile] Path to the file where the report should be stored in -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Gets details about Skype for Business activity by user for the last week m365 skype report activityuserdetail --period D7 Gets details about Skype for Business activity by user for May 1, 2019 m365 skype report activityuserdetail --date 2019 -05-01 Gets details about Skype for Business activity by user for the last week and exports the report data in the specified path in text format m365 skype report activityuserdetail --period D7 --output text > \"activityuserdetail.txt\" Gets details about Skype for Business activity by user for the last week and exports the report data in the specified path in json format m365 skype report activityuserdetail --period D7 --output json > \"activityuserdetail.json\"","title":"report activityuserdetail"},{"location":"cmd/skype/report/report-activityuserdetail/#skype-report-activityuserdetail","text":"Gets details about Skype for Business activity by user","title":"skype report activityuserdetail"},{"location":"cmd/skype/report/report-activityuserdetail/#usage","text":"m365 skype report activityuserdetail [ options ]","title":"Usage"},{"location":"cmd/skype/report/report-activityuserdetail/#options","text":"-p, --period [period] The length of time over which the report is aggregated. Supported values D7,D30,D90,D180 -d, --date [date] The date for which you would like to view the users who performed any activity. Supported date format is YYYY-MM-DD. Specify the date or period, but not both -f, --outputFile [outputFile] Path to the file where the report should be stored in -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/skype/report/report-activityuserdetail/#examples","text":"Gets details about Skype for Business activity by user for the last week m365 skype report activityuserdetail --period D7 Gets details about Skype for Business activity by user for May 1, 2019 m365 skype report activityuserdetail --date 2019 -05-01 Gets details about Skype for Business activity by user for the last week and exports the report data in the specified path in text format m365 skype report activityuserdetail --period D7 --output text > \"activityuserdetail.txt\" Gets details about Skype for Business activity by user for the last week and exports the report data in the specified path in json format m365 skype report activityuserdetail --period D7 --output json > \"activityuserdetail.json\"","title":"Examples"},{"location":"cmd/spfx/spfx-doctor/","text":"spfx doctor \u00b6 Verifies environment configuration for using the specific version of the SharePoint Framework Usage \u00b6 m365 spfx doctor [ options ] Options \u00b6 -e, --env [env] Version of SharePoint for which to check compatibility: sp2016|sp2019|spo -v, --spfxVersion [spfxVersion] Version of the SharePoint Framework Yeoman generator to check compatibility for without v , eg. 1.11.0 -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. text . Default text --verbose Runs command with verbose logging --debug Runs command with debug logging Important Checks ran by this command are based on what is officially supported by Microsoft. It's possible that using different package managers or packages versions will work just fine. Remarks \u00b6 This commands helps you to verify if your environment meets all prerequisites for building solutions using a particular version of the SharePoint Framework. The command starts by detecting the version of SharePoint Framework that you want to use. First, it looks at the current project. If you didn't run the command in the context of a SharePoint Framework project, the command will try to determine the SharePoint Framework version based on the SharePoint Framework Yeoman generator that you have installed either in the current directory or globally. Based on the determined version of the SharePoint Framework, the command will look at other dependencies such as Node.js, npm, Yeoman, Gulp CLI and TypeScript to verify if their meet the requirements of that particular version of the SharePoint Framework. If you miss any required tools or use a version that doesn't meet the SharePoint Framework requirements, the command will give you a list of recommendation how to address these issues. Next to verifying the readiness of your environment to use a particular version of the SharePoint Framework, you can also check if the version of the SharePoint Framework that you use is compatible with the specific version of SharePoint. Supported versions are sp2016 , sp2019 and spo . Important This command supports only text output. Examples \u00b6 Verify if your environment meets the requirements to work with SharePoint Framework based on the globally installed version of the SharePoint Framework Yeoman generator or the current project m365 spfx doctor --output text Verify if your environment meets the requirements to work with the SharePoint Framework and also if the version of the SharePoint Framework that you're using is compatible with SharePoint 2019 m365 spfx doctor --env sp2019 --output text Verify if your environment meets the requirements to work with SharePoint Framework v1.11.0 m365 spfx doctor --spfxVersion 1 .11.0 --output text","title":"doctor"},{"location":"cmd/spfx/spfx-doctor/#spfx-doctor","text":"Verifies environment configuration for using the specific version of the SharePoint Framework","title":"spfx doctor"},{"location":"cmd/spfx/spfx-doctor/#usage","text":"m365 spfx doctor [ options ]","title":"Usage"},{"location":"cmd/spfx/spfx-doctor/#options","text":"-e, --env [env] Version of SharePoint for which to check compatibility: sp2016|sp2019|spo -v, --spfxVersion [spfxVersion] Version of the SharePoint Framework Yeoman generator to check compatibility for without v , eg. 1.11.0 -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. text . Default text --verbose Runs command with verbose logging --debug Runs command with debug logging Important Checks ran by this command are based on what is officially supported by Microsoft. It's possible that using different package managers or packages versions will work just fine.","title":"Options"},{"location":"cmd/spfx/spfx-doctor/#remarks","text":"This commands helps you to verify if your environment meets all prerequisites for building solutions using a particular version of the SharePoint Framework. The command starts by detecting the version of SharePoint Framework that you want to use. First, it looks at the current project. If you didn't run the command in the context of a SharePoint Framework project, the command will try to determine the SharePoint Framework version based on the SharePoint Framework Yeoman generator that you have installed either in the current directory or globally. Based on the determined version of the SharePoint Framework, the command will look at other dependencies such as Node.js, npm, Yeoman, Gulp CLI and TypeScript to verify if their meet the requirements of that particular version of the SharePoint Framework. If you miss any required tools or use a version that doesn't meet the SharePoint Framework requirements, the command will give you a list of recommendation how to address these issues. Next to verifying the readiness of your environment to use a particular version of the SharePoint Framework, you can also check if the version of the SharePoint Framework that you use is compatible with the specific version of SharePoint. Supported versions are sp2016 , sp2019 and spo . Important This command supports only text output.","title":"Remarks"},{"location":"cmd/spfx/spfx-doctor/#examples","text":"Verify if your environment meets the requirements to work with SharePoint Framework based on the globally installed version of the SharePoint Framework Yeoman generator or the current project m365 spfx doctor --output text Verify if your environment meets the requirements to work with the SharePoint Framework and also if the version of the SharePoint Framework that you're using is compatible with SharePoint 2019 m365 spfx doctor --env sp2019 --output text Verify if your environment meets the requirements to work with SharePoint Framework v1.11.0 m365 spfx doctor --spfxVersion 1 .11.0 --output text","title":"Examples"},{"location":"cmd/spfx/package/package-generate/","text":"spfx package generate \u00b6 Generates SharePoint Framework solution package with a no-framework web part rendering the specified HTML snippet Usage \u00b6 m365 spfx package generate Options \u00b6 -t, --webPartTitle <webPartTitle> Title of the web part to generate. Displayed in the tool box when adding web part to page -d, --webPartDescription <webPartDescription> Description of the web part to generate. Displayed in the tool box when adding web part to page -n, --name <name> Name of the package to generate. Used among others for the .sppkg file. Must be unique in the app catalog to avoid collisions with other solutions. --html <html> HTML snippet to embed in the web part. Can contain <script> and <style> tags. --enableForTeams [enableForTeams] Specify, to make the generated web part available in Microsoft Teams. Specify tab to make the web part available as a configurable tab, personalTab to make it available as a personal tab or all to make it available both as a configurable and personal tab. By default the web part will not be available in Microsoft Teams. --exposePageContextGlobally Set, to make the legacyPageContext exposed by SharePoint Framework available at window._spPageContextInfo for use in the HTML snippet of the web part --exposeTeamsContextGlobally Set, to make the Microsoft Teams context exposed by SharePoint Framework available at window._teamsContextInfo for use in the HTML snippet of the web part --allowTenantWideDeployment Set, to allow the solution package to be deployed globally to all sites --developerName [developerName] Name of your organization. Displayed in Microsoft Teams when adding the solution as a (personal) tab. If not specified set to Contoso . --developerPrivacyUrl [developerPrivacyUrl] URL of the privacy policy for this solution. Displayed in Microsoft Teams when adding the solution as a (personal) tab. If not specified, set to https://contoso.com/privacy . --developerTermsOfUseUrl [developerTermsOfUseUrl] URL of the terms of use for this solution. Displayed in Microsoft Teams when adding the solution as a (personal) tab. If not specified, set to https://contoso.com/terms-of-use . --developerWebsiteUrl [developerWebsiteUrl] URL of your organization's website. Displayed in Microsoft Teams when adding the solution as a (personal) tab. If not specified, set to https://contoso.com/my-app . --developerMpnId [developerMpnId] Microsoft Partner Network ID of your organization. If not specified, set to 000000 . Examples \u00b6 Generate a web part that shows the weather for Amsterdam. Load web part contents from a local file. Allow the web part to be deployed to all sites. Expose the web part in Teams as a personal tab. m365 spfx package generate --webPartTitle \"Amsterdam weather\" --webPartDescription \"Shows weather in Amsterdam\" --name amsterdam-weather --html @amsterdam-weather.html --allowTenantWideDeployment --enableForTeams all","title":"package generate"},{"location":"cmd/spfx/package/package-generate/#spfx-package-generate","text":"Generates SharePoint Framework solution package with a no-framework web part rendering the specified HTML snippet","title":"spfx package generate"},{"location":"cmd/spfx/package/package-generate/#usage","text":"m365 spfx package generate","title":"Usage"},{"location":"cmd/spfx/package/package-generate/#options","text":"-t, --webPartTitle <webPartTitle> Title of the web part to generate. Displayed in the tool box when adding web part to page -d, --webPartDescription <webPartDescription> Description of the web part to generate. Displayed in the tool box when adding web part to page -n, --name <name> Name of the package to generate. Used among others for the .sppkg file. Must be unique in the app catalog to avoid collisions with other solutions. --html <html> HTML snippet to embed in the web part. Can contain <script> and <style> tags. --enableForTeams [enableForTeams] Specify, to make the generated web part available in Microsoft Teams. Specify tab to make the web part available as a configurable tab, personalTab to make it available as a personal tab or all to make it available both as a configurable and personal tab. By default the web part will not be available in Microsoft Teams. --exposePageContextGlobally Set, to make the legacyPageContext exposed by SharePoint Framework available at window._spPageContextInfo for use in the HTML snippet of the web part --exposeTeamsContextGlobally Set, to make the Microsoft Teams context exposed by SharePoint Framework available at window._teamsContextInfo for use in the HTML snippet of the web part --allowTenantWideDeployment Set, to allow the solution package to be deployed globally to all sites --developerName [developerName] Name of your organization. Displayed in Microsoft Teams when adding the solution as a (personal) tab. If not specified set to Contoso . --developerPrivacyUrl [developerPrivacyUrl] URL of the privacy policy for this solution. Displayed in Microsoft Teams when adding the solution as a (personal) tab. If not specified, set to https://contoso.com/privacy . --developerTermsOfUseUrl [developerTermsOfUseUrl] URL of the terms of use for this solution. Displayed in Microsoft Teams when adding the solution as a (personal) tab. If not specified, set to https://contoso.com/terms-of-use . --developerWebsiteUrl [developerWebsiteUrl] URL of your organization's website. Displayed in Microsoft Teams when adding the solution as a (personal) tab. If not specified, set to https://contoso.com/my-app . --developerMpnId [developerMpnId] Microsoft Partner Network ID of your organization. If not specified, set to 000000 .","title":"Options"},{"location":"cmd/spfx/package/package-generate/#examples","text":"Generate a web part that shows the weather for Amsterdam. Load web part contents from a local file. Allow the web part to be deployed to all sites. Expose the web part in Teams as a personal tab. m365 spfx package generate --webPartTitle \"Amsterdam weather\" --webPartDescription \"Shows weather in Amsterdam\" --name amsterdam-weather --html @amsterdam-weather.html --allowTenantWideDeployment --enableForTeams all","title":"Examples"},{"location":"cmd/spfx/project/project-doctor/","text":"spfx project doctor \u00b6 Validates correctness of a SharePoint Framework project Usage \u00b6 m365 spfx project doctor [ options ] Options \u00b6 --packageManager [packageManager] The package manager you use. Supported managers npm,pnpm,yarn . Default npm -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,tour,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Important Run this command in the folder where the project that you want to validate is located. This command doesn't change your project files. Remarks \u00b6 The spfx project doctor command helps you validate that your SharePoint Framework project is set up correctly. The command automatically detects the version of your project using version information specified in the project's .yo-rc.json file or package.json (if no version information is included in .yo-rc.json). Based on the detected project version, the command executes several checks and reports any issues in the specified format. This command doesn't change your project files. Instead, it gives you a report with all steps necessary to validate your project to the specified version of the SharePoint Framework. Changing project files is error-prone, especially when it comes to updating your solution's code. This is why at this moment, this command produces a report that you can use yourself to perform the necessary updates and verify that everything is working as expected. Examples \u00b6 Validate if your project is correctly set up and save the findings in a Markdown file m365 spfx project doctor --output md > \"doctor-report.md\" Validate if your project is correctly set up and show the summary of the findings in the terminal m365 spfx project doctor --output text Validate if your project is correctly set up and get instructions to fix any issues using pnpm m365 spfx project doctor --packageManager pnpm --output text Validate if your project is correctly set up and get instructions to fix any issues in a CodeTour file m365 spfx project doctor --output tour","title":"project doctor"},{"location":"cmd/spfx/project/project-doctor/#spfx-project-doctor","text":"Validates correctness of a SharePoint Framework project","title":"spfx project doctor"},{"location":"cmd/spfx/project/project-doctor/#usage","text":"m365 spfx project doctor [ options ]","title":"Usage"},{"location":"cmd/spfx/project/project-doctor/#options","text":"--packageManager [packageManager] The package manager you use. Supported managers npm,pnpm,yarn . Default npm -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,tour,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Important Run this command in the folder where the project that you want to validate is located. This command doesn't change your project files.","title":"Options"},{"location":"cmd/spfx/project/project-doctor/#remarks","text":"The spfx project doctor command helps you validate that your SharePoint Framework project is set up correctly. The command automatically detects the version of your project using version information specified in the project's .yo-rc.json file or package.json (if no version information is included in .yo-rc.json). Based on the detected project version, the command executes several checks and reports any issues in the specified format. This command doesn't change your project files. Instead, it gives you a report with all steps necessary to validate your project to the specified version of the SharePoint Framework. Changing project files is error-prone, especially when it comes to updating your solution's code. This is why at this moment, this command produces a report that you can use yourself to perform the necessary updates and verify that everything is working as expected.","title":"Remarks"},{"location":"cmd/spfx/project/project-doctor/#examples","text":"Validate if your project is correctly set up and save the findings in a Markdown file m365 spfx project doctor --output md > \"doctor-report.md\" Validate if your project is correctly set up and show the summary of the findings in the terminal m365 spfx project doctor --output text Validate if your project is correctly set up and get instructions to fix any issues using pnpm m365 spfx project doctor --packageManager pnpm --output text Validate if your project is correctly set up and get instructions to fix any issues in a CodeTour file m365 spfx project doctor --output tour","title":"Examples"},{"location":"cmd/spfx/project/project-externalize/","text":"spfx project externalize \u00b6 Externalizes SharePoint Framework project dependencies Usage \u00b6 m365 spfx project externalize [ options ] Options \u00b6 -f, --outputFile [outputFile] Path to the file where the report should be stored in -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv,md . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Important Run this command in the folder where the project for which you want to externalize dependencies is located. This command doesn't change your project files. Remarks \u00b6 Attention This command is in preview and could change once it's officially released. If you see any room for improvement, we'd love to hear from you at https://github.com/pnp/cli-microsoft365/issues . The spfx project externalize command helps you externalize your SharePoint Framework project dependencies using the unpkg CDN . This command doesn't change your project files. Instead, it gives you a report with all steps necessary to externalize your project dependencies. Externalizing project dependencies is error-prone, especially when it comes to updating your solution's code. This is why at this moment, this command produces a report that you can use yourself to perform the necessary changes and verify that everything is working as expected. Examples \u00b6 Get instructions to externalize the current SharePoint Framework project dependencies and save the findings in a Markdown file m365 spfx project externalize --output md > \"deps-report.md\" Get instructions to externalize the current SharePoint Framework project dependencies and show the summary of the findings in the terminal m365 spfx project externalize","title":"project externalize"},{"location":"cmd/spfx/project/project-externalize/#spfx-project-externalize","text":"Externalizes SharePoint Framework project dependencies","title":"spfx project externalize"},{"location":"cmd/spfx/project/project-externalize/#usage","text":"m365 spfx project externalize [ options ]","title":"Usage"},{"location":"cmd/spfx/project/project-externalize/#options","text":"-f, --outputFile [outputFile] Path to the file where the report should be stored in -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv,md . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Important Run this command in the folder where the project for which you want to externalize dependencies is located. This command doesn't change your project files.","title":"Options"},{"location":"cmd/spfx/project/project-externalize/#remarks","text":"Attention This command is in preview and could change once it's officially released. If you see any room for improvement, we'd love to hear from you at https://github.com/pnp/cli-microsoft365/issues . The spfx project externalize command helps you externalize your SharePoint Framework project dependencies using the unpkg CDN . This command doesn't change your project files. Instead, it gives you a report with all steps necessary to externalize your project dependencies. Externalizing project dependencies is error-prone, especially when it comes to updating your solution's code. This is why at this moment, this command produces a report that you can use yourself to perform the necessary changes and verify that everything is working as expected.","title":"Remarks"},{"location":"cmd/spfx/project/project-externalize/#examples","text":"Get instructions to externalize the current SharePoint Framework project dependencies and save the findings in a Markdown file m365 spfx project externalize --output md > \"deps-report.md\" Get instructions to externalize the current SharePoint Framework project dependencies and show the summary of the findings in the terminal m365 spfx project externalize","title":"Examples"},{"location":"cmd/spfx/project/project-rename/","text":"spfx project rename \u00b6 Renames SharePoint Framework project Usage \u00b6 m365 spfx project rename [ options ] Options \u00b6 -n, --newName <newName> New name for the project --generateNewId Generate a new solution ID for the project -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Important Run this command in the folder where the project that you want to rename is located. Remarks \u00b6 This command will update the project name in: package.json , .yo-rc.json , package-solution.json , deploy-azure-storage.json and README.md . Examples \u00b6 Renames SharePoint Framework project to contoso m365 spfx project rename --newName contoso Renames SharePoint Framework project to contoso with new solution ID m365 spfx project rename --newName contoso --generateNewId","title":"project rename"},{"location":"cmd/spfx/project/project-rename/#spfx-project-rename","text":"Renames SharePoint Framework project","title":"spfx project rename"},{"location":"cmd/spfx/project/project-rename/#usage","text":"m365 spfx project rename [ options ]","title":"Usage"},{"location":"cmd/spfx/project/project-rename/#options","text":"-n, --newName <newName> New name for the project --generateNewId Generate a new solution ID for the project -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Important Run this command in the folder where the project that you want to rename is located.","title":"Options"},{"location":"cmd/spfx/project/project-rename/#remarks","text":"This command will update the project name in: package.json , .yo-rc.json , package-solution.json , deploy-azure-storage.json and README.md .","title":"Remarks"},{"location":"cmd/spfx/project/project-rename/#examples","text":"Renames SharePoint Framework project to contoso m365 spfx project rename --newName contoso Renames SharePoint Framework project to contoso with new solution ID m365 spfx project rename --newName contoso --generateNewId","title":"Examples"},{"location":"cmd/spfx/project/project-upgrade/","text":"spfx project upgrade \u00b6 Upgrades SharePoint Framework project to the specified version Usage \u00b6 m365 spfx project upgrade [ options ] Options \u00b6 -v, --toVersion [toVersion] The version of SharePoint Framework to which upgrade the project --packageManager [packageManager] The package manager you use. Supported managers npm,pnpm,yarn . Default npm --shell [shell] The shell you use. Supported shells bash,powershell,cmd . Default bash --preview Upgrade project to the latest SPFx preview version -f, --outputFile [outputFile] Path to the file where the upgrade report should be stored in. Ignored when output is tour -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Important Run this command in the folder where the project that you want to upgrade is located. This command doesn't change your project files. Remarks \u00b6 The spfx project upgrade command helps you upgrade your SharePoint Framework project to the specified version. If no version is specified, the command will upgrade to the latest version of the SharePoint Framework it supports (v1.16.0-beta.2). This command doesn't change your project files. Instead, it gives you a report with all steps necessary to upgrade your project to the specified version of the SharePoint Framework. Changing project files is error-prone, especially when it comes to updating your solution's code. This is why at this moment, this command produces a report that you can use yourself to perform the necessary updates and verify that everything is working as expected. Examples \u00b6 Get instructions to upgrade the current SharePoint Framework project to SharePoint Framework version 1.5.0 and save the findings in a Markdown file m365 spfx project upgrade --toVersion 1 .5.0 --output md > \"upgrade-report.md\" Get instructions to upgrade the current SharePoint Framework project to SharePoint Framework version 1.5.0 and show the summary of the findings in the shell m365 spfx project upgrade --toVersion 1 .5.0 --output text Get instructions to upgrade the current SharePoint Framework project to the latest preview version m365 spfx project upgrade --preview --output text Get instructions to upgrade the current SharePoint Framework project to the specified preview version m365 spfx project upgrade --toVersion 1 .12.1-rc.0 --output text Get instructions to upgrade the current SharePoint Framework project to the latest SharePoint Framework version supported by the CLI for Microsoft 365 using pnpm m365 spfx project upgrade --packageManager pnpm --output text Get instructions to upgrade the current SharePoint Framework project to the latest SharePoint Framework version supported by the CLI for Microsoft 365 m365 spfx project upgrade --output text Get instructions to upgrade the current SharePoint Framework project to the latest SharePoint Framework version supported by the CLI for Microsoft 365 using PowerShell m365 spfx project upgrade --shell powershell --output text Get instructions to upgrade the current SharePoint Framework project to the latest version of SharePoint Framework and save the findings in a CodeTour file m365 spfx project upgrade --output tour","title":"project upgrade"},{"location":"cmd/spfx/project/project-upgrade/#spfx-project-upgrade","text":"Upgrades SharePoint Framework project to the specified version","title":"spfx project upgrade"},{"location":"cmd/spfx/project/project-upgrade/#usage","text":"m365 spfx project upgrade [ options ]","title":"Usage"},{"location":"cmd/spfx/project/project-upgrade/#options","text":"-v, --toVersion [toVersion] The version of SharePoint Framework to which upgrade the project --packageManager [packageManager] The package manager you use. Supported managers npm,pnpm,yarn . Default npm --shell [shell] The shell you use. Supported shells bash,powershell,cmd . Default bash --preview Upgrade project to the latest SPFx preview version -f, --outputFile [outputFile] Path to the file where the upgrade report should be stored in. Ignored when output is tour -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Important Run this command in the folder where the project that you want to upgrade is located. This command doesn't change your project files.","title":"Options"},{"location":"cmd/spfx/project/project-upgrade/#remarks","text":"The spfx project upgrade command helps you upgrade your SharePoint Framework project to the specified version. If no version is specified, the command will upgrade to the latest version of the SharePoint Framework it supports (v1.16.0-beta.2). This command doesn't change your project files. Instead, it gives you a report with all steps necessary to upgrade your project to the specified version of the SharePoint Framework. Changing project files is error-prone, especially when it comes to updating your solution's code. This is why at this moment, this command produces a report that you can use yourself to perform the necessary updates and verify that everything is working as expected.","title":"Remarks"},{"location":"cmd/spfx/project/project-upgrade/#examples","text":"Get instructions to upgrade the current SharePoint Framework project to SharePoint Framework version 1.5.0 and save the findings in a Markdown file m365 spfx project upgrade --toVersion 1 .5.0 --output md > \"upgrade-report.md\" Get instructions to upgrade the current SharePoint Framework project to SharePoint Framework version 1.5.0 and show the summary of the findings in the shell m365 spfx project upgrade --toVersion 1 .5.0 --output text Get instructions to upgrade the current SharePoint Framework project to the latest preview version m365 spfx project upgrade --preview --output text Get instructions to upgrade the current SharePoint Framework project to the specified preview version m365 spfx project upgrade --toVersion 1 .12.1-rc.0 --output text Get instructions to upgrade the current SharePoint Framework project to the latest SharePoint Framework version supported by the CLI for Microsoft 365 using pnpm m365 spfx project upgrade --packageManager pnpm --output text Get instructions to upgrade the current SharePoint Framework project to the latest SharePoint Framework version supported by the CLI for Microsoft 365 m365 spfx project upgrade --output text Get instructions to upgrade the current SharePoint Framework project to the latest SharePoint Framework version supported by the CLI for Microsoft 365 using PowerShell m365 spfx project upgrade --shell powershell --output text Get instructions to upgrade the current SharePoint Framework project to the latest version of SharePoint Framework and save the findings in a CodeTour file m365 spfx project upgrade --output tour","title":"Examples"},{"location":"cmd/spo/spo-get/","text":"spo get \u00b6 Gets the context URL for the root SharePoint site collection and SharePoint tenant admin site Usage \u00b6 m365 spo get [ options ] Options \u00b6 -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 CLI for Microsoft 365 automatically discovers the URL of the root SharePoint site collection/SharePoint tenant admin site (whichever is needed to run the particular command). Using this command you can see which URLs the CLI has discovered. Examples \u00b6 Get the context URL for the root SharePoint site collection and SharePoint tenant admin site m365 spo get --output json","title":"get"},{"location":"cmd/spo/spo-get/#spo-get","text":"Gets the context URL for the root SharePoint site collection and SharePoint tenant admin site","title":"spo get"},{"location":"cmd/spo/spo-get/#usage","text":"m365 spo get [ options ]","title":"Usage"},{"location":"cmd/spo/spo-get/#options","text":"-h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/spo-get/#remarks","text":"CLI for Microsoft 365 automatically discovers the URL of the root SharePoint site collection/SharePoint tenant admin site (whichever is needed to run the particular command). Using this command you can see which URLs the CLI has discovered.","title":"Remarks"},{"location":"cmd/spo/spo-get/#examples","text":"Get the context URL for the root SharePoint site collection and SharePoint tenant admin site m365 spo get --output json","title":"Examples"},{"location":"cmd/spo/spo-search/","text":"spo search \u00b6 Executes a search query Usage \u00b6 m365 spo search [ options ] Options \u00b6 -q, --queryText <queryText> Query to be executed in KQL format -p, --selectProperties [selectProperties] Comma-separated list of properties to retrieve. Will retrieve all properties if not specified and json output is requested. -u, --webUrl [webUrl] The web against which we want to execute the query. If the parameter is not defined, the query is executed against the web that's used when logging in to the SPO environment. --allResults Set, to get all results of the search query, instead of the number specified by the rowlimit (default: 10) --rowLimit [rowLimit] The number of rows to be returned. When the allResults option is used, the specified value will define the size of retrieved batches --sourceId [sourceId] The identifier (GUID) of the result source to be used to run the query. --trimDuplicates Set, to remove near duplicate items from the search results. --enableStemming Set, to enable stemming. --culture [culture] The locale for the query. --refinementFilters [refinementFilters] The set of refinement filters used when issuing a refinement query. --queryTemplate [queryTemplate] A string that contains the text that replaces the query text, as part of a query transformation. --sortList [sortList] The list of properties by which the search results are ordered. --rankingModelId [rankingModelId] The ID of the ranking model to use for the query. --startRow [startRow] The first row that is included in the search results that are returned. You use this parameter when you want to implement paging for search results. --properties [properties] Additional properties for the query. --sourceName [sourceName] Specified the name of the result source to be used to run the query. --refiners [refiners] The set of refiners to return in a search result. --hiddenConstraints [hiddenConstraints] The additional query terms to append to the query. --clientType [clientType] The type of the client that issued the query. --enablePhonetic Set, to use the phonetic forms of the query terms to find matches. (Default = false ). --processBestBets Set, to return best bet results for the query. --enableQueryRules Set, to enable query rules for the query. --processPersonalFavorites Set, to return personal favorites with the search results. --rawOutput Set, to return the unparsed, raw results of the REST call to the search API. -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Execute search query to retrieve all Document Sets (ContentTypeId = 0x0120D520 ) for the English locale m365 spo search --queryText \"ContentTypeId:0x0120D520\" --culture 1033 Retrieve all documents. For each document, retrieve the Path , Author and FileType . m365 spo search --queryText \"IsDocument:1\" --selectProperties \"Path,Author,FileType\" --allResults Return the top 50 items of which the title starts with Marketing while trimming duplicates. m365 spo search --queryText \"Title:Marketing*\" --rowLimit = 50 --trimDuplicates Return only items from a specific result source (using the source id). m365 spo search --queryText \"*\" --sourceId \"6e71030e-5e16-4406-9bff-9c1829843083\"","title":"search"},{"location":"cmd/spo/spo-search/#spo-search","text":"Executes a search query","title":"spo search"},{"location":"cmd/spo/spo-search/#usage","text":"m365 spo search [ options ]","title":"Usage"},{"location":"cmd/spo/spo-search/#options","text":"-q, --queryText <queryText> Query to be executed in KQL format -p, --selectProperties [selectProperties] Comma-separated list of properties to retrieve. Will retrieve all properties if not specified and json output is requested. -u, --webUrl [webUrl] The web against which we want to execute the query. If the parameter is not defined, the query is executed against the web that's used when logging in to the SPO environment. --allResults Set, to get all results of the search query, instead of the number specified by the rowlimit (default: 10) --rowLimit [rowLimit] The number of rows to be returned. When the allResults option is used, the specified value will define the size of retrieved batches --sourceId [sourceId] The identifier (GUID) of the result source to be used to run the query. --trimDuplicates Set, to remove near duplicate items from the search results. --enableStemming Set, to enable stemming. --culture [culture] The locale for the query. --refinementFilters [refinementFilters] The set of refinement filters used when issuing a refinement query. --queryTemplate [queryTemplate] A string that contains the text that replaces the query text, as part of a query transformation. --sortList [sortList] The list of properties by which the search results are ordered. --rankingModelId [rankingModelId] The ID of the ranking model to use for the query. --startRow [startRow] The first row that is included in the search results that are returned. You use this parameter when you want to implement paging for search results. --properties [properties] Additional properties for the query. --sourceName [sourceName] Specified the name of the result source to be used to run the query. --refiners [refiners] The set of refiners to return in a search result. --hiddenConstraints [hiddenConstraints] The additional query terms to append to the query. --clientType [clientType] The type of the client that issued the query. --enablePhonetic Set, to use the phonetic forms of the query terms to find matches. (Default = false ). --processBestBets Set, to return best bet results for the query. --enableQueryRules Set, to enable query rules for the query. --processPersonalFavorites Set, to return personal favorites with the search results. --rawOutput Set, to return the unparsed, raw results of the REST call to the search API. -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/spo-search/#examples","text":"Execute search query to retrieve all Document Sets (ContentTypeId = 0x0120D520 ) for the English locale m365 spo search --queryText \"ContentTypeId:0x0120D520\" --culture 1033 Retrieve all documents. For each document, retrieve the Path , Author and FileType . m365 spo search --queryText \"IsDocument:1\" --selectProperties \"Path,Author,FileType\" --allResults Return the top 50 items of which the title starts with Marketing while trimming duplicates. m365 spo search --queryText \"Title:Marketing*\" --rowLimit = 50 --trimDuplicates Return only items from a specific result source (using the source id). m365 spo search --queryText \"*\" --sourceId \"6e71030e-5e16-4406-9bff-9c1829843083\"","title":"Examples"},{"location":"cmd/spo/spo-set/","text":"spo set \u00b6 Sets the URL of the root SharePoint site collection for use in SPO commands Usage \u00b6 m365 spo set [ options ] Options \u00b6 -u, --url <url> The URL of the root SharePoint site collection to use in SPO commands -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 CLI for Microsoft 365 automatically discovers the URL of the root SharePoint site collection/SharePoint tenant admin site (whichever is needed to run the particular command). In specific cases, like when managing multi-geo Microsoft 365 tenants, it could be desirable to make the CLI manage the specific geography. For such cases, you can use this command to explicitly specify the SPO URL that should be used when executing SPO commands. Examples \u00b6 Set SPO URL to the specified URL m365 spo set --url https://contoso.sharepoint.com","title":"set"},{"location":"cmd/spo/spo-set/#spo-set","text":"Sets the URL of the root SharePoint site collection for use in SPO commands","title":"spo set"},{"location":"cmd/spo/spo-set/#usage","text":"m365 spo set [ options ]","title":"Usage"},{"location":"cmd/spo/spo-set/#options","text":"-u, --url <url> The URL of the root SharePoint site collection to use in SPO commands -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/spo-set/#remarks","text":"CLI for Microsoft 365 automatically discovers the URL of the root SharePoint site collection/SharePoint tenant admin site (whichever is needed to run the particular command). In specific cases, like when managing multi-geo Microsoft 365 tenants, it could be desirable to make the CLI manage the specific geography. For such cases, you can use this command to explicitly specify the SPO URL that should be used when executing SPO commands.","title":"Remarks"},{"location":"cmd/spo/spo-set/#examples","text":"Set SPO URL to the specified URL m365 spo set --url https://contoso.sharepoint.com","title":"Examples"},{"location":"cmd/spo/app/app-add/","text":"spo app add \u00b6 Adds an app to the specified SharePoint Online app catalog Usage \u00b6 m365 spo app add [ options ] Options \u00b6 -p, --filePath <filePath> Absolute or relative path to the solution package file to add to the app catalog --overwrite Set to overwrite the existing package file -s, --appCatalogScope [appCatalogScope] Scope of the app catalog: tenant,sitecollection . Default tenant -u, --appCatalogUrl [appCatalogUrl] The URL of the app catalog where the solution package will be added. It must be specified when the scope is sitecollection -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 When specifying the path to the app package file you can use both relative and absolute paths. Note, that ~ in the path, will not be resolved and will most likely result in an error. When adding an app to the tenant app catalog, it's not necessary to specify the tenant app catalog URL. When the URL is not specified, the CLI will try to resolve the URL itself. Specifying the app catalog URL is required when you want to add the app to a site collection app catalog. When specifying site collection app catalog, you can specify the URL either with our without the AppCatalog part, for example https://contoso.sharepoint.com/sites/team-a/AppCatalog or https://contoso.sharepoint.com/sites/team-a . CLI will accept both formats. If you try to upload a package that already exists in the app catalog without specifying the --overwrite option, the command will fail with an error stating that the specified package already exists. Examples \u00b6 Add the spfx.sppkg package to the tenant app catalog m365 spo app add --filePath /Users/pnp/spfx/sharepoint/solution/spfx.sppkg Overwrite the spfx.sppkg package in the tenant app catalog with the newer version m365 spo app add --filePath sharepoint/solution/spfx.sppkg --overwrite Add the spfx.sppkg package to the site collection app catalog of site https://contoso.sharepoint.com/sites/site1 m365 spo app add --filePath c: \\s pfx.sppkg --appCatalogScope sitecollection --appCatalogUrl https://contoso.sharepoint.com/sites/site1 More information \u00b6 Application Lifecycle Management (ALM) APIs: https://docs.microsoft.com/en-us/sharepoint/dev/apis/alm-api-for-spfx-add-ins","title":"app add"},{"location":"cmd/spo/app/app-add/#spo-app-add","text":"Adds an app to the specified SharePoint Online app catalog","title":"spo app add"},{"location":"cmd/spo/app/app-add/#usage","text":"m365 spo app add [ options ]","title":"Usage"},{"location":"cmd/spo/app/app-add/#options","text":"-p, --filePath <filePath> Absolute or relative path to the solution package file to add to the app catalog --overwrite Set to overwrite the existing package file -s, --appCatalogScope [appCatalogScope] Scope of the app catalog: tenant,sitecollection . Default tenant -u, --appCatalogUrl [appCatalogUrl] The URL of the app catalog where the solution package will be added. It must be specified when the scope is sitecollection -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/app/app-add/#remarks","text":"When specifying the path to the app package file you can use both relative and absolute paths. Note, that ~ in the path, will not be resolved and will most likely result in an error. When adding an app to the tenant app catalog, it's not necessary to specify the tenant app catalog URL. When the URL is not specified, the CLI will try to resolve the URL itself. Specifying the app catalog URL is required when you want to add the app to a site collection app catalog. When specifying site collection app catalog, you can specify the URL either with our without the AppCatalog part, for example https://contoso.sharepoint.com/sites/team-a/AppCatalog or https://contoso.sharepoint.com/sites/team-a . CLI will accept both formats. If you try to upload a package that already exists in the app catalog without specifying the --overwrite option, the command will fail with an error stating that the specified package already exists.","title":"Remarks"},{"location":"cmd/spo/app/app-add/#examples","text":"Add the spfx.sppkg package to the tenant app catalog m365 spo app add --filePath /Users/pnp/spfx/sharepoint/solution/spfx.sppkg Overwrite the spfx.sppkg package in the tenant app catalog with the newer version m365 spo app add --filePath sharepoint/solution/spfx.sppkg --overwrite Add the spfx.sppkg package to the site collection app catalog of site https://contoso.sharepoint.com/sites/site1 m365 spo app add --filePath c: \\s pfx.sppkg --appCatalogScope sitecollection --appCatalogUrl https://contoso.sharepoint.com/sites/site1","title":"Examples"},{"location":"cmd/spo/app/app-add/#more-information","text":"Application Lifecycle Management (ALM) APIs: https://docs.microsoft.com/en-us/sharepoint/dev/apis/alm-api-for-spfx-add-ins","title":"More information"},{"location":"cmd/spo/app/app-deploy/","text":"spo app deploy \u00b6 Deploys the specified app in the specified app catalog Usage \u00b6 m365 spo app deploy [ options ] Options \u00b6 -i, --id [id] ID of the app to deploy. Specify the id or the name but not both -n, --name [name] Name of the app to deploy. Specify the id or the name but not both -u, --appCatalogUrl [appCatalogUrl] URL of the tenant or site collection app catalog. It must be specified when the scope is sitecollection --skipFeatureDeployment If the app supports tenant-wide deployment, deploy it to the whole tenant -s, --appCatalogScope [appCatalogScope] Scope of the app catalog: tenant,sitecollection . Default tenant -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 When deploying an app in the tenant app catalog, it's not necessary to specify the tenant app catalog URL. When the URL is not specified, the CLI will try to resolve the URL itself. Specifying the app catalog URL is required when you want to deploy the app in a site collection app catalog. When specifying site collection app catalog, you can specify the URL either with our without the AppCatalog part, for example https://contoso.sharepoint.com/sites/team-a/AppCatalog or https://contoso.sharepoint.com/sites/team-a . CLI will accept both formats. If the app with the specified ID doesn't exist in the app catalog, the command will fail with an error. Before you can deploy an app, you have to add it to the app catalog first using the spo app add command. Examples \u00b6 Deploy the specified app in the tenant app catalog. Try to resolve the URL of the tenant app catalog automatically. m365 spo app deploy --id 058140e3-0e37-44fc-a1d3-79c487d371a3 Deploy the specified app in the site collection app catalog of site https://contoso.sharepoint.com/sites/site1 m365 spo app deploy --id 058140e3-0e37-44fc-a1d3-79c487d371a3 --appCatalogScope sitecollection --appCatalogUrl https://contoso.sharepoint.com/sites/site1 Deploy the app with the specified name in the tenant app catalog. Try to resolve the URL of the tenant app catalog automatically. m365 spo app deploy --name solution.sppkg Deploy the specified app in the tenant app catalog located at https://contoso.sharepoint.com/sites/apps m365 spo app deploy --id 058140e3-0e37-44fc-a1d3-79c487d371a3 --appCatalogUrl https://contoso.sharepoint.com/sites/apps Deploy the specified app to the whole tenant at once. Features included in the solution will not be activated. m365 spo app deploy --id 058140e3-0e37-44fc-a1d3-79c487d371a3 --skipFeatureDeployment More information \u00b6 Application Lifecycle Management (ALM) APIs: https://docs.microsoft.com/en-us/sharepoint/dev/apis/alm-api-for-spfx-add-ins","title":"app deploy"},{"location":"cmd/spo/app/app-deploy/#spo-app-deploy","text":"Deploys the specified app in the specified app catalog","title":"spo app deploy"},{"location":"cmd/spo/app/app-deploy/#usage","text":"m365 spo app deploy [ options ]","title":"Usage"},{"location":"cmd/spo/app/app-deploy/#options","text":"-i, --id [id] ID of the app to deploy. Specify the id or the name but not both -n, --name [name] Name of the app to deploy. Specify the id or the name but not both -u, --appCatalogUrl [appCatalogUrl] URL of the tenant or site collection app catalog. It must be specified when the scope is sitecollection --skipFeatureDeployment If the app supports tenant-wide deployment, deploy it to the whole tenant -s, --appCatalogScope [appCatalogScope] Scope of the app catalog: tenant,sitecollection . Default tenant -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/app/app-deploy/#remarks","text":"When deploying an app in the tenant app catalog, it's not necessary to specify the tenant app catalog URL. When the URL is not specified, the CLI will try to resolve the URL itself. Specifying the app catalog URL is required when you want to deploy the app in a site collection app catalog. When specifying site collection app catalog, you can specify the URL either with our without the AppCatalog part, for example https://contoso.sharepoint.com/sites/team-a/AppCatalog or https://contoso.sharepoint.com/sites/team-a . CLI will accept both formats. If the app with the specified ID doesn't exist in the app catalog, the command will fail with an error. Before you can deploy an app, you have to add it to the app catalog first using the spo app add command.","title":"Remarks"},{"location":"cmd/spo/app/app-deploy/#examples","text":"Deploy the specified app in the tenant app catalog. Try to resolve the URL of the tenant app catalog automatically. m365 spo app deploy --id 058140e3-0e37-44fc-a1d3-79c487d371a3 Deploy the specified app in the site collection app catalog of site https://contoso.sharepoint.com/sites/site1 m365 spo app deploy --id 058140e3-0e37-44fc-a1d3-79c487d371a3 --appCatalogScope sitecollection --appCatalogUrl https://contoso.sharepoint.com/sites/site1 Deploy the app with the specified name in the tenant app catalog. Try to resolve the URL of the tenant app catalog automatically. m365 spo app deploy --name solution.sppkg Deploy the specified app in the tenant app catalog located at https://contoso.sharepoint.com/sites/apps m365 spo app deploy --id 058140e3-0e37-44fc-a1d3-79c487d371a3 --appCatalogUrl https://contoso.sharepoint.com/sites/apps Deploy the specified app to the whole tenant at once. Features included in the solution will not be activated. m365 spo app deploy --id 058140e3-0e37-44fc-a1d3-79c487d371a3 --skipFeatureDeployment","title":"Examples"},{"location":"cmd/spo/app/app-deploy/#more-information","text":"Application Lifecycle Management (ALM) APIs: https://docs.microsoft.com/en-us/sharepoint/dev/apis/alm-api-for-spfx-add-ins","title":"More information"},{"location":"cmd/spo/app/app-get/","text":"spo app get \u00b6 Gets information about the specific app from the specified app catalog Usage \u00b6 m365 spo app get [ options ] Options \u00b6 -i, --id [id] ID of the app to retrieve information for. Specify the id or the name but not both -n, --name [name] Name of the app to retrieve information for. Specify the id or the name but not both -u, --appCatalogUrl [appCatalogUrl] URL of the tenant or site collection app catalog. It must be specified when the scope is sitecollection -s, --appCatalogScope [appCatalogScope] Scope of the app catalog: tenant,sitecollection . Default tenant -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 When getting information about an app from the tenant app catalog, it's not necessary to specify the tenant app catalog URL. When the URL is not specified, the CLI will try to resolve the URL itself. Specifying the app catalog URL is required when you want to get information about an app from a site collection app catalog. When specifying site collection app catalog, you can specify the URL either with our without the AppCatalog part, for example https://contoso.sharepoint.com/sites/team-a/AppCatalog or https://contoso.sharepoint.com/sites/team-a . CLI will accept both formats. Examples \u00b6 Return details about the app with ID b2307a39-e878-458b-bc90-03bc578531d6 available in the tenant app catalog. m365 spo app get --id b2307a39-e878-458b-bc90-03bc578531d6 Return details about the app with name solution.sppkg available in the tenant app catalog. Will try to detect the app catalog URL m365 spo app get --name solution.sppkg Return details about the app with name solution.sppkg available in the tenant app catalog using the specified app catalog URL m365 spo app get --name solution.sppkg --appCatalogUrl https://contoso.sharepoint.com/sites/apps Return details about the app with ID b2307a39-e878-458b-bc90-03bc578531d6 available in the site collection app catalog of site https://contoso.sharepoint.com/sites/site1 . m365 spo app get --id b2307a39-e878-458b-bc90-03bc578531d6 --appCatalogScope sitecollection --appCatalogUrl https://contoso.sharepoint.com/sites/site1 More information \u00b6 Application Lifecycle Management (ALM) APIs: https://docs.microsoft.com/en-us/sharepoint/dev/apis/alm-api-for-spfx-add-ins","title":"app get"},{"location":"cmd/spo/app/app-get/#spo-app-get","text":"Gets information about the specific app from the specified app catalog","title":"spo app get"},{"location":"cmd/spo/app/app-get/#usage","text":"m365 spo app get [ options ]","title":"Usage"},{"location":"cmd/spo/app/app-get/#options","text":"-i, --id [id] ID of the app to retrieve information for. Specify the id or the name but not both -n, --name [name] Name of the app to retrieve information for. Specify the id or the name but not both -u, --appCatalogUrl [appCatalogUrl] URL of the tenant or site collection app catalog. It must be specified when the scope is sitecollection -s, --appCatalogScope [appCatalogScope] Scope of the app catalog: tenant,sitecollection . Default tenant -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/app/app-get/#remarks","text":"When getting information about an app from the tenant app catalog, it's not necessary to specify the tenant app catalog URL. When the URL is not specified, the CLI will try to resolve the URL itself. Specifying the app catalog URL is required when you want to get information about an app from a site collection app catalog. When specifying site collection app catalog, you can specify the URL either with our without the AppCatalog part, for example https://contoso.sharepoint.com/sites/team-a/AppCatalog or https://contoso.sharepoint.com/sites/team-a . CLI will accept both formats.","title":"Remarks"},{"location":"cmd/spo/app/app-get/#examples","text":"Return details about the app with ID b2307a39-e878-458b-bc90-03bc578531d6 available in the tenant app catalog. m365 spo app get --id b2307a39-e878-458b-bc90-03bc578531d6 Return details about the app with name solution.sppkg available in the tenant app catalog. Will try to detect the app catalog URL m365 spo app get --name solution.sppkg Return details about the app with name solution.sppkg available in the tenant app catalog using the specified app catalog URL m365 spo app get --name solution.sppkg --appCatalogUrl https://contoso.sharepoint.com/sites/apps Return details about the app with ID b2307a39-e878-458b-bc90-03bc578531d6 available in the site collection app catalog of site https://contoso.sharepoint.com/sites/site1 . m365 spo app get --id b2307a39-e878-458b-bc90-03bc578531d6 --appCatalogScope sitecollection --appCatalogUrl https://contoso.sharepoint.com/sites/site1","title":"Examples"},{"location":"cmd/spo/app/app-get/#more-information","text":"Application Lifecycle Management (ALM) APIs: https://docs.microsoft.com/en-us/sharepoint/dev/apis/alm-api-for-spfx-add-ins","title":"More information"},{"location":"cmd/spo/app/app-install/","text":"spo app install \u00b6 Installs an app from the specified app catalog in the site Usage \u00b6 m365 spo app install [ options ] Options \u00b6 -i, --id <id> ID of the app to install -s, --siteUrl <siteUrl> Absolute URL of the site to install the app in --appCatalogScope [appCatalogScope] Scope of the app catalog: tenant,sitecollection . Default tenant -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 If the app with the specified ID doesn't exist in the app catalog, the command will fail with an error. Before you can install app in a site, you have to add it to the tenant or site collection app catalog first using the spo app add command. Examples \u00b6 Install the app with ID b2307a39-e878-458b-bc90-03bc578531d6 in the https://contoso.sharepoint.com site. m365 spo app install --id b2307a39-e878-458b-bc90-03bc578531d6 --siteUrl https://contoso.sharepoint.com Install the app with ID b2307a39-e878-458b-bc90-03bc578531d6 in the https://contoso.sharepoint.com site from site collection app catalog. m365 spo app install --id b2307a39-e878-458b-bc90-03bc578531d6 --siteUrl https://contoso.sharepoint.com --appCatalogScope sitecollection More information \u00b6 Application Lifecycle Management (ALM) APIs: https://docs.microsoft.com/en-us/sharepoint/dev/apis/alm-api-for-spfx-add-ins","title":"app install"},{"location":"cmd/spo/app/app-install/#spo-app-install","text":"Installs an app from the specified app catalog in the site","title":"spo app install"},{"location":"cmd/spo/app/app-install/#usage","text":"m365 spo app install [ options ]","title":"Usage"},{"location":"cmd/spo/app/app-install/#options","text":"-i, --id <id> ID of the app to install -s, --siteUrl <siteUrl> Absolute URL of the site to install the app in --appCatalogScope [appCatalogScope] Scope of the app catalog: tenant,sitecollection . Default tenant -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/app/app-install/#remarks","text":"If the app with the specified ID doesn't exist in the app catalog, the command will fail with an error. Before you can install app in a site, you have to add it to the tenant or site collection app catalog first using the spo app add command.","title":"Remarks"},{"location":"cmd/spo/app/app-install/#examples","text":"Install the app with ID b2307a39-e878-458b-bc90-03bc578531d6 in the https://contoso.sharepoint.com site. m365 spo app install --id b2307a39-e878-458b-bc90-03bc578531d6 --siteUrl https://contoso.sharepoint.com Install the app with ID b2307a39-e878-458b-bc90-03bc578531d6 in the https://contoso.sharepoint.com site from site collection app catalog. m365 spo app install --id b2307a39-e878-458b-bc90-03bc578531d6 --siteUrl https://contoso.sharepoint.com --appCatalogScope sitecollection","title":"Examples"},{"location":"cmd/spo/app/app-install/#more-information","text":"Application Lifecycle Management (ALM) APIs: https://docs.microsoft.com/en-us/sharepoint/dev/apis/alm-api-for-spfx-add-ins","title":"More information"},{"location":"cmd/spo/app/app-instance-list/","text":"spo app instance list \u00b6 Retrieve apps installed in a site Usage \u00b6 m365 spo app instance list [ options ] Options \u00b6 -u, --siteUrl <siteUrl> URL of the site collection to retrieve the apps for -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Return a list of installed apps on site https://contoso.sharepoint.com/sites/site1 . m365 spo app instance list --siteUrl https://contoso.sharepoint.com/sites/site1","title":"app instance list"},{"location":"cmd/spo/app/app-instance-list/#spo-app-instance-list","text":"Retrieve apps installed in a site","title":"spo app instance list"},{"location":"cmd/spo/app/app-instance-list/#usage","text":"m365 spo app instance list [ options ]","title":"Usage"},{"location":"cmd/spo/app/app-instance-list/#options","text":"-u, --siteUrl <siteUrl> URL of the site collection to retrieve the apps for -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/app/app-instance-list/#examples","text":"Return a list of installed apps on site https://contoso.sharepoint.com/sites/site1 . m365 spo app instance list --siteUrl https://contoso.sharepoint.com/sites/site1","title":"Examples"},{"location":"cmd/spo/app/app-list/","text":"spo app list \u00b6 Lists apps from the specified app catalog Usage \u00b6 m365 spo app list [ options ] Options \u00b6 -s, --appCatalogScope [appCatalogScope] Target app catalog. tenant,sitecollection . Default tenant -u, --appCatalogUrl [appCatalogUrl] URL of the tenant or site collection app catalog. It must be specified when the scope is sitecollection -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 When listing information about apps available in the tenant app catalog, it's not necessary to specify the tenant app catalog URL. When the URL is not specified, the CLI will try to resolve the URL itself. Specifying the app catalog URL is required when you want to list information about apps in a site collection app catalog. When specifying site collection app catalog, you can specify the URL either with our without the AppCatalog part, for example https://contoso.sharepoint.com/sites/team-a/AppCatalog or https://contoso.sharepoint.com/sites/team-a . CLI will accept both formats. When using the text output type (default), the command lists only the values of the Title , ID , Deployed and AppCatalogVersion properties of the app. When setting the output type to JSON, all available properties are included in the command output. Examples \u00b6 Return the list of available apps from the tenant app catalog. Show the installed version in the site if applicable. m365 spo app list Return the list of available apps from a site collection app catalog of site https://contoso.sharepoint.com/sites/site1 . m365 spo app list --appCatalogScope sitecollection --appCatalogUrl https://contoso.sharepoint.com/sites/site1 More information \u00b6 Application Lifecycle Management (ALM) APIs: https://docs.microsoft.com/en-us/sharepoint/dev/apis/alm-api-for-spfx-add-ins","title":"app list"},{"location":"cmd/spo/app/app-list/#spo-app-list","text":"Lists apps from the specified app catalog","title":"spo app list"},{"location":"cmd/spo/app/app-list/#usage","text":"m365 spo app list [ options ]","title":"Usage"},{"location":"cmd/spo/app/app-list/#options","text":"-s, --appCatalogScope [appCatalogScope] Target app catalog. tenant,sitecollection . Default tenant -u, --appCatalogUrl [appCatalogUrl] URL of the tenant or site collection app catalog. It must be specified when the scope is sitecollection -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/app/app-list/#remarks","text":"When listing information about apps available in the tenant app catalog, it's not necessary to specify the tenant app catalog URL. When the URL is not specified, the CLI will try to resolve the URL itself. Specifying the app catalog URL is required when you want to list information about apps in a site collection app catalog. When specifying site collection app catalog, you can specify the URL either with our without the AppCatalog part, for example https://contoso.sharepoint.com/sites/team-a/AppCatalog or https://contoso.sharepoint.com/sites/team-a . CLI will accept both formats. When using the text output type (default), the command lists only the values of the Title , ID , Deployed and AppCatalogVersion properties of the app. When setting the output type to JSON, all available properties are included in the command output.","title":"Remarks"},{"location":"cmd/spo/app/app-list/#examples","text":"Return the list of available apps from the tenant app catalog. Show the installed version in the site if applicable. m365 spo app list Return the list of available apps from a site collection app catalog of site https://contoso.sharepoint.com/sites/site1 . m365 spo app list --appCatalogScope sitecollection --appCatalogUrl https://contoso.sharepoint.com/sites/site1","title":"Examples"},{"location":"cmd/spo/app/app-list/#more-information","text":"Application Lifecycle Management (ALM) APIs: https://docs.microsoft.com/en-us/sharepoint/dev/apis/alm-api-for-spfx-add-ins","title":"More information"},{"location":"cmd/spo/app/app-remove/","text":"spo app remove \u00b6 Removes the specified app from the specified app catalog Usage \u00b6 m365 spo app remove [ options ] Options \u00b6 -i, --id <id> ID of the app to remove. Needs to be available in the app catalog -u, --appCatalogUrl [appCatalogUrl] URL of the tenant or site collection app catalog. It must be specified when the scope is sitecollection -s, --appCatalogScope [appCatalogScope] Scope of the app catalog: tenant,sitecollection . Default tenant --confirm Don't prompt for confirming removing the app -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 When removing an app from the tenant app catalog, it's not necessary to specify the tenant app catalog URL. When the URL is not specified, the CLI will try to resolve the URL itself. Specifying the app catalog URL is required when you want to remove the app from a site collection app catalog. When specifying site collection app catalog, you can specify the URL either with our without the AppCatalog part, for example https://contoso.sharepoint.com/sites/team-a/AppCatalog or https://contoso.sharepoint.com/sites/team-a . CLI will accept both formats. If the app with the specified ID doesn't exist in the app catalog, the command will fail with an error. Examples \u00b6 Remove the specified app from the tenant app catalog. Try to resolve the URL of the tenant app catalog automatically. Additionally, will prompt for confirmation before actually retracting the app. m365 spo app remove --id 058140e3-0e37-44fc-a1d3-79c487d371a3 Remove the specified app from the tenant app catalog located at https://contoso.sharepoint.com/sites/apps . Additionally, will prompt for confirmation before actually retracting the app. m365 spo app remove --id 058140e3-0e37-44fc-a1d3-79c487d371a3 --appCatalogUrl https://contoso.sharepoint.com/sites/apps Remove the specified app from the tenant app catalog located at https://contoso.sharepoint.com/sites/apps . Don't prompt for confirmation. m365 spo app remove --id 058140e3-0e37-44fc-a1d3-79c487d371a3 --appCatalogUrl https://contoso.sharepoint.com/sites/apps --confirm Remove the specified app from a site collection app catalog of site https://contoso.sharepoint.com/sites/site1 . m365 spo app remove --id d95f8c94-67a1-4615-9af8-361ad33be93c --appCatalogScope sitecollection --appCatalogUrl https://contoso.sharepoint.com/sites/site1/AppCatalog More information \u00b6 Application Lifecycle Management (ALM) APIs: https://docs.microsoft.com/en-us/sharepoint/dev/apis/alm-api-for-spfx-add-ins","title":"app remove"},{"location":"cmd/spo/app/app-remove/#spo-app-remove","text":"Removes the specified app from the specified app catalog","title":"spo app remove"},{"location":"cmd/spo/app/app-remove/#usage","text":"m365 spo app remove [ options ]","title":"Usage"},{"location":"cmd/spo/app/app-remove/#options","text":"-i, --id <id> ID of the app to remove. Needs to be available in the app catalog -u, --appCatalogUrl [appCatalogUrl] URL of the tenant or site collection app catalog. It must be specified when the scope is sitecollection -s, --appCatalogScope [appCatalogScope] Scope of the app catalog: tenant,sitecollection . Default tenant --confirm Don't prompt for confirming removing the app -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/app/app-remove/#remarks","text":"When removing an app from the tenant app catalog, it's not necessary to specify the tenant app catalog URL. When the URL is not specified, the CLI will try to resolve the URL itself. Specifying the app catalog URL is required when you want to remove the app from a site collection app catalog. When specifying site collection app catalog, you can specify the URL either with our without the AppCatalog part, for example https://contoso.sharepoint.com/sites/team-a/AppCatalog or https://contoso.sharepoint.com/sites/team-a . CLI will accept both formats. If the app with the specified ID doesn't exist in the app catalog, the command will fail with an error.","title":"Remarks"},{"location":"cmd/spo/app/app-remove/#examples","text":"Remove the specified app from the tenant app catalog. Try to resolve the URL of the tenant app catalog automatically. Additionally, will prompt for confirmation before actually retracting the app. m365 spo app remove --id 058140e3-0e37-44fc-a1d3-79c487d371a3 Remove the specified app from the tenant app catalog located at https://contoso.sharepoint.com/sites/apps . Additionally, will prompt for confirmation before actually retracting the app. m365 spo app remove --id 058140e3-0e37-44fc-a1d3-79c487d371a3 --appCatalogUrl https://contoso.sharepoint.com/sites/apps Remove the specified app from the tenant app catalog located at https://contoso.sharepoint.com/sites/apps . Don't prompt for confirmation. m365 spo app remove --id 058140e3-0e37-44fc-a1d3-79c487d371a3 --appCatalogUrl https://contoso.sharepoint.com/sites/apps --confirm Remove the specified app from a site collection app catalog of site https://contoso.sharepoint.com/sites/site1 . m365 spo app remove --id d95f8c94-67a1-4615-9af8-361ad33be93c --appCatalogScope sitecollection --appCatalogUrl https://contoso.sharepoint.com/sites/site1/AppCatalog","title":"Examples"},{"location":"cmd/spo/app/app-remove/#more-information","text":"Application Lifecycle Management (ALM) APIs: https://docs.microsoft.com/en-us/sharepoint/dev/apis/alm-api-for-spfx-add-ins","title":"More information"},{"location":"cmd/spo/app/app-retract/","text":"spo app retract \u00b6 Retracts the specified app from the specified app catalog Usage \u00b6 m365 spo app retract [ options ] Options \u00b6 -i, --id <id> ID of the app to retract. Needs to be available in the app catalog. -u, --appCatalogUrl [appCatalogUrl] URL of the tenant or site collection app catalog. It must be specified when the scope is sitecollection -s, --appCatalogScope [appCatalogScope] Scope of the app catalog: tenant,sitecollection . Default tenant --confirm Don't prompt for confirming retracting the app -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 When getting information about an app from the tenant app catalog, it's not necessary to specify the tenant app catalog URL. When the URL is not specified, the CLI will try to resolve the URL itself. Specifying the app catalog URL is required when you want to get information about an app from a site collection app catalog. When specifying site collection app catalog, you can specify the URL either with our without the AppCatalog part, for example https://contoso.sharepoint.com/sites/team-a/AppCatalog or https://contoso.sharepoint.com/sites/team-a . CLI will accept both formats. If the app with the specified ID doesn't exist in the app catalog, the command will fail with an error. Examples \u00b6 Retract the specified app from the tenant app catalog. Try to resolve the URL of the tenant app catalog automatically. Additionally, will prompt for confirmation before actually retracting the app. m365 spo app retract --id 058140e3-0e37-44fc-a1d3-79c487d371a3 Retract the specified app from the tenant app catalog located at https://contoso.sharepoint.com/sites/apps . Additionally, will prompt for confirmation before actually retracting the app. m365 spo app retract --id 058140e3-0e37-44fc-a1d3-79c487d371a3 --appCatalogUrl https://contoso.sharepoint.com/sites/apps Retract the specified app from the tenant app catalog. Try to resolve the URL of the tenant app catalog automatically. Will not prompt for confirmation before retracting the app. m365 spo app retract --id 058140e3-0e37-44fc-a1d3-79c487d371a3 --confirm Retract the specified app from a site collection app catalog of site https://contoso.sharepoint.com/sites/site1 . m365 spo app retract --id d95f8c94-67a1-4615-9af8-361ad33be93c --appCatalogScope sitecollection --appCatalogUrl https://contoso.sharepoint.com/sites/site1 More information \u00b6 Application Lifecycle Management (ALM) APIs: https://docs.microsoft.com/en-us/sharepoint/dev/apis/alm-api-for-spfx-add-ins","title":"app retract"},{"location":"cmd/spo/app/app-retract/#spo-app-retract","text":"Retracts the specified app from the specified app catalog","title":"spo app retract"},{"location":"cmd/spo/app/app-retract/#usage","text":"m365 spo app retract [ options ]","title":"Usage"},{"location":"cmd/spo/app/app-retract/#options","text":"-i, --id <id> ID of the app to retract. Needs to be available in the app catalog. -u, --appCatalogUrl [appCatalogUrl] URL of the tenant or site collection app catalog. It must be specified when the scope is sitecollection -s, --appCatalogScope [appCatalogScope] Scope of the app catalog: tenant,sitecollection . Default tenant --confirm Don't prompt for confirming retracting the app -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/app/app-retract/#remarks","text":"When getting information about an app from the tenant app catalog, it's not necessary to specify the tenant app catalog URL. When the URL is not specified, the CLI will try to resolve the URL itself. Specifying the app catalog URL is required when you want to get information about an app from a site collection app catalog. When specifying site collection app catalog, you can specify the URL either with our without the AppCatalog part, for example https://contoso.sharepoint.com/sites/team-a/AppCatalog or https://contoso.sharepoint.com/sites/team-a . CLI will accept both formats. If the app with the specified ID doesn't exist in the app catalog, the command will fail with an error.","title":"Remarks"},{"location":"cmd/spo/app/app-retract/#examples","text":"Retract the specified app from the tenant app catalog. Try to resolve the URL of the tenant app catalog automatically. Additionally, will prompt for confirmation before actually retracting the app. m365 spo app retract --id 058140e3-0e37-44fc-a1d3-79c487d371a3 Retract the specified app from the tenant app catalog located at https://contoso.sharepoint.com/sites/apps . Additionally, will prompt for confirmation before actually retracting the app. m365 spo app retract --id 058140e3-0e37-44fc-a1d3-79c487d371a3 --appCatalogUrl https://contoso.sharepoint.com/sites/apps Retract the specified app from the tenant app catalog. Try to resolve the URL of the tenant app catalog automatically. Will not prompt for confirmation before retracting the app. m365 spo app retract --id 058140e3-0e37-44fc-a1d3-79c487d371a3 --confirm Retract the specified app from a site collection app catalog of site https://contoso.sharepoint.com/sites/site1 . m365 spo app retract --id d95f8c94-67a1-4615-9af8-361ad33be93c --appCatalogScope sitecollection --appCatalogUrl https://contoso.sharepoint.com/sites/site1","title":"Examples"},{"location":"cmd/spo/app/app-retract/#more-information","text":"Application Lifecycle Management (ALM) APIs: https://docs.microsoft.com/en-us/sharepoint/dev/apis/alm-api-for-spfx-add-ins","title":"More information"},{"location":"cmd/spo/app/app-teamspackage-download/","text":"spo app teamspackage download \u00b6 Downloads Teams app package for an SPFx solution deployed to tenant app catalog Usage \u00b6 m365 spo app teamspackage download [ options ] Options \u00b6 --appItemUniqueId [appItemUniqueId] The unique ID of the SPFx app to download the Teams package for. Specify appItemUniqueId , appItemId or appName --appItemId [appItemId] The ID of the list item behind the SPFx app to download the Teams package for. Specify appItemUniqueId , appItemId or appName --appName [appName] The name of the sppkg file to download the Teams package for. Specify appItemUniqueId , appItemId or appName --fileName [fileName] Name of the file to save the package to. If not specified will use the name of the sppkg file with a .zip extension -u, --appCatalogUrl [appCatalogUrl] URL of the tenant app catalog. If not specified, the command will try to autodiscover it -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 Download the Teams app package for an SPFx solution works only for solutions deployed to the tenant app catalog. If you try to download Teams app package for an SPFx solution that doesn't support deployment to Teams, you'll get the Request failed with status code 404 error. For maximum performance, specify the URL of the tenant app catalog, the item ID ( appItemId ) of the SPFx package for which you want to download the Teams app package and the name of the file where you want to save the downloaded package to ( fileName ). Examples \u00b6 Downloads the Teams app package for the SPFx solution deployed to the tenant app catalog with the ID 1 to a file with .zip extension named after the .sppkg file: m365 spo app teamspackage download --appItemId 1 Downloads the Teams app package for the SPFx solution deployed to the tenant app catalog with the unique item ID 335a5612-3e85-462d-9d5b-c014b5abeac5 to the specified file: m365 spo app teamspackage download --appItemUniqueId 335a5612-3e85-462d-9d5b-c014b5abeac5 --fileName my-app.zip Downloads the Teams app package for the SPFx solution deployed to the specified tenant app catalog: m365 spo app teamspackage download --appName my-app.sppkg --appCatalogUrl https://contoso.sharepoint.com/sites/appcatalog","title":"app teamspackage download"},{"location":"cmd/spo/app/app-teamspackage-download/#spo-app-teamspackage-download","text":"Downloads Teams app package for an SPFx solution deployed to tenant app catalog","title":"spo app teamspackage download"},{"location":"cmd/spo/app/app-teamspackage-download/#usage","text":"m365 spo app teamspackage download [ options ]","title":"Usage"},{"location":"cmd/spo/app/app-teamspackage-download/#options","text":"--appItemUniqueId [appItemUniqueId] The unique ID of the SPFx app to download the Teams package for. Specify appItemUniqueId , appItemId or appName --appItemId [appItemId] The ID of the list item behind the SPFx app to download the Teams package for. Specify appItemUniqueId , appItemId or appName --appName [appName] The name of the sppkg file to download the Teams package for. Specify appItemUniqueId , appItemId or appName --fileName [fileName] Name of the file to save the package to. If not specified will use the name of the sppkg file with a .zip extension -u, --appCatalogUrl [appCatalogUrl] URL of the tenant app catalog. If not specified, the command will try to autodiscover it -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/app/app-teamspackage-download/#remarks","text":"Download the Teams app package for an SPFx solution works only for solutions deployed to the tenant app catalog. If you try to download Teams app package for an SPFx solution that doesn't support deployment to Teams, you'll get the Request failed with status code 404 error. For maximum performance, specify the URL of the tenant app catalog, the item ID ( appItemId ) of the SPFx package for which you want to download the Teams app package and the name of the file where you want to save the downloaded package to ( fileName ).","title":"Remarks"},{"location":"cmd/spo/app/app-teamspackage-download/#examples","text":"Downloads the Teams app package for the SPFx solution deployed to the tenant app catalog with the ID 1 to a file with .zip extension named after the .sppkg file: m365 spo app teamspackage download --appItemId 1 Downloads the Teams app package for the SPFx solution deployed to the tenant app catalog with the unique item ID 335a5612-3e85-462d-9d5b-c014b5abeac5 to the specified file: m365 spo app teamspackage download --appItemUniqueId 335a5612-3e85-462d-9d5b-c014b5abeac5 --fileName my-app.zip Downloads the Teams app package for the SPFx solution deployed to the specified tenant app catalog: m365 spo app teamspackage download --appName my-app.sppkg --appCatalogUrl https://contoso.sharepoint.com/sites/appcatalog","title":"Examples"},{"location":"cmd/spo/app/app-uninstall/","text":"spo app uninstall \u00b6 Uninstalls an app from the site Usage \u00b6 m365 spo app uninstall [ options ] Options \u00b6 -i, --id <id> ID of the app to uninstall -s, --siteUrl <siteUrl> Absolute URL of the site to uninstall the app from --appCatalogScope [appCatalogScope] Scope of the app catalog: tenant,sitecollection . Default tenant --confirm Don't prompt for confirming uninstalling the app -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 If the app with the specified ID doesn't exist in the app catalog, the command will fail with an error. Examples \u00b6 Uninstall the app with ID b2307a39-e878-458b-bc90-03bc578531d6 from the https://contoso.sharepoint.com site. m365 spo app uninstall --id b2307a39-e878-458b-bc90-03bc578531d6 --siteUrl https://contoso.sharepoint.com Uninstall the app with ID b2307a39-e878-458b-bc90-03bc578531d6 from the https://contoso.sharepoint.com site without prompting for confirmation. m365 spo app uninstall --id b2307a39-e878-458b-bc90-03bc578531d6 --siteUrl https://contoso.sharepoint.com Uninstall the app with ID b2307a39-e878-458b-bc90-03bc578531d6 from the https://contoso.sharepoint.com site where the app is deployed to the site collection app catalog of https://contoso.sharepoint.com . m365 spo app uninstall --id b2307a39-e878-458b-bc90-03bc578531d6 --siteUrl https://contoso.sharepoint.com --appCatalogScope sitecollection More information \u00b6 Application Lifecycle Management (ALM) APIs: https://docs.microsoft.com/en-us/sharepoint/dev/apis/alm-api-for-spfx-add-ins","title":"app uninstall"},{"location":"cmd/spo/app/app-uninstall/#spo-app-uninstall","text":"Uninstalls an app from the site","title":"spo app uninstall"},{"location":"cmd/spo/app/app-uninstall/#usage","text":"m365 spo app uninstall [ options ]","title":"Usage"},{"location":"cmd/spo/app/app-uninstall/#options","text":"-i, --id <id> ID of the app to uninstall -s, --siteUrl <siteUrl> Absolute URL of the site to uninstall the app from --appCatalogScope [appCatalogScope] Scope of the app catalog: tenant,sitecollection . Default tenant --confirm Don't prompt for confirming uninstalling the app -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/app/app-uninstall/#remarks","text":"If the app with the specified ID doesn't exist in the app catalog, the command will fail with an error.","title":"Remarks"},{"location":"cmd/spo/app/app-uninstall/#examples","text":"Uninstall the app with ID b2307a39-e878-458b-bc90-03bc578531d6 from the https://contoso.sharepoint.com site. m365 spo app uninstall --id b2307a39-e878-458b-bc90-03bc578531d6 --siteUrl https://contoso.sharepoint.com Uninstall the app with ID b2307a39-e878-458b-bc90-03bc578531d6 from the https://contoso.sharepoint.com site without prompting for confirmation. m365 spo app uninstall --id b2307a39-e878-458b-bc90-03bc578531d6 --siteUrl https://contoso.sharepoint.com Uninstall the app with ID b2307a39-e878-458b-bc90-03bc578531d6 from the https://contoso.sharepoint.com site where the app is deployed to the site collection app catalog of https://contoso.sharepoint.com . m365 spo app uninstall --id b2307a39-e878-458b-bc90-03bc578531d6 --siteUrl https://contoso.sharepoint.com --appCatalogScope sitecollection","title":"Examples"},{"location":"cmd/spo/app/app-uninstall/#more-information","text":"Application Lifecycle Management (ALM) APIs: https://docs.microsoft.com/en-us/sharepoint/dev/apis/alm-api-for-spfx-add-ins","title":"More information"},{"location":"cmd/spo/app/app-upgrade/","text":"spo app upgrade \u00b6 Upgrades app in the specified site Usage \u00b6 m365 spo app upgrade [ options ] Options \u00b6 -i, --id <id> ID of the app to upgrade -s, --siteUrl <siteUrl> Absolute URL of the site to upgrade the app in --appCatalogScope [appCatalogScope] Scope of the app catalog: tenant,sitecollection . Default tenant -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 If the app with the specified ID doesn't exist in the app catalog, the command will fail with an error. Examples \u00b6 Upgrade the app with ID b2307a39-e878-458b-bc90-03bc578531d6 in the https://contoso.sharepoint.com site. m365 spo app upgrade --id b2307a39-e878-458b-bc90-03bc578531d6 --siteUrl https://contoso.sharepoint.com Upgrade the app with ID b2307a39-e878-458b-bc90-03bc578531d6 in the https://contoso.sharepoint.com site from site collection app catalog. m365 spo app upgrade --id b2307a39-e878-458b-bc90-03bc578531d6 --siteUrl https://contoso.sharepoint.com --appCatalogScope sitecollection More information \u00b6 Application Lifecycle Management (ALM) APIs: https://docs.microsoft.com/en-us/sharepoint/dev/apis/alm-api-for-spfx-add-ins","title":"app upgrade"},{"location":"cmd/spo/app/app-upgrade/#spo-app-upgrade","text":"Upgrades app in the specified site","title":"spo app upgrade"},{"location":"cmd/spo/app/app-upgrade/#usage","text":"m365 spo app upgrade [ options ]","title":"Usage"},{"location":"cmd/spo/app/app-upgrade/#options","text":"-i, --id <id> ID of the app to upgrade -s, --siteUrl <siteUrl> Absolute URL of the site to upgrade the app in --appCatalogScope [appCatalogScope] Scope of the app catalog: tenant,sitecollection . Default tenant -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/app/app-upgrade/#remarks","text":"If the app with the specified ID doesn't exist in the app catalog, the command will fail with an error.","title":"Remarks"},{"location":"cmd/spo/app/app-upgrade/#examples","text":"Upgrade the app with ID b2307a39-e878-458b-bc90-03bc578531d6 in the https://contoso.sharepoint.com site. m365 spo app upgrade --id b2307a39-e878-458b-bc90-03bc578531d6 --siteUrl https://contoso.sharepoint.com Upgrade the app with ID b2307a39-e878-458b-bc90-03bc578531d6 in the https://contoso.sharepoint.com site from site collection app catalog. m365 spo app upgrade --id b2307a39-e878-458b-bc90-03bc578531d6 --siteUrl https://contoso.sharepoint.com --appCatalogScope sitecollection","title":"Examples"},{"location":"cmd/spo/app/app-upgrade/#more-information","text":"Application Lifecycle Management (ALM) APIs: https://docs.microsoft.com/en-us/sharepoint/dev/apis/alm-api-for-spfx-add-ins","title":"More information"},{"location":"cmd/spo/apppage/apppage-add/","text":"spo apppage add \u00b6 Creates a single-part app page Usage \u00b6 m365 spo apppage add [ options ] Options \u00b6 -u, --webUrl <webUrl> The URL of the site where the page should be created -t, --title <title> The title of the page to be created -d, --webPartData <webPartData> JSON string of the web part to put on the page --addToQuickLaunch Set, to add the page to the quick launch -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 If you want to add the single-part app page to quick launch, use the addToQuickLaunch flag. Examples \u00b6 Create a single-part app page in a site with url https://contoso.sharepoint.com, webpart data is stored in the $webPartData variable m365 spo apppage add --title \"Contoso\" --webUrl \"https://contoso.sharepoint.com\" --webPartData $webPartData --addToQuickLaunch","title":"apppage add"},{"location":"cmd/spo/apppage/apppage-add/#spo-apppage-add","text":"Creates a single-part app page","title":"spo apppage add"},{"location":"cmd/spo/apppage/apppage-add/#usage","text":"m365 spo apppage add [ options ]","title":"Usage"},{"location":"cmd/spo/apppage/apppage-add/#options","text":"-u, --webUrl <webUrl> The URL of the site where the page should be created -t, --title <title> The title of the page to be created -d, --webPartData <webPartData> JSON string of the web part to put on the page --addToQuickLaunch Set, to add the page to the quick launch -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/apppage/apppage-add/#remarks","text":"If you want to add the single-part app page to quick launch, use the addToQuickLaunch flag.","title":"Remarks"},{"location":"cmd/spo/apppage/apppage-add/#examples","text":"Create a single-part app page in a site with url https://contoso.sharepoint.com, webpart data is stored in the $webPartData variable m365 spo apppage add --title \"Contoso\" --webUrl \"https://contoso.sharepoint.com\" --webPartData $webPartData --addToQuickLaunch","title":"Examples"},{"location":"cmd/spo/apppage/apppage-set/","text":"spo apppage set \u00b6 Updates the single-part app page Usage \u00b6 m365 spo apppage set [ options ] Options \u00b6 -u, --webUrl <webUrl> The URL of the site where the page to update is located -n, --name <name> The name of the page to be updated, eg. page.aspx -d, --webPartData <webPartData> JSON string of the web part to update on the page -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Updates the single-part app page located in a site with url https://contoso.sharepoint.com. Web part data is stored in the $webPartData variable m365 spo apppage set --webUrl \"https://contoso.sharepoint.com\" --name \"Contoso.aspx\" --webPartData $webPartData","title":"apppage set"},{"location":"cmd/spo/apppage/apppage-set/#spo-apppage-set","text":"Updates the single-part app page","title":"spo apppage set"},{"location":"cmd/spo/apppage/apppage-set/#usage","text":"m365 spo apppage set [ options ]","title":"Usage"},{"location":"cmd/spo/apppage/apppage-set/#options","text":"-u, --webUrl <webUrl> The URL of the site where the page to update is located -n, --name <name> The name of the page to be updated, eg. page.aspx -d, --webPartData <webPartData> JSON string of the web part to update on the page -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/apppage/apppage-set/#examples","text":"Updates the single-part app page located in a site with url https://contoso.sharepoint.com. Web part data is stored in the $webPartData variable m365 spo apppage set --webUrl \"https://contoso.sharepoint.com\" --name \"Contoso.aspx\" --webPartData $webPartData","title":"Examples"},{"location":"cmd/spo/cdn/cdn-get/","text":"spo cdn get \u00b6 View current status of the specified Microsoft 365 CDN Usage \u00b6 m365 spo cdn get [ options ] Options \u00b6 -t, --type [type] Type of CDN to manage. Public,Private . Default Public -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Important To use this command you have to have permissions to access the tenant admin site. Remarks \u00b6 Using the -t, --type option you can choose whether you want to manage the settings of the Public (default) or Private CDN. If you don't use the option, the command will use the Public CDN. Examples \u00b6 Show if the Public CDN is currently enabled or not m365 spo cdn get Show if the Private CDN is currently enabled or not m365 spo cdn get --type Private More information \u00b6 General availability of Microsoft 365 CDN: https://dev.office.com/blogs/general-availability-of-office-365-cdn","title":"cdn get"},{"location":"cmd/spo/cdn/cdn-get/#spo-cdn-get","text":"View current status of the specified Microsoft 365 CDN","title":"spo cdn get"},{"location":"cmd/spo/cdn/cdn-get/#usage","text":"m365 spo cdn get [ options ]","title":"Usage"},{"location":"cmd/spo/cdn/cdn-get/#options","text":"-t, --type [type] Type of CDN to manage. Public,Private . Default Public -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Important To use this command you have to have permissions to access the tenant admin site.","title":"Options"},{"location":"cmd/spo/cdn/cdn-get/#remarks","text":"Using the -t, --type option you can choose whether you want to manage the settings of the Public (default) or Private CDN. If you don't use the option, the command will use the Public CDN.","title":"Remarks"},{"location":"cmd/spo/cdn/cdn-get/#examples","text":"Show if the Public CDN is currently enabled or not m365 spo cdn get Show if the Private CDN is currently enabled or not m365 spo cdn get --type Private","title":"Examples"},{"location":"cmd/spo/cdn/cdn-get/#more-information","text":"General availability of Microsoft 365 CDN: https://dev.office.com/blogs/general-availability-of-office-365-cdn","title":"More information"},{"location":"cmd/spo/cdn/cdn-origin-add/","text":"spo cdn origin add \u00b6 Adds CDN origin to the current SharePoint Online tenant Usage \u00b6 m365 spo cdn origin add [ options ] Options \u00b6 -t, --type [type] Type of CDN to manage. Public,Private . Default Public -r, --origin <origin> Origin to add to the current CDN configuration -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Important To use this command you have to have permissions to access the tenant admin site. Remarks \u00b6 Using the -t, --type option you can choose whether you want to manage the settings of the Public (default) or Private CDN. If you don't use the option, the command will use the Public CDN. Examples \u00b6 Add */CDN to the list of origins of the Public CDN m365 spo cdn origin add --type Public --origin */CDN More information \u00b6 General availability of Microsoft 365 CDN: https://dev.office.com/blogs/general-availability-of-office-365-cdn","title":"cdn origin add"},{"location":"cmd/spo/cdn/cdn-origin-add/#spo-cdn-origin-add","text":"Adds CDN origin to the current SharePoint Online tenant","title":"spo cdn origin add"},{"location":"cmd/spo/cdn/cdn-origin-add/#usage","text":"m365 spo cdn origin add [ options ]","title":"Usage"},{"location":"cmd/spo/cdn/cdn-origin-add/#options","text":"-t, --type [type] Type of CDN to manage. Public,Private . Default Public -r, --origin <origin> Origin to add to the current CDN configuration -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Important To use this command you have to have permissions to access the tenant admin site.","title":"Options"},{"location":"cmd/spo/cdn/cdn-origin-add/#remarks","text":"Using the -t, --type option you can choose whether you want to manage the settings of the Public (default) or Private CDN. If you don't use the option, the command will use the Public CDN.","title":"Remarks"},{"location":"cmd/spo/cdn/cdn-origin-add/#examples","text":"Add */CDN to the list of origins of the Public CDN m365 spo cdn origin add --type Public --origin */CDN","title":"Examples"},{"location":"cmd/spo/cdn/cdn-origin-add/#more-information","text":"General availability of Microsoft 365 CDN: https://dev.office.com/blogs/general-availability-of-office-365-cdn","title":"More information"},{"location":"cmd/spo/cdn/cdn-origin-list/","text":"spo cdn origin list \u00b6 List CDN origins settings for the current SharePoint Online tenant Usage \u00b6 m365 spo cdn origin list [ options ] Options \u00b6 -t, --type [type] Type of CDN to manage. Public,Private . Default Public -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Important To use this command you have to have permissions to access the tenant admin site. Remarks \u00b6 Using the -t, --type option you can choose whether you want to manage the settings of the Public (default) or Private CDN. If you don't use the option, the command will use the Public CDN. Examples \u00b6 Show the list of origins configured for the Public CDN m365 spo cdn origin list Show the list of origins configured for the Private CDN m365 spo cdn origin list --type Private More information \u00b6 General availability of Microsoft 365 CDN: https://dev.office.com/blogs/general-availability-of-office-365-cdn","title":"cdn origin list"},{"location":"cmd/spo/cdn/cdn-origin-list/#spo-cdn-origin-list","text":"List CDN origins settings for the current SharePoint Online tenant","title":"spo cdn origin list"},{"location":"cmd/spo/cdn/cdn-origin-list/#usage","text":"m365 spo cdn origin list [ options ]","title":"Usage"},{"location":"cmd/spo/cdn/cdn-origin-list/#options","text":"-t, --type [type] Type of CDN to manage. Public,Private . Default Public -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Important To use this command you have to have permissions to access the tenant admin site.","title":"Options"},{"location":"cmd/spo/cdn/cdn-origin-list/#remarks","text":"Using the -t, --type option you can choose whether you want to manage the settings of the Public (default) or Private CDN. If you don't use the option, the command will use the Public CDN.","title":"Remarks"},{"location":"cmd/spo/cdn/cdn-origin-list/#examples","text":"Show the list of origins configured for the Public CDN m365 spo cdn origin list Show the list of origins configured for the Private CDN m365 spo cdn origin list --type Private","title":"Examples"},{"location":"cmd/spo/cdn/cdn-origin-list/#more-information","text":"General availability of Microsoft 365 CDN: https://dev.office.com/blogs/general-availability-of-office-365-cdn","title":"More information"},{"location":"cmd/spo/cdn/cdn-origin-remove/","text":"spo cdn origin remove \u00b6 Removes CDN origin for the current SharePoint Online tenant Usage \u00b6 m365 spo cdn origin remove [ options ] Options \u00b6 -t, --type [type] Type of CDN to manage. Public,Private . Default Public -r, --origin <origin> Origin to remove from the current CDN configuration --confirm Don't prompt for confirming removal of a tenant property -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Important To use this command you have to have permissions to access the tenant admin site. Remarks \u00b6 Using the -t, --type option you can choose whether you want to manage the settings of the Public (default) or Private CDN. If you don't use the option, the command will use the Public CDN. Examples \u00b6 Remove */CDN from the list of origins of the Public CDN m365 spo cdn origin remove --type Public --origin */CDN More information \u00b6 General availability of Microsoft 365 CDN: https://dev.office.com/blogs/general-availability-of-office-365-cdn","title":"cdn origin remove"},{"location":"cmd/spo/cdn/cdn-origin-remove/#spo-cdn-origin-remove","text":"Removes CDN origin for the current SharePoint Online tenant","title":"spo cdn origin remove"},{"location":"cmd/spo/cdn/cdn-origin-remove/#usage","text":"m365 spo cdn origin remove [ options ]","title":"Usage"},{"location":"cmd/spo/cdn/cdn-origin-remove/#options","text":"-t, --type [type] Type of CDN to manage. Public,Private . Default Public -r, --origin <origin> Origin to remove from the current CDN configuration --confirm Don't prompt for confirming removal of a tenant property -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Important To use this command you have to have permissions to access the tenant admin site.","title":"Options"},{"location":"cmd/spo/cdn/cdn-origin-remove/#remarks","text":"Using the -t, --type option you can choose whether you want to manage the settings of the Public (default) or Private CDN. If you don't use the option, the command will use the Public CDN.","title":"Remarks"},{"location":"cmd/spo/cdn/cdn-origin-remove/#examples","text":"Remove */CDN from the list of origins of the Public CDN m365 spo cdn origin remove --type Public --origin */CDN","title":"Examples"},{"location":"cmd/spo/cdn/cdn-origin-remove/#more-information","text":"General availability of Microsoft 365 CDN: https://dev.office.com/blogs/general-availability-of-office-365-cdn","title":"More information"},{"location":"cmd/spo/cdn/cdn-policy-list/","text":"spo cdn policy list \u00b6 Lists CDN policies settings for the current SharePoint Online tenant Usage \u00b6 m365 spo cdn policy list [ options ] Options \u00b6 -t, --cdnType [cdnType] Type of CDN to manage. Public,Private . Default Public -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Important To use this command you have to have permissions to access the tenant admin site. Remarks \u00b6 Using the -t, --cdnType option you can choose whether you want to manage the settings of the Public (default) or Private CDN. If you don't use the option, the command will use the Public CDN. Examples \u00b6 Show the list of policies configured for the Public CDN m365 spo cdn policy list Show the list of policies configured for the Private CDN m365 spo cdn policy list --cdnType Private More information \u00b6 General availability of Microsoft 365 CDN: https://dev.office.com/blogs/general-availability-of-office-365-cdn","title":"cdn policy list"},{"location":"cmd/spo/cdn/cdn-policy-list/#spo-cdn-policy-list","text":"Lists CDN policies settings for the current SharePoint Online tenant","title":"spo cdn policy list"},{"location":"cmd/spo/cdn/cdn-policy-list/#usage","text":"m365 spo cdn policy list [ options ]","title":"Usage"},{"location":"cmd/spo/cdn/cdn-policy-list/#options","text":"-t, --cdnType [cdnType] Type of CDN to manage. Public,Private . Default Public -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Important To use this command you have to have permissions to access the tenant admin site.","title":"Options"},{"location":"cmd/spo/cdn/cdn-policy-list/#remarks","text":"Using the -t, --cdnType option you can choose whether you want to manage the settings of the Public (default) or Private CDN. If you don't use the option, the command will use the Public CDN.","title":"Remarks"},{"location":"cmd/spo/cdn/cdn-policy-list/#examples","text":"Show the list of policies configured for the Public CDN m365 spo cdn policy list Show the list of policies configured for the Private CDN m365 spo cdn policy list --cdnType Private","title":"Examples"},{"location":"cmd/spo/cdn/cdn-policy-list/#more-information","text":"General availability of Microsoft 365 CDN: https://dev.office.com/blogs/general-availability-of-office-365-cdn","title":"More information"},{"location":"cmd/spo/cdn/cdn-policy-set/","text":"spo cdn policy set \u00b6 Sets CDN policy value for the current SharePoint Online tenant Usage \u00b6 m365 spo cdn policy set [ options ] Options \u00b6 -t, --cdnType [cdnType] Type of CDN to manage. Public,Private . Default Public -p, --policy <policy> CDN policy to configure. IncludeFileExtensions|ExcludeRestrictedSiteClassifications -v, --value <value> Value for the policy to configure -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Important To use this command you have to have permissions to access the tenant admin site. Remarks \u00b6 Using the -t, --cdnType option you can choose whether you want to manage the settings of the Public (default) or Private CDN. If you don't use the option, the command will use the Public CDN. Examples \u00b6 Set the list of extensions supported by the Public CDN m365 spo cdn policy set --cdnType Public --policy IncludeFileExtensions --value CSS,EOT,GIF,ICO,JPEG,JPG,JS,MAP,PNG,SVG,TTF,WOFF,JSON More information \u00b6 General availability of Microsoft 365 CDN: https://dev.office.com/blogs/general-availability-of-office-365-cdn","title":"cdn policy set"},{"location":"cmd/spo/cdn/cdn-policy-set/#spo-cdn-policy-set","text":"Sets CDN policy value for the current SharePoint Online tenant","title":"spo cdn policy set"},{"location":"cmd/spo/cdn/cdn-policy-set/#usage","text":"m365 spo cdn policy set [ options ]","title":"Usage"},{"location":"cmd/spo/cdn/cdn-policy-set/#options","text":"-t, --cdnType [cdnType] Type of CDN to manage. Public,Private . Default Public -p, --policy <policy> CDN policy to configure. IncludeFileExtensions|ExcludeRestrictedSiteClassifications -v, --value <value> Value for the policy to configure -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Important To use this command you have to have permissions to access the tenant admin site.","title":"Options"},{"location":"cmd/spo/cdn/cdn-policy-set/#remarks","text":"Using the -t, --cdnType option you can choose whether you want to manage the settings of the Public (default) or Private CDN. If you don't use the option, the command will use the Public CDN.","title":"Remarks"},{"location":"cmd/spo/cdn/cdn-policy-set/#examples","text":"Set the list of extensions supported by the Public CDN m365 spo cdn policy set --cdnType Public --policy IncludeFileExtensions --value CSS,EOT,GIF,ICO,JPEG,JPG,JS,MAP,PNG,SVG,TTF,WOFF,JSON","title":"Examples"},{"location":"cmd/spo/cdn/cdn-policy-set/#more-information","text":"General availability of Microsoft 365 CDN: https://dev.office.com/blogs/general-availability-of-office-365-cdn","title":"More information"},{"location":"cmd/spo/cdn/cdn-set/","text":"spo cdn set \u00b6 Enable or disable the specified Microsoft 365 CDN Usage \u00b6 m365 spo cdn set [ options ] Options \u00b6 -e, --enabled <enabled> Set to true to enable CDN or to false to disable it. Valid values are true,false -t, --type [type] Type of CDN to manage. Public,Private,Both . Default Public --noDefaultOrigins pass to not create the default Origins -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Important To use this command you have to have permissions to access the tenant admin site. Remarks \u00b6 Using the -t, --type option you can choose whether you want to manage the settings of the Public (default), Private CDN or both. If you don't use the option, the command will use the Public CDN. Using the -e, --enabled option you can specify whether the given CDN type should be enabled or disabled. Use true to enable the specified CDN and false to disable it. Using the --noDefaultOrigins option you can specify to skip the creation of the default origins. Examples \u00b6 Enable the Microsoft 365 Public CDN on the current tenant m365 spo cdn set --type Public --enabled true Disable the Microsoft 365 Public CDN on the current tenant m365 spo cdn set --type Public --enabled false Enable the Microsoft 365 Private CDN on the current tenant m365 spo cdn set --type Private --enabled true Enable the Microsoft 365 Private and Public CDN on the current tenant with default origins m365 spo cdn set --type Both --enabled true Enable the Microsoft 365 Private and Public CDN on the current tenant without default origins m365 spo cdn set --type Both --enabled true --noDefaultOrigins More information \u00b6 General availability of Microsoft 365 CDN: https://dev.office.com/blogs/general-availability-of-office-365-cdn","title":"cdn set"},{"location":"cmd/spo/cdn/cdn-set/#spo-cdn-set","text":"Enable or disable the specified Microsoft 365 CDN","title":"spo cdn set"},{"location":"cmd/spo/cdn/cdn-set/#usage","text":"m365 spo cdn set [ options ]","title":"Usage"},{"location":"cmd/spo/cdn/cdn-set/#options","text":"-e, --enabled <enabled> Set to true to enable CDN or to false to disable it. Valid values are true,false -t, --type [type] Type of CDN to manage. Public,Private,Both . Default Public --noDefaultOrigins pass to not create the default Origins -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Important To use this command you have to have permissions to access the tenant admin site.","title":"Options"},{"location":"cmd/spo/cdn/cdn-set/#remarks","text":"Using the -t, --type option you can choose whether you want to manage the settings of the Public (default), Private CDN or both. If you don't use the option, the command will use the Public CDN. Using the -e, --enabled option you can specify whether the given CDN type should be enabled or disabled. Use true to enable the specified CDN and false to disable it. Using the --noDefaultOrigins option you can specify to skip the creation of the default origins.","title":"Remarks"},{"location":"cmd/spo/cdn/cdn-set/#examples","text":"Enable the Microsoft 365 Public CDN on the current tenant m365 spo cdn set --type Public --enabled true Disable the Microsoft 365 Public CDN on the current tenant m365 spo cdn set --type Public --enabled false Enable the Microsoft 365 Private CDN on the current tenant m365 spo cdn set --type Private --enabled true Enable the Microsoft 365 Private and Public CDN on the current tenant with default origins m365 spo cdn set --type Both --enabled true Enable the Microsoft 365 Private and Public CDN on the current tenant without default origins m365 spo cdn set --type Both --enabled true --noDefaultOrigins","title":"Examples"},{"location":"cmd/spo/cdn/cdn-set/#more-information","text":"General availability of Microsoft 365 CDN: https://dev.office.com/blogs/general-availability-of-office-365-cdn","title":"More information"},{"location":"cmd/spo/contenttype/contenttype-add/","text":"spo contenttype add \u00b6 Adds a new list or site content type Usage \u00b6 m365 spo contenttype add [ options ] Options \u00b6 -u, --webUrl <webUrl> Absolute URL of the site where the content type should be created -l, --listTitle [listTitle] Title of the list (if it is a list content type). Specify either listTitle , listId or listUrl . --listId [listId] ID of the list (if it is a list content type). Specify either listTitle , listId or listUrl . --listUrl [listUrl] Server- or site-relative URL of the list (if it is a list content type). Specify either listTitle , listId or listUrl . -i, --id <id> The ID of the content type. Determines the parent content type -n, --name <name> The name of the content type -d, --description [description] The description of the content type -g, --group [group] The group with which the content type should be associated -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 If the specified content type already exists, you will get a A duplicate content type \"Your Content Type\" was found. error. The ID of the content type specifies the parent content type from which this content type inherits. Examples \u00b6 Create a site content type that inherits from the List item content type m365 spo contenttype add --webUrl https://contoso.sharepoint.com/sites/contoso-sales --name 'PnP Alert' --id 0x01007926A45D687BA842B947286090B8F67D --group 'PnP Content Types' Create a list (retrieved by Title) content type that inherits from the List item content type m365 spo contenttype add --webUrl https://contoso.sharepoint.com/sites/contoso-sales --listTitle Alerts --name 'PnP Alert' --id 0x01007926A45D687BA842B947286090B8F67D Create a list (retrieved by ID) content type that inherits from the List item content type m365 spo contenttype add --webUrl https://contoso.sharepoint.com/sites/contoso-sales --listId '8c7a0fcd-9d64-4634-85ea-ce2b37b2ec0c' --name 'PnP Alert' --id 0x01007926A45D687BA842B947286090B8F67D Create a list (retrieved by URL) content type that inherits from the List item content type m365 spo contenttype add --webUrl https://contoso.sharepoint.com/sites/contoso-sales --listUrl '/Shared Documents' --name 'PnP Alert' --id 0x01007926A45D687BA842B947286090B8F67D More information \u00b6 Content Type IDs: https://docs.microsoft.com/en-us/previous-versions/office/developer/sharepoint-2010/aa543822(v%3Doffice.14)","title":"contenttype add"},{"location":"cmd/spo/contenttype/contenttype-add/#spo-contenttype-add","text":"Adds a new list or site content type","title":"spo contenttype add"},{"location":"cmd/spo/contenttype/contenttype-add/#usage","text":"m365 spo contenttype add [ options ]","title":"Usage"},{"location":"cmd/spo/contenttype/contenttype-add/#options","text":"-u, --webUrl <webUrl> Absolute URL of the site where the content type should be created -l, --listTitle [listTitle] Title of the list (if it is a list content type). Specify either listTitle , listId or listUrl . --listId [listId] ID of the list (if it is a list content type). Specify either listTitle , listId or listUrl . --listUrl [listUrl] Server- or site-relative URL of the list (if it is a list content type). Specify either listTitle , listId or listUrl . -i, --id <id> The ID of the content type. Determines the parent content type -n, --name <name> The name of the content type -d, --description [description] The description of the content type -g, --group [group] The group with which the content type should be associated -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/contenttype/contenttype-add/#remarks","text":"If the specified content type already exists, you will get a A duplicate content type \"Your Content Type\" was found. error. The ID of the content type specifies the parent content type from which this content type inherits.","title":"Remarks"},{"location":"cmd/spo/contenttype/contenttype-add/#examples","text":"Create a site content type that inherits from the List item content type m365 spo contenttype add --webUrl https://contoso.sharepoint.com/sites/contoso-sales --name 'PnP Alert' --id 0x01007926A45D687BA842B947286090B8F67D --group 'PnP Content Types' Create a list (retrieved by Title) content type that inherits from the List item content type m365 spo contenttype add --webUrl https://contoso.sharepoint.com/sites/contoso-sales --listTitle Alerts --name 'PnP Alert' --id 0x01007926A45D687BA842B947286090B8F67D Create a list (retrieved by ID) content type that inherits from the List item content type m365 spo contenttype add --webUrl https://contoso.sharepoint.com/sites/contoso-sales --listId '8c7a0fcd-9d64-4634-85ea-ce2b37b2ec0c' --name 'PnP Alert' --id 0x01007926A45D687BA842B947286090B8F67D Create a list (retrieved by URL) content type that inherits from the List item content type m365 spo contenttype add --webUrl https://contoso.sharepoint.com/sites/contoso-sales --listUrl '/Shared Documents' --name 'PnP Alert' --id 0x01007926A45D687BA842B947286090B8F67D","title":"Examples"},{"location":"cmd/spo/contenttype/contenttype-add/#more-information","text":"Content Type IDs: https://docs.microsoft.com/en-us/previous-versions/office/developer/sharepoint-2010/aa543822(v%3Doffice.14)","title":"More information"},{"location":"cmd/spo/contenttype/contenttype-field-remove/","text":"spo contenttype field remove \u00b6 Removes a column from a site- or list content type Usage \u00b6 m365 spo contenttype field remove [ options ] Options \u00b6 -u, --webUrl <webUrl> Absolute URL of the site where the content type is located -l, --listTitle [listTitle] Title of the list (if it is a list content type). Specify either listTitle , listId or listUrl . --listId [listId] ID of the list (if it is a list content type). Specify either listTitle , listId or listUrl . --listUrl [listUrl] Server- or site-relative URL of the list (if it is a list content type). Specify either listTitle , listId or listUrl . -i, --contentTypeId <contentTypeId> The ID of the content type to remove the column from -f, --fieldLinkId <fieldLinkId> The ID of the column to remove -c, --updateChildContentTypes Update child content types --confirm Don't prompt for confirming removal of a column from content type -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Remove column with a specific ID from a content type with a specific ID from a specific site. m365 spo contenttype field remove --contentTypeId \"0x0100CA0FA0F5DAEF784494B9C6020C3020A6\" --fieldLinkId \"880d2f46-fccb-43ca-9def-f88e722cef80\" --webUrl https://contoso.sharepoint.com --confirm Remove column with a specific ID from a content type with a specific ID from a specific site and updating the child content types m365 spo contenttype field remove --contentTypeId \"0x0100CA0FA0F5DAEF784494B9C6020C3020A6\" --fieldLinkId \"880d2f46-fccb-43ca-9def-f88e722cef80\" --webUrl https://contoso.sharepoint.com --updateChildContentTypes Remove fieldLink with a specific ID from a list (obtained by Title) content type with a specific ID on a spefici site. m365 spo contenttype field remove --contentTypeId \"0x0100CA0FA0F5DAEF784494B9C6020C3020A60062F089A38C867747942DB2C3FC50FF6A\" --fieldLinkId \"880d2f46-fccb-43ca-9def-f88e722cef80\" --webUrl https://contoso.sharepoint.com --listTitle \"Documents\" Remove fieldLink with a specific ID from a list (obtained by ID) content type with a specific ID on a spefici site. m365 spo contenttype field remove --contentTypeId \"0x0100CA0FA0F5DAEF784494B9C6020C3020A60062F089A38C867747942DB2C3FC50FF6A\" --fieldLinkId \"880d2f46-fccb-43ca-9def-f88e722cef80\" --webUrl https://contoso.sharepoint.com --listId \"8c7a0fcd-9d64-4634-85ea-ce2b37b2ec0c\" Remove fieldLink with a specific ID from a list (obtained by URL) content type with a specific ID on a spefici site. m365 spo contenttype field remove --contentTypeId \"0x0100CA0FA0F5DAEF784494B9C6020C3020A60062F089A38C867747942DB2C3FC50FF6A\" --fieldLinkId \"880d2f46-fccb-43ca-9def-f88e722cef80\" --webUrl https://contoso.sharepoint.com --listUrl \"/shared documents\"","title":"contenttype field remove"},{"location":"cmd/spo/contenttype/contenttype-field-remove/#spo-contenttype-field-remove","text":"Removes a column from a site- or list content type","title":"spo contenttype field remove"},{"location":"cmd/spo/contenttype/contenttype-field-remove/#usage","text":"m365 spo contenttype field remove [ options ]","title":"Usage"},{"location":"cmd/spo/contenttype/contenttype-field-remove/#options","text":"-u, --webUrl <webUrl> Absolute URL of the site where the content type is located -l, --listTitle [listTitle] Title of the list (if it is a list content type). Specify either listTitle , listId or listUrl . --listId [listId] ID of the list (if it is a list content type). Specify either listTitle , listId or listUrl . --listUrl [listUrl] Server- or site-relative URL of the list (if it is a list content type). Specify either listTitle , listId or listUrl . -i, --contentTypeId <contentTypeId> The ID of the content type to remove the column from -f, --fieldLinkId <fieldLinkId> The ID of the column to remove -c, --updateChildContentTypes Update child content types --confirm Don't prompt for confirming removal of a column from content type -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/contenttype/contenttype-field-remove/#examples","text":"Remove column with a specific ID from a content type with a specific ID from a specific site. m365 spo contenttype field remove --contentTypeId \"0x0100CA0FA0F5DAEF784494B9C6020C3020A6\" --fieldLinkId \"880d2f46-fccb-43ca-9def-f88e722cef80\" --webUrl https://contoso.sharepoint.com --confirm Remove column with a specific ID from a content type with a specific ID from a specific site and updating the child content types m365 spo contenttype field remove --contentTypeId \"0x0100CA0FA0F5DAEF784494B9C6020C3020A6\" --fieldLinkId \"880d2f46-fccb-43ca-9def-f88e722cef80\" --webUrl https://contoso.sharepoint.com --updateChildContentTypes Remove fieldLink with a specific ID from a list (obtained by Title) content type with a specific ID on a spefici site. m365 spo contenttype field remove --contentTypeId \"0x0100CA0FA0F5DAEF784494B9C6020C3020A60062F089A38C867747942DB2C3FC50FF6A\" --fieldLinkId \"880d2f46-fccb-43ca-9def-f88e722cef80\" --webUrl https://contoso.sharepoint.com --listTitle \"Documents\" Remove fieldLink with a specific ID from a list (obtained by ID) content type with a specific ID on a spefici site. m365 spo contenttype field remove --contentTypeId \"0x0100CA0FA0F5DAEF784494B9C6020C3020A60062F089A38C867747942DB2C3FC50FF6A\" --fieldLinkId \"880d2f46-fccb-43ca-9def-f88e722cef80\" --webUrl https://contoso.sharepoint.com --listId \"8c7a0fcd-9d64-4634-85ea-ce2b37b2ec0c\" Remove fieldLink with a specific ID from a list (obtained by URL) content type with a specific ID on a spefici site. m365 spo contenttype field remove --contentTypeId \"0x0100CA0FA0F5DAEF784494B9C6020C3020A60062F089A38C867747942DB2C3FC50FF6A\" --fieldLinkId \"880d2f46-fccb-43ca-9def-f88e722cef80\" --webUrl https://contoso.sharepoint.com --listUrl \"/shared documents\"","title":"Examples"},{"location":"cmd/spo/contenttype/contenttype-field-set/","text":"spo contenttype field set \u00b6 Adds or updates a site column reference in a site content type Usage \u00b6 m365 spo contenttype field set [ options ] Options \u00b6 -u, --webUrl <webUrl> Absolute URL of the site where the content type is located -c, --contentTypeId <contentTypeId> ID of the content type on which the field reference should be set -f, --id <id> ID of the field to which the reference should be set -r, --required [required] Set to true , if the field should be required or to false if it should be optional --hidden [hidden] Set to true , if the field should be hidden or to false if it should be visible -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 If the field reference already exists, the command will update its required and hidden properties as specified in the command. Examples \u00b6 Add the specified site column to the specified content type as an optional and visible field m365 spo contenttype field set --webUrl https://contoso.sharepoint.com/sites/portal --contentTypeId 0x01007926A45D687BA842B947286090B8F67D --id ebe7e498-44ff-43da-a7e5-99b444f656a5 Add the specified site column to the specified content type as a required field m365 spo contenttype field set --webUrl https://contoso.sharepoint.com/sites/portal --contentTypeId 0x01007926A45D687BA842B947286090B8F67D --id ebe7e498-44ff-43da-a7e5-99b444f656a5 --required true Update the existing site column reference in the specified content type to optional m365 spo contenttype field set --webUrl https://contoso.sharepoint.com/sites/portal --contentTypeId 0x01007926A45D687BA842B947286090B8F67D --id ebe7e498-44ff-43da-a7e5-99b444f656a5 --required false","title":"contenttype field set"},{"location":"cmd/spo/contenttype/contenttype-field-set/#spo-contenttype-field-set","text":"Adds or updates a site column reference in a site content type","title":"spo contenttype field set"},{"location":"cmd/spo/contenttype/contenttype-field-set/#usage","text":"m365 spo contenttype field set [ options ]","title":"Usage"},{"location":"cmd/spo/contenttype/contenttype-field-set/#options","text":"-u, --webUrl <webUrl> Absolute URL of the site where the content type is located -c, --contentTypeId <contentTypeId> ID of the content type on which the field reference should be set -f, --id <id> ID of the field to which the reference should be set -r, --required [required] Set to true , if the field should be required or to false if it should be optional --hidden [hidden] Set to true , if the field should be hidden or to false if it should be visible -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/contenttype/contenttype-field-set/#remarks","text":"If the field reference already exists, the command will update its required and hidden properties as specified in the command.","title":"Remarks"},{"location":"cmd/spo/contenttype/contenttype-field-set/#examples","text":"Add the specified site column to the specified content type as an optional and visible field m365 spo contenttype field set --webUrl https://contoso.sharepoint.com/sites/portal --contentTypeId 0x01007926A45D687BA842B947286090B8F67D --id ebe7e498-44ff-43da-a7e5-99b444f656a5 Add the specified site column to the specified content type as a required field m365 spo contenttype field set --webUrl https://contoso.sharepoint.com/sites/portal --contentTypeId 0x01007926A45D687BA842B947286090B8F67D --id ebe7e498-44ff-43da-a7e5-99b444f656a5 --required true Update the existing site column reference in the specified content type to optional m365 spo contenttype field set --webUrl https://contoso.sharepoint.com/sites/portal --contentTypeId 0x01007926A45D687BA842B947286090B8F67D --id ebe7e498-44ff-43da-a7e5-99b444f656a5 --required false","title":"Examples"},{"location":"cmd/spo/contenttype/contenttype-get/","text":"spo contenttype get \u00b6 Retrieves information about the specified list or site content type Usage \u00b6 m365 spo contenttype get [ options ] Options \u00b6 -u, --webUrl <webUrl> Absolute URL of the site where the content type is located -l, --listTitle [listTitle] Title of the list (if it is a list content type). Specify either listTitle , listId or listUrl . --listId [listId] ID of the list (if it is a list content type). Specify either listTitle , listId or listUrl . --listUrl [listUrl] Server- or site-relative URL of the list (if it is a list content type). Specify either listTitle , listId or listUrl . -i, --id [id] The ID of the content type to retrieve. Specify either id or name but not both -n, --name [name] The name of the content type to retrieve. Specify either id or name but not both -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 If no content type with the specified is found in the site or the list, you will get the Content type with ID 0x010012 not found error. Examples \u00b6 Retrieve site content type by id m365 spo contenttype get --webUrl https://contoso.sharepoint.com/sites/contoso-sales --id 0x0100558D85B7216F6A489A499DB361E1AE2F Retrieve site content type by name m365 spo contenttype get --webUrl https://contoso.sharepoint.com/sites/contoso-sales --name 'Document' Retrieve list (retrieved by Title) content type m365 spo contenttype get --webUrl https://contoso.sharepoint.com/sites/contoso-sales --listTitle Events --id 0x0100558D85B7216F6A489A499DB361E1AE2F Retrieve list (retrieved by ID) content type m365 spo contenttype get --webUrl https://contoso.sharepoint.com/sites/contoso-sales --listId '8c7a0fcd-9d64-4634-85ea-ce2b37b2ec0c' --id 0x0100558D85B7216F6A489A499DB361E1AE2F Retrieve list (retrieved by URL) content type m365 spo contenttype get --webUrl https://contoso.sharepoint.com/sites/contoso-sales --listUrl '/Shared Documents' --id 0x0100558D85B7216F6A489A499DB361E1AE2F","title":"contenttype get"},{"location":"cmd/spo/contenttype/contenttype-get/#spo-contenttype-get","text":"Retrieves information about the specified list or site content type","title":"spo contenttype get"},{"location":"cmd/spo/contenttype/contenttype-get/#usage","text":"m365 spo contenttype get [ options ]","title":"Usage"},{"location":"cmd/spo/contenttype/contenttype-get/#options","text":"-u, --webUrl <webUrl> Absolute URL of the site where the content type is located -l, --listTitle [listTitle] Title of the list (if it is a list content type). Specify either listTitle , listId or listUrl . --listId [listId] ID of the list (if it is a list content type). Specify either listTitle , listId or listUrl . --listUrl [listUrl] Server- or site-relative URL of the list (if it is a list content type). Specify either listTitle , listId or listUrl . -i, --id [id] The ID of the content type to retrieve. Specify either id or name but not both -n, --name [name] The name of the content type to retrieve. Specify either id or name but not both -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/contenttype/contenttype-get/#remarks","text":"If no content type with the specified is found in the site or the list, you will get the Content type with ID 0x010012 not found error.","title":"Remarks"},{"location":"cmd/spo/contenttype/contenttype-get/#examples","text":"Retrieve site content type by id m365 spo contenttype get --webUrl https://contoso.sharepoint.com/sites/contoso-sales --id 0x0100558D85B7216F6A489A499DB361E1AE2F Retrieve site content type by name m365 spo contenttype get --webUrl https://contoso.sharepoint.com/sites/contoso-sales --name 'Document' Retrieve list (retrieved by Title) content type m365 spo contenttype get --webUrl https://contoso.sharepoint.com/sites/contoso-sales --listTitle Events --id 0x0100558D85B7216F6A489A499DB361E1AE2F Retrieve list (retrieved by ID) content type m365 spo contenttype get --webUrl https://contoso.sharepoint.com/sites/contoso-sales --listId '8c7a0fcd-9d64-4634-85ea-ce2b37b2ec0c' --id 0x0100558D85B7216F6A489A499DB361E1AE2F Retrieve list (retrieved by URL) content type m365 spo contenttype get --webUrl https://contoso.sharepoint.com/sites/contoso-sales --listUrl '/Shared Documents' --id 0x0100558D85B7216F6A489A499DB361E1AE2F","title":"Examples"},{"location":"cmd/spo/contenttype/contenttype-list/","text":"spo contenttype list \u00b6 Lists content types from specified site Usage \u00b6 m365 spo contenttype list [ options ] Options \u00b6 -u, --webUrl <webUrl> Absolute URL of the site for which to list content types -c, --category [category] Category name of content types. When defined will return only content types from specified category -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Retrieve site content types m365 spo contenttype list - -webUrl \"https://contoso.sharepoint.com/sites/contoso-sales\" Retrieve site content types from the 'List Content Types' category m365 spo contenttype list - -webUrl \"https://contoso.sharepoint.com/sites/contoso-sales\" - -category \"List Content Types\"","title":"contenttype list"},{"location":"cmd/spo/contenttype/contenttype-list/#spo-contenttype-list","text":"Lists content types from specified site","title":"spo contenttype list"},{"location":"cmd/spo/contenttype/contenttype-list/#usage","text":"m365 spo contenttype list [ options ]","title":"Usage"},{"location":"cmd/spo/contenttype/contenttype-list/#options","text":"-u, --webUrl <webUrl> Absolute URL of the site for which to list content types -c, --category [category] Category name of content types. When defined will return only content types from specified category -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/contenttype/contenttype-list/#examples","text":"Retrieve site content types m365 spo contenttype list - -webUrl \"https://contoso.sharepoint.com/sites/contoso-sales\" Retrieve site content types from the 'List Content Types' category m365 spo contenttype list - -webUrl \"https://contoso.sharepoint.com/sites/contoso-sales\" - -category \"List Content Types\"","title":"Examples"},{"location":"cmd/spo/contenttype/contenttype-remove/","text":"spo contenttype remove \u00b6 Deletes site content type Usage \u00b6 m365 spo contenttype remove [ options ] Options \u00b6 -u, --webUrl <webUrl> Absolute URL of the site where the content type is located -i, --id [id] The ID of the content type to remove -n, --name [name] The name of the content type to remove --confirm Don't prompt for confirming removal of the content type -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 If the specified content type is in use by a list and cannot be removed, you will be returned the error: Another site or list is still using this content type. SharePoint will not allow a content type to be removed unless any dependent objects are also emptied from the recycle bin including the second-stage recycle bin. The content type you wish to remove can be selected by the ID or Name of the content type. Either ID or Name parameter must be specified. Examples \u00b6 Remove a site content type by ID m365 spo contenttype remove --id \"0x01007926A45D687BA842B947286090B8F67D\" --webUrl https://contoso.sharepoint.com Remove a site content type by Name m365 spo contenttype remove --name \"My Content Type\" --webUrl https://contoso.sharepoint.com --confirm Remove a site content type without prompting for confirmation m365 spo contenttype remove --name \"My Content Type\" --webUrl https://contoso.sharepoint.com --confirm","title":"contenttype remove"},{"location":"cmd/spo/contenttype/contenttype-remove/#spo-contenttype-remove","text":"Deletes site content type","title":"spo contenttype remove"},{"location":"cmd/spo/contenttype/contenttype-remove/#usage","text":"m365 spo contenttype remove [ options ]","title":"Usage"},{"location":"cmd/spo/contenttype/contenttype-remove/#options","text":"-u, --webUrl <webUrl> Absolute URL of the site where the content type is located -i, --id [id] The ID of the content type to remove -n, --name [name] The name of the content type to remove --confirm Don't prompt for confirming removal of the content type -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/contenttype/contenttype-remove/#remarks","text":"If the specified content type is in use by a list and cannot be removed, you will be returned the error: Another site or list is still using this content type. SharePoint will not allow a content type to be removed unless any dependent objects are also emptied from the recycle bin including the second-stage recycle bin. The content type you wish to remove can be selected by the ID or Name of the content type. Either ID or Name parameter must be specified.","title":"Remarks"},{"location":"cmd/spo/contenttype/contenttype-remove/#examples","text":"Remove a site content type by ID m365 spo contenttype remove --id \"0x01007926A45D687BA842B947286090B8F67D\" --webUrl https://contoso.sharepoint.com Remove a site content type by Name m365 spo contenttype remove --name \"My Content Type\" --webUrl https://contoso.sharepoint.com --confirm Remove a site content type without prompting for confirmation m365 spo contenttype remove --name \"My Content Type\" --webUrl https://contoso.sharepoint.com --confirm","title":"Examples"},{"location":"cmd/spo/contenttype/contenttype-set/","text":"spo contenttype set \u00b6 Update existing content type Usage \u00b6 m365 spo contenttype set [ options ] Options \u00b6 -u, --webUrl <webUrl> URL of the site where the content type to update is defined. -i, --id [id] ID of the content type to update. Specify id or name but not both, one is required. -n, name [name] Name of the content type to update. Specify the id or the name but not both, one is required. --listTitle [listTitle] Title of the list if you want to update a list content type. Specify either listTitle , listId or listUrl . --listId [listId] ID of the list if you want to update a list content type. Specify either listTitle , listId or listUrl . --listUrl [listUrl] URL of the list if you want to update a list content type. Specify either listTitle , listId or listUrl . -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Move site content type to a different group m365 spo contenttype set --id 0x001001 --webUrl https://contoso.sharepoint.com --Group \"My group\" Rename list content type m365 spo contenttype set --name \"My old item\" --webUrl https://contoso.sharepoint.com --listTitle \"My list\" --Name \"My item\"","title":"contenttype set"},{"location":"cmd/spo/contenttype/contenttype-set/#spo-contenttype-set","text":"Update existing content type","title":"spo contenttype set"},{"location":"cmd/spo/contenttype/contenttype-set/#usage","text":"m365 spo contenttype set [ options ]","title":"Usage"},{"location":"cmd/spo/contenttype/contenttype-set/#options","text":"-u, --webUrl <webUrl> URL of the site where the content type to update is defined. -i, --id [id] ID of the content type to update. Specify id or name but not both, one is required. -n, name [name] Name of the content type to update. Specify the id or the name but not both, one is required. --listTitle [listTitle] Title of the list if you want to update a list content type. Specify either listTitle , listId or listUrl . --listId [listId] ID of the list if you want to update a list content type. Specify either listTitle , listId or listUrl . --listUrl [listUrl] URL of the list if you want to update a list content type. Specify either listTitle , listId or listUrl . -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/contenttype/contenttype-set/#examples","text":"Move site content type to a different group m365 spo contenttype set --id 0x001001 --webUrl https://contoso.sharepoint.com --Group \"My group\" Rename list content type m365 spo contenttype set --name \"My old item\" --webUrl https://contoso.sharepoint.com --listTitle \"My list\" --Name \"My item\"","title":"Examples"},{"location":"cmd/spo/contenttypehub/contenttypehub-get/","text":"spo contenttypehub get \u00b6 Returns the URL of the SharePoint Content Type Hub of the Tenant Usage \u00b6 m365 spo contenttypehub get [ options ] Options \u00b6 -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Retrieve the Content Type Hub URL m365 spo contenttypehub get","title":"contenttypehub get"},{"location":"cmd/spo/contenttypehub/contenttypehub-get/#spo-contenttypehub-get","text":"Returns the URL of the SharePoint Content Type Hub of the Tenant","title":"spo contenttypehub get"},{"location":"cmd/spo/contenttypehub/contenttypehub-get/#usage","text":"m365 spo contenttypehub get [ options ]","title":"Usage"},{"location":"cmd/spo/contenttypehub/contenttypehub-get/#options","text":"-h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/contenttypehub/contenttypehub-get/#examples","text":"Retrieve the Content Type Hub URL m365 spo contenttypehub get","title":"Examples"},{"location":"cmd/spo/customaction/customaction-add/","text":"spo customaction add \u00b6 Adds a user custom action for site or site collection Usage \u00b6 m365 spo customaction add [ options ] Options \u00b6 -u, --webUrl <webUrl> Url of the site or site collection to add the custom action -n, --name <name> The name of the custom action -t, --title <title> The title of the custom action -l, --location <location> The actual location where this custom action need to be added like CommandUI.Ribbon -g, --group [group] The group where this custom action needs to be added like SiteActions -d, --description [description] The description of the custom action --sequence [sequence] Sequence of this CustomAction being injected. Use when you have a specific sequence with which to have multiple CustomActions being added to the page --actionUrl [actionUrl] The URL, URI or JavaScript function associated with the action. URL example ~site/_layouts/sampleurl.aspx or ~sitecollection/_layouts/sampleurl.aspx --imageUrl [imageUrl] The URL of the image associated with the custom action -e, --commandUIExtension [commandUIExtension] XML fragment that determines user interface properties of the custom action --registrationId [registrationId] Specifies the identifier of the list or item content type that this action is associated with, or the file type or programmatic identifier --registrationType [registrationType] Specifies the type of object associated with the custom action. Allowed values None,List,ContentType,ProgId,FileType . Default None --rights [rights] A case sensitive string array that contain the permissions needed for the custom action. Allowed values EmptyMask,ViewListItems,AddListItems,EditListItems,DeleteListItems,ApproveItems,OpenItems,ViewVersions,DeleteVersions,CancelCheckout,ManagePersonalViews,ManageLists,ViewFormPages,AnonymousSearchAccessList,Open,ViewPages,AddAndCustomizePages,ApplyThemeAndBorder,ApplyStyleSheets,ViewUsageData,CreateSSCSite,ManageSubwebs,CreateGroups,ManagePermissions,BrowseDirectories,BrowseUserInfo,AddDelPrivateWebParts,UpdatePersonalWebParts,ManageWeb,AnonymousSearchAccessWebLists,UseClientIntegration,UseRemoteAPIs,ManageAlerts,CreateAlerts,EditMyUserInfo,EnumeratePermissions,FullMask . Default EmptyMask -s, --scope [scope] Scope of the custom action. Allowed values Site,Web . Default Web --scriptBlock [scriptBlock] Specifies a block of script to be executed. This attribute is only applicable when the Location attribute is set to ScriptLink --scriptSrc [scriptSrc] Specifies a file that contains script to be executed. This attribute is only applicable when the Location attribute is set to ScriptLink -c, --clientSideComponentId [clientSideComponentId] The Client Side Component Id (GUID) of the custom action -p, --clientSideComponentProperties [clientSideComponentProperties] The Client Side Component Properties of the custom action. Specify values as a JSON string : '{\"testMessage\":\"Test message\"}' -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 Running this command from the Windows Command Shell (cmd.exe) or PowerShell for Windows OS XP, 7, 8, 8.1 without bash installed might require additional formatting for command options that have JSON, XML or JavaScript values because the command shell treat quotes differently. For example, this is how ApplicationCustomizer user custom action can be created from the Windows cmd.exe: m365 spo customaction add --webUrl https://contoso.sharepoint.com/sites/test --title \"YourAppCustomizer\" --name \"YourName\" --location \"ClientSideExtension.ApplicationCustomizer\" --clientSideComponentId b41916e7-e69d-467f-b37f-ff8ecf8f99f2 --clientSideComponentProperties '{\\\"testMessage\\\":\\\"Test message\\\"}' Note, how the clientSideComponentProperties option (-p) has escaped double quotes '{\\\"testMessage\\\":\\\"Test message\\\"}' compared to execution from bash '{\"testMessage\":\"Test message\"}' . The --rights option accepts case sensitive values. Escaping JSON in PowerShell When using the --clientSideComponentProperties option it's possible to enter a JSON string. In PowerShell 5 to 7.2 specific escaping rules apply due to an issue. Remember that you can also use file tokens instead. Examples \u00b6 Adds tenant-wide SharePoint Framework Application Customizer extension in site https://contoso.sharepoint.com/sites/test m365 spo customaction add --webUrl https://contoso.sharepoint.com/sites/test --title \"YourAppCustomizer\" --name \"YourName\" --location \"ClientSideExtension.ApplicationCustomizer\" --clientSideComponentId b41916e7-e69d-467f-b37f-ff8ecf8f99f2 --clientSideComponentProperties '{\"testMessage\":\"Test message\"}' Adds tenant-wide SharePoint Framework modern List View Command Set extension in site https://contoso.sharepoint.com/sites/test m365 spo customaction add --webUrl https://contoso.sharepoint.com/sites/test --title \"YourCommandSet\" --name \"YourName\" --location \"ClientSideExtension.ListViewCommandSet\" --clientSideComponentId db3e6e35-363c-42b9-a254-ca661e437848 --clientSideComponentProperties '{\"sampleTextOne\":\"One item is selected in the list.\", \"sampleTextTwo\":\"This command is always visible.\"}' --registrationId 100 --registrationType List Creates url custom action in the SiteActions menu in site https://contoso.sharepoint.com/sites/test m365 spo customaction add --webUrl https://contoso.sharepoint.com/sites/test --title \"YourTitle\" --name \"YourName\" --location \"Microsoft.SharePoint.StandardMenu\" --group \"SiteActions\" --actionUrl \"~site/SitePages/Home.aspx\" --sequence 100 Creates custom action in classic Document Library edit context menu in site https://contoso.sharepoint.com/sites/test m365 spo customaction add --webUrl https://contoso.sharepoint.com/sites/test --title \"YourTitle\" --name \"YourName\" --location \"EditControlBlock\" --actionUrl \"javascript:(function(){ return console.log('CLI for Microsoft 365 rocks!'); })();\" --registrationId 101 --registrationType List Creates ScriptLink custom action with script source in classic pages in site collection https://contoso.sharepoint.com/sites/test m365 spo customaction add --webUrl https://contoso.sharepoint.com/sites/test --title \"YourTitle\" --name \"YourName\" --location \"ScriptLink\" --scriptSrc \"~sitecollection/SiteAssets/YourScript.js\" --sequence 101 --scope Site Creates ScriptLink custom action with script block in classic pages in site https://contoso.sharepoint.com/sites/test m365 spo customaction add --webUrl https://contoso.sharepoint.com/sites/test --title \"YourTitle\" --name \"YourName\" --location \"ScriptLink\" --scriptBlock \"(function(){ return console.log('Hello CLI for Microsoft 365!'); })();\" --sequence 102 Creates classic List View custom action located in the Ribbon in site https://contoso.sharepoint.com/sites/test m365 spo customaction add --webUrl https://contoso.sharepoint.com/sites/test --title \"YourTitle\" --name \"YourName\" --location \"CommandUI.Ribbon\" --commandUIExtension '<CommandUIExtension><CommandUIDefinitions><CommandUIDefinition Location=\"Ribbon.List.Share.Controls._children\"><Button Id=\"Ribbon.List.Share.GetItemsCountButton\" Alt=\"Get list items count\" Sequence=\"11\" Command=\"Invoke_GetItemsCountButtonRequest\" LabelText=\"Get Items Count\" TemplateAlias=\"o1\" Image32by32=\"_layouts/15/images/placeholder32x32.png\" Image16by16=\"_layouts/15/images/placeholder16x16.png\" /></CommandUIDefinition></CommandUIDefinitions><CommandUIHandlers><CommandUIHandler Command=\"Invoke_GetItemsCountButtonRequest\" CommandAction=\"javascript: alert(ctx.TotalListItems);\" EnabledScript=\"javascript: function checkEnable() { return (true);} checkEnable();\"/></CommandUIHandlers></CommandUIExtension>' Creates custom action with delegated rights in the SiteActions menu in site https://contoso.sharepoint.com/sites/test m365 spo customaction add --webUrl https://contoso.sharepoint.com/sites/test --title \"YourTitle\" --name \"YourName\" --location \"Microsoft.SharePoint.StandardMenu\" --group \"SiteActions\" --actionUrl \"~site/SitePages/Home.aspx\" --rights \"AddListItems,DeleteListItems,ManageLists\" More information \u00b6 UserCustomAction REST API resources: https://msdn.microsoft.com/en-us/library/office/dn531432.aspx#bk_UserCustomAction UserCustomAction Locations and Group IDs: https://msdn.microsoft.com/en-us/library/office/bb802730.aspx UserCustomAction Element: https://msdn.microsoft.com/en-us/library/office/ms460194.aspx UserCustomAction Rights: https://msdn.microsoft.com/en-us/library/office/microsoft.sharepoint.spbasepermissions.aspx","title":"customaction add"},{"location":"cmd/spo/customaction/customaction-add/#spo-customaction-add","text":"Adds a user custom action for site or site collection","title":"spo customaction add"},{"location":"cmd/spo/customaction/customaction-add/#usage","text":"m365 spo customaction add [ options ]","title":"Usage"},{"location":"cmd/spo/customaction/customaction-add/#options","text":"-u, --webUrl <webUrl> Url of the site or site collection to add the custom action -n, --name <name> The name of the custom action -t, --title <title> The title of the custom action -l, --location <location> The actual location where this custom action need to be added like CommandUI.Ribbon -g, --group [group] The group where this custom action needs to be added like SiteActions -d, --description [description] The description of the custom action --sequence [sequence] Sequence of this CustomAction being injected. Use when you have a specific sequence with which to have multiple CustomActions being added to the page --actionUrl [actionUrl] The URL, URI or JavaScript function associated with the action. URL example ~site/_layouts/sampleurl.aspx or ~sitecollection/_layouts/sampleurl.aspx --imageUrl [imageUrl] The URL of the image associated with the custom action -e, --commandUIExtension [commandUIExtension] XML fragment that determines user interface properties of the custom action --registrationId [registrationId] Specifies the identifier of the list or item content type that this action is associated with, or the file type or programmatic identifier --registrationType [registrationType] Specifies the type of object associated with the custom action. Allowed values None,List,ContentType,ProgId,FileType . Default None --rights [rights] A case sensitive string array that contain the permissions needed for the custom action. Allowed values EmptyMask,ViewListItems,AddListItems,EditListItems,DeleteListItems,ApproveItems,OpenItems,ViewVersions,DeleteVersions,CancelCheckout,ManagePersonalViews,ManageLists,ViewFormPages,AnonymousSearchAccessList,Open,ViewPages,AddAndCustomizePages,ApplyThemeAndBorder,ApplyStyleSheets,ViewUsageData,CreateSSCSite,ManageSubwebs,CreateGroups,ManagePermissions,BrowseDirectories,BrowseUserInfo,AddDelPrivateWebParts,UpdatePersonalWebParts,ManageWeb,AnonymousSearchAccessWebLists,UseClientIntegration,UseRemoteAPIs,ManageAlerts,CreateAlerts,EditMyUserInfo,EnumeratePermissions,FullMask . Default EmptyMask -s, --scope [scope] Scope of the custom action. Allowed values Site,Web . Default Web --scriptBlock [scriptBlock] Specifies a block of script to be executed. This attribute is only applicable when the Location attribute is set to ScriptLink --scriptSrc [scriptSrc] Specifies a file that contains script to be executed. This attribute is only applicable when the Location attribute is set to ScriptLink -c, --clientSideComponentId [clientSideComponentId] The Client Side Component Id (GUID) of the custom action -p, --clientSideComponentProperties [clientSideComponentProperties] The Client Side Component Properties of the custom action. Specify values as a JSON string : '{\"testMessage\":\"Test message\"}' -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/customaction/customaction-add/#remarks","text":"Running this command from the Windows Command Shell (cmd.exe) or PowerShell for Windows OS XP, 7, 8, 8.1 without bash installed might require additional formatting for command options that have JSON, XML or JavaScript values because the command shell treat quotes differently. For example, this is how ApplicationCustomizer user custom action can be created from the Windows cmd.exe: m365 spo customaction add --webUrl https://contoso.sharepoint.com/sites/test --title \"YourAppCustomizer\" --name \"YourName\" --location \"ClientSideExtension.ApplicationCustomizer\" --clientSideComponentId b41916e7-e69d-467f-b37f-ff8ecf8f99f2 --clientSideComponentProperties '{\\\"testMessage\\\":\\\"Test message\\\"}' Note, how the clientSideComponentProperties option (-p) has escaped double quotes '{\\\"testMessage\\\":\\\"Test message\\\"}' compared to execution from bash '{\"testMessage\":\"Test message\"}' . The --rights option accepts case sensitive values. Escaping JSON in PowerShell When using the --clientSideComponentProperties option it's possible to enter a JSON string. In PowerShell 5 to 7.2 specific escaping rules apply due to an issue. Remember that you can also use file tokens instead.","title":"Remarks"},{"location":"cmd/spo/customaction/customaction-add/#examples","text":"Adds tenant-wide SharePoint Framework Application Customizer extension in site https://contoso.sharepoint.com/sites/test m365 spo customaction add --webUrl https://contoso.sharepoint.com/sites/test --title \"YourAppCustomizer\" --name \"YourName\" --location \"ClientSideExtension.ApplicationCustomizer\" --clientSideComponentId b41916e7-e69d-467f-b37f-ff8ecf8f99f2 --clientSideComponentProperties '{\"testMessage\":\"Test message\"}' Adds tenant-wide SharePoint Framework modern List View Command Set extension in site https://contoso.sharepoint.com/sites/test m365 spo customaction add --webUrl https://contoso.sharepoint.com/sites/test --title \"YourCommandSet\" --name \"YourName\" --location \"ClientSideExtension.ListViewCommandSet\" --clientSideComponentId db3e6e35-363c-42b9-a254-ca661e437848 --clientSideComponentProperties '{\"sampleTextOne\":\"One item is selected in the list.\", \"sampleTextTwo\":\"This command is always visible.\"}' --registrationId 100 --registrationType List Creates url custom action in the SiteActions menu in site https://contoso.sharepoint.com/sites/test m365 spo customaction add --webUrl https://contoso.sharepoint.com/sites/test --title \"YourTitle\" --name \"YourName\" --location \"Microsoft.SharePoint.StandardMenu\" --group \"SiteActions\" --actionUrl \"~site/SitePages/Home.aspx\" --sequence 100 Creates custom action in classic Document Library edit context menu in site https://contoso.sharepoint.com/sites/test m365 spo customaction add --webUrl https://contoso.sharepoint.com/sites/test --title \"YourTitle\" --name \"YourName\" --location \"EditControlBlock\" --actionUrl \"javascript:(function(){ return console.log('CLI for Microsoft 365 rocks!'); })();\" --registrationId 101 --registrationType List Creates ScriptLink custom action with script source in classic pages in site collection https://contoso.sharepoint.com/sites/test m365 spo customaction add --webUrl https://contoso.sharepoint.com/sites/test --title \"YourTitle\" --name \"YourName\" --location \"ScriptLink\" --scriptSrc \"~sitecollection/SiteAssets/YourScript.js\" --sequence 101 --scope Site Creates ScriptLink custom action with script block in classic pages in site https://contoso.sharepoint.com/sites/test m365 spo customaction add --webUrl https://contoso.sharepoint.com/sites/test --title \"YourTitle\" --name \"YourName\" --location \"ScriptLink\" --scriptBlock \"(function(){ return console.log('Hello CLI for Microsoft 365!'); })();\" --sequence 102 Creates classic List View custom action located in the Ribbon in site https://contoso.sharepoint.com/sites/test m365 spo customaction add --webUrl https://contoso.sharepoint.com/sites/test --title \"YourTitle\" --name \"YourName\" --location \"CommandUI.Ribbon\" --commandUIExtension '<CommandUIExtension><CommandUIDefinitions><CommandUIDefinition Location=\"Ribbon.List.Share.Controls._children\"><Button Id=\"Ribbon.List.Share.GetItemsCountButton\" Alt=\"Get list items count\" Sequence=\"11\" Command=\"Invoke_GetItemsCountButtonRequest\" LabelText=\"Get Items Count\" TemplateAlias=\"o1\" Image32by32=\"_layouts/15/images/placeholder32x32.png\" Image16by16=\"_layouts/15/images/placeholder16x16.png\" /></CommandUIDefinition></CommandUIDefinitions><CommandUIHandlers><CommandUIHandler Command=\"Invoke_GetItemsCountButtonRequest\" CommandAction=\"javascript: alert(ctx.TotalListItems);\" EnabledScript=\"javascript: function checkEnable() { return (true);} checkEnable();\"/></CommandUIHandlers></CommandUIExtension>' Creates custom action with delegated rights in the SiteActions menu in site https://contoso.sharepoint.com/sites/test m365 spo customaction add --webUrl https://contoso.sharepoint.com/sites/test --title \"YourTitle\" --name \"YourName\" --location \"Microsoft.SharePoint.StandardMenu\" --group \"SiteActions\" --actionUrl \"~site/SitePages/Home.aspx\" --rights \"AddListItems,DeleteListItems,ManageLists\"","title":"Examples"},{"location":"cmd/spo/customaction/customaction-add/#more-information","text":"UserCustomAction REST API resources: https://msdn.microsoft.com/en-us/library/office/dn531432.aspx#bk_UserCustomAction UserCustomAction Locations and Group IDs: https://msdn.microsoft.com/en-us/library/office/bb802730.aspx UserCustomAction Element: https://msdn.microsoft.com/en-us/library/office/ms460194.aspx UserCustomAction Rights: https://msdn.microsoft.com/en-us/library/office/microsoft.sharepoint.spbasepermissions.aspx","title":"More information"},{"location":"cmd/spo/customaction/customaction-clear/","text":"spo customaction clear \u00b6 Deletes all custom actions from site or site collection Usage \u00b6 m365 spo customaction clear [ options ] Options \u00b6 -u, --webUrl <webUrl> Url of the site or site collection to clear the custom actions from -s, --scope [scope] Scope of the custom action. Allowed values Site,Web,All . Default All --confirm Don't prompt for confirming removing all custom actions -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Clears all user custom actions for both site and site collection https://contoso.sharepoint.com/sites/test . Skips the confirmation prompt message. m365 spo customaction clear --webUrl https://contoso.sharepoint.com/sites/test --confirm Clears all user custom actions for site https://contoso.sharepoint.com/sites/test . m365 spo customaction clear --webUrl https://contoso.sharepoint.com/sites/test --scope Web Clears all user custom actions for site collection https://contoso.sharepoint.com/sites/test m365 spo customaction clear --webUrl https://contoso.sharepoint.com/sites/test --scope Site","title":"customaction clear"},{"location":"cmd/spo/customaction/customaction-clear/#spo-customaction-clear","text":"Deletes all custom actions from site or site collection","title":"spo customaction clear"},{"location":"cmd/spo/customaction/customaction-clear/#usage","text":"m365 spo customaction clear [ options ]","title":"Usage"},{"location":"cmd/spo/customaction/customaction-clear/#options","text":"-u, --webUrl <webUrl> Url of the site or site collection to clear the custom actions from -s, --scope [scope] Scope of the custom action. Allowed values Site,Web,All . Default All --confirm Don't prompt for confirming removing all custom actions -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/customaction/customaction-clear/#examples","text":"Clears all user custom actions for both site and site collection https://contoso.sharepoint.com/sites/test . Skips the confirmation prompt message. m365 spo customaction clear --webUrl https://contoso.sharepoint.com/sites/test --confirm Clears all user custom actions for site https://contoso.sharepoint.com/sites/test . m365 spo customaction clear --webUrl https://contoso.sharepoint.com/sites/test --scope Web Clears all user custom actions for site collection https://contoso.sharepoint.com/sites/test m365 spo customaction clear --webUrl https://contoso.sharepoint.com/sites/test --scope Site","title":"Examples"},{"location":"cmd/spo/customaction/customaction-get/","text":"spo customaction get \u00b6 Gets information about a user custom action for site or site collection Usage \u00b6 m365 spo customaction get [ options ] Options \u00b6 -i, --id [id] ID of the user custom action to retrieve information for. Specify either id or title -t, --title [title] Title of the user custom action to retrieve information for. Specify either id or title -u, --webUrl <webUrl> Url of the site or site collection to retrieve the custom action from -s, --scope [scope] Scope of the custom action. Allowed values Site,Web,All . Default All -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 If the command finds multiple user custom actions with the specified title, it will prompt you to disambiguate which user custom action it should use, listing the discovered IDs. Examples \u00b6 Return details about the user custom action with ID 058140e3-0e37-44fc-a1d3-79c487d371a3 located in site or site collection https://contoso.sharepoint.com/sites/test m365 spo customaction get --id 058140e3-0e37-44fc-a1d3-79c487d371a3 --webUrl https://contoso.sharepoint.com/sites/test Return details about the user custom action with Title YourAppCustomizer located in site or site collection https://contoso.sharepoint.com/sites/test m365 spo customaction get --title \"YourAppCustomizer\" --webUrl https://contoso.sharepoint.com/sites/test Return details about the user custom action with ID 058140e3-0e37-44fc-a1d3-79c487d371a3 located in site collection https://contoso.sharepoint.com/sites/test m365 spo customaction get --id 058140e3-0e37-44fc-a1d3-79c487d371a3 --webUrl https://contoso.sharepoint.com/sites/test --scope Site Return details about the user custom action with ID 058140e3-0e37-44fc-a1d3-79c487d371a3 located in site https://contoso.sharepoint.com/sites/test m365 spo customaction get --id 058140e3-0e37-44fc-a1d3-79c487d371a3 --webUrl https://contoso.sharepoint.com/sites/test --scope Web More information \u00b6 UserCustomAction REST API resources: https://msdn.microsoft.com/en-us/library/office/dn531432.aspx#bk_UserCustomAction","title":"customaction get"},{"location":"cmd/spo/customaction/customaction-get/#spo-customaction-get","text":"Gets information about a user custom action for site or site collection","title":"spo customaction get"},{"location":"cmd/spo/customaction/customaction-get/#usage","text":"m365 spo customaction get [ options ]","title":"Usage"},{"location":"cmd/spo/customaction/customaction-get/#options","text":"-i, --id [id] ID of the user custom action to retrieve information for. Specify either id or title -t, --title [title] Title of the user custom action to retrieve information for. Specify either id or title -u, --webUrl <webUrl> Url of the site or site collection to retrieve the custom action from -s, --scope [scope] Scope of the custom action. Allowed values Site,Web,All . Default All -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/customaction/customaction-get/#remarks","text":"If the command finds multiple user custom actions with the specified title, it will prompt you to disambiguate which user custom action it should use, listing the discovered IDs.","title":"Remarks"},{"location":"cmd/spo/customaction/customaction-get/#examples","text":"Return details about the user custom action with ID 058140e3-0e37-44fc-a1d3-79c487d371a3 located in site or site collection https://contoso.sharepoint.com/sites/test m365 spo customaction get --id 058140e3-0e37-44fc-a1d3-79c487d371a3 --webUrl https://contoso.sharepoint.com/sites/test Return details about the user custom action with Title YourAppCustomizer located in site or site collection https://contoso.sharepoint.com/sites/test m365 spo customaction get --title \"YourAppCustomizer\" --webUrl https://contoso.sharepoint.com/sites/test Return details about the user custom action with ID 058140e3-0e37-44fc-a1d3-79c487d371a3 located in site collection https://contoso.sharepoint.com/sites/test m365 spo customaction get --id 058140e3-0e37-44fc-a1d3-79c487d371a3 --webUrl https://contoso.sharepoint.com/sites/test --scope Site Return details about the user custom action with ID 058140e3-0e37-44fc-a1d3-79c487d371a3 located in site https://contoso.sharepoint.com/sites/test m365 spo customaction get --id 058140e3-0e37-44fc-a1d3-79c487d371a3 --webUrl https://contoso.sharepoint.com/sites/test --scope Web","title":"Examples"},{"location":"cmd/spo/customaction/customaction-get/#more-information","text":"UserCustomAction REST API resources: https://msdn.microsoft.com/en-us/library/office/dn531432.aspx#bk_UserCustomAction","title":"More information"},{"location":"cmd/spo/customaction/customaction-list/","text":"spo customaction list \u00b6 Lists user custom actions for site or site collection Usage \u00b6 m365 spo customaction list [ options ] Options \u00b6 -u, --webUrl <webUrl> Url of the site or site collection to retrieve the custom action from -s, --scope [scope] Scope of the custom action. Allowed values Site,Web,All . Default All -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 When using the text output type (default), the command lists only the values of the Name , Location , Scope and Id properties of the custom action. When setting the output type to JSON, all available properties are included in the command output. Examples \u00b6 Return details about all user custom actions located in site or site collection https://contoso.sharepoint.com/sites/test m365 spo customaction list --webUrl https://contoso.sharepoint.com/sites/test Return details about all user custom actions located in site collection https://contoso.sharepoint.com/sites/test m365 spo customaction list --webUrl https://contoso.sharepoint.com/sites/test --scope Site Return details about all user custom actions located in site https://contoso.sharepoint.com/sites/test m365 spo customaction list --webUrl https://contoso.sharepoint.com/sites/test --scope Web More information \u00b6 UserCustomAction REST API resources: https://msdn.microsoft.com/en-us/library/office/dn531432.aspx#bk_UserCustomAction","title":"customaction list"},{"location":"cmd/spo/customaction/customaction-list/#spo-customaction-list","text":"Lists user custom actions for site or site collection","title":"spo customaction list"},{"location":"cmd/spo/customaction/customaction-list/#usage","text":"m365 spo customaction list [ options ]","title":"Usage"},{"location":"cmd/spo/customaction/customaction-list/#options","text":"-u, --webUrl <webUrl> Url of the site or site collection to retrieve the custom action from -s, --scope [scope] Scope of the custom action. Allowed values Site,Web,All . Default All -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/customaction/customaction-list/#remarks","text":"When using the text output type (default), the command lists only the values of the Name , Location , Scope and Id properties of the custom action. When setting the output type to JSON, all available properties are included in the command output.","title":"Remarks"},{"location":"cmd/spo/customaction/customaction-list/#examples","text":"Return details about all user custom actions located in site or site collection https://contoso.sharepoint.com/sites/test m365 spo customaction list --webUrl https://contoso.sharepoint.com/sites/test Return details about all user custom actions located in site collection https://contoso.sharepoint.com/sites/test m365 spo customaction list --webUrl https://contoso.sharepoint.com/sites/test --scope Site Return details about all user custom actions located in site https://contoso.sharepoint.com/sites/test m365 spo customaction list --webUrl https://contoso.sharepoint.com/sites/test --scope Web","title":"Examples"},{"location":"cmd/spo/customaction/customaction-list/#more-information","text":"UserCustomAction REST API resources: https://msdn.microsoft.com/en-us/library/office/dn531432.aspx#bk_UserCustomAction","title":"More information"},{"location":"cmd/spo/customaction/customaction-remove/","text":"spo customaction remove \u00b6 Removes specified custom action from site or site collection Usage \u00b6 m365 spo customaction remove [ options ] Options \u00b6 -i, --id [id] Id (GUID) of the custom action to remove. Specify either id or title -t, --title [title] Title of the user custom action to retrieve information for. Specify either id or title -u, --webUrl <webUrl> Url of the site or site collection to remove the custom action from -s, --scope [scope] Scope of the custom action. Allowed values Site,Web,All . Default All --confirm Don't prompt for confirming removal of a user custom action -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 If the command finds multiple user custom actions with the specified title, it will prompt you to disambiguate which user custom action it should use, listing the discovered IDs. Examples \u00b6 Removes user custom action with ID 058140e3-0e37-44fc-a1d3-79c487d371a3 located in site or site collection https://contoso.sharepoint.com/sites/test m365 spo customaction remove --id 058140e3-0e37-44fc-a1d3-79c487d371a3 --webUrl https://contoso.sharepoint.com/sites/test Removes user custom action with Title YourAppCustomizer located in site or site collection https://contoso.sharepoint.com/sites/test m365 spo customaction remove --title \"YourAppCustomizer\" --webUrl https://contoso.sharepoint.com/sites/test Removes user custom action with ID 058140e3-0e37-44fc-a1d3-79c487d371a3 located in site or site collection https://contoso.sharepoint.com/sites/test . Skips the confirmation prompt message. m365 spo customaction remove --id 058140e3-0e37-44fc-a1d3-79c487d371a3 --webUrl https://contoso.sharepoint.com/sites/test --confirm Removes user custom action with Title YourAppCustomizer located in site or site collection https://contoso.sharepoint.com/sites/test . Skips the confirmation prompt message. m365 spo customaction remove --title \"YourAppCustomizer\" --webUrl https://contoso.sharepoint.com/sites/test --confirm Removes user custom action with ID 058140e3-0e37-44fc-a1d3-79c487d371a3 located in site collection https://contoso.sharepoint.com/sites/test m365 spo customaction remove --id 058140e3-0e37-44fc-a1d3-79c487d371a3 --webUrl https://contoso.sharepoint.com/sites/test --scope Site Removes user custom action with Title YourAppCustomizer located in site collection https://contoso.sharepoint.com/sites/test m365 spo customaction remove --title \"YourAppCustomizer\" --webUrl https://contoso.sharepoint.com/sites/test --scope Site Removes user custom action with ID 058140e3-0e37-44fc-a1d3-79c487d371a3 located in site https://contoso.sharepoint.com/sites/test m365 spo customaction remove --id 058140e3-0e37-44fc-a1d3-79c487d371a3 --webUrl https://contoso.sharepoint.com/sites/test --scope Web Removes user custom action with Title YourAppCustomizer located in site https://contoso.sharepoint.com/sites/test m365 spo customaction remove --title \"YourAppCustomizer\" --webUrl https://contoso.sharepoint.com/sites/test --scope Web More information \u00b6 UserCustomAction REST API resources: https://msdn.microsoft.com/en-us/library/office/dn531432.aspx#bk_UserCustomAction","title":"customaction remove"},{"location":"cmd/spo/customaction/customaction-remove/#spo-customaction-remove","text":"Removes specified custom action from site or site collection","title":"spo customaction remove"},{"location":"cmd/spo/customaction/customaction-remove/#usage","text":"m365 spo customaction remove [ options ]","title":"Usage"},{"location":"cmd/spo/customaction/customaction-remove/#options","text":"-i, --id [id] Id (GUID) of the custom action to remove. Specify either id or title -t, --title [title] Title of the user custom action to retrieve information for. Specify either id or title -u, --webUrl <webUrl> Url of the site or site collection to remove the custom action from -s, --scope [scope] Scope of the custom action. Allowed values Site,Web,All . Default All --confirm Don't prompt for confirming removal of a user custom action -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/customaction/customaction-remove/#remarks","text":"If the command finds multiple user custom actions with the specified title, it will prompt you to disambiguate which user custom action it should use, listing the discovered IDs.","title":"Remarks"},{"location":"cmd/spo/customaction/customaction-remove/#examples","text":"Removes user custom action with ID 058140e3-0e37-44fc-a1d3-79c487d371a3 located in site or site collection https://contoso.sharepoint.com/sites/test m365 spo customaction remove --id 058140e3-0e37-44fc-a1d3-79c487d371a3 --webUrl https://contoso.sharepoint.com/sites/test Removes user custom action with Title YourAppCustomizer located in site or site collection https://contoso.sharepoint.com/sites/test m365 spo customaction remove --title \"YourAppCustomizer\" --webUrl https://contoso.sharepoint.com/sites/test Removes user custom action with ID 058140e3-0e37-44fc-a1d3-79c487d371a3 located in site or site collection https://contoso.sharepoint.com/sites/test . Skips the confirmation prompt message. m365 spo customaction remove --id 058140e3-0e37-44fc-a1d3-79c487d371a3 --webUrl https://contoso.sharepoint.com/sites/test --confirm Removes user custom action with Title YourAppCustomizer located in site or site collection https://contoso.sharepoint.com/sites/test . Skips the confirmation prompt message. m365 spo customaction remove --title \"YourAppCustomizer\" --webUrl https://contoso.sharepoint.com/sites/test --confirm Removes user custom action with ID 058140e3-0e37-44fc-a1d3-79c487d371a3 located in site collection https://contoso.sharepoint.com/sites/test m365 spo customaction remove --id 058140e3-0e37-44fc-a1d3-79c487d371a3 --webUrl https://contoso.sharepoint.com/sites/test --scope Site Removes user custom action with Title YourAppCustomizer located in site collection https://contoso.sharepoint.com/sites/test m365 spo customaction remove --title \"YourAppCustomizer\" --webUrl https://contoso.sharepoint.com/sites/test --scope Site Removes user custom action with ID 058140e3-0e37-44fc-a1d3-79c487d371a3 located in site https://contoso.sharepoint.com/sites/test m365 spo customaction remove --id 058140e3-0e37-44fc-a1d3-79c487d371a3 --webUrl https://contoso.sharepoint.com/sites/test --scope Web Removes user custom action with Title YourAppCustomizer located in site https://contoso.sharepoint.com/sites/test m365 spo customaction remove --title \"YourAppCustomizer\" --webUrl https://contoso.sharepoint.com/sites/test --scope Web","title":"Examples"},{"location":"cmd/spo/customaction/customaction-remove/#more-information","text":"UserCustomAction REST API resources: https://msdn.microsoft.com/en-us/library/office/dn531432.aspx#bk_UserCustomAction","title":"More information"},{"location":"cmd/spo/customaction/customaction-set/","text":"spo customaction set \u00b6 Updates a user custom action for site or site collection Usage \u00b6 m365 spo customaction set [ options ] Options \u00b6 -u, --webUrl <webUrl> Url of the site or site collection to update the custom action -i, --id <id> ID of the custom action to update -n, --name [name] The name of the custom action -t, --title [title] The title of the custom action -l, --location [location] The actual location where this custom action need to be added like CommandUI.Ribbon -g, --group [group] The group of the custom action like SiteActions -d, --description [description] The description of the custom action --sequence [sequence] Sequence of this CustomAction being injected. Use when you have a specific sequence with which to have multiple CustomActions being added to the page --actionUrl [actionUrl] The URL, URI or JavaScript function associated with the action. URL example ~site/_layouts/sampleurl.aspx or ~sitecollection/_layouts/sampleurl.aspx --imageUrl [imageUrl] The URL of the image associated with the custom action -e, --commandUIExtension [commandUIExtension] XML fragment that determines user interface properties of the custom action --registrationId [registrationId] Specifies the identifier of the list or item content type that this action is associated with, or the file type or programmatic identifier --registrationType [registrationType] Specifies the type of object associated with the custom action. Allowed values None,List,ContentType,ProgId,FileType . Default None --rights [rights] A case-sensitive string array that contain the permissions needed for the custom action. Allowed values EmptyMask,ViewListItems,AddListItems,EditListItems,DeleteListItems,ApproveItems,OpenItems,ViewVersions,DeleteVersions,CancelCheckout,ManagePersonalViews,ManageLists,ViewFormPages,AnonymousSearchAccessList,Open,ViewPages,AddAndCustomizePages,ApplyThemeAndBorder,ApplyStyleSheets,ViewUsageData,CreateSSCSite,ManageSubwebs,CreateGroups,ManagePermissions,BrowseDirectories,BrowseUserInfo,AddDelPrivateWebParts,UpdatePersonalWebParts,ManageWeb,AnonymousSearchAccessWebLists,UseClientIntegration,UseRemoteAPIs,ManageAlerts,CreateAlerts,EditMyUserInfo,EnumeratePermissions,FullMask . Default EmptyMask -s, --scope [scope] Scope of the existing custom action. Allowed values Site,Web,All . Default All . Note, this would not update the scope, but might speed up the execution of the scope of the custom action is known. --scriptBlock [scriptBlock] Specifies a block of script to be executed. This attribute is only applicable when the Location attribute is set to ScriptLink --scriptSrc [scriptSrc] Specifies a file that contains script to be executed. This attribute is only applicable when the Location attribute is set to ScriptLink -c, --clientSideComponentId [clientSideComponentId] The Client Side Component Id (GUID) of the custom action -p, --clientSideComponentProperties [clientSideComponentProperties] The Client Side Component Properties of the custom action. Specify values as a JSON string : '{\"testMessage\":\"Test message\"}' -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 Running this command from the Windows Command Shell (cmd.exe) or PowerShell for Windows OS XP, 7, 8, 8.1 without bash installed might require additional formatting for command options that have JSON, XML or JavaScript values because the command shell treat quotes differently. For example, this is how ApplicationCustomizer user custom action can be created from the Windows cmd.exe: m365 spo customaction set --webUrl https://contoso.sharepoint.com/sites/test --id 058140e3-0e37-44fc-a1d3-79c487d371a3 --clientSideComponentProperties '{\\\"testMessage\\\":\\\"Test message\\\"}' The --rights option accepts case-sensitive values. Note, specifying the scope option might speed up the execution of the command, but would not update the scope. If the scope has to be changed, then the existing custom action should be removed and new should be added with different scope. Escaping JSON in PowerShell When using the --clientSideComponentProperties option it's possible to enter a JSON string. In PowerShell 5 to 7.2 specific escaping rules apply due to an issue. Remember that you can also use file tokens instead. Examples \u00b6 Updates tenant-wide SharePoint Framework Application Customizer extension properties in site https://contoso.sharepoint.com/sites/test m365 spo customaction set --webUrl https://contoso.sharepoint.com/sites/test --id 058140e3-0e37-44fc-a1d3-79c487d371a3 --clientSideComponentProperties '{\"testMessage\":\"Test message\"}' Updates tenant-wide SharePoint Framework modern List View Command Set extension in site https://contoso.sharepoint.com/sites/test m365 spo customaction set --webUrl https://contoso.sharepoint.com/sites/test --id 058140e3-0e37-44fc-a1d3-79c487d371a3 --clientSideComponentProperties '{\"sampleTextOne\":\"One item is selected in the list.\", \"sampleTextTwo\":\"This command is always visible.\"}' --sequence 100 Updates url custom action in the SiteActions menu in site https://contoso.sharepoint.com/sites/test m365 spo customaction set --webUrl https://contoso.sharepoint.com/sites/test --id 058140e3-0e37-44fc-a1d3-79c487d371a3 --actionUrl \"~site/SitePages/Home.aspx\" Updates ScriptLink custom action with script source in classic pages in site collection https://contoso.sharepoint.com/sites/test m365 spo customaction set --webUrl https://contoso.sharepoint.com/sites/test --id 058140e3-0e37-44fc-a1d3-79c487d371a3 --scriptSrc \"~sitecollection/SiteAssets/YourScript.js\" Creates custom action with delegated rights in the SiteActions menu in site https://contoso.sharepoint.com/sites/test m365 spo customaction set --webUrl https://contoso.sharepoint.com/sites/test --id 058140e3-0e37-44fc-a1d3-79c487d371a3 --rights \"AddListItems,DeleteListItems,ManageLists\" More information \u00b6 UserCustomAction REST API resources: https://msdn.microsoft.com/en-us/library/office/dn531432.aspx#bk_UserCustomAction UserCustomAction Locations and Group IDs: https://msdn.microsoft.com/en-us/library/office/bb802730.aspx UserCustomAction Element: https://msdn.microsoft.com/en-us/library/office/ms460194.aspx UserCustomAction Rights: https://msdn.microsoft.com/en-us/library/office/microsoft.sharepoint.spbasepermissions.aspx","title":"customaction set"},{"location":"cmd/spo/customaction/customaction-set/#spo-customaction-set","text":"Updates a user custom action for site or site collection","title":"spo customaction set"},{"location":"cmd/spo/customaction/customaction-set/#usage","text":"m365 spo customaction set [ options ]","title":"Usage"},{"location":"cmd/spo/customaction/customaction-set/#options","text":"-u, --webUrl <webUrl> Url of the site or site collection to update the custom action -i, --id <id> ID of the custom action to update -n, --name [name] The name of the custom action -t, --title [title] The title of the custom action -l, --location [location] The actual location where this custom action need to be added like CommandUI.Ribbon -g, --group [group] The group of the custom action like SiteActions -d, --description [description] The description of the custom action --sequence [sequence] Sequence of this CustomAction being injected. Use when you have a specific sequence with which to have multiple CustomActions being added to the page --actionUrl [actionUrl] The URL, URI or JavaScript function associated with the action. URL example ~site/_layouts/sampleurl.aspx or ~sitecollection/_layouts/sampleurl.aspx --imageUrl [imageUrl] The URL of the image associated with the custom action -e, --commandUIExtension [commandUIExtension] XML fragment that determines user interface properties of the custom action --registrationId [registrationId] Specifies the identifier of the list or item content type that this action is associated with, or the file type or programmatic identifier --registrationType [registrationType] Specifies the type of object associated with the custom action. Allowed values None,List,ContentType,ProgId,FileType . Default None --rights [rights] A case-sensitive string array that contain the permissions needed for the custom action. Allowed values EmptyMask,ViewListItems,AddListItems,EditListItems,DeleteListItems,ApproveItems,OpenItems,ViewVersions,DeleteVersions,CancelCheckout,ManagePersonalViews,ManageLists,ViewFormPages,AnonymousSearchAccessList,Open,ViewPages,AddAndCustomizePages,ApplyThemeAndBorder,ApplyStyleSheets,ViewUsageData,CreateSSCSite,ManageSubwebs,CreateGroups,ManagePermissions,BrowseDirectories,BrowseUserInfo,AddDelPrivateWebParts,UpdatePersonalWebParts,ManageWeb,AnonymousSearchAccessWebLists,UseClientIntegration,UseRemoteAPIs,ManageAlerts,CreateAlerts,EditMyUserInfo,EnumeratePermissions,FullMask . Default EmptyMask -s, --scope [scope] Scope of the existing custom action. Allowed values Site,Web,All . Default All . Note, this would not update the scope, but might speed up the execution of the scope of the custom action is known. --scriptBlock [scriptBlock] Specifies a block of script to be executed. This attribute is only applicable when the Location attribute is set to ScriptLink --scriptSrc [scriptSrc] Specifies a file that contains script to be executed. This attribute is only applicable when the Location attribute is set to ScriptLink -c, --clientSideComponentId [clientSideComponentId] The Client Side Component Id (GUID) of the custom action -p, --clientSideComponentProperties [clientSideComponentProperties] The Client Side Component Properties of the custom action. Specify values as a JSON string : '{\"testMessage\":\"Test message\"}' -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/customaction/customaction-set/#remarks","text":"Running this command from the Windows Command Shell (cmd.exe) or PowerShell for Windows OS XP, 7, 8, 8.1 without bash installed might require additional formatting for command options that have JSON, XML or JavaScript values because the command shell treat quotes differently. For example, this is how ApplicationCustomizer user custom action can be created from the Windows cmd.exe: m365 spo customaction set --webUrl https://contoso.sharepoint.com/sites/test --id 058140e3-0e37-44fc-a1d3-79c487d371a3 --clientSideComponentProperties '{\\\"testMessage\\\":\\\"Test message\\\"}' The --rights option accepts case-sensitive values. Note, specifying the scope option might speed up the execution of the command, but would not update the scope. If the scope has to be changed, then the existing custom action should be removed and new should be added with different scope. Escaping JSON in PowerShell When using the --clientSideComponentProperties option it's possible to enter a JSON string. In PowerShell 5 to 7.2 specific escaping rules apply due to an issue. Remember that you can also use file tokens instead.","title":"Remarks"},{"location":"cmd/spo/customaction/customaction-set/#examples","text":"Updates tenant-wide SharePoint Framework Application Customizer extension properties in site https://contoso.sharepoint.com/sites/test m365 spo customaction set --webUrl https://contoso.sharepoint.com/sites/test --id 058140e3-0e37-44fc-a1d3-79c487d371a3 --clientSideComponentProperties '{\"testMessage\":\"Test message\"}' Updates tenant-wide SharePoint Framework modern List View Command Set extension in site https://contoso.sharepoint.com/sites/test m365 spo customaction set --webUrl https://contoso.sharepoint.com/sites/test --id 058140e3-0e37-44fc-a1d3-79c487d371a3 --clientSideComponentProperties '{\"sampleTextOne\":\"One item is selected in the list.\", \"sampleTextTwo\":\"This command is always visible.\"}' --sequence 100 Updates url custom action in the SiteActions menu in site https://contoso.sharepoint.com/sites/test m365 spo customaction set --webUrl https://contoso.sharepoint.com/sites/test --id 058140e3-0e37-44fc-a1d3-79c487d371a3 --actionUrl \"~site/SitePages/Home.aspx\" Updates ScriptLink custom action with script source in classic pages in site collection https://contoso.sharepoint.com/sites/test m365 spo customaction set --webUrl https://contoso.sharepoint.com/sites/test --id 058140e3-0e37-44fc-a1d3-79c487d371a3 --scriptSrc \"~sitecollection/SiteAssets/YourScript.js\" Creates custom action with delegated rights in the SiteActions menu in site https://contoso.sharepoint.com/sites/test m365 spo customaction set --webUrl https://contoso.sharepoint.com/sites/test --id 058140e3-0e37-44fc-a1d3-79c487d371a3 --rights \"AddListItems,DeleteListItems,ManageLists\"","title":"Examples"},{"location":"cmd/spo/customaction/customaction-set/#more-information","text":"UserCustomAction REST API resources: https://msdn.microsoft.com/en-us/library/office/dn531432.aspx#bk_UserCustomAction UserCustomAction Locations and Group IDs: https://msdn.microsoft.com/en-us/library/office/bb802730.aspx UserCustomAction Element: https://msdn.microsoft.com/en-us/library/office/ms460194.aspx UserCustomAction Rights: https://msdn.microsoft.com/en-us/library/office/microsoft.sharepoint.spbasepermissions.aspx","title":"More information"},{"location":"cmd/spo/eventreceiver/eventreceiver-get/","text":"spo eventreceiver get \u00b6 Retrieves specific event receiver for the specified web, site or list by event receiver name or id. Usage \u00b6 m365 spo eventreceiver get [ options ] Options \u00b6 -u, --webUrl <webUrl> The URL of the web for which to retrieve the event receivers. --listTitle [listTitle] The title of the list for which to retrieve the event receivers, if the event receivers should be retrieved from a list . Specify either listTitle , listId or listUrl . --listId [listId] The id of the list for which to retrieve the event receivers, if the event receivers should be retrieved from a list . Specify either listTitle , listId or listUrl . --listUrl [listUrl] The url of the list for which to retrieve the event receivers, if the event receivers should be retrieved from a list . Specify either listTitle , listId or listUrl . -n, --name [name] The name of the event receiver to retrieve. Specify either name or id but not both. -i, --id [id] The id of the event receiver to retrieve. Specify either name or id but not both. -s, --scope [scope] The scope of which to retrieve the Event Receivers. Can be either \"site\" or \"web\". Defaults to \"web\". Only applicable when not specifying any of the list properties. -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Retrieve event receivers in web https://contoso.sharepoint.com/sites/contoso-sales with name PnP Test Receiver . m365 spo eventreceiver list --webUrl https://contoso.sharepoint.com/sites/contoso-sales --name 'PnP Test Receiver' Retrieve event receivers in site https://contoso.sharepoint.com/sites/contoso-sales with id c5a6444a-9c7f-4a0d-9e29-fc6fe30e34ec . m365 spo eventreceiver list --webUrl https://contoso.sharepoint.com/sites/contoso-sales --scope site --id c5a6444a-9c7f-4a0d-9e29-fc6fe30e34ec Retrieve event receivers for list with title Events in web https://contoso.sharepoint.com/sites/contoso-sales with name PnP Test Receiver . m365 spo eventreceiver list --webUrl https://contoso.sharepoint.com/sites/contoso-sales --listTitle Events --name 'PnP Test Receiver' Retrieve event receivers for list with ID 202b8199-b9de-43fd-9737-7f213f51c991 in web https://contoso.sharepoint.com/sites/contoso-sales with id c5a6444a-9c7f-4a0d-9e29-fc6fe30e34ec . m365 spo eventreceiver list --webUrl https://contoso.sharepoint.com/sites/contoso-sales --listId '202b8199-b9de-43fd-9737-7f213f51c991' --id c5a6444a-9c7f-4a0d-9e29-fc6fe30e34ec Retrieve event receivers for list with url /sites/contoso-sales/lists/Events in web https://contoso.sharepoint.com/sites/contoso-sales with name PnP Test Receiver . m365 spo eventreceiver list --webUrl https://contoso.sharepoint.com/sites/contoso-sales --listUrl '/sites/contoso-sales/lists/Events' --name 'PnP Test Receiver'","title":"eventreceiver get"},{"location":"cmd/spo/eventreceiver/eventreceiver-get/#spo-eventreceiver-get","text":"Retrieves specific event receiver for the specified web, site or list by event receiver name or id.","title":"spo eventreceiver get"},{"location":"cmd/spo/eventreceiver/eventreceiver-get/#usage","text":"m365 spo eventreceiver get [ options ]","title":"Usage"},{"location":"cmd/spo/eventreceiver/eventreceiver-get/#options","text":"-u, --webUrl <webUrl> The URL of the web for which to retrieve the event receivers. --listTitle [listTitle] The title of the list for which to retrieve the event receivers, if the event receivers should be retrieved from a list . Specify either listTitle , listId or listUrl . --listId [listId] The id of the list for which to retrieve the event receivers, if the event receivers should be retrieved from a list . Specify either listTitle , listId or listUrl . --listUrl [listUrl] The url of the list for which to retrieve the event receivers, if the event receivers should be retrieved from a list . Specify either listTitle , listId or listUrl . -n, --name [name] The name of the event receiver to retrieve. Specify either name or id but not both. -i, --id [id] The id of the event receiver to retrieve. Specify either name or id but not both. -s, --scope [scope] The scope of which to retrieve the Event Receivers. Can be either \"site\" or \"web\". Defaults to \"web\". Only applicable when not specifying any of the list properties. -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/eventreceiver/eventreceiver-get/#examples","text":"Retrieve event receivers in web https://contoso.sharepoint.com/sites/contoso-sales with name PnP Test Receiver . m365 spo eventreceiver list --webUrl https://contoso.sharepoint.com/sites/contoso-sales --name 'PnP Test Receiver' Retrieve event receivers in site https://contoso.sharepoint.com/sites/contoso-sales with id c5a6444a-9c7f-4a0d-9e29-fc6fe30e34ec . m365 spo eventreceiver list --webUrl https://contoso.sharepoint.com/sites/contoso-sales --scope site --id c5a6444a-9c7f-4a0d-9e29-fc6fe30e34ec Retrieve event receivers for list with title Events in web https://contoso.sharepoint.com/sites/contoso-sales with name PnP Test Receiver . m365 spo eventreceiver list --webUrl https://contoso.sharepoint.com/sites/contoso-sales --listTitle Events --name 'PnP Test Receiver' Retrieve event receivers for list with ID 202b8199-b9de-43fd-9737-7f213f51c991 in web https://contoso.sharepoint.com/sites/contoso-sales with id c5a6444a-9c7f-4a0d-9e29-fc6fe30e34ec . m365 spo eventreceiver list --webUrl https://contoso.sharepoint.com/sites/contoso-sales --listId '202b8199-b9de-43fd-9737-7f213f51c991' --id c5a6444a-9c7f-4a0d-9e29-fc6fe30e34ec Retrieve event receivers for list with url /sites/contoso-sales/lists/Events in web https://contoso.sharepoint.com/sites/contoso-sales with name PnP Test Receiver . m365 spo eventreceiver list --webUrl https://contoso.sharepoint.com/sites/contoso-sales --listUrl '/sites/contoso-sales/lists/Events' --name 'PnP Test Receiver'","title":"Examples"},{"location":"cmd/spo/eventreceiver/eventreceiver-list/","text":"spo eventreceiver list \u00b6 Retrieves event receivers for the specified web, site or list. Usage \u00b6 m365 spo eventreceiver list [ options ] Options \u00b6 -u, --webUrl <webUrl> The URL of the web for which to retrieve the event receivers. --listTitle [listTitle] The title of the list for which to retrieve the event receivers, if the event receivers should be retrieved from a list . Specify either listTitle , listId or listUrl . --listId [listId] The id of the list for which to retrieve the event receivers, if the event receivers should be retrieved from a list . Specify either listTitle , listId or listUrl . --listUrl [listUrl] The url of the list for which to retrieve the event receivers, if the event receivers should be retrieved from a list . Specify either listTitle , listId or listUrl . -s, --scope [scope] The scope of which to retrieve the Event Receivers. Can be either \"site\" or \"web\". Defaults to \"web\". Only applicable when not specifying any of the list properties. -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Retrieves event receivers in web https://contoso.sharepoint.com/sites/contoso-sales . m365 spo eventreceiver list --webUrl https://contoso.sharepoint.com/sites/contoso-sales Retrieves event receivers in site https://contoso.sharepoint.com/sites/contoso-sales . m365 spo eventreceiver list --webUrl https://contoso.sharepoint.com/sites/contoso-sales --scope site Retrieves event receivers for list with title Events in web https://contoso.sharepoint.com/sites/contoso-sales . m365 spo eventreceiver list --webUrl https://contoso.sharepoint.com/sites/contoso-sales --listTitle Events Retrieves event receivers for list with ID 202b8199-b9de-43fd-9737-7f213f51c991 in web https://contoso.sharepoint.com/sites/contoso-sales . m365 spo eventreceiver list --webUrl https://contoso.sharepoint.com/sites/contoso-sales --listId '202b8199-b9de-43fd-9737-7f213f51c991' Retrieves event receivers for list with url /sites/contoso-sales/lists/Events in web https://contoso.sharepoint.com/sites/contoso-sales . m365 spo eventreceiver list --webUrl https://contoso.sharepoint.com/sites/contoso-sales --listUrl '/sites/contoso-sales/lists/Events'","title":"eventreceiver list"},{"location":"cmd/spo/eventreceiver/eventreceiver-list/#spo-eventreceiver-list","text":"Retrieves event receivers for the specified web, site or list.","title":"spo eventreceiver list"},{"location":"cmd/spo/eventreceiver/eventreceiver-list/#usage","text":"m365 spo eventreceiver list [ options ]","title":"Usage"},{"location":"cmd/spo/eventreceiver/eventreceiver-list/#options","text":"-u, --webUrl <webUrl> The URL of the web for which to retrieve the event receivers. --listTitle [listTitle] The title of the list for which to retrieve the event receivers, if the event receivers should be retrieved from a list . Specify either listTitle , listId or listUrl . --listId [listId] The id of the list for which to retrieve the event receivers, if the event receivers should be retrieved from a list . Specify either listTitle , listId or listUrl . --listUrl [listUrl] The url of the list for which to retrieve the event receivers, if the event receivers should be retrieved from a list . Specify either listTitle , listId or listUrl . -s, --scope [scope] The scope of which to retrieve the Event Receivers. Can be either \"site\" or \"web\". Defaults to \"web\". Only applicable when not specifying any of the list properties. -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/eventreceiver/eventreceiver-list/#examples","text":"Retrieves event receivers in web https://contoso.sharepoint.com/sites/contoso-sales . m365 spo eventreceiver list --webUrl https://contoso.sharepoint.com/sites/contoso-sales Retrieves event receivers in site https://contoso.sharepoint.com/sites/contoso-sales . m365 spo eventreceiver list --webUrl https://contoso.sharepoint.com/sites/contoso-sales --scope site Retrieves event receivers for list with title Events in web https://contoso.sharepoint.com/sites/contoso-sales . m365 spo eventreceiver list --webUrl https://contoso.sharepoint.com/sites/contoso-sales --listTitle Events Retrieves event receivers for list with ID 202b8199-b9de-43fd-9737-7f213f51c991 in web https://contoso.sharepoint.com/sites/contoso-sales . m365 spo eventreceiver list --webUrl https://contoso.sharepoint.com/sites/contoso-sales --listId '202b8199-b9de-43fd-9737-7f213f51c991' Retrieves event receivers for list with url /sites/contoso-sales/lists/Events in web https://contoso.sharepoint.com/sites/contoso-sales . m365 spo eventreceiver list --webUrl https://contoso.sharepoint.com/sites/contoso-sales --listUrl '/sites/contoso-sales/lists/Events'","title":"Examples"},{"location":"cmd/spo/eventreceiver/eventreceiver-remove/","text":"spo eventreceiver remove \u00b6 Removes event receivers for the specified web, site, or list. Usage \u00b6 m365 spo eventreceiver remove [ options ] Options \u00b6 -u, --webUrl <webUrl> The URL of the web. --listTitle [listTitle] The title of the list, if the event receiver should be removed from a list . Specify either listTitle , listId or listUrl . --listId [listId] The id of the list, if the event receiver should be retrieved from a list . Specify either listTitle , listId or listUrl . --listUrl [listUrl] The url of the list, if the event receiver should be retrieved from a list . Specify either listTitle , listId or listUrl . -n, --name [name] The name. Specify either name or id but not both. -i, --id [id] The id. Specify either name or id but not both. -s, --scope [scope] The scope. Can be either \"site\" or \"web\". Defaults to \"web\". Only applicable when not specifying any of the list properties. --confirm Don't prompt for confirming removing the event receiver -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Remove event receiver in a specific web by name. m365 spo eventreceiver remove --webUrl https://contoso.sharepoint.com/sites/contoso-sales --name 'PnP Test Receiver' Remove event receiver in a specific site by id. m365 spo eventreceiver remove --webUrl https://contoso.sharepoint.com/sites/contoso-sales --scope site --id c5a6444a-9c7f-4a0d-9e29-fc6fe30e34ec Remove event receiver in a specific list retrieved by title by name. m365 spo eventreceiver remove --webUrl https://contoso.sharepoint.com/sites/contoso-sales --listTitle Events --name 'PnP Test Receiver' Remove event receiver in a specific list retrieved by list id by id. m365 spo eventreceiver remove --webUrl https://contoso.sharepoint.com/sites/contoso-sales --listId '202b8199-b9de-43fd-9737-7f213f51c991' --id c5a6444a-9c7f-4a0d-9e29-fc6fe30e34ec Remove event receiver in a specific list retrieved by list url by name. m365 spo eventreceiver remove --webUrl https://contoso.sharepoint.com/sites/contoso-sales --listUrl '/sites/contoso-sales/lists/Events' --name 'PnP Test Receiver'","title":"eventreceiver remove"},{"location":"cmd/spo/eventreceiver/eventreceiver-remove/#spo-eventreceiver-remove","text":"Removes event receivers for the specified web, site, or list.","title":"spo eventreceiver remove"},{"location":"cmd/spo/eventreceiver/eventreceiver-remove/#usage","text":"m365 spo eventreceiver remove [ options ]","title":"Usage"},{"location":"cmd/spo/eventreceiver/eventreceiver-remove/#options","text":"-u, --webUrl <webUrl> The URL of the web. --listTitle [listTitle] The title of the list, if the event receiver should be removed from a list . Specify either listTitle , listId or listUrl . --listId [listId] The id of the list, if the event receiver should be retrieved from a list . Specify either listTitle , listId or listUrl . --listUrl [listUrl] The url of the list, if the event receiver should be retrieved from a list . Specify either listTitle , listId or listUrl . -n, --name [name] The name. Specify either name or id but not both. -i, --id [id] The id. Specify either name or id but not both. -s, --scope [scope] The scope. Can be either \"site\" or \"web\". Defaults to \"web\". Only applicable when not specifying any of the list properties. --confirm Don't prompt for confirming removing the event receiver -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/eventreceiver/eventreceiver-remove/#examples","text":"Remove event receiver in a specific web by name. m365 spo eventreceiver remove --webUrl https://contoso.sharepoint.com/sites/contoso-sales --name 'PnP Test Receiver' Remove event receiver in a specific site by id. m365 spo eventreceiver remove --webUrl https://contoso.sharepoint.com/sites/contoso-sales --scope site --id c5a6444a-9c7f-4a0d-9e29-fc6fe30e34ec Remove event receiver in a specific list retrieved by title by name. m365 spo eventreceiver remove --webUrl https://contoso.sharepoint.com/sites/contoso-sales --listTitle Events --name 'PnP Test Receiver' Remove event receiver in a specific list retrieved by list id by id. m365 spo eventreceiver remove --webUrl https://contoso.sharepoint.com/sites/contoso-sales --listId '202b8199-b9de-43fd-9737-7f213f51c991' --id c5a6444a-9c7f-4a0d-9e29-fc6fe30e34ec Remove event receiver in a specific list retrieved by list url by name. m365 spo eventreceiver remove --webUrl https://contoso.sharepoint.com/sites/contoso-sales --listUrl '/sites/contoso-sales/lists/Events' --name 'PnP Test Receiver'","title":"Examples"},{"location":"cmd/spo/externaluser/externaluser-list/","text":"spo externaluser list \u00b6 Lists external users in the tenant Usage \u00b6 m365 spo externaluser list [ options ] Options \u00b6 -f, --filter [filter] Limits the results to only those users whose first name, last name or email address begins with the text in the string, using a case-insensitive comparison -p, --pageSize [pageSize] Specifies the maximum number of users to be returned in the collection. The value must be less than or equal to 50 -i, --position [position] Use to specify the zero-based index of the position in the sorted collection of the first result to be returned -s, --sortOrder [sortOrder] Specifies the sort results in Ascending or Descending order on the SPOUser.Email property should occur. Allowed values asc|desc . Default asc -u, --siteUrl [siteUrl] Specifies the site to retrieve external users for. If no site is specified, the external users for all sites are returned -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Important To use this command you have to have permissions to access the tenant admin site. Examples \u00b6 List all external users from the current tenant. Show the first batch of 50 users. m365 spo externaluser list --pageSize 50 --position 0 List all external users from the current tenant whose first name, last name or email address begins with Vesa . Show the first batch of 50 users. m365 spo externaluser list --pageSize 50 --position 0 --filter Vesa List all external users from the specified site. Show the first batch of 50 users. m365 spo externaluser list --pageSize 50 --position 0 --siteUrl https://contoso.sharepoint.com List all external users from the current tenant. Show the first batch of 50 users sorted descending by e-mail. m365 spo externaluser list --pageSize 50 --position 0 --sortOrder desc","title":"externaluser list"},{"location":"cmd/spo/externaluser/externaluser-list/#spo-externaluser-list","text":"Lists external users in the tenant","title":"spo externaluser list"},{"location":"cmd/spo/externaluser/externaluser-list/#usage","text":"m365 spo externaluser list [ options ]","title":"Usage"},{"location":"cmd/spo/externaluser/externaluser-list/#options","text":"-f, --filter [filter] Limits the results to only those users whose first name, last name or email address begins with the text in the string, using a case-insensitive comparison -p, --pageSize [pageSize] Specifies the maximum number of users to be returned in the collection. The value must be less than or equal to 50 -i, --position [position] Use to specify the zero-based index of the position in the sorted collection of the first result to be returned -s, --sortOrder [sortOrder] Specifies the sort results in Ascending or Descending order on the SPOUser.Email property should occur. Allowed values asc|desc . Default asc -u, --siteUrl [siteUrl] Specifies the site to retrieve external users for. If no site is specified, the external users for all sites are returned -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Important To use this command you have to have permissions to access the tenant admin site.","title":"Options"},{"location":"cmd/spo/externaluser/externaluser-list/#examples","text":"List all external users from the current tenant. Show the first batch of 50 users. m365 spo externaluser list --pageSize 50 --position 0 List all external users from the current tenant whose first name, last name or email address begins with Vesa . Show the first batch of 50 users. m365 spo externaluser list --pageSize 50 --position 0 --filter Vesa List all external users from the specified site. Show the first batch of 50 users. m365 spo externaluser list --pageSize 50 --position 0 --siteUrl https://contoso.sharepoint.com List all external users from the current tenant. Show the first batch of 50 users sorted descending by e-mail. m365 spo externaluser list --pageSize 50 --position 0 --sortOrder desc","title":"Examples"},{"location":"cmd/spo/feature/feature-disable/","text":"spo feature disable \u00b6 Disables a feature for the specified site or web Usage \u00b6 m365 spo feature disable [ options ] Options \u00b6 -u, --webUrl <webUrl> The URL of the site or web for which to disable the feature -i, --id <id> The ID of the feature to disable -s, --scope [scope] Scope of the Feature to disable. Allowed values Site,Web . Default Web --force Specifies whether to continue if an error occurs when disabling the feature -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 If the specified url doesn't refer to an existing site collection, you will get a \"404 FILE NOT FOUND\" error. Examples \u00b6 Disable site feature m365 spo feature disable --webUrl https://contoso.sharepoint.com/sites/salis --id 915c240e-a6cc-49b8-8b2c-0bff8b553ed3 --scope Site Disable web feature (with force to ignore errors) m365 spo feature disable --webUrl https://contoso.sharepoint.com/sites/salis --id 00bfea71-5932-4f9c-ad71-1557e5751100 --scope Web --force","title":"feature disable"},{"location":"cmd/spo/feature/feature-disable/#spo-feature-disable","text":"Disables a feature for the specified site or web","title":"spo feature disable"},{"location":"cmd/spo/feature/feature-disable/#usage","text":"m365 spo feature disable [ options ]","title":"Usage"},{"location":"cmd/spo/feature/feature-disable/#options","text":"-u, --webUrl <webUrl> The URL of the site or web for which to disable the feature -i, --id <id> The ID of the feature to disable -s, --scope [scope] Scope of the Feature to disable. Allowed values Site,Web . Default Web --force Specifies whether to continue if an error occurs when disabling the feature -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/feature/feature-disable/#remarks","text":"If the specified url doesn't refer to an existing site collection, you will get a \"404 FILE NOT FOUND\" error.","title":"Remarks"},{"location":"cmd/spo/feature/feature-disable/#examples","text":"Disable site feature m365 spo feature disable --webUrl https://contoso.sharepoint.com/sites/salis --id 915c240e-a6cc-49b8-8b2c-0bff8b553ed3 --scope Site Disable web feature (with force to ignore errors) m365 spo feature disable --webUrl https://contoso.sharepoint.com/sites/salis --id 00bfea71-5932-4f9c-ad71-1557e5751100 --scope Web --force","title":"Examples"},{"location":"cmd/spo/feature/feature-enable/","text":"spo feature enable \u00b6 Enables feature for the specified site or web Usage \u00b6 m365 spo feature enable [ options ] Options \u00b6 -u, --webUrl <webUrl> The URL of the site or web for which to enable the feature -i, --id <id> The ID of the feature to enable -s, --scope [scope] Scope of the Feature to enable. Allowed values Site,Web . Default Web --force Specifies whether to overwrite an existing feature with the same feature identifier. This parameter is ignored if there are no errors. -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 If the specified url doesn't refer to an existing site collection, you will get a \"404 FILE NOT FOUND\" error. Examples \u00b6 Enable site feature m365 spo feature enable --url https://contoso.sharepoint.com/sites/sales --featureId 915c240e-a6cc-49b8-8b2c-0bff8b553ed3 --scope Site Enable web feature (with force to overwrite feature with same id) m365 spo feature enable --url https://contoso.sharepoint.com/sites/sales --featureId 00bfea71-5932-4f9c-ad71-1557e5751100 --scope Web --force","title":"feature enable"},{"location":"cmd/spo/feature/feature-enable/#spo-feature-enable","text":"Enables feature for the specified site or web","title":"spo feature enable"},{"location":"cmd/spo/feature/feature-enable/#usage","text":"m365 spo feature enable [ options ]","title":"Usage"},{"location":"cmd/spo/feature/feature-enable/#options","text":"-u, --webUrl <webUrl> The URL of the site or web for which to enable the feature -i, --id <id> The ID of the feature to enable -s, --scope [scope] Scope of the Feature to enable. Allowed values Site,Web . Default Web --force Specifies whether to overwrite an existing feature with the same feature identifier. This parameter is ignored if there are no errors. -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/feature/feature-enable/#remarks","text":"If the specified url doesn't refer to an existing site collection, you will get a \"404 FILE NOT FOUND\" error.","title":"Remarks"},{"location":"cmd/spo/feature/feature-enable/#examples","text":"Enable site feature m365 spo feature enable --url https://contoso.sharepoint.com/sites/sales --featureId 915c240e-a6cc-49b8-8b2c-0bff8b553ed3 --scope Site Enable web feature (with force to overwrite feature with same id) m365 spo feature enable --url https://contoso.sharepoint.com/sites/sales --featureId 00bfea71-5932-4f9c-ad71-1557e5751100 --scope Web --force","title":"Examples"},{"location":"cmd/spo/feature/feature-list/","text":"spo feature list \u00b6 Lists Features activated in the specified site or site collection Usage \u00b6 m365 spo feature list [ options ] Options \u00b6 -u, --webUrl <webUrl> URL of the site (collection) to retrieve the activated Features from -s, --scope [scope] Scope of the Features to retrieve. Allowed values Site,Web . Default Web -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Return details about Features activated in the specified site collection m365 spo feature list --webUrl https://contoso.sharepoint.com/sites/test --scope Site Return details about Features activated in the specified site m365 spo feature list --webUrl https://contoso.sharepoint.com/sites/test --scope Web","title":"feature list"},{"location":"cmd/spo/feature/feature-list/#spo-feature-list","text":"Lists Features activated in the specified site or site collection","title":"spo feature list"},{"location":"cmd/spo/feature/feature-list/#usage","text":"m365 spo feature list [ options ]","title":"Usage"},{"location":"cmd/spo/feature/feature-list/#options","text":"-u, --webUrl <webUrl> URL of the site (collection) to retrieve the activated Features from -s, --scope [scope] Scope of the Features to retrieve. Allowed values Site,Web . Default Web -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/feature/feature-list/#examples","text":"Return details about Features activated in the specified site collection m365 spo feature list --webUrl https://contoso.sharepoint.com/sites/test --scope Site Return details about Features activated in the specified site m365 spo feature list --webUrl https://contoso.sharepoint.com/sites/test --scope Web","title":"Examples"},{"location":"cmd/spo/field/field-add/","text":"spo field add \u00b6 Adds a new list or site column using the CAML field definition Usage \u00b6 m365 spo field add [ options ] Options \u00b6 -u, --webUrl <webUrl> Absolute URL of the site where the field should be created -l, --listTitle [listTitle] Title of the list where the field should be created (if it should be created as a list column). Specify either listTitle , listId or listUrl --listId [listId] ID of the list where the field should be created (if it should be created as a list column). Specify either listTitle , listId or listUrl --listUrl [listUrl] Server- or site-relative URL of the list where the field should be created (if it should be created as a list column). Specify either listTitle , listId or listUrl -x, --xml <xml> CAML field definition --options [options] The options to use to add to the field. Allowed values: DefaultValue , AddToDefaultContentType , AddToNoContentType , AddToAllContentTypes , AddFieldInternalNameHint , AddFieldToDefaultView , AddFieldCheckDisplayName -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 If the specified field already exists, you will get a A duplicate field name \"your-field\" was found. error. Examples \u00b6 Create a date time site column m365 spo field add --webUrl https://contoso.sharepoint.com/sites/contoso-sales --xml '`<Field Type=\"DateTime\" DisplayName=\"Start date-time\" Required=\"FALSE\" EnforceUniqueValues=\"FALSE\" Indexed=\"FALSE\" Format=\"DateTime\" Group=\"PnP Columns\" FriendlyDisplayFormat=\"Disabled\" ID=\"{5ee2dd25-d941-455a-9bdb-7f2c54aed11b}\" SourceID=\"{4f118c69-66e0-497c-96ff-d7855ce0713d}\" StaticName=\"PnPAlertStartDateTime\" Name=\"PnPAlertStartDateTime\"><Default>[today]</Default></Field>`' Create a URL list column to a list retrieved by Title m365 spo field add --webUrl https://contoso.sharepoint.com/sites/contoso-sales --listTitle Events --xml '`<Field Type=\"URL\" DisplayName=\"More information link\" Required=\"FALSE\" EnforceUniqueValues=\"FALSE\" Indexed=\"FALSE\" Format=\"Hyperlink\" Group=\"PnP Columns\" ID=\"{6085e32a-339b-4da7-ab6d-c1e013e5ab27}\" SourceID=\"{4f118c69-66e0-497c-96ff-d7855ce0713d}\" StaticName=\"PnPAlertMoreInformation\" Name=\"PnPAlertMoreInformation\"></Field>`' Create a URL list column and add it to all content types m365 spo field add --webUrl https://contoso.sharepoint.com/sites/contoso-sales --listTitle Events --xml '`<Field Type=\"URL\" DisplayName=\"More information link\" Required=\"FALSE\" EnforceUniqueValues=\"FALSE\" Indexed=\"FALSE\" Format=\"Hyperlink\" Group=\"PnP Columns\" ID=\"{6085e32a-339b-4da7-ab6d-c1e013e5ab27}\" SourceID=\"{4f118c69-66e0-497c-96ff-d7855ce0713d}\" StaticName=\"PnPAlertMoreInformation\" Name=\"PnPAlertMoreInformation\"></Field>`' --options AddToAllContentTypes Create a URL list column to a list retrieved by ID m365 spo field add --webUrl https://contoso.sharepoint.com/sites/contoso-sales --listId e785fe80-2ca1-409e-b9d1-19055a85cd38 --xml '`<Field Type=\"URL\" DisplayName=\"More information link\" Required=\"FALSE\" EnforceUniqueValues=\"FALSE\" Indexed=\"FALSE\" Format=\"Hyperlink\" Group=\"PnP Columns\" ID=\"{6085e32a-339b-4da7-ab6d-c1e013e5ab27}\" SourceID=\"{4f118c69-66e0-497c-96ff-d7855ce0713d}\" StaticName=\"PnPAlertMoreInformation\" Name=\"PnPAlertMoreInformation\"></Field>`' Create a date time list column to a list retrieved by URL m365 spo field add --webUrl https://contoso.sharepoint.com/sites/contoso-sales --listUrl /sites/contoso-sales/lists/Events --xml '`<Field Type=\"DateTime\" DisplayName=\"Start date-time\" Required=\"FALSE\" EnforceUniqueValues=\"FALSE\" Indexed=\"FALSE\" Format=\"DateTime\" Group=\"PnP Columns\" FriendlyDisplayFormat=\"Disabled\" ID=\"{5ee2dd25-d941-455a-9bdb-7f2c54aed11b}\" SourceID=\"{4f118c69-66e0-497c-96ff-d7855ce0713d}\" StaticName=\"PnPAlertStartDateTime\" Name=\"PnPAlertStartDateTime\"><Default>[today]</Default></Field>`' More information \u00b6 AddFieldOptions enumeration: https://msdn.microsoft.com/en-us/library/microsoft.sharepoint.client.addfieldoptions.aspx","title":"field add"},{"location":"cmd/spo/field/field-add/#spo-field-add","text":"Adds a new list or site column using the CAML field definition","title":"spo field add"},{"location":"cmd/spo/field/field-add/#usage","text":"m365 spo field add [ options ]","title":"Usage"},{"location":"cmd/spo/field/field-add/#options","text":"-u, --webUrl <webUrl> Absolute URL of the site where the field should be created -l, --listTitle [listTitle] Title of the list where the field should be created (if it should be created as a list column). Specify either listTitle , listId or listUrl --listId [listId] ID of the list where the field should be created (if it should be created as a list column). Specify either listTitle , listId or listUrl --listUrl [listUrl] Server- or site-relative URL of the list where the field should be created (if it should be created as a list column). Specify either listTitle , listId or listUrl -x, --xml <xml> CAML field definition --options [options] The options to use to add to the field. Allowed values: DefaultValue , AddToDefaultContentType , AddToNoContentType , AddToAllContentTypes , AddFieldInternalNameHint , AddFieldToDefaultView , AddFieldCheckDisplayName -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/field/field-add/#remarks","text":"If the specified field already exists, you will get a A duplicate field name \"your-field\" was found. error.","title":"Remarks"},{"location":"cmd/spo/field/field-add/#examples","text":"Create a date time site column m365 spo field add --webUrl https://contoso.sharepoint.com/sites/contoso-sales --xml '`<Field Type=\"DateTime\" DisplayName=\"Start date-time\" Required=\"FALSE\" EnforceUniqueValues=\"FALSE\" Indexed=\"FALSE\" Format=\"DateTime\" Group=\"PnP Columns\" FriendlyDisplayFormat=\"Disabled\" ID=\"{5ee2dd25-d941-455a-9bdb-7f2c54aed11b}\" SourceID=\"{4f118c69-66e0-497c-96ff-d7855ce0713d}\" StaticName=\"PnPAlertStartDateTime\" Name=\"PnPAlertStartDateTime\"><Default>[today]</Default></Field>`' Create a URL list column to a list retrieved by Title m365 spo field add --webUrl https://contoso.sharepoint.com/sites/contoso-sales --listTitle Events --xml '`<Field Type=\"URL\" DisplayName=\"More information link\" Required=\"FALSE\" EnforceUniqueValues=\"FALSE\" Indexed=\"FALSE\" Format=\"Hyperlink\" Group=\"PnP Columns\" ID=\"{6085e32a-339b-4da7-ab6d-c1e013e5ab27}\" SourceID=\"{4f118c69-66e0-497c-96ff-d7855ce0713d}\" StaticName=\"PnPAlertMoreInformation\" Name=\"PnPAlertMoreInformation\"></Field>`' Create a URL list column and add it to all content types m365 spo field add --webUrl https://contoso.sharepoint.com/sites/contoso-sales --listTitle Events --xml '`<Field Type=\"URL\" DisplayName=\"More information link\" Required=\"FALSE\" EnforceUniqueValues=\"FALSE\" Indexed=\"FALSE\" Format=\"Hyperlink\" Group=\"PnP Columns\" ID=\"{6085e32a-339b-4da7-ab6d-c1e013e5ab27}\" SourceID=\"{4f118c69-66e0-497c-96ff-d7855ce0713d}\" StaticName=\"PnPAlertMoreInformation\" Name=\"PnPAlertMoreInformation\"></Field>`' --options AddToAllContentTypes Create a URL list column to a list retrieved by ID m365 spo field add --webUrl https://contoso.sharepoint.com/sites/contoso-sales --listId e785fe80-2ca1-409e-b9d1-19055a85cd38 --xml '`<Field Type=\"URL\" DisplayName=\"More information link\" Required=\"FALSE\" EnforceUniqueValues=\"FALSE\" Indexed=\"FALSE\" Format=\"Hyperlink\" Group=\"PnP Columns\" ID=\"{6085e32a-339b-4da7-ab6d-c1e013e5ab27}\" SourceID=\"{4f118c69-66e0-497c-96ff-d7855ce0713d}\" StaticName=\"PnPAlertMoreInformation\" Name=\"PnPAlertMoreInformation\"></Field>`' Create a date time list column to a list retrieved by URL m365 spo field add --webUrl https://contoso.sharepoint.com/sites/contoso-sales --listUrl /sites/contoso-sales/lists/Events --xml '`<Field Type=\"DateTime\" DisplayName=\"Start date-time\" Required=\"FALSE\" EnforceUniqueValues=\"FALSE\" Indexed=\"FALSE\" Format=\"DateTime\" Group=\"PnP Columns\" FriendlyDisplayFormat=\"Disabled\" ID=\"{5ee2dd25-d941-455a-9bdb-7f2c54aed11b}\" SourceID=\"{4f118c69-66e0-497c-96ff-d7855ce0713d}\" StaticName=\"PnPAlertStartDateTime\" Name=\"PnPAlertStartDateTime\"><Default>[today]</Default></Field>`'","title":"Examples"},{"location":"cmd/spo/field/field-add/#more-information","text":"AddFieldOptions enumeration: https://msdn.microsoft.com/en-us/library/microsoft.sharepoint.client.addfieldoptions.aspx","title":"More information"},{"location":"cmd/spo/field/field-get/","text":"spo field get \u00b6 Retrieves information about the specified list- or site column Usage \u00b6 m365 spo field get [ options ] Options \u00b6 -u, --webUrl <webUrl> Absolute URL of the site where the field is located -l, --listTitle [listTitle] Title of the list where the field is located. Specify only one of listTitle, listId or listUrl --listId [listId] ID of the list where the field is located. Specify only one of listTitle, listId or listUrl --listUrl [listUrl] Server- or web-relative URL of the list where the field is located. Specify only one of listTitle, listId or listUrl -i, --id [id] The ID of the field to retrieve. Specify id or title but not both -t, --title [title] The display name (case-sensitive) of the field to remove. Specify id or title, or group but not both -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Retrieves site column by id located in site https://contoso.sharepoint.com/sites/contoso-sales m365 spo field get --webUrl https://contoso.sharepoint.com/sites/contoso-sales --id 5ee2dd25-d941-455a-9bdb-7f2c54aed11b Retrieves list column by id located in site https://contoso.sharepoint.com/sites/contoso-sales . Retrieves the list by its title m365 spo field get --webUrl https://contoso.sharepoint.com/sites/contoso-sales --listTitle Events --id 5ee2dd25-d941-455a-9bdb-7f2c54aed11b Retrieves list column by display name located in site https://contoso.sharepoint.com/sites/contoso-sales . Retrieves the list by its url m365 spo field get --webUrl https://contoso.sharepoint.com/sites/contoso-sales --listUrl \"Lists/Events\" --title \"Title\"","title":"field get"},{"location":"cmd/spo/field/field-get/#spo-field-get","text":"Retrieves information about the specified list- or site column","title":"spo field get"},{"location":"cmd/spo/field/field-get/#usage","text":"m365 spo field get [ options ]","title":"Usage"},{"location":"cmd/spo/field/field-get/#options","text":"-u, --webUrl <webUrl> Absolute URL of the site where the field is located -l, --listTitle [listTitle] Title of the list where the field is located. Specify only one of listTitle, listId or listUrl --listId [listId] ID of the list where the field is located. Specify only one of listTitle, listId or listUrl --listUrl [listUrl] Server- or web-relative URL of the list where the field is located. Specify only one of listTitle, listId or listUrl -i, --id [id] The ID of the field to retrieve. Specify id or title but not both -t, --title [title] The display name (case-sensitive) of the field to remove. Specify id or title, or group but not both -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/field/field-get/#examples","text":"Retrieves site column by id located in site https://contoso.sharepoint.com/sites/contoso-sales m365 spo field get --webUrl https://contoso.sharepoint.com/sites/contoso-sales --id 5ee2dd25-d941-455a-9bdb-7f2c54aed11b Retrieves list column by id located in site https://contoso.sharepoint.com/sites/contoso-sales . Retrieves the list by its title m365 spo field get --webUrl https://contoso.sharepoint.com/sites/contoso-sales --listTitle Events --id 5ee2dd25-d941-455a-9bdb-7f2c54aed11b Retrieves list column by display name located in site https://contoso.sharepoint.com/sites/contoso-sales . Retrieves the list by its url m365 spo field get --webUrl https://contoso.sharepoint.com/sites/contoso-sales --listUrl \"Lists/Events\" --title \"Title\"","title":"Examples"},{"location":"cmd/spo/field/field-list/","text":"spo field list \u00b6 Retrieves columns for the specified list or site Usage \u00b6 m365 spo field list [ options ] Options \u00b6 -u, --webUrl <webUrl> Absolute URL of the site where fields are located -t, --listTitle [listTitle] Title of the list where fields are located. Specify listTitle , listId or listUrl -i --listId [listId] ID of the list where fields are located. Specify listTitle , listId or listUrl --listUrl [listUrl] Server- or web-relative URL of the list where fields are located. Specify listTitle , listId or listUrl -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Retrieves site columns for site https://contoso.sharepoint.com/sites/contoso-sales . m365 spo field list --webUrl https://contoso.sharepoint.com/sites/contoso-sales Retrieves list columns for list Events in site https://contoso.sharepoint.com/sites/contoso-sales m365 spo field list --webUrl https://contoso.sharepoint.com/sites/contoso-sales --listTitle Events Retrieves list columns for list 202b8199-b9de-43fd-9737-7f213f51c991 in site https://contoso.sharepoint.com/sites/contoso-sales m365 spo field list --webUrl https://contoso.sharepoint.com/sites/contoso-sales --listId '202b8199-b9de-43fd-9737-7f213f51c991' Retrieves list columns for list /sites/contoso-sales/lists/Events in site https://contoso.sharepoint.com/sites/contoso-sales m365 spo field list --webUrl https://contoso.sharepoint.com/sites/contoso-sales --listUrl '/sites/contoso-sales/lists/Events'","title":"field list"},{"location":"cmd/spo/field/field-list/#spo-field-list","text":"Retrieves columns for the specified list or site","title":"spo field list"},{"location":"cmd/spo/field/field-list/#usage","text":"m365 spo field list [ options ]","title":"Usage"},{"location":"cmd/spo/field/field-list/#options","text":"-u, --webUrl <webUrl> Absolute URL of the site where fields are located -t, --listTitle [listTitle] Title of the list where fields are located. Specify listTitle , listId or listUrl -i --listId [listId] ID of the list where fields are located. Specify listTitle , listId or listUrl --listUrl [listUrl] Server- or web-relative URL of the list where fields are located. Specify listTitle , listId or listUrl -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/field/field-list/#examples","text":"Retrieves site columns for site https://contoso.sharepoint.com/sites/contoso-sales . m365 spo field list --webUrl https://contoso.sharepoint.com/sites/contoso-sales Retrieves list columns for list Events in site https://contoso.sharepoint.com/sites/contoso-sales m365 spo field list --webUrl https://contoso.sharepoint.com/sites/contoso-sales --listTitle Events Retrieves list columns for list 202b8199-b9de-43fd-9737-7f213f51c991 in site https://contoso.sharepoint.com/sites/contoso-sales m365 spo field list --webUrl https://contoso.sharepoint.com/sites/contoso-sales --listId '202b8199-b9de-43fd-9737-7f213f51c991' Retrieves list columns for list /sites/contoso-sales/lists/Events in site https://contoso.sharepoint.com/sites/contoso-sales m365 spo field list --webUrl https://contoso.sharepoint.com/sites/contoso-sales --listUrl '/sites/contoso-sales/lists/Events'","title":"Examples"},{"location":"cmd/spo/field/field-remove/","text":"spo field remove \u00b6 Removes the specified list- or site column Usage \u00b6 m365 spo field remove [ options ] Options \u00b6 -u, --webUrl <webUrl> Absolute URL of the site where the field to remove is located -l, --listTitle [listTitle] Title of the list where the field is located. Specify only one of listTitle , listId or listUrl --listId [listId] ID of the list where the field is located. Specify only one of listTitle , listId or listUrl --listUrl [listUrl] Server- or web-relative URL of the list where the field is located. Specify only one of listTitle , listId or listUrl -i, --id [id] The ID of the field to remove. Specify id, title, or group -t, --title [title] The display name (case-sensitive) of the field to remove. Specify id, title, or group -g, --group [group] Delete all fields from this group (case-sensitive). Specify id, title, or group --confirm Don't prompt for confirming removing the field -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Remove the site column with the specified ID, located in site https://contoso.sharepoint.com/sites/contoso-sales m365 spo field remove --webUrl https://contoso.sharepoint.com/sites/contoso-sales --id 5ee2dd25-d941-455a-9bdb-7f2c54aed11b Remove the list column with the specified ID, located in site https://contoso.sharepoint.com/sites/contoso-sales . Retrieves the list by its title m365 spo field remove --webUrl https://contoso.sharepoint.com/sites/contoso-sales --listTitle Events --id 5ee2dd25-d941-455a-9bdb-7f2c54aed11b Remove the list column with the specified display name, located in site https://contoso.sharepoint.com/sites/contoso-sales . Retrieves the list by its url m365 spo field remove --webUrl https://contoso.sharepoint.com/sites/contoso-sales --listUrl \"Lists/Events\" --title \"Title\" Remove all site columns from group MyGroup m365 spo field remove --webUrl https://contoso.sharepoint.com/sites/contoso-sales --group \"MyGroup\"","title":"field remove"},{"location":"cmd/spo/field/field-remove/#spo-field-remove","text":"Removes the specified list- or site column","title":"spo field remove"},{"location":"cmd/spo/field/field-remove/#usage","text":"m365 spo field remove [ options ]","title":"Usage"},{"location":"cmd/spo/field/field-remove/#options","text":"-u, --webUrl <webUrl> Absolute URL of the site where the field to remove is located -l, --listTitle [listTitle] Title of the list where the field is located. Specify only one of listTitle , listId or listUrl --listId [listId] ID of the list where the field is located. Specify only one of listTitle , listId or listUrl --listUrl [listUrl] Server- or web-relative URL of the list where the field is located. Specify only one of listTitle , listId or listUrl -i, --id [id] The ID of the field to remove. Specify id, title, or group -t, --title [title] The display name (case-sensitive) of the field to remove. Specify id, title, or group -g, --group [group] Delete all fields from this group (case-sensitive). Specify id, title, or group --confirm Don't prompt for confirming removing the field -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/field/field-remove/#examples","text":"Remove the site column with the specified ID, located in site https://contoso.sharepoint.com/sites/contoso-sales m365 spo field remove --webUrl https://contoso.sharepoint.com/sites/contoso-sales --id 5ee2dd25-d941-455a-9bdb-7f2c54aed11b Remove the list column with the specified ID, located in site https://contoso.sharepoint.com/sites/contoso-sales . Retrieves the list by its title m365 spo field remove --webUrl https://contoso.sharepoint.com/sites/contoso-sales --listTitle Events --id 5ee2dd25-d941-455a-9bdb-7f2c54aed11b Remove the list column with the specified display name, located in site https://contoso.sharepoint.com/sites/contoso-sales . Retrieves the list by its url m365 spo field remove --webUrl https://contoso.sharepoint.com/sites/contoso-sales --listUrl \"Lists/Events\" --title \"Title\" Remove all site columns from group MyGroup m365 spo field remove --webUrl https://contoso.sharepoint.com/sites/contoso-sales --group \"MyGroup\"","title":"Examples"},{"location":"cmd/spo/field/field-set/","text":"spo field set \u00b6 Updates existing list or site column Usage \u00b6 m365 spo field set [ options ] Options \u00b6 -u, --webUrl <webUrl> Absolute URL of the site where the field is located --listId [listId] ID of the list where the field is located (if list column). Specify either listTitle , listId or listUrl --listTitle [listTitle] Title of the list where the field is located (if list column). Specify either listTitle , listId or listUrl --listUrl [listUrl] Server- or site-relative URL of the list where the field is located (if list column). Specify either listTitle , listId or listUrl -i, --id [id] ID of the field to update. Specify id or title but not both -t, --title [title] Title or internal name of the field to update. Specify id or title but not both --updateExistingLists Set, to push the update to existing lists. Otherwise, the changes will apply to new lists only -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 Specify properties to update using their names, eg. --Title 'New Title' --JSLink jslink.js . Escaping JSON in PowerShell When updating column formatting for a field with the --CustomFormatter option, it's possible to enter a JSON string. In PowerShell 5 to 7.2 specific escaping rules apply due to an issue. Remember that you can also use file tokens instead. Examples \u00b6 Update the title of the site column specified by its internal name and push changes to existing lists m365 spo field set --webUrl https://contoso.sharepoint.com/sites/project-x --title 'MyColumn' --updateExistingLists --Title 'My column' Update the title of the list column specified by its ID m365 spo field set --webUrl https://contoso.sharepoint.com/sites/project-x --listTitle 'My List' --id 330f29c5-5c4c-465f-9f4b-7903020ae1ce --Title 'My column' Update the description of a column specified by the ID on a list retrieved by the URL m365 spo field set --webUrl https://contoso.sharepoint.com/sites/project-x --listUrl '/sites/project-x/Lists/My List' --id 330f29c5-5c4c-465f-9f4b-7903020ae1ce --Description 'My column Description' Update column formatting of the specified list column m365 spo field set --webUrl https://contoso.sharepoint.com/sites/project-x --listTitle 'My List' --title 'MyColumn' --CustomFormatter '{\"schema\":\"https://developer.microsoft.com/json-schemas/sp/column-formatting.schema.json\", \"elmType\": \"div\", \"txtContent\": \"@currentField\"}'","title":"field set"},{"location":"cmd/spo/field/field-set/#spo-field-set","text":"Updates existing list or site column","title":"spo field set"},{"location":"cmd/spo/field/field-set/#usage","text":"m365 spo field set [ options ]","title":"Usage"},{"location":"cmd/spo/field/field-set/#options","text":"-u, --webUrl <webUrl> Absolute URL of the site where the field is located --listId [listId] ID of the list where the field is located (if list column). Specify either listTitle , listId or listUrl --listTitle [listTitle] Title of the list where the field is located (if list column). Specify either listTitle , listId or listUrl --listUrl [listUrl] Server- or site-relative URL of the list where the field is located (if list column). Specify either listTitle , listId or listUrl -i, --id [id] ID of the field to update. Specify id or title but not both -t, --title [title] Title or internal name of the field to update. Specify id or title but not both --updateExistingLists Set, to push the update to existing lists. Otherwise, the changes will apply to new lists only -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/field/field-set/#remarks","text":"Specify properties to update using their names, eg. --Title 'New Title' --JSLink jslink.js . Escaping JSON in PowerShell When updating column formatting for a field with the --CustomFormatter option, it's possible to enter a JSON string. In PowerShell 5 to 7.2 specific escaping rules apply due to an issue. Remember that you can also use file tokens instead.","title":"Remarks"},{"location":"cmd/spo/field/field-set/#examples","text":"Update the title of the site column specified by its internal name and push changes to existing lists m365 spo field set --webUrl https://contoso.sharepoint.com/sites/project-x --title 'MyColumn' --updateExistingLists --Title 'My column' Update the title of the list column specified by its ID m365 spo field set --webUrl https://contoso.sharepoint.com/sites/project-x --listTitle 'My List' --id 330f29c5-5c4c-465f-9f4b-7903020ae1ce --Title 'My column' Update the description of a column specified by the ID on a list retrieved by the URL m365 spo field set --webUrl https://contoso.sharepoint.com/sites/project-x --listUrl '/sites/project-x/Lists/My List' --id 330f29c5-5c4c-465f-9f4b-7903020ae1ce --Description 'My column Description' Update column formatting of the specified list column m365 spo field set --webUrl https://contoso.sharepoint.com/sites/project-x --listTitle 'My List' --title 'MyColumn' --CustomFormatter '{\"schema\":\"https://developer.microsoft.com/json-schemas/sp/column-formatting.schema.json\", \"elmType\": \"div\", \"txtContent\": \"@currentField\"}'","title":"Examples"},{"location":"cmd/spo/file/file-add/","text":"spo file add \u00b6 Uploads file to the specified folder Usage \u00b6 m365 spo file add [ options ] Options \u00b6 -u, --webUrl <webUrl> The URL of the site where the file should be uploaded to -f, --folder <folder> Site-relative or server-relative URL to the folder where the file should be uploaded -p, --path <path> Local path to the file to upload -c, --contentType [contentType] Content type name or ID to assign to the file --checkOut [checkOut] If versioning is enabled, this will check out the file first if it exists, upload the file, then check it in again --checkInComment [checkInComment] Comment to set when checking the file in --approve [approve] Will automatically approve the uploaded file --approveComment [approveComment] Comment to set when approving the file --publish [publish] Will automatically publish the uploaded file --publishComment [publishComment] Comment to set when publishing the file -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 This command allows using unknown properties. Each property corresponds to the list item field that should be set when uploading the file. Examples \u00b6 Adds file MS365.jpg to site https://contoso.sharepoint.com/sites/project-x in folder Shared Documents m365 spo file add --webUrl https://contoso.sharepoint.com/sites/project-x --folder 'Shared Documents' --path 'C:\\MS365.jpg' Adds file MS365.jpg to site https://contoso.sharepoint.com/sites/project-x in sub folder Shared Documents/Sub Folder 1 m365 spo file add --webUrl https://contoso.sharepoint.com/sites/project-x --folder 'Shared Documents/Sub Folder 1' --path 'C:\\MS365.jpg' Adds file MS365.jpg to site https://contoso.sharepoint.com/sites/project-x in folder Shared Documents specifying server-relative folder url m365 spo file add --webUrl https://contoso.sharepoint.com/sites/project-x --folder '/sites/project-x/Shared Documents' --path 'C:\\MS365.jpg' Adds file MS365.jpg to site https://contoso.sharepoint.com/sites/project-x in folder Shared Documents with specified content type m365 spo file add --webUrl https://contoso.sharepoint.com/sites/project-x --folder 'Shared Documents' --path 'C:\\MS365.jpg' --contentType 'Picture' Adds file MS365.jpg to site https://contoso.sharepoint.com/sites/project-x in folder Shared Documents , but checks out existing file before the upload m365 spo file add --webUrl https://contoso.sharepoint.com/sites/project-x --folder 'Shared Documents' --path 'C:\\MS365.jpg' --checkOut --checkInComment 'check in comment x' Adds file MS365.jpg to site https://contoso.sharepoint.com/sites/project-x in folder Shared Documents and approves it (when list moderation is enabled) m365 spo file add --webUrl https://contoso.sharepoint.com/sites/project-x --folder 'Shared Documents' --path 'C:\\MS365.jpg' --approve --approveComment 'approve comment x' Adds file MS365.jpg to site https://contoso.sharepoint.com/sites/project-x in folder Shared Documents and publishes it m365 spo file add --webUrl https://contoso.sharepoint.com/sites/project-x --folder 'Shared Documents' --path 'C:\\MS365.jpg' --publish --publishComment 'publish comment x' Adds file MS365.jpg to site https://contoso.sharepoint.com/sites/project-x in folder Shared Documents and changes single text field value of the list item m365 spo file add --webUrl https://contoso.sharepoint.com/sites/project-x --folder 'Shared Documents' --path 'C:\\MS365.jpg' --Title \"New Title\" Adds file MS365.jpg to site https://contoso.sharepoint.com/sites/project-x in folder Shared Documents and changes person/group field and DateTime field values m365 spo file add --webUrl https://contoso.sharepoint.com/sites/project-x --folder 'Shared Documents' --path 'C:\\MS365.jpg' --Editor \"[{'Key':'i:0#.f|membership|john.smith@contoso.com'}]\" --Modified '6/23/2018 10:15 PM' Adds file MS365.jpg to site https://contoso.sharepoint.com/sites/project-x in folder Shared Documents and changes hyperlink or picture field m365 spo file add --webUrl https://contoso.sharepoint.com/sites/project-x --folder 'Shared Documents' --path 'C:\\MS365.jpg' --URL 'https://contoso.com, Contoso' Adds file MS365.jpg to site https://contoso.sharepoint.com/sites/project-x in folder Shared Documents and changes taxonomy field m365 spo file add --webUrl https://contoso.sharepoint.com/sites/project-x --folder 'Shared Documents' --path 'C:\\MS365.jpg' --Topic \"HR services|c17baaeb-67cd-4378-9389-9d97a945c701\" Adds file MS365.jpg to site https://contoso.sharepoint.com/sites/project-x in folder Shared Documents and changes taxonomy multi-value field m365 spo file add --webUrl https://contoso.sharepoint.com/sites/project-x --folder 'Shared Documents' --path 'C:\\MS365.jpg' --Topic \"HR services|c17baaeb-67cd-4378-9389-9d97a945c701;Inclusion \uff06 Diversity|66a67671-ed89-44a7-9be4-e80c06b41f35\" Adds file MS365.jpg to site https://contoso.sharepoint.com/sites/project-x in folder Shared Documents and changes choice field and multi-choice field m365 spo file add --webUrl https://contoso.sharepoint.com/sites/project-x --folder 'Shared Documents' --path 'C:\\MS365.jpg' --ChoiceField1 'Option3' --MultiChoiceField1 'Option2;#Option3' Adds file MS365.jpg to site https://contoso.sharepoint.com/sites/project-x in folder Shared Documents and changes person/group field that allows multi-user selection m365 spo file add --webUrl https://contoso.sharepoint.com/sites/project-x --folder 'Shared Documents' --path 'C:\\MS365.jpg' --AllowedUsers \"[{'Key':'i:0#.f|membership|john.smith@contoso.com'},{'Key':'i:0#.f|membership|velin.georgiev@contoso.com'}]\" Adds file MS365.jpg to site https://contoso.sharepoint.com/sites/project-x in folder Shared Documents and changes yes/no field m365 spo file add --webUrl https://contoso.sharepoint.com/sites/project-x --folder 'Shared Documents' --path 'C:\\MS365.jpg' --HasCar true Adds file MS365.jpg to site https://contoso.sharepoint.com/sites/project-x in folder Shared Documents and changes number field and currency field m365 spo file add --webUrl https://contoso.sharepoint.com/sites/project-x --folder 'Shared Documents' --path 'C:\\MS365.jpg' --NumberField 100 --CurrencyField 20 Adds file MS365.jpg to site https://contoso.sharepoint.com/sites/project-x in folder Shared Documents and changes lookup field and multi-lookup field m365 spo file add --webUrl https://contoso.sharepoint.com/sites/project-x --folder 'Shared Documents' --path 'C:\\MS365.jpg' --LookupField 1 --MultiLookupField \"2;#;#3;#;#4;#\" More information \u00b6 Update file metadata with REST API using ValidateUpdateListItem method: https://robertschouten.com/2018/04/30/update-file-metadata-with-rest-api-using-validateupdatelistitem-method/ List Items System Update options in SharePoint Online: https://www.linkedin.com/pulse/list-items-system-update-options-sharepoint-online-andrew-koltyakov/","title":"file add"},{"location":"cmd/spo/file/file-add/#spo-file-add","text":"Uploads file to the specified folder","title":"spo file add"},{"location":"cmd/spo/file/file-add/#usage","text":"m365 spo file add [ options ]","title":"Usage"},{"location":"cmd/spo/file/file-add/#options","text":"-u, --webUrl <webUrl> The URL of the site where the file should be uploaded to -f, --folder <folder> Site-relative or server-relative URL to the folder where the file should be uploaded -p, --path <path> Local path to the file to upload -c, --contentType [contentType] Content type name or ID to assign to the file --checkOut [checkOut] If versioning is enabled, this will check out the file first if it exists, upload the file, then check it in again --checkInComment [checkInComment] Comment to set when checking the file in --approve [approve] Will automatically approve the uploaded file --approveComment [approveComment] Comment to set when approving the file --publish [publish] Will automatically publish the uploaded file --publishComment [publishComment] Comment to set when publishing the file -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/file/file-add/#remarks","text":"This command allows using unknown properties. Each property corresponds to the list item field that should be set when uploading the file.","title":"Remarks"},{"location":"cmd/spo/file/file-add/#examples","text":"Adds file MS365.jpg to site https://contoso.sharepoint.com/sites/project-x in folder Shared Documents m365 spo file add --webUrl https://contoso.sharepoint.com/sites/project-x --folder 'Shared Documents' --path 'C:\\MS365.jpg' Adds file MS365.jpg to site https://contoso.sharepoint.com/sites/project-x in sub folder Shared Documents/Sub Folder 1 m365 spo file add --webUrl https://contoso.sharepoint.com/sites/project-x --folder 'Shared Documents/Sub Folder 1' --path 'C:\\MS365.jpg' Adds file MS365.jpg to site https://contoso.sharepoint.com/sites/project-x in folder Shared Documents specifying server-relative folder url m365 spo file add --webUrl https://contoso.sharepoint.com/sites/project-x --folder '/sites/project-x/Shared Documents' --path 'C:\\MS365.jpg' Adds file MS365.jpg to site https://contoso.sharepoint.com/sites/project-x in folder Shared Documents with specified content type m365 spo file add --webUrl https://contoso.sharepoint.com/sites/project-x --folder 'Shared Documents' --path 'C:\\MS365.jpg' --contentType 'Picture' Adds file MS365.jpg to site https://contoso.sharepoint.com/sites/project-x in folder Shared Documents , but checks out existing file before the upload m365 spo file add --webUrl https://contoso.sharepoint.com/sites/project-x --folder 'Shared Documents' --path 'C:\\MS365.jpg' --checkOut --checkInComment 'check in comment x' Adds file MS365.jpg to site https://contoso.sharepoint.com/sites/project-x in folder Shared Documents and approves it (when list moderation is enabled) m365 spo file add --webUrl https://contoso.sharepoint.com/sites/project-x --folder 'Shared Documents' --path 'C:\\MS365.jpg' --approve --approveComment 'approve comment x' Adds file MS365.jpg to site https://contoso.sharepoint.com/sites/project-x in folder Shared Documents and publishes it m365 spo file add --webUrl https://contoso.sharepoint.com/sites/project-x --folder 'Shared Documents' --path 'C:\\MS365.jpg' --publish --publishComment 'publish comment x' Adds file MS365.jpg to site https://contoso.sharepoint.com/sites/project-x in folder Shared Documents and changes single text field value of the list item m365 spo file add --webUrl https://contoso.sharepoint.com/sites/project-x --folder 'Shared Documents' --path 'C:\\MS365.jpg' --Title \"New Title\" Adds file MS365.jpg to site https://contoso.sharepoint.com/sites/project-x in folder Shared Documents and changes person/group field and DateTime field values m365 spo file add --webUrl https://contoso.sharepoint.com/sites/project-x --folder 'Shared Documents' --path 'C:\\MS365.jpg' --Editor \"[{'Key':'i:0#.f|membership|john.smith@contoso.com'}]\" --Modified '6/23/2018 10:15 PM' Adds file MS365.jpg to site https://contoso.sharepoint.com/sites/project-x in folder Shared Documents and changes hyperlink or picture field m365 spo file add --webUrl https://contoso.sharepoint.com/sites/project-x --folder 'Shared Documents' --path 'C:\\MS365.jpg' --URL 'https://contoso.com, Contoso' Adds file MS365.jpg to site https://contoso.sharepoint.com/sites/project-x in folder Shared Documents and changes taxonomy field m365 spo file add --webUrl https://contoso.sharepoint.com/sites/project-x --folder 'Shared Documents' --path 'C:\\MS365.jpg' --Topic \"HR services|c17baaeb-67cd-4378-9389-9d97a945c701\" Adds file MS365.jpg to site https://contoso.sharepoint.com/sites/project-x in folder Shared Documents and changes taxonomy multi-value field m365 spo file add --webUrl https://contoso.sharepoint.com/sites/project-x --folder 'Shared Documents' --path 'C:\\MS365.jpg' --Topic \"HR services|c17baaeb-67cd-4378-9389-9d97a945c701;Inclusion \uff06 Diversity|66a67671-ed89-44a7-9be4-e80c06b41f35\" Adds file MS365.jpg to site https://contoso.sharepoint.com/sites/project-x in folder Shared Documents and changes choice field and multi-choice field m365 spo file add --webUrl https://contoso.sharepoint.com/sites/project-x --folder 'Shared Documents' --path 'C:\\MS365.jpg' --ChoiceField1 'Option3' --MultiChoiceField1 'Option2;#Option3' Adds file MS365.jpg to site https://contoso.sharepoint.com/sites/project-x in folder Shared Documents and changes person/group field that allows multi-user selection m365 spo file add --webUrl https://contoso.sharepoint.com/sites/project-x --folder 'Shared Documents' --path 'C:\\MS365.jpg' --AllowedUsers \"[{'Key':'i:0#.f|membership|john.smith@contoso.com'},{'Key':'i:0#.f|membership|velin.georgiev@contoso.com'}]\" Adds file MS365.jpg to site https://contoso.sharepoint.com/sites/project-x in folder Shared Documents and changes yes/no field m365 spo file add --webUrl https://contoso.sharepoint.com/sites/project-x --folder 'Shared Documents' --path 'C:\\MS365.jpg' --HasCar true Adds file MS365.jpg to site https://contoso.sharepoint.com/sites/project-x in folder Shared Documents and changes number field and currency field m365 spo file add --webUrl https://contoso.sharepoint.com/sites/project-x --folder 'Shared Documents' --path 'C:\\MS365.jpg' --NumberField 100 --CurrencyField 20 Adds file MS365.jpg to site https://contoso.sharepoint.com/sites/project-x in folder Shared Documents and changes lookup field and multi-lookup field m365 spo file add --webUrl https://contoso.sharepoint.com/sites/project-x --folder 'Shared Documents' --path 'C:\\MS365.jpg' --LookupField 1 --MultiLookupField \"2;#;#3;#;#4;#\"","title":"Examples"},{"location":"cmd/spo/file/file-add/#more-information","text":"Update file metadata with REST API using ValidateUpdateListItem method: https://robertschouten.com/2018/04/30/update-file-metadata-with-rest-api-using-validateupdatelistitem-method/ List Items System Update options in SharePoint Online: https://www.linkedin.com/pulse/list-items-system-update-options-sharepoint-online-andrew-koltyakov/","title":"More information"},{"location":"cmd/spo/file/file-checkin/","text":"spo file checkin \u00b6 Checks in specified file Usage \u00b6 m365 spo file checkin [ options ] Options \u00b6 -u, --webUrl <webUrl> The URL of the site where the file is located -f, --url [url] The server-relative URL of the file to retrieve. Specify either url or id but not both -i, --id [id] The UniqueId (GUID) of the file to retrieve. Specify either url or id but not both -t, --type [type] Type of the check in. Available values Minor,Major,Overwrite . Default is Major --comment [comment] Comment to set when checking the file in. It\\'s length must be less than 1024 letters. Default is empty string -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Checks in file with UniqueId b2307a39-e878-458b-bc90-03bc578531d6 located in site https://contoso.sharepoint.com/sites/project-x m365 spo file checkin --webUrl https://contoso.sharepoint.com/sites/project-x --id 'b2307a39-e878-458b-bc90-03bc578531d6' Checks in file with server-relative url /sites/project-x/documents/Test1.docx located in site https://contoso.sharepoint.com/sites/project-x m365 spo file checkin --webUrl https://contoso.sharepoint.com/sites/project-x --url '/sites/project-x/documents/Test1.docx' Checks in minor version of file with server-relative url /sites/project-x/documents/Test1.docx located in site https://contoso.sharepoint.com/sites/project-x m365 spo file checkin --webUrl https://contoso.sharepoint.com/sites/project-x --url '/sites/project-x/documents/Test1.docx' --type Minor Checks in file /sites/project-x/documents/Test1.docx with comment located in site https://contoso.sharepoint.com/sites/project-x m365 spo file checkin --webUrl https://contoso.sharepoint.com/sites/project-x --url '/sites/project-x/documents/Test1.docx' --comment 'approved'","title":"file checkin"},{"location":"cmd/spo/file/file-checkin/#spo-file-checkin","text":"Checks in specified file","title":"spo file checkin"},{"location":"cmd/spo/file/file-checkin/#usage","text":"m365 spo file checkin [ options ]","title":"Usage"},{"location":"cmd/spo/file/file-checkin/#options","text":"-u, --webUrl <webUrl> The URL of the site where the file is located -f, --url [url] The server-relative URL of the file to retrieve. Specify either url or id but not both -i, --id [id] The UniqueId (GUID) of the file to retrieve. Specify either url or id but not both -t, --type [type] Type of the check in. Available values Minor,Major,Overwrite . Default is Major --comment [comment] Comment to set when checking the file in. It\\'s length must be less than 1024 letters. Default is empty string -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/file/file-checkin/#examples","text":"Checks in file with UniqueId b2307a39-e878-458b-bc90-03bc578531d6 located in site https://contoso.sharepoint.com/sites/project-x m365 spo file checkin --webUrl https://contoso.sharepoint.com/sites/project-x --id 'b2307a39-e878-458b-bc90-03bc578531d6' Checks in file with server-relative url /sites/project-x/documents/Test1.docx located in site https://contoso.sharepoint.com/sites/project-x m365 spo file checkin --webUrl https://contoso.sharepoint.com/sites/project-x --url '/sites/project-x/documents/Test1.docx' Checks in minor version of file with server-relative url /sites/project-x/documents/Test1.docx located in site https://contoso.sharepoint.com/sites/project-x m365 spo file checkin --webUrl https://contoso.sharepoint.com/sites/project-x --url '/sites/project-x/documents/Test1.docx' --type Minor Checks in file /sites/project-x/documents/Test1.docx with comment located in site https://contoso.sharepoint.com/sites/project-x m365 spo file checkin --webUrl https://contoso.sharepoint.com/sites/project-x --url '/sites/project-x/documents/Test1.docx' --comment 'approved'","title":"Examples"},{"location":"cmd/spo/file/file-checkout/","text":"spo file checkout \u00b6 Checks out specified file Usage \u00b6 m365 spo file checkout [ options ] Options \u00b6 -u, --webUrl <webUrl> The URL of the site where the file is located -f, --url [url] The server-relative URL of the file to retrieve. Specify either url or id but not both -i, --id [id] The UniqueId (GUID) of the file to retrieve. Specify either url or id but not both -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Checks out file with UniqueId b2307a39-e878-458b-bc90-03bc578531d6 located in site https://contoso.sharepoint.com/sites/project-x m365 spo file checkout --webUrl https://contoso.sharepoint.com/sites/project-x --id 'b2307a39-e878-458b-bc90-03bc578531d6' Checks out file with server-relative url /sites/project-x/documents/Test1.docx located in site https://contoso.sharepoint.com/sites/project-x m365 spo file checkout --webUrl https://contoso.sharepoint.com/sites/project-x --url '/sites/project-x/documents/Test1.docx'","title":"file checkout"},{"location":"cmd/spo/file/file-checkout/#spo-file-checkout","text":"Checks out specified file","title":"spo file checkout"},{"location":"cmd/spo/file/file-checkout/#usage","text":"m365 spo file checkout [ options ]","title":"Usage"},{"location":"cmd/spo/file/file-checkout/#options","text":"-u, --webUrl <webUrl> The URL of the site where the file is located -f, --url [url] The server-relative URL of the file to retrieve. Specify either url or id but not both -i, --id [id] The UniqueId (GUID) of the file to retrieve. Specify either url or id but not both -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/file/file-checkout/#examples","text":"Checks out file with UniqueId b2307a39-e878-458b-bc90-03bc578531d6 located in site https://contoso.sharepoint.com/sites/project-x m365 spo file checkout --webUrl https://contoso.sharepoint.com/sites/project-x --id 'b2307a39-e878-458b-bc90-03bc578531d6' Checks out file with server-relative url /sites/project-x/documents/Test1.docx located in site https://contoso.sharepoint.com/sites/project-x m365 spo file checkout --webUrl https://contoso.sharepoint.com/sites/project-x --url '/sites/project-x/documents/Test1.docx'","title":"Examples"},{"location":"cmd/spo/file/file-copy/","text":"spo file copy \u00b6 Copies a file to another location Usage \u00b6 m365 spo file copy [ options ] Options \u00b6 -u, --webUrl <webUrl> The URL of the site where the file is located -s, --sourceUrl <sourceUrl> Site-relative URL of the file to copy -t, --targetUrl <targetUrl> Server-relative URL where to copy the file --deleteIfAlreadyExists If a file already exists at the targetUrl, it will be moved to the recycle bin. If omitted, the copy operation will be canceled if the file already exists at the targetUrl location --allowSchemaMismatch Ignores any missing fields in the target document library and copies the file anyway -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 When you copy a file using the spo file copy command, only the latest version of the file is copied. Examples \u00b6 Copy file to a document library in another site collection m365 spo file copy --webUrl https://contoso.sharepoint.com/sites/test1 --sourceUrl /Shared%20Documents/sp1.pdf --targetUrl /sites/test2/Shared%20Documents/ Copy file to a document library in the same site collection m365 spo file copy --webUrl https://contoso.sharepoint.com/sites/test1 --sourceUrl /Shared%20Documents/sp1.pdf --targetUrl /sites/test1/HRDocuments/ Copy file to a document library in another site collection. If a file with the same name already exists in the target document library, move it to the recycle bin m365 spo file copy --webUrl https://contoso.sharepoint.com/sites/test1 --sourceUrl /Shared%20Documents/sp1.pdf --targetUrl /sites/test2/Shared%20Documents/ --deleteIfAlreadyExists Copy file to a document library in another site collection. Will ignore any missing fields in the target destination and copy anyway m365 spo file copy --webUrl https://contoso.sharepoint.com/sites/test1 --sourceUrl /Shared%20Documents/sp1.pdf --targetUrl /sites/test2/Shared%20Documents/ --allowSchemaMismatch More information \u00b6 Copy items from a SharePoint document library: https://support.office.com/en-us/article/move-or-copy-items-from-a-sharepoint-document-library-00e2f483-4df3-46be-a861-1f5f0c1a87bc","title":"file copy"},{"location":"cmd/spo/file/file-copy/#spo-file-copy","text":"Copies a file to another location","title":"spo file copy"},{"location":"cmd/spo/file/file-copy/#usage","text":"m365 spo file copy [ options ]","title":"Usage"},{"location":"cmd/spo/file/file-copy/#options","text":"-u, --webUrl <webUrl> The URL of the site where the file is located -s, --sourceUrl <sourceUrl> Site-relative URL of the file to copy -t, --targetUrl <targetUrl> Server-relative URL where to copy the file --deleteIfAlreadyExists If a file already exists at the targetUrl, it will be moved to the recycle bin. If omitted, the copy operation will be canceled if the file already exists at the targetUrl location --allowSchemaMismatch Ignores any missing fields in the target document library and copies the file anyway -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/file/file-copy/#remarks","text":"When you copy a file using the spo file copy command, only the latest version of the file is copied.","title":"Remarks"},{"location":"cmd/spo/file/file-copy/#examples","text":"Copy file to a document library in another site collection m365 spo file copy --webUrl https://contoso.sharepoint.com/sites/test1 --sourceUrl /Shared%20Documents/sp1.pdf --targetUrl /sites/test2/Shared%20Documents/ Copy file to a document library in the same site collection m365 spo file copy --webUrl https://contoso.sharepoint.com/sites/test1 --sourceUrl /Shared%20Documents/sp1.pdf --targetUrl /sites/test1/HRDocuments/ Copy file to a document library in another site collection. If a file with the same name already exists in the target document library, move it to the recycle bin m365 spo file copy --webUrl https://contoso.sharepoint.com/sites/test1 --sourceUrl /Shared%20Documents/sp1.pdf --targetUrl /sites/test2/Shared%20Documents/ --deleteIfAlreadyExists Copy file to a document library in another site collection. Will ignore any missing fields in the target destination and copy anyway m365 spo file copy --webUrl https://contoso.sharepoint.com/sites/test1 --sourceUrl /Shared%20Documents/sp1.pdf --targetUrl /sites/test2/Shared%20Documents/ --allowSchemaMismatch","title":"Examples"},{"location":"cmd/spo/file/file-copy/#more-information","text":"Copy items from a SharePoint document library: https://support.office.com/en-us/article/move-or-copy-items-from-a-sharepoint-document-library-00e2f483-4df3-46be-a861-1f5f0c1a87bc","title":"More information"},{"location":"cmd/spo/file/file-get/","text":"spo file get \u00b6 Gets information about the specified file Usage \u00b6 m365 spo file get [ options ] Options \u00b6 -w, --webUrl <webUrl> The URL of the site where the file is located -u, --url [url] The server-relative URL of the file to retrieve. Specify either url or id but not both -i, --id [id] The UniqueId (GUID) of the file to retrieve. Specify either url or id but not both --asString Set to retrieve the contents of the specified file as string --asListItem Set to retrieve the underlying list item --asFile Set to save the file to the path specified in the path option -p, --path [path] The local path where to save the retrieved file. Must be specified when the --asFile option is used -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Get file properties for file with id (UniqueId) b2307a39-e878-458b-bc90-03bc578531d6 located in site https://contoso.sharepoint.com/sites/project-x m365 spo file get --webUrl https://contoso.sharepoint.com/sites/project-x --id 'b2307a39-e878-458b-bc90-03bc578531d6' Get contents of the file with id (UniqueId) b2307a39-e878-458b-bc90-03bc578531d6 located in site https://contoso.sharepoint.com/sites/project-x m365 spo file get --webUrl https://contoso.sharepoint.com/sites/project-x --id 'b2307a39-e878-458b-bc90-03bc578531d6' --asString Get list item properties for file with id (UniqueId) b2307a39-e878-458b-bc90-03bc578531d6 located in site https://contoso.sharepoint.com/sites/project-x m365 spo file get --webUrl https://contoso.sharepoint.com/sites/project-x --id 'b2307a39-e878-458b-bc90-03bc578531d6' --asListItem Save file with id (UniqueId) b2307a39-e878-458b-bc90-03bc578531d6 located in site https://contoso.sharepoint.com/sites/project-x to local file /Users/user/documents/SavedAsTest1.docx m365 spo file get --webUrl https://contoso.sharepoint.com/sites/project-x --id 'b2307a39-e878-458b-bc90-03bc578531d6' --asFile --path /Users/user/documents/SavedAsTest1.docx Return file properties for file with server-relative url /sites/project-x/documents/Test1.docx located in site https://contoso.sharepoint.com/sites/project-x m365 spo file get --webUrl https://contoso.sharepoint.com/sites/project-x --url '/sites/project-x/documents/Test1.docx' Return file as string for file with server-relative url /sites/project-x/documents/Test1.docx located in site https://contoso.sharepoint.com/sites/project-x m365 spo file get --webUrl https://contoso.sharepoint.com/sites/project-x --url '/sites/project-x/documents/Test1.docx' --asString Return list item properties for file with server-relative url /sites/project-x/documents/Test1.docx located in site https://contoso.sharepoint.com/sites/project-x m365 spo file get --webUrl https://contoso.sharepoint.com/sites/project-x --url '/sites/project-x/documents/Test1.docx' --asListItem Save file with server-relative url /sites/project-x/documents/Test1.docx located in site https://contoso.sharepoint.com/sites/project-x to local file /Users/user/documentsSavedAsTest1.docx m365 spo file get --webUrl https://contoso.sharepoint.com/sites/project-x --url '/sites/project-x/documents/Test1.docx' --asFile --path /Users/user/documents/SavedAsTest1.docx","title":"file get"},{"location":"cmd/spo/file/file-get/#spo-file-get","text":"Gets information about the specified file","title":"spo file get"},{"location":"cmd/spo/file/file-get/#usage","text":"m365 spo file get [ options ]","title":"Usage"},{"location":"cmd/spo/file/file-get/#options","text":"-w, --webUrl <webUrl> The URL of the site where the file is located -u, --url [url] The server-relative URL of the file to retrieve. Specify either url or id but not both -i, --id [id] The UniqueId (GUID) of the file to retrieve. Specify either url or id but not both --asString Set to retrieve the contents of the specified file as string --asListItem Set to retrieve the underlying list item --asFile Set to save the file to the path specified in the path option -p, --path [path] The local path where to save the retrieved file. Must be specified when the --asFile option is used -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/file/file-get/#examples","text":"Get file properties for file with id (UniqueId) b2307a39-e878-458b-bc90-03bc578531d6 located in site https://contoso.sharepoint.com/sites/project-x m365 spo file get --webUrl https://contoso.sharepoint.com/sites/project-x --id 'b2307a39-e878-458b-bc90-03bc578531d6' Get contents of the file with id (UniqueId) b2307a39-e878-458b-bc90-03bc578531d6 located in site https://contoso.sharepoint.com/sites/project-x m365 spo file get --webUrl https://contoso.sharepoint.com/sites/project-x --id 'b2307a39-e878-458b-bc90-03bc578531d6' --asString Get list item properties for file with id (UniqueId) b2307a39-e878-458b-bc90-03bc578531d6 located in site https://contoso.sharepoint.com/sites/project-x m365 spo file get --webUrl https://contoso.sharepoint.com/sites/project-x --id 'b2307a39-e878-458b-bc90-03bc578531d6' --asListItem Save file with id (UniqueId) b2307a39-e878-458b-bc90-03bc578531d6 located in site https://contoso.sharepoint.com/sites/project-x to local file /Users/user/documents/SavedAsTest1.docx m365 spo file get --webUrl https://contoso.sharepoint.com/sites/project-x --id 'b2307a39-e878-458b-bc90-03bc578531d6' --asFile --path /Users/user/documents/SavedAsTest1.docx Return file properties for file with server-relative url /sites/project-x/documents/Test1.docx located in site https://contoso.sharepoint.com/sites/project-x m365 spo file get --webUrl https://contoso.sharepoint.com/sites/project-x --url '/sites/project-x/documents/Test1.docx' Return file as string for file with server-relative url /sites/project-x/documents/Test1.docx located in site https://contoso.sharepoint.com/sites/project-x m365 spo file get --webUrl https://contoso.sharepoint.com/sites/project-x --url '/sites/project-x/documents/Test1.docx' --asString Return list item properties for file with server-relative url /sites/project-x/documents/Test1.docx located in site https://contoso.sharepoint.com/sites/project-x m365 spo file get --webUrl https://contoso.sharepoint.com/sites/project-x --url '/sites/project-x/documents/Test1.docx' --asListItem Save file with server-relative url /sites/project-x/documents/Test1.docx located in site https://contoso.sharepoint.com/sites/project-x to local file /Users/user/documentsSavedAsTest1.docx m365 spo file get --webUrl https://contoso.sharepoint.com/sites/project-x --url '/sites/project-x/documents/Test1.docx' --asFile --path /Users/user/documents/SavedAsTest1.docx","title":"Examples"},{"location":"cmd/spo/file/file-list/","text":"spo file list \u00b6 Gets all files within the specified folder and site Usage \u00b6 m365 spo file list [ options ] Options \u00b6 -u, --webUrl <webUrl> The URL of the site where the folder from which to retrieve files is located -f, --folder <folder> The server- or site-relative URL of the folder from which to retrieve files -r, --recursive Set to retrieve files from subfolders -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Return all files from folder Shared Documents located in site https://contoso.sharepoint.com/sites/project-x m365 spo file list --webUrl https://contoso.sharepoint.com/sites/project-x --folder 'Shared Documents' Return all files from the folder Shared Documents and all the sub-folders of Shared Documents located in site https://contoso.sharepoint.com/sites/project-x m365 spo file list --webUrl https://contoso.sharepoint.com/sites/project-x --folder 'Shared Documents' --recursive","title":"file list"},{"location":"cmd/spo/file/file-list/#spo-file-list","text":"Gets all files within the specified folder and site","title":"spo file list"},{"location":"cmd/spo/file/file-list/#usage","text":"m365 spo file list [ options ]","title":"Usage"},{"location":"cmd/spo/file/file-list/#options","text":"-u, --webUrl <webUrl> The URL of the site where the folder from which to retrieve files is located -f, --folder <folder> The server- or site-relative URL of the folder from which to retrieve files -r, --recursive Set to retrieve files from subfolders -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/file/file-list/#examples","text":"Return all files from folder Shared Documents located in site https://contoso.sharepoint.com/sites/project-x m365 spo file list --webUrl https://contoso.sharepoint.com/sites/project-x --folder 'Shared Documents' Return all files from the folder Shared Documents and all the sub-folders of Shared Documents located in site https://contoso.sharepoint.com/sites/project-x m365 spo file list --webUrl https://contoso.sharepoint.com/sites/project-x --folder 'Shared Documents' --recursive","title":"Examples"},{"location":"cmd/spo/file/file-move/","text":"spo file move \u00b6 Moves a file to another location Usage \u00b6 m365 spo file move [ options ] Options \u00b6 -u, --webUrl <webUrl> The URL of the site where the file is located -s, --sourceUrl <sourceUrl> Site-relative URL of the file to move -t, --targetUrl <targetUrl> Server-relative URL where to move the file --deleteIfAlreadyExists If a file already exists at the targetUrl, it will be moved to the recycle bin. If omitted, the move operation will be canceled if the file already exists at the targetUrl location --allowSchemaMismatch Ignores any missing fields in the target document library and moves the file anyway -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 When you move a file using the spo file move command, all of the versions are being moved. Examples \u00b6 Move file to a document library in another site collection m365 spo file move --webUrl https://contoso.sharepoint.com/sites/test1 --sourceUrl /Shared%20Documents/sp1.pdf --targetUrl /sites/test2/Shared%20Documents/ Move file to a document library in the same site collection m365 spo file move --webUrl https://contoso.sharepoint.com/sites/test1 --sourceUrl /Shared%20Documents/sp1.pdf --targetUrl /sites/test1/HRDocuments/ Move file to a document library in another site collection. If a file with the same name already exists in the target document library, move it to the recycle bin m365 spo file move --webUrl https://contoso.sharepoint.com/sites/test1 --sourceUrl /Shared%20Documents/sp1.pdf --targetUrl /sites/test2/Shared%20Documents/ --deleteIfAlreadyExists Move file to a document library in another site collection. Allow for schema mismatch sh m365 spo file move --webUrl https://contoso.sharepoint.com/sites/test1 --sourceUrl /Shared%20Documents/sp1.pdf --targetUrl /sites/test2/Shared%20Documents/ --allowSchemaMismatch More information \u00b6 Move items from a SharePoint document library: https://support.office.com/en-us/article/move-or-copy-items-from-a-sharepoint-document-library-00e2f483-4df3-46be-a861-1f5f0c1a87bc","title":"file move"},{"location":"cmd/spo/file/file-move/#spo-file-move","text":"Moves a file to another location","title":"spo file move"},{"location":"cmd/spo/file/file-move/#usage","text":"m365 spo file move [ options ]","title":"Usage"},{"location":"cmd/spo/file/file-move/#options","text":"-u, --webUrl <webUrl> The URL of the site where the file is located -s, --sourceUrl <sourceUrl> Site-relative URL of the file to move -t, --targetUrl <targetUrl> Server-relative URL where to move the file --deleteIfAlreadyExists If a file already exists at the targetUrl, it will be moved to the recycle bin. If omitted, the move operation will be canceled if the file already exists at the targetUrl location --allowSchemaMismatch Ignores any missing fields in the target document library and moves the file anyway -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/file/file-move/#remarks","text":"When you move a file using the spo file move command, all of the versions are being moved.","title":"Remarks"},{"location":"cmd/spo/file/file-move/#examples","text":"Move file to a document library in another site collection m365 spo file move --webUrl https://contoso.sharepoint.com/sites/test1 --sourceUrl /Shared%20Documents/sp1.pdf --targetUrl /sites/test2/Shared%20Documents/ Move file to a document library in the same site collection m365 spo file move --webUrl https://contoso.sharepoint.com/sites/test1 --sourceUrl /Shared%20Documents/sp1.pdf --targetUrl /sites/test1/HRDocuments/ Move file to a document library in another site collection. If a file with the same name already exists in the target document library, move it to the recycle bin m365 spo file move --webUrl https://contoso.sharepoint.com/sites/test1 --sourceUrl /Shared%20Documents/sp1.pdf --targetUrl /sites/test2/Shared%20Documents/ --deleteIfAlreadyExists Move file to a document library in another site collection. Allow for schema mismatch sh m365 spo file move --webUrl https://contoso.sharepoint.com/sites/test1 --sourceUrl /Shared%20Documents/sp1.pdf --targetUrl /sites/test2/Shared%20Documents/ --allowSchemaMismatch","title":"Examples"},{"location":"cmd/spo/file/file-move/#more-information","text":"Move items from a SharePoint document library: https://support.office.com/en-us/article/move-or-copy-items-from-a-sharepoint-document-library-00e2f483-4df3-46be-a861-1f5f0c1a87bc","title":"More information"},{"location":"cmd/spo/file/file-remove/","text":"spo file remove \u00b6 Removes the specified file Usage \u00b6 m365 spo file remove [ options ] Options \u00b6 -w, --webUrl <webUrl> URL of the site where the file to remove is located -i, --id [id] The ID of the file to remove. Specify either id or url but not both -u, --url [url] The server- or site-relative URL of the file to remove. Specify either id or url but not both --recycle Recycle the file instead of actually deleting it --confirm Don't prompt for confirming removing the file -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Remove the file with ID 0cd891ef-afce-4e55-b836-fce03286cccf located in site https://contoso.sharepoint.com/sites/project-x m365 spo file remove --webUrl https://contoso.sharepoint.com/sites/project-x --id 0cd891ef-afce-4e55-b836-fce03286cccf Remove the file with site-relative URL SharedDocuments/Test.docx from located in site https://contoso.sharepoint.com/sites/project-x m365 spo file remove --webUrl https://contoso.sharepoint.com/sites/project-x --url SharedDocuments/Test.docx Move the file with server-relative URL /sites/project-x/SharedDocuments/Test.docx located in site https://contoso.sharepoint.com/sites/project-x to the recycle bin m365 spo file remove --webUrl https://contoso.sharepoint.com/sites/project-x --url /sites/project-x/SharedDocuments/Test.docx --recycle","title":"file remove"},{"location":"cmd/spo/file/file-remove/#spo-file-remove","text":"Removes the specified file","title":"spo file remove"},{"location":"cmd/spo/file/file-remove/#usage","text":"m365 spo file remove [ options ]","title":"Usage"},{"location":"cmd/spo/file/file-remove/#options","text":"-w, --webUrl <webUrl> URL of the site where the file to remove is located -i, --id [id] The ID of the file to remove. Specify either id or url but not both -u, --url [url] The server- or site-relative URL of the file to remove. Specify either id or url but not both --recycle Recycle the file instead of actually deleting it --confirm Don't prompt for confirming removing the file -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/file/file-remove/#examples","text":"Remove the file with ID 0cd891ef-afce-4e55-b836-fce03286cccf located in site https://contoso.sharepoint.com/sites/project-x m365 spo file remove --webUrl https://contoso.sharepoint.com/sites/project-x --id 0cd891ef-afce-4e55-b836-fce03286cccf Remove the file with site-relative URL SharedDocuments/Test.docx from located in site https://contoso.sharepoint.com/sites/project-x m365 spo file remove --webUrl https://contoso.sharepoint.com/sites/project-x --url SharedDocuments/Test.docx Move the file with server-relative URL /sites/project-x/SharedDocuments/Test.docx located in site https://contoso.sharepoint.com/sites/project-x to the recycle bin m365 spo file remove --webUrl https://contoso.sharepoint.com/sites/project-x --url /sites/project-x/SharedDocuments/Test.docx --recycle","title":"Examples"},{"location":"cmd/spo/file/file-rename/","text":"spo file rename \u00b6 Renames a file Usage \u00b6 m365 spo file rename [ options ] Options \u00b6 -u, --webUrl <webUrl> The URL of the site where the file is located -s, --sourceUrl <sourceUrl> Site-relative URL of the file to rename -t, --targetFileName <targetFileName> New file name of the file --force If a file already exists with target file name, it will be moved to the recycle bin. If omitted, the rename operation will be canceled if a file already exists with the specified file name -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 If you try to rename a file without the --force flag and a file with this name already exists, the operation will be cancelled. Examples \u00b6 Renames a file with server-relative URL /Shared Documents/Test1.docx located in site https://contoso.sharepoint.com/sites/project-x to Test2.docx m365 spo file rename --webUrl https://contoso.sharepoint.com/sites/project-x --sourceUrl '/Shared Documents/Test1.docx' --targetFileName 'Test2.docx' Renames a file with server-relative URL /Shared Documents/Test1.docx located in site https://contoso.sharepoint.com/sites/project-x to Test2.docx . If the file with the target file name already exists, this file will be moved to the recycle bin m365 spo file rename --webUrl https://contoso.sharepoint.com/sites/project-x --sourceUrl '/Shared Documents/Test1.docx' --targetFileName 'Test2.docx' --force","title":"file rename"},{"location":"cmd/spo/file/file-rename/#spo-file-rename","text":"Renames a file","title":"spo file rename"},{"location":"cmd/spo/file/file-rename/#usage","text":"m365 spo file rename [ options ]","title":"Usage"},{"location":"cmd/spo/file/file-rename/#options","text":"-u, --webUrl <webUrl> The URL of the site where the file is located -s, --sourceUrl <sourceUrl> Site-relative URL of the file to rename -t, --targetFileName <targetFileName> New file name of the file --force If a file already exists with target file name, it will be moved to the recycle bin. If omitted, the rename operation will be canceled if a file already exists with the specified file name -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/file/file-rename/#remarks","text":"If you try to rename a file without the --force flag and a file with this name already exists, the operation will be cancelled.","title":"Remarks"},{"location":"cmd/spo/file/file-rename/#examples","text":"Renames a file with server-relative URL /Shared Documents/Test1.docx located in site https://contoso.sharepoint.com/sites/project-x to Test2.docx m365 spo file rename --webUrl https://contoso.sharepoint.com/sites/project-x --sourceUrl '/Shared Documents/Test1.docx' --targetFileName 'Test2.docx' Renames a file with server-relative URL /Shared Documents/Test1.docx located in site https://contoso.sharepoint.com/sites/project-x to Test2.docx . If the file with the target file name already exists, this file will be moved to the recycle bin m365 spo file rename --webUrl https://contoso.sharepoint.com/sites/project-x --sourceUrl '/Shared Documents/Test1.docx' --targetFileName 'Test2.docx' --force","title":"Examples"},{"location":"cmd/spo/file/file-roleassignment-add/","text":"spo file roleassignment add \u00b6 Adds a role assignment to the specified file. Usage \u00b6 m365 spo file roleassignment add [ options ] Options \u00b6 -u, --webUrl <webUrl> URL of the site where the file is located --fileUrl [fileUrl] The server-relative URL of the file to retrieve. Specify either fileUrl or fileId but not both i, --fileId [fileId] The UniqueId (GUID) of the file to retrieve. Specify either fileUrl or fileId but not both --principalId [principalId] The SharePoint Id of the principal. It may be either a user id or group id to add a role assignment for. Specify either upn, groupName or principalId. --upn [upn] upn/email of user to assign role to. Specify either upn, groupName or principalId. --groupName [groupName] The group name of Azure AD or SharePoint group. Specify either upn, groupName or principalId. --roleDefinitionId [roleDefinitionId] ID of role definition. Specify either roleDefinitionId or roleDefinitionName but not both --roleDefinitionName [roleDefinitionName] Enter the name of a role definition, like 'Contribute', 'Read', etc. Specify either roleDefinitionId or roleDefinitionName but not both -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Adds a role assignment to a file with a specified id. It will use a principal id and a specific role definition id. m365 spo file roleassignment add --webUrl \"https://contoso.sharepoint.com/sites/project-x\" --fileId \"b2307a39-e878-458b-bc90-03bc578531d6\" --principalId 11 --roleDefinitionId 1073741829 Adds a role assignment to a file with a specified site-relative URL for a specific upn and a role definition name. m365 spo file roleassignment add --webUrl \"https://contoso.sharepoint.com/sites/project-x\" --fileUrl \"Shared Documents/Test1.docx\" --upn \"testuser@tenant.onmicrosoft.com\" --roleDefinitionName \"Full Control\" Adds a role assignment to a file with a specified server-relative URL the for a specific group and a role definition name. m365 spo file roleassignment add --webUrl \"https://contoso.sharepoint.com/sites/project-x\" --fileUrl \"/sites/project-x/documents/Test1.docx\" --upn \"testuser@tenant.onmicrosoft.com\" --roleDefinitionName \"Read\"","title":"file roleassignment add"},{"location":"cmd/spo/file/file-roleassignment-add/#spo-file-roleassignment-add","text":"Adds a role assignment to the specified file.","title":"spo file roleassignment add"},{"location":"cmd/spo/file/file-roleassignment-add/#usage","text":"m365 spo file roleassignment add [ options ]","title":"Usage"},{"location":"cmd/spo/file/file-roleassignment-add/#options","text":"-u, --webUrl <webUrl> URL of the site where the file is located --fileUrl [fileUrl] The server-relative URL of the file to retrieve. Specify either fileUrl or fileId but not both i, --fileId [fileId] The UniqueId (GUID) of the file to retrieve. Specify either fileUrl or fileId but not both --principalId [principalId] The SharePoint Id of the principal. It may be either a user id or group id to add a role assignment for. Specify either upn, groupName or principalId. --upn [upn] upn/email of user to assign role to. Specify either upn, groupName or principalId. --groupName [groupName] The group name of Azure AD or SharePoint group. Specify either upn, groupName or principalId. --roleDefinitionId [roleDefinitionId] ID of role definition. Specify either roleDefinitionId or roleDefinitionName but not both --roleDefinitionName [roleDefinitionName] Enter the name of a role definition, like 'Contribute', 'Read', etc. Specify either roleDefinitionId or roleDefinitionName but not both -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/file/file-roleassignment-add/#examples","text":"Adds a role assignment to a file with a specified id. It will use a principal id and a specific role definition id. m365 spo file roleassignment add --webUrl \"https://contoso.sharepoint.com/sites/project-x\" --fileId \"b2307a39-e878-458b-bc90-03bc578531d6\" --principalId 11 --roleDefinitionId 1073741829 Adds a role assignment to a file with a specified site-relative URL for a specific upn and a role definition name. m365 spo file roleassignment add --webUrl \"https://contoso.sharepoint.com/sites/project-x\" --fileUrl \"Shared Documents/Test1.docx\" --upn \"testuser@tenant.onmicrosoft.com\" --roleDefinitionName \"Full Control\" Adds a role assignment to a file with a specified server-relative URL the for a specific group and a role definition name. m365 spo file roleassignment add --webUrl \"https://contoso.sharepoint.com/sites/project-x\" --fileUrl \"/sites/project-x/documents/Test1.docx\" --upn \"testuser@tenant.onmicrosoft.com\" --roleDefinitionName \"Read\"","title":"Examples"},{"location":"cmd/spo/file/file-roleassignment-remove/","text":"spo file roleassignment remove \u00b6 Removes a role assignment from a file. Usage \u00b6 m365 spo file roleassignment remove [ options ] Options \u00b6 -u, --webUrl <webUrl> URL of the site where the file is located. --fileUrl [fileUrl] The server-relative URL of the file. Specify either fileUrl or fileId but not both. -i, --fileId [fileId] The UniqueId (GUID) of the file. Specify either fileUrl or fileId but not both. --principalId [principalId] The SharePoint Id of the principal. It may be either a user id or group id. Specify either upn , groupName , or principalId . --upn [upn] Upn/email of the user. Specify either upn , groupName , or principalId . --groupName [groupName] The group name of an Azure AD or SharePoint group. Specify either upn , groupName , or principalId . --confirm [confirm] Don't prompt for confirmation. -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Remove a role assignment by principal id from a file by id m365 spo file roleassignment remove --webUrl \"https://contoso.sharepoint.com/sites/contoso-sales\" --fileId \"b2307a39-e878-458b-bc90-03bc578531d6\" --principalId 2 Remove a role assignment by upn from a file by url m365 spo file roleassignment remove --webUrl \"https://contoso.sharepoint.com/sites/contoso-sales\" --fileUrl \"/sites/contoso-sales/documents/Test1.docx\" --upn \"user1@contoso.onmicrosoft.com\" Remove a role assignment by group name from a file by id m365 spo file roleassignment remove --webUrl \"https://contoso.sharepoint.com/sites/contoso-sales\" --fileId \"b2307a39-e878-458b-bc90-03bc578531d6\" --groupName \"saleGroup\"","title":"file roleassignment remove"},{"location":"cmd/spo/file/file-roleassignment-remove/#spo-file-roleassignment-remove","text":"Removes a role assignment from a file.","title":"spo file roleassignment remove"},{"location":"cmd/spo/file/file-roleassignment-remove/#usage","text":"m365 spo file roleassignment remove [ options ]","title":"Usage"},{"location":"cmd/spo/file/file-roleassignment-remove/#options","text":"-u, --webUrl <webUrl> URL of the site where the file is located. --fileUrl [fileUrl] The server-relative URL of the file. Specify either fileUrl or fileId but not both. -i, --fileId [fileId] The UniqueId (GUID) of the file. Specify either fileUrl or fileId but not both. --principalId [principalId] The SharePoint Id of the principal. It may be either a user id or group id. Specify either upn , groupName , or principalId . --upn [upn] Upn/email of the user. Specify either upn , groupName , or principalId . --groupName [groupName] The group name of an Azure AD or SharePoint group. Specify either upn , groupName , or principalId . --confirm [confirm] Don't prompt for confirmation. -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/file/file-roleassignment-remove/#examples","text":"Remove a role assignment by principal id from a file by id m365 spo file roleassignment remove --webUrl \"https://contoso.sharepoint.com/sites/contoso-sales\" --fileId \"b2307a39-e878-458b-bc90-03bc578531d6\" --principalId 2 Remove a role assignment by upn from a file by url m365 spo file roleassignment remove --webUrl \"https://contoso.sharepoint.com/sites/contoso-sales\" --fileUrl \"/sites/contoso-sales/documents/Test1.docx\" --upn \"user1@contoso.onmicrosoft.com\" Remove a role assignment by group name from a file by id m365 spo file roleassignment remove --webUrl \"https://contoso.sharepoint.com/sites/contoso-sales\" --fileId \"b2307a39-e878-458b-bc90-03bc578531d6\" --groupName \"saleGroup\"","title":"Examples"},{"location":"cmd/spo/file/file-roleinheritance-break/","text":"spo file roleinheritance break \u00b6 Breaks inheritance of a file. Keeping existing permissions is the default behavior. Usage \u00b6 m365 spo file roleinheritance break [ options ] Options \u00b6 -u, --webUrl <webUrl> URL of the site where the file is located --fileUrl [fileUrl] The server-relative URL of the file. Specify either fileUrl or fileId but not both i, --fileId [fileId] The UniqueId (GUID) of the file. Specify either fileUrl or fileId but not both -c, --clearExistingPermissions Clear all existing permissions from the file --confirm Don't prompt for confirmation -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Break the inheritance of a file with a specific id (UniqueId). m365 spo file roleinheritance break --webUrl \"https://contoso.sharepoint.com/sites/project-x\" --fileId \"b2307a39-e878-458b-bc90-03bc578531d6\" Break the inheritance of a file with a specific id (UniqueId) and clear all existing permissions. m365 spo file roleinheritance break --webUrl \"https://contoso.sharepoint.com/sites/project-x\" --fileId \"b2307a39-e878-458b-bc90-03bc578531d6\" --clearExistingPermissions Break the inheritance of a file with a specific server-relative URL. m365 spo file roleinheritance break --webUrl \"https://contoso.sharepoint.com/sites/project-x\" --fileUrl \"/sites/project-x/documents/Test1.docx\" Break the inheritance of a file with a specific server-relative URL and clear all existing permissions. m365 spo file roleinheritance break --webUrl \"https://contoso.sharepoint.com/sites/project-x\" --fileUrl \"/sites/project-x/documents/Test1.docx\" --clearExistingPermissions","title":"file roleinheritance break"},{"location":"cmd/spo/file/file-roleinheritance-break/#spo-file-roleinheritance-break","text":"Breaks inheritance of a file. Keeping existing permissions is the default behavior.","title":"spo file roleinheritance break"},{"location":"cmd/spo/file/file-roleinheritance-break/#usage","text":"m365 spo file roleinheritance break [ options ]","title":"Usage"},{"location":"cmd/spo/file/file-roleinheritance-break/#options","text":"-u, --webUrl <webUrl> URL of the site where the file is located --fileUrl [fileUrl] The server-relative URL of the file. Specify either fileUrl or fileId but not both i, --fileId [fileId] The UniqueId (GUID) of the file. Specify either fileUrl or fileId but not both -c, --clearExistingPermissions Clear all existing permissions from the file --confirm Don't prompt for confirmation -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/file/file-roleinheritance-break/#examples","text":"Break the inheritance of a file with a specific id (UniqueId). m365 spo file roleinheritance break --webUrl \"https://contoso.sharepoint.com/sites/project-x\" --fileId \"b2307a39-e878-458b-bc90-03bc578531d6\" Break the inheritance of a file with a specific id (UniqueId) and clear all existing permissions. m365 spo file roleinheritance break --webUrl \"https://contoso.sharepoint.com/sites/project-x\" --fileId \"b2307a39-e878-458b-bc90-03bc578531d6\" --clearExistingPermissions Break the inheritance of a file with a specific server-relative URL. m365 spo file roleinheritance break --webUrl \"https://contoso.sharepoint.com/sites/project-x\" --fileUrl \"/sites/project-x/documents/Test1.docx\" Break the inheritance of a file with a specific server-relative URL and clear all existing permissions. m365 spo file roleinheritance break --webUrl \"https://contoso.sharepoint.com/sites/project-x\" --fileUrl \"/sites/project-x/documents/Test1.docx\" --clearExistingPermissions","title":"Examples"},{"location":"cmd/spo/file/file-roleinheritance-reset/","text":"spo file roleinheritance reset \u00b6 Restores the role inheritance of a file Usage \u00b6 m365 spo file roleinheritance reset [ options ] Options \u00b6 -u, --webUrl <webUrl> URL of the site where the file is located --fileUrl [fileUrl] The server-relative URL of the file to retrieve. Specify either fileUrl or fileId but not both i, --fileId [fileId] The UniqueId (GUID) of the file to retrieve. Specify either fileUrl or fileId but not both --confirm Don't prompt for confirmation -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Reset inheritance of file with id (UniqueId) b2307a39-e878-458b-bc90-03bc578531d6 located in site https://contoso.sharepoint.com/sites/project-x m365 spo file roleinheritance reset --webUrl \"https://contoso.sharepoint.com/sites/project-x\" --fileId \"b2307a39-e878-458b-bc90-03bc578531d6\" Reset inheritance of file with server-relative url /sites/project-x/documents/Test1 .docx located in site https://contoso.sharepoint.com/sites/project-x . It will not prompt for confirmation before resetting. m365 spo file roleinheritance reset --webUrl \"https://contoso.sharepoint.com/sites/project-x\" --fileUrl \"/sites/project-x/documents/Test1.docx\" --confirm","title":"file roleinheritance reset"},{"location":"cmd/spo/file/file-roleinheritance-reset/#spo-file-roleinheritance-reset","text":"Restores the role inheritance of a file","title":"spo file roleinheritance reset"},{"location":"cmd/spo/file/file-roleinheritance-reset/#usage","text":"m365 spo file roleinheritance reset [ options ]","title":"Usage"},{"location":"cmd/spo/file/file-roleinheritance-reset/#options","text":"-u, --webUrl <webUrl> URL of the site where the file is located --fileUrl [fileUrl] The server-relative URL of the file to retrieve. Specify either fileUrl or fileId but not both i, --fileId [fileId] The UniqueId (GUID) of the file to retrieve. Specify either fileUrl or fileId but not both --confirm Don't prompt for confirmation -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/file/file-roleinheritance-reset/#examples","text":"Reset inheritance of file with id (UniqueId) b2307a39-e878-458b-bc90-03bc578531d6 located in site https://contoso.sharepoint.com/sites/project-x m365 spo file roleinheritance reset --webUrl \"https://contoso.sharepoint.com/sites/project-x\" --fileId \"b2307a39-e878-458b-bc90-03bc578531d6\" Reset inheritance of file with server-relative url /sites/project-x/documents/Test1 .docx located in site https://contoso.sharepoint.com/sites/project-x . It will not prompt for confirmation before resetting. m365 spo file roleinheritance reset --webUrl \"https://contoso.sharepoint.com/sites/project-x\" --fileUrl \"/sites/project-x/documents/Test1.docx\" --confirm","title":"Examples"},{"location":"cmd/spo/file/file-sharinginfo-get/","text":"spo file sharinginfo get \u00b6 Generates a sharing information report for the specified file Usage \u00b6 m365 spo file sharinginfo get [ options ] Options \u00b6 -u, --webUrl <webUrl> The URL of the site where the file is located -f, --fileUrl [fileUrl] The server-relative URL of the file for which to build the report. Specify either fileUrl or fileId but not both -i, --fileId [fileId] The UniqueId (GUID) of the file for which to build the report. Specify either fileUrl or fileId but not both -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Get file sharing information report for the file with server-relative url /sites/M365CLI/Shared Documents/SharedFile.docx located in site https://contoso.sharepoint.com/sites/project-x m365 spo file sharinginfo get --webUrl https://contoso.sharepoint.com/sites/project-x --fileUrl \"/sites/M365CLI/Shared Documents/SharedFile.docx\" Get file sharing information report for file with id (UniqueId) b2307a39-e878-458b-bc90-03bc578531d6 located in site https://contoso.sharepoint.com/sites/project-x m365 spo file sharinginfo get --webUrl https://contoso.sharepoint.com/sites/project-x --fileId \"b2307a39-e878-458b-bc90-03bc578531d6\"","title":"file sharinginfo get"},{"location":"cmd/spo/file/file-sharinginfo-get/#spo-file-sharinginfo-get","text":"Generates a sharing information report for the specified file","title":"spo file sharinginfo get"},{"location":"cmd/spo/file/file-sharinginfo-get/#usage","text":"m365 spo file sharinginfo get [ options ]","title":"Usage"},{"location":"cmd/spo/file/file-sharinginfo-get/#options","text":"-u, --webUrl <webUrl> The URL of the site where the file is located -f, --fileUrl [fileUrl] The server-relative URL of the file for which to build the report. Specify either fileUrl or fileId but not both -i, --fileId [fileId] The UniqueId (GUID) of the file for which to build the report. Specify either fileUrl or fileId but not both -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/file/file-sharinginfo-get/#examples","text":"Get file sharing information report for the file with server-relative url /sites/M365CLI/Shared Documents/SharedFile.docx located in site https://contoso.sharepoint.com/sites/project-x m365 spo file sharinginfo get --webUrl https://contoso.sharepoint.com/sites/project-x --fileUrl \"/sites/M365CLI/Shared Documents/SharedFile.docx\" Get file sharing information report for file with id (UniqueId) b2307a39-e878-458b-bc90-03bc578531d6 located in site https://contoso.sharepoint.com/sites/project-x m365 spo file sharinginfo get --webUrl https://contoso.sharepoint.com/sites/project-x --fileId \"b2307a39-e878-458b-bc90-03bc578531d6\"","title":"Examples"},{"location":"cmd/spo/folder/folder-add/","text":"spo folder add \u00b6 Creates a folder within a parent folder Usage \u00b6 m365 spo folder add [ options ] Options \u00b6 -u, --webUrl <webUrl> The URL of the site where the folder will be created -p, --parentFolderUrl <parentFolderUrl> Site-relative URL of the parent folder -n, --name <name> Name of the new folder to be created -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Creates folder in a parent folder with site relative url /Shared Documents located in site https://contoso.sharepoint.com/sites/project-x m365 spo folder add --webUrl https://contoso.sharepoint.com/sites/project-x --parentFolderUrl '/Shared Documents' --name 'My Folder Name'","title":"folder add"},{"location":"cmd/spo/folder/folder-add/#spo-folder-add","text":"Creates a folder within a parent folder","title":"spo folder add"},{"location":"cmd/spo/folder/folder-add/#usage","text":"m365 spo folder add [ options ]","title":"Usage"},{"location":"cmd/spo/folder/folder-add/#options","text":"-u, --webUrl <webUrl> The URL of the site where the folder will be created -p, --parentFolderUrl <parentFolderUrl> Site-relative URL of the parent folder -n, --name <name> Name of the new folder to be created -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/folder/folder-add/#examples","text":"Creates folder in a parent folder with site relative url /Shared Documents located in site https://contoso.sharepoint.com/sites/project-x m365 spo folder add --webUrl https://contoso.sharepoint.com/sites/project-x --parentFolderUrl '/Shared Documents' --name 'My Folder Name'","title":"Examples"},{"location":"cmd/spo/folder/folder-copy/","text":"spo folder copy \u00b6 Copies a folder to another location Usage \u00b6 m365 spo folder copy [ options ] Options \u00b6 -u, --webUrl <webUrl> The URL of the site where the folder is located -s, --sourceUrl <sourceUrl> Site-relative URL of the folder to copy -t, --targetUrl <targetUrl> Server-relative URL where to copy the folder --allowSchemaMismatch Ignores any missing fields in the target document library and copies the folder anyway -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 When you copy a folder with documents that have version history, only the latest document version is copied. Examples \u00b6 Copies folder from a document library located in one site collection to another site collection m365 spo folder copy --webUrl https://contoso.sharepoint.com/sites/test1 --sourceUrl /Shared%20Documents/MyFolder --targetUrl /sites/test2/Shared%20Documents/ Copies folder from a document library to another site in the same site collection m365 spo folder copy --webUrl https://contoso.sharepoint.com/sites/test1 --sourceUrl /Shared%20Documents/MyFolder --targetUrl /sites/test1/HRDocuments/ Copies folder to a document library in another site collection. Allow for schema mismatch m365 spo folder cope --webUrl https://contoso.sharepoint.com/sites/test1 --sourceUrl /Shared%20Documents/MyFolder --targetUrl /sites/test2/Shared%20Documents/ --allowSchemaMismatch More information \u00b6 Copy items from a SharePoint document library: https://support.office.com/en-us/article/move-or-copy-items-from-a-sharepoint-document-library-00e2f483-4df3-46be-a861-1f5f0c1a87bc","title":"folder copy"},{"location":"cmd/spo/folder/folder-copy/#spo-folder-copy","text":"Copies a folder to another location","title":"spo folder copy"},{"location":"cmd/spo/folder/folder-copy/#usage","text":"m365 spo folder copy [ options ]","title":"Usage"},{"location":"cmd/spo/folder/folder-copy/#options","text":"-u, --webUrl <webUrl> The URL of the site where the folder is located -s, --sourceUrl <sourceUrl> Site-relative URL of the folder to copy -t, --targetUrl <targetUrl> Server-relative URL where to copy the folder --allowSchemaMismatch Ignores any missing fields in the target document library and copies the folder anyway -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/folder/folder-copy/#remarks","text":"When you copy a folder with documents that have version history, only the latest document version is copied.","title":"Remarks"},{"location":"cmd/spo/folder/folder-copy/#examples","text":"Copies folder from a document library located in one site collection to another site collection m365 spo folder copy --webUrl https://contoso.sharepoint.com/sites/test1 --sourceUrl /Shared%20Documents/MyFolder --targetUrl /sites/test2/Shared%20Documents/ Copies folder from a document library to another site in the same site collection m365 spo folder copy --webUrl https://contoso.sharepoint.com/sites/test1 --sourceUrl /Shared%20Documents/MyFolder --targetUrl /sites/test1/HRDocuments/ Copies folder to a document library in another site collection. Allow for schema mismatch m365 spo folder cope --webUrl https://contoso.sharepoint.com/sites/test1 --sourceUrl /Shared%20Documents/MyFolder --targetUrl /sites/test2/Shared%20Documents/ --allowSchemaMismatch","title":"Examples"},{"location":"cmd/spo/folder/folder-copy/#more-information","text":"Copy items from a SharePoint document library: https://support.office.com/en-us/article/move-or-copy-items-from-a-sharepoint-document-library-00e2f483-4df3-46be-a861-1f5f0c1a87bc","title":"More information"},{"location":"cmd/spo/folder/folder-get/","text":"spo folder get \u00b6 Gets information about the specified folder Usage \u00b6 m365 spo folder get [ options ] Options \u00b6 -u, --webUrl <webUrl> The URL of the site where the folder is located -f, --url [url] The server-relative URL of the folder to retrieve. Specify either folderUrl or id but not both -i, --id [id] The UniqueId (GUID) of the folder to retrieve. Specify either url or id but not both -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 If no folder exists at the specified URL, you will get a Please check the folder URL. Folder might not exist on the specified URL error. Examples \u00b6 Get folder properties for folder with server-relative url '/Shared Documents' located in site https://contoso.sharepoint.com/sites/project-x m365 spo folder get --webUrl https://contoso.sharepoint.com/sites/project-x --url \"/Shared Documents\" Get folder properties for folder with id (UniqueId) b2307a39-e878-458b-bc90-03bc578531d6 located in site https://contoso.sharepoint.com/sites/project-x m365 spo folder get --webUrl https://contoso.sharepoint.com/sites/project-x --id \"b2307a39-e878-458b-bc90-03bc578531d6\"","title":"folder get"},{"location":"cmd/spo/folder/folder-get/#spo-folder-get","text":"Gets information about the specified folder","title":"spo folder get"},{"location":"cmd/spo/folder/folder-get/#usage","text":"m365 spo folder get [ options ]","title":"Usage"},{"location":"cmd/spo/folder/folder-get/#options","text":"-u, --webUrl <webUrl> The URL of the site where the folder is located -f, --url [url] The server-relative URL of the folder to retrieve. Specify either folderUrl or id but not both -i, --id [id] The UniqueId (GUID) of the folder to retrieve. Specify either url or id but not both -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/folder/folder-get/#remarks","text":"If no folder exists at the specified URL, you will get a Please check the folder URL. Folder might not exist on the specified URL error.","title":"Remarks"},{"location":"cmd/spo/folder/folder-get/#examples","text":"Get folder properties for folder with server-relative url '/Shared Documents' located in site https://contoso.sharepoint.com/sites/project-x m365 spo folder get --webUrl https://contoso.sharepoint.com/sites/project-x --url \"/Shared Documents\" Get folder properties for folder with id (UniqueId) b2307a39-e878-458b-bc90-03bc578531d6 located in site https://contoso.sharepoint.com/sites/project-x m365 spo folder get --webUrl https://contoso.sharepoint.com/sites/project-x --id \"b2307a39-e878-458b-bc90-03bc578531d6\"","title":"Examples"},{"location":"cmd/spo/folder/folder-list/","text":"spo folder list \u00b6 Returns all folders under the specified parent folder Usage \u00b6 m365 spo folder list [ options ] Options \u00b6 -u, --webUrl <webUrl> The URL of the site where the folders to list are located -p, --parentFolderUrl <parentFolderUrl> Site-relative URL of the parent folder -r, --recursive Set to retrieve nested folders -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Gets list of folders under a parent folder with site-relative url /Shared Documents located in site https://contoso.sharepoint.com/sites/project-x m365 spo folder list --webUrl https://contoso.sharepoint.com/sites/project-x --parentFolderUrl '/Shared Documents' Gets recursive list of folders under a specific folder on a specific site m365 spo folder list --webUrl https://contoso.sharepoint.com/sites/project-x --parentFolderUrl '/Shared Documents' --recursive Response \u00b6 JSON Text CSV [ { \"Exists\" : true , \"IsWOPIEnabled\" : false , \"ItemCount\" : 9 , \"Name\" : \"Folder A\" , \"ProgID\" : null , \"ServerRelativeUrl\" : \"/Shared Documents/Folder A\" , \"TimeCreated\" : \"2022-04-26T12:30:56Z\" , \"TimeLastModified\" : \"2022-04-26T12:50:14Z\" , \"UniqueId\" : \"20523746-971b-4488-aa6d-b45d645f61c5\" , \"WelcomePage\" : \"\" } ] Name ServerRelativeUrl ------- ------------------------- Folder A /Shared Documents/Folder A Name,ServerRelativeUrl Folder A,/Shared Documents/Folder A","title":"folder list"},{"location":"cmd/spo/folder/folder-list/#spo-folder-list","text":"Returns all folders under the specified parent folder","title":"spo folder list"},{"location":"cmd/spo/folder/folder-list/#usage","text":"m365 spo folder list [ options ]","title":"Usage"},{"location":"cmd/spo/folder/folder-list/#options","text":"-u, --webUrl <webUrl> The URL of the site where the folders to list are located -p, --parentFolderUrl <parentFolderUrl> Site-relative URL of the parent folder -r, --recursive Set to retrieve nested folders -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/folder/folder-list/#examples","text":"Gets list of folders under a parent folder with site-relative url /Shared Documents located in site https://contoso.sharepoint.com/sites/project-x m365 spo folder list --webUrl https://contoso.sharepoint.com/sites/project-x --parentFolderUrl '/Shared Documents' Gets recursive list of folders under a specific folder on a specific site m365 spo folder list --webUrl https://contoso.sharepoint.com/sites/project-x --parentFolderUrl '/Shared Documents' --recursive","title":"Examples"},{"location":"cmd/spo/folder/folder-list/#response","text":"JSON Text CSV [ { \"Exists\" : true , \"IsWOPIEnabled\" : false , \"ItemCount\" : 9 , \"Name\" : \"Folder A\" , \"ProgID\" : null , \"ServerRelativeUrl\" : \"/Shared Documents/Folder A\" , \"TimeCreated\" : \"2022-04-26T12:30:56Z\" , \"TimeLastModified\" : \"2022-04-26T12:50:14Z\" , \"UniqueId\" : \"20523746-971b-4488-aa6d-b45d645f61c5\" , \"WelcomePage\" : \"\" } ] Name ServerRelativeUrl ------- ------------------------- Folder A /Shared Documents/Folder A Name,ServerRelativeUrl Folder A,/Shared Documents/Folder A","title":"Response"},{"location":"cmd/spo/folder/folder-move/","text":"spo folder move \u00b6 Moves a folder to another location Usage \u00b6 m365 spo folder move [ options ] Options \u00b6 -u, --webUrl <webUrl> The URL of the site where the folder is located -s, --sourceUrl <sourceUrl> Site-relative URL of the folder to move -t, --targetUrl <targetUrl> Server-relative URL where to move the folder --allowSchemaMismatch Ignores any missing fields in the target destination and moves the folder anyway -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 When you move a folder using the spo folder move command, all of the document versions are moved. Examples \u00b6 Move folder to a document library in another site collection m365 spo folder move --webUrl https://contoso.sharepoint.com/sites/test1 --sourceUrl /Shared%20Documents/MyFolder --targetUrl /sites/test2/Shared%20Documents/ Move folder to a document library in the same site collection m365 spo folder move --webUrl https://contoso.sharepoint.com/sites/test1 --sourceUrl /Shared%20Documents/MyFolder --targetUrl /sites/test1/HRDocuments/ Move folder to a document library in another site collection. Allow for schema mismatch m365 spo file move --webUrl https://contoso.sharepoint.com/sites/test1 --sourceUrl /Shared%20Documents/sp1.pdf --targetUrl /sites/test2/Shared%20Documents/ --allowSchemaMismatch More information \u00b6 Move items from a SharePoint document library: https://support.office.com/en-us/article/move-or-copy-items-from-a-sharepoint-document-library-00e2f483-4df3-46be-a861-1f5f0c1a87bc","title":"folder move"},{"location":"cmd/spo/folder/folder-move/#spo-folder-move","text":"Moves a folder to another location","title":"spo folder move"},{"location":"cmd/spo/folder/folder-move/#usage","text":"m365 spo folder move [ options ]","title":"Usage"},{"location":"cmd/spo/folder/folder-move/#options","text":"-u, --webUrl <webUrl> The URL of the site where the folder is located -s, --sourceUrl <sourceUrl> Site-relative URL of the folder to move -t, --targetUrl <targetUrl> Server-relative URL where to move the folder --allowSchemaMismatch Ignores any missing fields in the target destination and moves the folder anyway -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/folder/folder-move/#remarks","text":"When you move a folder using the spo folder move command, all of the document versions are moved.","title":"Remarks"},{"location":"cmd/spo/folder/folder-move/#examples","text":"Move folder to a document library in another site collection m365 spo folder move --webUrl https://contoso.sharepoint.com/sites/test1 --sourceUrl /Shared%20Documents/MyFolder --targetUrl /sites/test2/Shared%20Documents/ Move folder to a document library in the same site collection m365 spo folder move --webUrl https://contoso.sharepoint.com/sites/test1 --sourceUrl /Shared%20Documents/MyFolder --targetUrl /sites/test1/HRDocuments/ Move folder to a document library in another site collection. Allow for schema mismatch m365 spo file move --webUrl https://contoso.sharepoint.com/sites/test1 --sourceUrl /Shared%20Documents/sp1.pdf --targetUrl /sites/test2/Shared%20Documents/ --allowSchemaMismatch","title":"Examples"},{"location":"cmd/spo/folder/folder-move/#more-information","text":"Move items from a SharePoint document library: https://support.office.com/en-us/article/move-or-copy-items-from-a-sharepoint-document-library-00e2f483-4df3-46be-a861-1f5f0c1a87bc","title":"More information"},{"location":"cmd/spo/folder/folder-remove/","text":"spo folder remove \u00b6 Deletes the specified folder Usage \u00b6 m365 spo folder remove [ options ] Options \u00b6 -u, --webUrl <webUrl> The URL of the site where the folder to be deleted is located -f, --url <url> Site-relative URL of the folder to delete --recycle Recycles the folder instead of actually deleting it --confirm Don't prompt for confirming deleting the folder -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 The spo folder remove command will remove folder only if it is empty. If the folder contains any files, deleting the folder will fail. Examples \u00b6 Removes a folder with site-relative URL /Shared Documents/My Folder located in site https://contoso.sharepoint.com/sites/project-x m365 spo folder remove --webUrl https://contoso.sharepoint.com/sites/project-x --url '/Shared Documents/My Folder' Moves a folder with site-relative URL /Shared Documents/My Folder located in site https://contoso.sharepoint.com/sites/project-x to the site recycle bin m365 spo folder remove --webUrl https://contoso.sharepoint.com/sites/project-x --url '/Shared Documents/My Folder' --recycle","title":"folder remove"},{"location":"cmd/spo/folder/folder-remove/#spo-folder-remove","text":"Deletes the specified folder","title":"spo folder remove"},{"location":"cmd/spo/folder/folder-remove/#usage","text":"m365 spo folder remove [ options ]","title":"Usage"},{"location":"cmd/spo/folder/folder-remove/#options","text":"-u, --webUrl <webUrl> The URL of the site where the folder to be deleted is located -f, --url <url> Site-relative URL of the folder to delete --recycle Recycles the folder instead of actually deleting it --confirm Don't prompt for confirming deleting the folder -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/folder/folder-remove/#remarks","text":"The spo folder remove command will remove folder only if it is empty. If the folder contains any files, deleting the folder will fail.","title":"Remarks"},{"location":"cmd/spo/folder/folder-remove/#examples","text":"Removes a folder with site-relative URL /Shared Documents/My Folder located in site https://contoso.sharepoint.com/sites/project-x m365 spo folder remove --webUrl https://contoso.sharepoint.com/sites/project-x --url '/Shared Documents/My Folder' Moves a folder with site-relative URL /Shared Documents/My Folder located in site https://contoso.sharepoint.com/sites/project-x to the site recycle bin m365 spo folder remove --webUrl https://contoso.sharepoint.com/sites/project-x --url '/Shared Documents/My Folder' --recycle","title":"Examples"},{"location":"cmd/spo/folder/folder-rename/","text":"spo folder rename \u00b6 Renames a folder Usage \u00b6 m365 spo folder rename [ options ] Options \u00b6 -u, --webUrl <webUrl> The URL of the site where the folder to be renamed is located -f, --url <url> Site-relative URL of the folder (including the folder) -n, --name New name for the target folder -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Renames a folder with site-relative URL /Shared Documents/My Folder 1 located in site https://contoso.sharepoint.com/sites/project-x m365 spo folder rename --webUrl https://contoso.sharepoint.com/sites/project-x --url '/Shared Documents/My Folder 1' --name 'My Folder 2'","title":"folder rename"},{"location":"cmd/spo/folder/folder-rename/#spo-folder-rename","text":"Renames a folder","title":"spo folder rename"},{"location":"cmd/spo/folder/folder-rename/#usage","text":"m365 spo folder rename [ options ]","title":"Usage"},{"location":"cmd/spo/folder/folder-rename/#options","text":"-u, --webUrl <webUrl> The URL of the site where the folder to be renamed is located -f, --url <url> Site-relative URL of the folder (including the folder) -n, --name New name for the target folder -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/folder/folder-rename/#examples","text":"Renames a folder with site-relative URL /Shared Documents/My Folder 1 located in site https://contoso.sharepoint.com/sites/project-x m365 spo folder rename --webUrl https://contoso.sharepoint.com/sites/project-x --url '/Shared Documents/My Folder 1' --name 'My Folder 2'","title":"Examples"},{"location":"cmd/spo/folder/folder-roleassignment-remove/","text":"spo folder roleassignment remove \u00b6 Removes a role assignment from the specified folder. Usage \u00b6 m365 spo folder roleassignment remove [ options ] Options \u00b6 -u, --webUrl <webUrl> The URL of the site where the folder is located. -f, --folderUrl <folderUrl> The server- or site-relative URL of the folder. --principalId [principalId] The SharePoint principal id. It may be either an user id or group id for which the role assignment will be removed. Specify either upn, groupName or principalId but not multiple. --upn [upn] The upn/email of the user. Specify either upn, groupName or principalId but not multiple. --groupName [groupName] The Azure AD or SharePoint group name. Specify either upn, groupName or principalId but not multiple. --confirm Don't prompt for confirmation when removing the role assignment. -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Remove roleassignment from folder based on group name m365 spo folder roleassignment remove --webUrl \"https://contoso.sharepoint.com/sites/contoso-sales\" --folderUrl \"/Shared Documents/FolderPermission\" --groupName \"saleGroup\" Remove the role assignment from the specified folder based on the principal id. m365 spo folder roleassignment remove --webUrl \"https://contoso.sharepoint.com/sites/contoso-sales\" --folderUrl \"/Shared Documents/FolderPermission\" --principalId 2 Remove the role assignment from the specified folder based on the principal id without prompting for removal confirmation. m365 spo folder roleassignment remove --webUrl \"https://contoso.sharepoint.com/sites/contoso-sales\" --folderUrl \"/Shared Documents/FolderPermission\" --principalId 2 --confirm Remove the role assignment from the specified folder based on the upn. m365 spo folder roleassignment remove --webUrl \"https://contoso.sharepoint.com/sites/contoso-sales\" --folderUrl \"/Shared Documents/FolderPermission\" --upn \"test@contoso.onmicrosoft.com\"","title":"folder roleassignment remove"},{"location":"cmd/spo/folder/folder-roleassignment-remove/#spo-folder-roleassignment-remove","text":"Removes a role assignment from the specified folder.","title":"spo folder roleassignment remove"},{"location":"cmd/spo/folder/folder-roleassignment-remove/#usage","text":"m365 spo folder roleassignment remove [ options ]","title":"Usage"},{"location":"cmd/spo/folder/folder-roleassignment-remove/#options","text":"-u, --webUrl <webUrl> The URL of the site where the folder is located. -f, --folderUrl <folderUrl> The server- or site-relative URL of the folder. --principalId [principalId] The SharePoint principal id. It may be either an user id or group id for which the role assignment will be removed. Specify either upn, groupName or principalId but not multiple. --upn [upn] The upn/email of the user. Specify either upn, groupName or principalId but not multiple. --groupName [groupName] The Azure AD or SharePoint group name. Specify either upn, groupName or principalId but not multiple. --confirm Don't prompt for confirmation when removing the role assignment. -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/folder/folder-roleassignment-remove/#examples","text":"Remove roleassignment from folder based on group name m365 spo folder roleassignment remove --webUrl \"https://contoso.sharepoint.com/sites/contoso-sales\" --folderUrl \"/Shared Documents/FolderPermission\" --groupName \"saleGroup\" Remove the role assignment from the specified folder based on the principal id. m365 spo folder roleassignment remove --webUrl \"https://contoso.sharepoint.com/sites/contoso-sales\" --folderUrl \"/Shared Documents/FolderPermission\" --principalId 2 Remove the role assignment from the specified folder based on the principal id without prompting for removal confirmation. m365 spo folder roleassignment remove --webUrl \"https://contoso.sharepoint.com/sites/contoso-sales\" --folderUrl \"/Shared Documents/FolderPermission\" --principalId 2 --confirm Remove the role assignment from the specified folder based on the upn. m365 spo folder roleassignment remove --webUrl \"https://contoso.sharepoint.com/sites/contoso-sales\" --folderUrl \"/Shared Documents/FolderPermission\" --upn \"test@contoso.onmicrosoft.com\"","title":"Examples"},{"location":"cmd/spo/folder/folder-roleinheritance-break/","text":"spo folder roleinheritance break \u00b6 Breaks the role inheritance of a folder. Usage \u00b6 m365 spo folder roleinheritance break [ options ] Options \u00b6 -u, --webUrl <webUrl> URL of the site where the folder is located. -f, --folderUrl <folderUrl> The site-relative URL or server-relative URL of the folder. -c, --clearExistingPermissions Clear all existing permissions from the folder. --confirm Don't prompt for confirmation to breaking role inheritance of the folder. -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Break the inheritance of a folder with a specified site-relative URL. m365 spo folder roleinheritance break --webUrl \"https://contoso.sharepoint.com/sites/project-x\" --folderUrl \"Shared Documents/TestFolder\" Break the inheritance of a folder with a specified server-relative URL. It will clear the existing permissions of the folder. It will not prompt for confirmation before breaking the inheritance. m365 spo folder roleinheritance break --webUrl \"https://contoso.sharepoint.com/sites/project-x\" --folderUrl \"/sites/project-x/Shared Documents/TestFolder\" --clearExistingPermissions --confirm Break the inheritance of the specified root folder for the library with a specified server-relative URL. It will clear the existing permissions of the root folder. It will not prompt for confirmation before breaking the inheritance. m365 spo folder roleinheritance break --webUrl \"https://contoso.sharepoint.com/sites/project-x\" --folderUrl \"/sites/project-x/Shared Documents\" --clearExistingPermissions --confirm","title":"folder roleinheritance break"},{"location":"cmd/spo/folder/folder-roleinheritance-break/#spo-folder-roleinheritance-break","text":"Breaks the role inheritance of a folder.","title":"spo folder roleinheritance break"},{"location":"cmd/spo/folder/folder-roleinheritance-break/#usage","text":"m365 spo folder roleinheritance break [ options ]","title":"Usage"},{"location":"cmd/spo/folder/folder-roleinheritance-break/#options","text":"-u, --webUrl <webUrl> URL of the site where the folder is located. -f, --folderUrl <folderUrl> The site-relative URL or server-relative URL of the folder. -c, --clearExistingPermissions Clear all existing permissions from the folder. --confirm Don't prompt for confirmation to breaking role inheritance of the folder. -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/folder/folder-roleinheritance-break/#examples","text":"Break the inheritance of a folder with a specified site-relative URL. m365 spo folder roleinheritance break --webUrl \"https://contoso.sharepoint.com/sites/project-x\" --folderUrl \"Shared Documents/TestFolder\" Break the inheritance of a folder with a specified server-relative URL. It will clear the existing permissions of the folder. It will not prompt for confirmation before breaking the inheritance. m365 spo folder roleinheritance break --webUrl \"https://contoso.sharepoint.com/sites/project-x\" --folderUrl \"/sites/project-x/Shared Documents/TestFolder\" --clearExistingPermissions --confirm Break the inheritance of the specified root folder for the library with a specified server-relative URL. It will clear the existing permissions of the root folder. It will not prompt for confirmation before breaking the inheritance. m365 spo folder roleinheritance break --webUrl \"https://contoso.sharepoint.com/sites/project-x\" --folderUrl \"/sites/project-x/Shared Documents\" --clearExistingPermissions --confirm","title":"Examples"},{"location":"cmd/spo/folder/folder-roleinheritance-reset/","text":"spo folder roleinheritance reset \u00b6 Restores the role inheritance of a folder. Usage \u00b6 m365 spo folder roleinheritance reset [ options ] Options \u00b6 -u, --webUrl <webUrl> URL of the site where the folder is located. -f, --folderUrl <folderUrl> The site-relative URL of the folder. --confirm Don't prompt for confirmation to reset role inheritance of the folder. -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Reset inheritance of folder with site-relative url Shared Documents/TestFolder located in site https://contoso.sharepoint.com/sites/project-x . m365 spo folder roleinheritance reset --webUrl \"https://contoso.sharepoint.com/sites/project-x\" --folderUrl \"Shared Documents/TestFolder\" Reset inheritance of folder with server-relative url /sites/project-x/Shared Documents/TestFolder located in site https://contoso.sharepoint.com/sites/project-x . It will not prompt for confirmation before resetting. m365 spo folder roleinheritance reset --webUrl \"https://contoso.sharepoint.com/sites/project-x\" --folderUrl \"/sites/project-x/Shared Documents/TestFolder\" --confirm Reset inheritance of the specified root folder for the library with the server-relative url /sites/project-x/Shared Documents located in site _https://contoso.sharepoint.com/sites/project-x . It will not prompt for confirmation before resetting. m365 spo folder roleinheritance reset --webUrl \"https://contoso.sharepoint.com/sites/project-x\" --folderUrl \"/sites/project-x/Shared Documents\" --confirm","title":"folder roleinheritance reset"},{"location":"cmd/spo/folder/folder-roleinheritance-reset/#spo-folder-roleinheritance-reset","text":"Restores the role inheritance of a folder.","title":"spo folder roleinheritance reset"},{"location":"cmd/spo/folder/folder-roleinheritance-reset/#usage","text":"m365 spo folder roleinheritance reset [ options ]","title":"Usage"},{"location":"cmd/spo/folder/folder-roleinheritance-reset/#options","text":"-u, --webUrl <webUrl> URL of the site where the folder is located. -f, --folderUrl <folderUrl> The site-relative URL of the folder. --confirm Don't prompt for confirmation to reset role inheritance of the folder. -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/folder/folder-roleinheritance-reset/#examples","text":"Reset inheritance of folder with site-relative url Shared Documents/TestFolder located in site https://contoso.sharepoint.com/sites/project-x . m365 spo folder roleinheritance reset --webUrl \"https://contoso.sharepoint.com/sites/project-x\" --folderUrl \"Shared Documents/TestFolder\" Reset inheritance of folder with server-relative url /sites/project-x/Shared Documents/TestFolder located in site https://contoso.sharepoint.com/sites/project-x . It will not prompt for confirmation before resetting. m365 spo folder roleinheritance reset --webUrl \"https://contoso.sharepoint.com/sites/project-x\" --folderUrl \"/sites/project-x/Shared Documents/TestFolder\" --confirm Reset inheritance of the specified root folder for the library with the server-relative url /sites/project-x/Shared Documents located in site _https://contoso.sharepoint.com/sites/project-x . It will not prompt for confirmation before resetting. m365 spo folder roleinheritance reset --webUrl \"https://contoso.sharepoint.com/sites/project-x\" --folderUrl \"/sites/project-x/Shared Documents\" --confirm","title":"Examples"},{"location":"cmd/spo/group/group-add/","text":"spo group add \u00b6 Creates group in the specified site Usage \u00b6 m365 spo group add [ options ] Options \u00b6 -u, --webUrl <webUrl> URL of the site where the group should be added. -n, --name <name> Name of the group to add. --description [description] The description for the group. --allowMembersEditMembership [allowMembersEditMembership] Who can edit the membership of the group? When true members can edit membership, otherwise only owners can do this. Default false . --onlyAllowMembersViewMembership [onlyAllowMembersViewMembership] Who can view the membership of the group? When false everyone can view the group membership, otherwise only group members can. Default true . --allowRequestToJoinLeave [allowRequestToJoinLeave] Specify whether to allow users to request membership in this group and allow users to request to leave the group. Default false . --autoAcceptRequestToJoinLeave [autoAcceptRequestToJoinLeave] If auto-accept is enabled, users will automatically be added or removed when they make a request. Default false . --requestToJoinLeaveEmailSetting [requestToJoinLeaveEmailSetting] All membership requests will be sent to the email address specified. -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Create group with title and description m365 spo group add --webUrl https://contoso.sharepoint.com/sites/project-x --name \"Project leaders\" --description \"This group contains all project leaders\" Create group with membership requests m365 spo group add --webUrl https://contoso.sharepoint.com/sites/project-x --name \"Project leaders\" --allowRequestToJoinLeave true --requestToJoinLeaveEmailSetting john.doe@contoso.com","title":"group add"},{"location":"cmd/spo/group/group-add/#spo-group-add","text":"Creates group in the specified site","title":"spo group add"},{"location":"cmd/spo/group/group-add/#usage","text":"m365 spo group add [ options ]","title":"Usage"},{"location":"cmd/spo/group/group-add/#options","text":"-u, --webUrl <webUrl> URL of the site where the group should be added. -n, --name <name> Name of the group to add. --description [description] The description for the group. --allowMembersEditMembership [allowMembersEditMembership] Who can edit the membership of the group? When true members can edit membership, otherwise only owners can do this. Default false . --onlyAllowMembersViewMembership [onlyAllowMembersViewMembership] Who can view the membership of the group? When false everyone can view the group membership, otherwise only group members can. Default true . --allowRequestToJoinLeave [allowRequestToJoinLeave] Specify whether to allow users to request membership in this group and allow users to request to leave the group. Default false . --autoAcceptRequestToJoinLeave [autoAcceptRequestToJoinLeave] If auto-accept is enabled, users will automatically be added or removed when they make a request. Default false . --requestToJoinLeaveEmailSetting [requestToJoinLeaveEmailSetting] All membership requests will be sent to the email address specified. -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/group/group-add/#examples","text":"Create group with title and description m365 spo group add --webUrl https://contoso.sharepoint.com/sites/project-x --name \"Project leaders\" --description \"This group contains all project leaders\" Create group with membership requests m365 spo group add --webUrl https://contoso.sharepoint.com/sites/project-x --name \"Project leaders\" --allowRequestToJoinLeave true --requestToJoinLeaveEmailSetting john.doe@contoso.com","title":"Examples"},{"location":"cmd/spo/group/group-get/","text":"spo group get \u00b6 Gets site group Usage \u00b6 m365 spo group get [ options ] Options \u00b6 -u, --webUrl <webUrl> URL of the site where the group is located. -i, --id [id] ID of the site group to get. Use either id , name or associatedGroup but not multiple. --name [name] Name of the site group to get. Use either id , name or associatedGroup but not multiple. --associatedGroup [associatedGroup] Type of the associated group to get. Available values: Owner , Member , Visitor . Use either id , name or associatedGroup but not multiple. -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Get group with ID 7 for web https://contoso.sharepoint.com/sites/project-x m365 spo group get --webUrl https://contoso.sharepoint.com/sites/project-x --id 7 Get group with name Team Site Members for web https://contoso.sharepoint.com/sites/project-x m365 spo group get --webUrl https://contoso.sharepoint.com/sites/project-x --name \"Team Site Members\" Get the associated owner group of a specified site m365 spo group get --webUrl https://contoso.sharepoint.com/sites/project-x --associatedGroup Owner","title":"group get"},{"location":"cmd/spo/group/group-get/#spo-group-get","text":"Gets site group","title":"spo group get"},{"location":"cmd/spo/group/group-get/#usage","text":"m365 spo group get [ options ]","title":"Usage"},{"location":"cmd/spo/group/group-get/#options","text":"-u, --webUrl <webUrl> URL of the site where the group is located. -i, --id [id] ID of the site group to get. Use either id , name or associatedGroup but not multiple. --name [name] Name of the site group to get. Use either id , name or associatedGroup but not multiple. --associatedGroup [associatedGroup] Type of the associated group to get. Available values: Owner , Member , Visitor . Use either id , name or associatedGroup but not multiple. -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/group/group-get/#examples","text":"Get group with ID 7 for web https://contoso.sharepoint.com/sites/project-x m365 spo group get --webUrl https://contoso.sharepoint.com/sites/project-x --id 7 Get group with name Team Site Members for web https://contoso.sharepoint.com/sites/project-x m365 spo group get --webUrl https://contoso.sharepoint.com/sites/project-x --name \"Team Site Members\" Get the associated owner group of a specified site m365 spo group get --webUrl https://contoso.sharepoint.com/sites/project-x --associatedGroup Owner","title":"Examples"},{"location":"cmd/spo/group/group-list/","text":"spo group list \u00b6 Lists all the groups within specific web Usage \u00b6 m365 spo group list [ options ] Options \u00b6 -u, --webUrl <webUrl> Url of the web to list the group within --associatedGroupsOnly Get only the associated visitor, member and owner groups of the site. -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Lists all the groups within a specific web m365 spo group list --webUrl \"https://contoso.sharepoint.com/sites/contoso\" Lists the associated groups within a specific web m365 spo group list --webUrl \"https://contoso.sharepoint.com/sites/contoso\" --associatedGroupsOnly","title":"group list"},{"location":"cmd/spo/group/group-list/#spo-group-list","text":"Lists all the groups within specific web","title":"spo group list"},{"location":"cmd/spo/group/group-list/#usage","text":"m365 spo group list [ options ]","title":"Usage"},{"location":"cmd/spo/group/group-list/#options","text":"-u, --webUrl <webUrl> Url of the web to list the group within --associatedGroupsOnly Get only the associated visitor, member and owner groups of the site. -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/group/group-list/#examples","text":"Lists all the groups within a specific web m365 spo group list --webUrl \"https://contoso.sharepoint.com/sites/contoso\" Lists the associated groups within a specific web m365 spo group list --webUrl \"https://contoso.sharepoint.com/sites/contoso\" --associatedGroupsOnly","title":"Examples"},{"location":"cmd/spo/group/group-remove/","text":"spo group remove \u00b6 Removes group from specific web Usage \u00b6 m365 spo group remove [ options ] Options \u00b6 -u, --webUrl <webUrl> Url of the web to remove the group from --id [id] ID of the group to remove. Use ID or name but not both --name [name] Name of the group to remove. Use ID or name but not both --confirm Confirm removal of the group -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Removes group with id 5 from web https://contoso.sharepoint.com/sites/mysite m365 spo group remove --webUrl https://contoso.sharepoint.com/sites/mysite --id 5 Removes group with name Team Site Owners from web https://contoso.sharepoint.com/sites/mysite m365 spo group remove --webUrl https://contoso.sharepoint.com/sites/mysite --name \"Team Site Owners\"","title":"group remove"},{"location":"cmd/spo/group/group-remove/#spo-group-remove","text":"Removes group from specific web","title":"spo group remove"},{"location":"cmd/spo/group/group-remove/#usage","text":"m365 spo group remove [ options ]","title":"Usage"},{"location":"cmd/spo/group/group-remove/#options","text":"-u, --webUrl <webUrl> Url of the web to remove the group from --id [id] ID of the group to remove. Use ID or name but not both --name [name] Name of the group to remove. Use ID or name but not both --confirm Confirm removal of the group -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/group/group-remove/#examples","text":"Removes group with id 5 from web https://contoso.sharepoint.com/sites/mysite m365 spo group remove --webUrl https://contoso.sharepoint.com/sites/mysite --id 5 Removes group with name Team Site Owners from web https://contoso.sharepoint.com/sites/mysite m365 spo group remove --webUrl https://contoso.sharepoint.com/sites/mysite --name \"Team Site Owners\"","title":"Examples"},{"location":"cmd/spo/group/group-set/","text":"spo group set \u00b6 Updates a group in the specified site Usage \u00b6 m365 spo group set [ options ] Options \u00b6 -u, --webUrl <webUrl> URL of the site where the group is located. -i, --id [id] ID of the group to update. Specify either id or name but not both. -n, --name [name] Name of the group. Specify either id or name but not both. --newName [newName] New name for the group. --description [description] The description for the group. --allowMembersEditMembership [allowMembersEditMembership] Who can edit the membership of the group? When true members can edit membership, otherwise only owners can do this. --onlyAllowMembersViewMembership [onlyAllowMembersViewMembership] Who can view the membership of the group? When true only group members can view the membership, otherwise everyone can. --allowRequestToJoinLeave [allowRequestToJoinLeave] Specify whether to allow users to request membership in this group and allow users to request to leave the group. --autoAcceptRequestToJoinLeave [autoAcceptRequestToJoinLeave] If auto-accept is enabled, users will automatically be added or removed when they make a request. --requestToJoinLeaveEmailSetting [requestToJoinLeaveEmailSetting] All membership requests will be sent to the email address specified. --ownerEmail [ownerEmail] Set user with this email as owner of the group. Specify either ownerEmail or ownerUserName but not both. --ownerUserName [ownerUserName] Set user with this login name as owner of the group. Specify either ownerEmail or ownerUserName but not both. -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Update group title and description m365 spo group set --webUrl https://contoso.sharepoint.com/sites/project-x --id 18 --newTitle \"Project leaders\" --description \"This group contains all project leaders\" Update group with membership requests m365 spo group set --webUrl https://contoso.sharepoint.com/sites/project-x --title \"Project leaders\" --allowRequestToJoinLeave true --requestToJoinLeaveEmailSetting john.doe@contoso.com Sets a specified user as group owner m365 spo group set --webUrl https://contoso.sharepoint.com/sites/project-x --id 18 --ownerEmail john.doe@contoso.com","title":"group set"},{"location":"cmd/spo/group/group-set/#spo-group-set","text":"Updates a group in the specified site","title":"spo group set"},{"location":"cmd/spo/group/group-set/#usage","text":"m365 spo group set [ options ]","title":"Usage"},{"location":"cmd/spo/group/group-set/#options","text":"-u, --webUrl <webUrl> URL of the site where the group is located. -i, --id [id] ID of the group to update. Specify either id or name but not both. -n, --name [name] Name of the group. Specify either id or name but not both. --newName [newName] New name for the group. --description [description] The description for the group. --allowMembersEditMembership [allowMembersEditMembership] Who can edit the membership of the group? When true members can edit membership, otherwise only owners can do this. --onlyAllowMembersViewMembership [onlyAllowMembersViewMembership] Who can view the membership of the group? When true only group members can view the membership, otherwise everyone can. --allowRequestToJoinLeave [allowRequestToJoinLeave] Specify whether to allow users to request membership in this group and allow users to request to leave the group. --autoAcceptRequestToJoinLeave [autoAcceptRequestToJoinLeave] If auto-accept is enabled, users will automatically be added or removed when they make a request. --requestToJoinLeaveEmailSetting [requestToJoinLeaveEmailSetting] All membership requests will be sent to the email address specified. --ownerEmail [ownerEmail] Set user with this email as owner of the group. Specify either ownerEmail or ownerUserName but not both. --ownerUserName [ownerUserName] Set user with this login name as owner of the group. Specify either ownerEmail or ownerUserName but not both. -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/group/group-set/#examples","text":"Update group title and description m365 spo group set --webUrl https://contoso.sharepoint.com/sites/project-x --id 18 --newTitle \"Project leaders\" --description \"This group contains all project leaders\" Update group with membership requests m365 spo group set --webUrl https://contoso.sharepoint.com/sites/project-x --title \"Project leaders\" --allowRequestToJoinLeave true --requestToJoinLeaveEmailSetting john.doe@contoso.com Sets a specified user as group owner m365 spo group set --webUrl https://contoso.sharepoint.com/sites/project-x --id 18 --ownerEmail john.doe@contoso.com","title":"Examples"},{"location":"cmd/spo/group/group-user-add/","text":"spo group user add \u00b6 Add a user or multiple users to SharePoint Group Usage \u00b6 m365 spo group user add [ options ] Options \u00b6 -u, --webUrl <webUrl> URL of the site where the SharePoint group is available --groupId [groupId] Id of the SharePoint Group to which user needs to be added, specify either groupId or groupName --groupName [groupName] Name of the SharePoint Group to which user needs to be added, specify either groupId or groupName --userName [userName] User's UPN (user principal name, eg. megan.bowen@contoso.com). If multiple users needs to be added, they have to be comma separated (ex. megan.bowen@contoso.com,alex.wilber@contoso.com), specify either userName or email --email [email] User's email (eg. megan.bowen@contoso.com). If multiple users needs to be added, they have to be comma separated (ex. megan.bowen@contoso.com,alex.wilber@contoso.com), specify either userName or email -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 For the --userName or --email options you can specify multiple values by separating them with a comma. If one of the specified entries is not valid, the command will fail with an error message showing the list invalid values. Examples \u00b6 Add a user with name Alex.Wilber@contoso.com to the SharePoint group with id 5 available on the web https://contoso.sharepoint.com/sites/SiteA m365 spo group user add --webUrl https://contoso.sharepoint.com/sites/SiteA --groupId 5 --userName \"Alex.Wilber@contoso.com\" Add multiple users by name to the SharePoint group with id 5 available on the web https://contoso.sharepoint.com/sites/SiteA m365 spo group user add --webUrl https://contoso.sharepoint.com/sites/SiteA --groupId 5 --userName \"Alex.Wilber@contoso.com, Adele.Vance@contoso.com\" Add a user with email Alex.Wilber@contoso.com to the SharePoint group with name Contoso Site Owners available on the web https://contoso.sharepoint.com/sites/SiteA m365 spo group user add --webUrl https://contoso.sharepoint.com/sites/SiteA --groupName \"Contoso Site Owners\" --email \"Alex.Wilber@contoso.com\" Add multiple users by email to the SharePoint group with name Contoso Site Owners available on the web https://contoso.sharepoint.com/sites/SiteA m365 spo group user add --webUrl https://contoso.sharepoint.com/sites/SiteA --groupName \"Contoso Site Owners\" --email \"Alex.Wilber@contoso.com, Adele.Vance@contoso.com\"","title":"group user add"},{"location":"cmd/spo/group/group-user-add/#spo-group-user-add","text":"Add a user or multiple users to SharePoint Group","title":"spo group user add"},{"location":"cmd/spo/group/group-user-add/#usage","text":"m365 spo group user add [ options ]","title":"Usage"},{"location":"cmd/spo/group/group-user-add/#options","text":"-u, --webUrl <webUrl> URL of the site where the SharePoint group is available --groupId [groupId] Id of the SharePoint Group to which user needs to be added, specify either groupId or groupName --groupName [groupName] Name of the SharePoint Group to which user needs to be added, specify either groupId or groupName --userName [userName] User's UPN (user principal name, eg. megan.bowen@contoso.com). If multiple users needs to be added, they have to be comma separated (ex. megan.bowen@contoso.com,alex.wilber@contoso.com), specify either userName or email --email [email] User's email (eg. megan.bowen@contoso.com). If multiple users needs to be added, they have to be comma separated (ex. megan.bowen@contoso.com,alex.wilber@contoso.com), specify either userName or email -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/group/group-user-add/#remarks","text":"For the --userName or --email options you can specify multiple values by separating them with a comma. If one of the specified entries is not valid, the command will fail with an error message showing the list invalid values.","title":"Remarks"},{"location":"cmd/spo/group/group-user-add/#examples","text":"Add a user with name Alex.Wilber@contoso.com to the SharePoint group with id 5 available on the web https://contoso.sharepoint.com/sites/SiteA m365 spo group user add --webUrl https://contoso.sharepoint.com/sites/SiteA --groupId 5 --userName \"Alex.Wilber@contoso.com\" Add multiple users by name to the SharePoint group with id 5 available on the web https://contoso.sharepoint.com/sites/SiteA m365 spo group user add --webUrl https://contoso.sharepoint.com/sites/SiteA --groupId 5 --userName \"Alex.Wilber@contoso.com, Adele.Vance@contoso.com\" Add a user with email Alex.Wilber@contoso.com to the SharePoint group with name Contoso Site Owners available on the web https://contoso.sharepoint.com/sites/SiteA m365 spo group user add --webUrl https://contoso.sharepoint.com/sites/SiteA --groupName \"Contoso Site Owners\" --email \"Alex.Wilber@contoso.com\" Add multiple users by email to the SharePoint group with name Contoso Site Owners available on the web https://contoso.sharepoint.com/sites/SiteA m365 spo group user add --webUrl https://contoso.sharepoint.com/sites/SiteA --groupName \"Contoso Site Owners\" --email \"Alex.Wilber@contoso.com, Adele.Vance@contoso.com\"","title":"Examples"},{"location":"cmd/spo/group/group-user-list/","text":"spo group user list \u00b6 List members of a SharePoint Group Usage \u00b6 m365 spo group user list [ options ] Options \u00b6 -u, --webUrl <webUrl> URL of the SharePoint site --groupId [groupId] Id of the SharePoint group. Use either groupName or groupId , but not both --groupName [groupName] Name of the SharePoint group. Use either groupName or groupId , but not both -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 List the members of the group with ID 5 for web https://contoso.sharepoint.com/sites/SiteA m365 spo group user list --webUrl https://contoso.sharepoint.com/sites/SiteA --groupId 5 List the members of the group with name Contoso Site Members for web https://contoso.sharepoint.com/sites/SiteA m365 spo group user list --webUrl https://contoso.sharepoint.com/sites/SiteA --groupName \"Contoso Site Members\"","title":"group user list"},{"location":"cmd/spo/group/group-user-list/#spo-group-user-list","text":"List members of a SharePoint Group","title":"spo group user list"},{"location":"cmd/spo/group/group-user-list/#usage","text":"m365 spo group user list [ options ]","title":"Usage"},{"location":"cmd/spo/group/group-user-list/#options","text":"-u, --webUrl <webUrl> URL of the SharePoint site --groupId [groupId] Id of the SharePoint group. Use either groupName or groupId , but not both --groupName [groupName] Name of the SharePoint group. Use either groupName or groupId , but not both -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/group/group-user-list/#examples","text":"List the members of the group with ID 5 for web https://contoso.sharepoint.com/sites/SiteA m365 spo group user list --webUrl https://contoso.sharepoint.com/sites/SiteA --groupId 5 List the members of the group with name Contoso Site Members for web https://contoso.sharepoint.com/sites/SiteA m365 spo group user list --webUrl https://contoso.sharepoint.com/sites/SiteA --groupName \"Contoso Site Members\"","title":"Examples"},{"location":"cmd/spo/group/group-user-remove/","text":"spo group user remove \u00b6 Removes the specified user from a SharePoint group Usage \u00b6 m365 spo group user remove [ options ] Options \u00b6 -u, --webUrl <webUrl> URL of the site where the SharePoint group is available --groupId [groupId] Id of the SharePoint group from which user has to be removed from. Use either groupName or groupId , but not both --groupName [groupName] Name of the SharePoint group from which user has to be removed from. Use either groupName or groupId , but not both --userName <userName> User's UPN (user principal name, eg. megan.bowen@contoso.com). -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Remove a user from SharePoint group with id 5 available on the web https://contoso.sharepoint.com/sites/SiteA m365 spo group user remove --webUrl https://contoso.sharepoint.com/sites/SiteA --groupId 5 --userName \"Alex.Wilber@contoso.com\" Remove a user from SharePoint group with Name Site A Visitors available on the web https://contoso.sharepoint.com/sites/SiteA m365 spo group user remove --webUrl https://contoso.sharepoint.com/sites/SiteA --groupName \"Site A Visitors\" --userName \"Alex.Wilber@contoso.com\"","title":"group user remove"},{"location":"cmd/spo/group/group-user-remove/#spo-group-user-remove","text":"Removes the specified user from a SharePoint group","title":"spo group user remove"},{"location":"cmd/spo/group/group-user-remove/#usage","text":"m365 spo group user remove [ options ]","title":"Usage"},{"location":"cmd/spo/group/group-user-remove/#options","text":"-u, --webUrl <webUrl> URL of the site where the SharePoint group is available --groupId [groupId] Id of the SharePoint group from which user has to be removed from. Use either groupName or groupId , but not both --groupName [groupName] Name of the SharePoint group from which user has to be removed from. Use either groupName or groupId , but not both --userName <userName> User's UPN (user principal name, eg. megan.bowen@contoso.com). -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/group/group-user-remove/#examples","text":"Remove a user from SharePoint group with id 5 available on the web https://contoso.sharepoint.com/sites/SiteA m365 spo group user remove --webUrl https://contoso.sharepoint.com/sites/SiteA --groupId 5 --userName \"Alex.Wilber@contoso.com\" Remove a user from SharePoint group with Name Site A Visitors available on the web https://contoso.sharepoint.com/sites/SiteA m365 spo group user remove --webUrl https://contoso.sharepoint.com/sites/SiteA --groupName \"Site A Visitors\" --userName \"Alex.Wilber@contoso.com\"","title":"Examples"},{"location":"cmd/spo/hidedefaultthemes/hidedefaultthemes-get/","text":"spo hidedefaultthemes get \u00b6 Gets the current value of the HideDefaultThemes setting Usage \u00b6 m365 spo hidedefaultthemes get [ options ] Options \u00b6 -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Important To use this command you have to have permissions to access the tenant admin site. Examples \u00b6 Get the current value of the HideDefaultThemes setting m365 spo hidedefaultthemes get More information \u00b6 SharePoint site theming: https://docs.microsoft.com/en-us/sharepoint/dev/declarative-customization/site-theming/sharepoint-site-theming-overview","title":"hidedefaultthemes get"},{"location":"cmd/spo/hidedefaultthemes/hidedefaultthemes-get/#spo-hidedefaultthemes-get","text":"Gets the current value of the HideDefaultThemes setting","title":"spo hidedefaultthemes get"},{"location":"cmd/spo/hidedefaultthemes/hidedefaultthemes-get/#usage","text":"m365 spo hidedefaultthemes get [ options ]","title":"Usage"},{"location":"cmd/spo/hidedefaultthemes/hidedefaultthemes-get/#options","text":"-h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Important To use this command you have to have permissions to access the tenant admin site.","title":"Options"},{"location":"cmd/spo/hidedefaultthemes/hidedefaultthemes-get/#examples","text":"Get the current value of the HideDefaultThemes setting m365 spo hidedefaultthemes get","title":"Examples"},{"location":"cmd/spo/hidedefaultthemes/hidedefaultthemes-get/#more-information","text":"SharePoint site theming: https://docs.microsoft.com/en-us/sharepoint/dev/declarative-customization/site-theming/sharepoint-site-theming-overview","title":"More information"},{"location":"cmd/spo/hidedefaultthemes/hidedefaultthemes-set/","text":"spo hidedefaultthemes set \u00b6 Sets the value of the HideDefaultThemes setting Usage \u00b6 m365 spo hidedefaultthemes set [ options ] Options \u00b6 --hideDefaultThemes <hideDefaultThemes> Set to true to hide default themes and to false to show them -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Important To use this command you have to have permissions to access the tenant admin site. Examples \u00b6 Hide default themes and allow users to use organization themes only m365 spo hidedefaultthemes set --hideDefaultThemes true More information \u00b6 SharePoint site theming: https://docs.microsoft.com/en-us/sharepoint/dev/declarative-customization/site-theming/sharepoint-site-theming-overview","title":"hidedefaultthemes set"},{"location":"cmd/spo/hidedefaultthemes/hidedefaultthemes-set/#spo-hidedefaultthemes-set","text":"Sets the value of the HideDefaultThemes setting","title":"spo hidedefaultthemes set"},{"location":"cmd/spo/hidedefaultthemes/hidedefaultthemes-set/#usage","text":"m365 spo hidedefaultthemes set [ options ]","title":"Usage"},{"location":"cmd/spo/hidedefaultthemes/hidedefaultthemes-set/#options","text":"--hideDefaultThemes <hideDefaultThemes> Set to true to hide default themes and to false to show them -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Important To use this command you have to have permissions to access the tenant admin site.","title":"Options"},{"location":"cmd/spo/hidedefaultthemes/hidedefaultthemes-set/#examples","text":"Hide default themes and allow users to use organization themes only m365 spo hidedefaultthemes set --hideDefaultThemes true","title":"Examples"},{"location":"cmd/spo/hidedefaultthemes/hidedefaultthemes-set/#more-information","text":"SharePoint site theming: https://docs.microsoft.com/en-us/sharepoint/dev/declarative-customization/site-theming/sharepoint-site-theming-overview","title":"More information"},{"location":"cmd/spo/homesite/homesite-get/","text":"spo homesite get \u00b6 Gets information about the Home Site Usage \u00b6 m365 spo homesite get [ options ] Options \u00b6 -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Get information about the Home Site m365 spo homesite get More information \u00b6 SharePoint home sites: a landing for your organization on the intelligent intranet: https://techcommunity.microsoft.com/t5/Microsoft-SharePoint-Blog/SharePoint-home-sites-a-landing-for-your-organization-on-the/ba-p/621933","title":"homesite get"},{"location":"cmd/spo/homesite/homesite-get/#spo-homesite-get","text":"Gets information about the Home Site","title":"spo homesite get"},{"location":"cmd/spo/homesite/homesite-get/#usage","text":"m365 spo homesite get [ options ]","title":"Usage"},{"location":"cmd/spo/homesite/homesite-get/#options","text":"-h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/homesite/homesite-get/#examples","text":"Get information about the Home Site m365 spo homesite get","title":"Examples"},{"location":"cmd/spo/homesite/homesite-get/#more-information","text":"SharePoint home sites: a landing for your organization on the intelligent intranet: https://techcommunity.microsoft.com/t5/Microsoft-SharePoint-Blog/SharePoint-home-sites-a-landing-for-your-organization-on-the/ba-p/621933","title":"More information"},{"location":"cmd/spo/homesite/homesite-remove/","text":"spo homesite remove \u00b6 Removes the current Home Site Usage \u00b6 m365 spo homesite remove [ options ] Options \u00b6 --confirm Do not prompt for confirmation before removing the Home Site -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Important To use this command you have to have permissions to access the tenant admin site. Examples \u00b6 Removes the current Home Site without confirmation m365 spo homesite remove --confirm More information \u00b6 SharePoint home sites, a landing for your organization on the intelligent intranet: https://techcommunity.microsoft.com/t5/Microsoft-SharePoint-Blog/SharePoint-home-sites-a-landing-for-your-organization-on-the/ba-p/621933","title":"homesite remove"},{"location":"cmd/spo/homesite/homesite-remove/#spo-homesite-remove","text":"Removes the current Home Site","title":"spo homesite remove"},{"location":"cmd/spo/homesite/homesite-remove/#usage","text":"m365 spo homesite remove [ options ]","title":"Usage"},{"location":"cmd/spo/homesite/homesite-remove/#options","text":"--confirm Do not prompt for confirmation before removing the Home Site -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Important To use this command you have to have permissions to access the tenant admin site.","title":"Options"},{"location":"cmd/spo/homesite/homesite-remove/#examples","text":"Removes the current Home Site without confirmation m365 spo homesite remove --confirm","title":"Examples"},{"location":"cmd/spo/homesite/homesite-remove/#more-information","text":"SharePoint home sites, a landing for your organization on the intelligent intranet: https://techcommunity.microsoft.com/t5/Microsoft-SharePoint-Blog/SharePoint-home-sites-a-landing-for-your-organization-on-the/ba-p/621933","title":"More information"},{"location":"cmd/spo/homesite/homesite-set/","text":"spo homesite set \u00b6 Sets the specified site as the Home Site Usage \u00b6 m365 spo homesite set [ options ] Options \u00b6 -u, --siteUrl <siteUrl> The URL of the site to set as Home Site -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Important To use this command you have to have permissions to access the tenant admin site. Examples \u00b6 Set the specified site as the Home Site m365 spo homesite set --siteUrl https://contoso.sharepoint.com/sites/comms More information \u00b6 SharePoint home sites: a landing for your organization on the intelligent intranet: https://techcommunity.microsoft.com/t5/Microsoft-SharePoint-Blog/SharePoint-home-sites-a-landing-for-your-organization-on-the/ba-p/621933","title":"homesite set"},{"location":"cmd/spo/homesite/homesite-set/#spo-homesite-set","text":"Sets the specified site as the Home Site","title":"spo homesite set"},{"location":"cmd/spo/homesite/homesite-set/#usage","text":"m365 spo homesite set [ options ]","title":"Usage"},{"location":"cmd/spo/homesite/homesite-set/#options","text":"-u, --siteUrl <siteUrl> The URL of the site to set as Home Site -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Important To use this command you have to have permissions to access the tenant admin site.","title":"Options"},{"location":"cmd/spo/homesite/homesite-set/#examples","text":"Set the specified site as the Home Site m365 spo homesite set --siteUrl https://contoso.sharepoint.com/sites/comms","title":"Examples"},{"location":"cmd/spo/homesite/homesite-set/#more-information","text":"SharePoint home sites: a landing for your organization on the intelligent intranet: https://techcommunity.microsoft.com/t5/Microsoft-SharePoint-Blog/SharePoint-home-sites-a-landing-for-your-organization-on-the/ba-p/621933","title":"More information"},{"location":"cmd/spo/hubsite/hubsite-data-get/","text":"spo hubsite data get \u00b6 Get hub site data for the specified site Usage \u00b6 m365 spo hubsite data get [ options ] Options \u00b6 -u, --webUrl <webUrl> URL of the site for which to retrieve hub site data -f, --forceRefresh Set, to refresh the server cache with the latest updates -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 Attention This command is based on a SharePoint API that is currently in preview and is subject to change once the API reached general availability. By default, the hub site data is returned from the server's cache. To refresh the data with the latest updates, use the -f, --forceRefresh option. Use this option, if you just made changes and need to see them right away. If the specified site is not connected to a hub site site and is not a hub site itself, no data will be retrieved. Examples \u00b6 Get information about the hub site data for a site with URL https://contoso.sharepoint.com/sites/project-x m365 spo hubsite data get --webUrl https://contoso.sharepoint.com/sites/project-x More information \u00b6 SharePoint hub sites new in Microsoft 365: https://techcommunity.microsoft.com/t5/SharePoint-Blog/SharePoint-hub-sites-new-in-Office-365/ba-p/109547","title":"hubsite data get"},{"location":"cmd/spo/hubsite/hubsite-data-get/#spo-hubsite-data-get","text":"Get hub site data for the specified site","title":"spo hubsite data get"},{"location":"cmd/spo/hubsite/hubsite-data-get/#usage","text":"m365 spo hubsite data get [ options ]","title":"Usage"},{"location":"cmd/spo/hubsite/hubsite-data-get/#options","text":"-u, --webUrl <webUrl> URL of the site for which to retrieve hub site data -f, --forceRefresh Set, to refresh the server cache with the latest updates -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/hubsite/hubsite-data-get/#remarks","text":"Attention This command is based on a SharePoint API that is currently in preview and is subject to change once the API reached general availability. By default, the hub site data is returned from the server's cache. To refresh the data with the latest updates, use the -f, --forceRefresh option. Use this option, if you just made changes and need to see them right away. If the specified site is not connected to a hub site site and is not a hub site itself, no data will be retrieved.","title":"Remarks"},{"location":"cmd/spo/hubsite/hubsite-data-get/#examples","text":"Get information about the hub site data for a site with URL https://contoso.sharepoint.com/sites/project-x m365 spo hubsite data get --webUrl https://contoso.sharepoint.com/sites/project-x","title":"Examples"},{"location":"cmd/spo/hubsite/hubsite-data-get/#more-information","text":"SharePoint hub sites new in Microsoft 365: https://techcommunity.microsoft.com/t5/SharePoint-Blog/SharePoint-hub-sites-new-in-Office-365/ba-p/109547","title":"More information"},{"location":"cmd/spo/hubsite/hubsite-get/","text":"spo hubsite get \u00b6 Gets information about the specified hub site Usage \u00b6 m365 spo hubsite get [ options ] Options \u00b6 -i, --id [id] ID of the hub site. Specify either id , title or url but not multiple. -t, --title [title] Title of the hub site. Specify either id , title or url but not multiple. -u, --url [url] URL of the hub site. Specify either id , title or url but not multiple. --includeAssociatedSites Include the associated sites in the result (only in JSON output) -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Get information about the hub site with ID 2c1ba4c4-cd9b-4417-832f-92a34bc34b2a m365 spo hubsite get --id 2c1ba4c4-cd9b-4417-832f-92a34bc34b2a Get information about the hub site with Title My Hub Site m365 spo hubsite get --title 'My Hub Site' Get information about the hub site with URL https://contoso.sharepoint.com/sites/HubSite m365 spo hubsite get --url 'https://contoso.sharepoint.com/sites/HubSite' Get information about the hub site with ID 2c1ba4c4-cd9b-4417-832f-92a34bc34b2a , including its associated sites. Associated site info is only shown in JSON output. m365 spo hubsite get --id 2c1ba4c4-cd9b-4417-832f-92a34bc34b2a --includeAssociatedSites --output json Get information about the hub site with Title My Hub Site m365 spo hubsite get --title \"My Hub Site\" Get information about the hub site with URL https://contoso.sharepoint.com/sites/HubSite m365 spo hubsite get --url \"https://contoso.sharepoint.com/sites/HubSite\" More information \u00b6 SharePoint hub sites new in Microsoft 365: https://techcommunity.microsoft.com/t5/SharePoint-Blog/SharePoint-hub-sites-new-in-Office-365/ba-p/109547","title":"hubsite get"},{"location":"cmd/spo/hubsite/hubsite-get/#spo-hubsite-get","text":"Gets information about the specified hub site","title":"spo hubsite get"},{"location":"cmd/spo/hubsite/hubsite-get/#usage","text":"m365 spo hubsite get [ options ]","title":"Usage"},{"location":"cmd/spo/hubsite/hubsite-get/#options","text":"-i, --id [id] ID of the hub site. Specify either id , title or url but not multiple. -t, --title [title] Title of the hub site. Specify either id , title or url but not multiple. -u, --url [url] URL of the hub site. Specify either id , title or url but not multiple. --includeAssociatedSites Include the associated sites in the result (only in JSON output) -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/hubsite/hubsite-get/#examples","text":"Get information about the hub site with ID 2c1ba4c4-cd9b-4417-832f-92a34bc34b2a m365 spo hubsite get --id 2c1ba4c4-cd9b-4417-832f-92a34bc34b2a Get information about the hub site with Title My Hub Site m365 spo hubsite get --title 'My Hub Site' Get information about the hub site with URL https://contoso.sharepoint.com/sites/HubSite m365 spo hubsite get --url 'https://contoso.sharepoint.com/sites/HubSite' Get information about the hub site with ID 2c1ba4c4-cd9b-4417-832f-92a34bc34b2a , including its associated sites. Associated site info is only shown in JSON output. m365 spo hubsite get --id 2c1ba4c4-cd9b-4417-832f-92a34bc34b2a --includeAssociatedSites --output json Get information about the hub site with Title My Hub Site m365 spo hubsite get --title \"My Hub Site\" Get information about the hub site with URL https://contoso.sharepoint.com/sites/HubSite m365 spo hubsite get --url \"https://contoso.sharepoint.com/sites/HubSite\"","title":"Examples"},{"location":"cmd/spo/hubsite/hubsite-get/#more-information","text":"SharePoint hub sites new in Microsoft 365: https://techcommunity.microsoft.com/t5/SharePoint-Blog/SharePoint-hub-sites-new-in-Office-365/ba-p/109547","title":"More information"},{"location":"cmd/spo/hubsite/hubsite-list/","text":"spo hubsite list \u00b6 Lists hub sites in the current tenant Usage \u00b6 m365 spo hubsite list [ options ] Options \u00b6 -i, --includeAssociatedSites Include the associated sites in the result (only in JSON output) -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 When using the text or csv output type, the command lists only the values of the ID , SiteUrl and Title properties of the hub site. With the output type as JSON, all available properties are included in the command output. Examples \u00b6 List hub sites in the current tenant m365 spo hubsite list List hub sites, including their associated sites, in the current tenant. Associated site info is only shown in JSON output. m365 spo hubsite list --includeAssociatedSites --output json More information \u00b6 SharePoint hub sites new in Microsoft 365: https://techcommunity.microsoft.com/t5/SharePoint-Blog/SharePoint-hub-sites-new-in-Office-365/ba-p/109547","title":"hubsite list"},{"location":"cmd/spo/hubsite/hubsite-list/#spo-hubsite-list","text":"Lists hub sites in the current tenant","title":"spo hubsite list"},{"location":"cmd/spo/hubsite/hubsite-list/#usage","text":"m365 spo hubsite list [ options ]","title":"Usage"},{"location":"cmd/spo/hubsite/hubsite-list/#options","text":"-i, --includeAssociatedSites Include the associated sites in the result (only in JSON output) -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/hubsite/hubsite-list/#remarks","text":"When using the text or csv output type, the command lists only the values of the ID , SiteUrl and Title properties of the hub site. With the output type as JSON, all available properties are included in the command output.","title":"Remarks"},{"location":"cmd/spo/hubsite/hubsite-list/#examples","text":"List hub sites in the current tenant m365 spo hubsite list List hub sites, including their associated sites, in the current tenant. Associated site info is only shown in JSON output. m365 spo hubsite list --includeAssociatedSites --output json","title":"Examples"},{"location":"cmd/spo/hubsite/hubsite-list/#more-information","text":"SharePoint hub sites new in Microsoft 365: https://techcommunity.microsoft.com/t5/SharePoint-Blog/SharePoint-hub-sites-new-in-Office-365/ba-p/109547","title":"More information"},{"location":"cmd/spo/hubsite/hubsite-register/","text":"spo hubsite register \u00b6 Registers the specified site collection as a hub site Usage \u00b6 m365 spo hubsite register [ options ] Options \u00b6 -u, --siteUrl <siteUrl> URL of the site collection to register as a hub site -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 Important To use this command you must be a Global or SharePoint administrator. If the specified site collection is already registered as a hub site, you will get a This site is already a HubSite. error. Examples \u00b6 Register the site collection with URL https://contoso.sharepoint.com/sites/sales as a hub site m365 spo hubsite register --siteUrl https://contoso.sharepoint.com/sites/sales More information \u00b6 SharePoint hub sites new in Microsoft 365: https://techcommunity.microsoft.com/t5/SharePoint-Blog/SharePoint-hub-sites-new-in-Office-365/ba-p/109547","title":"hubsite register"},{"location":"cmd/spo/hubsite/hubsite-register/#spo-hubsite-register","text":"Registers the specified site collection as a hub site","title":"spo hubsite register"},{"location":"cmd/spo/hubsite/hubsite-register/#usage","text":"m365 spo hubsite register [ options ]","title":"Usage"},{"location":"cmd/spo/hubsite/hubsite-register/#options","text":"-u, --siteUrl <siteUrl> URL of the site collection to register as a hub site -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/hubsite/hubsite-register/#remarks","text":"Important To use this command you must be a Global or SharePoint administrator. If the specified site collection is already registered as a hub site, you will get a This site is already a HubSite. error.","title":"Remarks"},{"location":"cmd/spo/hubsite/hubsite-register/#examples","text":"Register the site collection with URL https://contoso.sharepoint.com/sites/sales as a hub site m365 spo hubsite register --siteUrl https://contoso.sharepoint.com/sites/sales","title":"Examples"},{"location":"cmd/spo/hubsite/hubsite-register/#more-information","text":"SharePoint hub sites new in Microsoft 365: https://techcommunity.microsoft.com/t5/SharePoint-Blog/SharePoint-hub-sites-new-in-Office-365/ba-p/109547","title":"More information"},{"location":"cmd/spo/hubsite/hubsite-rights-grant/","text":"spo hubsite rights grant \u00b6 Grants permissions to join the hub site for one or more principals Usage \u00b6 m365 spo hubsite rights grant [ options ] Options \u00b6 -u, --hubSiteUrl <hubSiteUrl> The URL of the hub site to grant rights on -p, --principals <principals> Comma-separated list of principals to grant join rights. Principals can be users or mail-enabled security groups in the form of alias or alias@<domain name>.com -r, --rights <rights> Rights to grant to principals. Available values Join -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Important To use this command you have to have permissions to access the tenant admin site. Remarks \u00b6 Attention This command is based on a SharePoint API that is currently in preview and is subject to change once the API reached general availability. Examples \u00b6 Grant user with alias PattiF permission to join sites to the hub site with URL https://contoso.sharepoint.com/sites/sales m365 spo hubsite rights grant --hubSiteUrl https://contoso.sharepoint.com/sites/sales --principals PattiF --rights Join Grant users with aliases PattiF and AdeleV permission to join sites to the hub site with URL https://contoso.sharepoint.com/sites/sales m365 spo hubsite rights grant --hubSiteUrl https://contoso.sharepoint.com/sites/sales --principals \"PattiF,AdeleV\" --rights Join Grant user with email PattiF@contoso.com permission to join sites to the hub site with URL https://contoso.sharepoint.com/sites/sales m365 spo hubsite rights grant --hubSiteUrl https://contoso.sharepoint.com/sites/sales --principals PattiF@contoso.com --rights Join More information \u00b6 SharePoint hub sites new in Microsoft 365: https://techcommunity.microsoft.com/t5/SharePoint-Blog/SharePoint-hub-sites-new-in-Office-365/ba-p/109547","title":"hubsite rights grant"},{"location":"cmd/spo/hubsite/hubsite-rights-grant/#spo-hubsite-rights-grant","text":"Grants permissions to join the hub site for one or more principals","title":"spo hubsite rights grant"},{"location":"cmd/spo/hubsite/hubsite-rights-grant/#usage","text":"m365 spo hubsite rights grant [ options ]","title":"Usage"},{"location":"cmd/spo/hubsite/hubsite-rights-grant/#options","text":"-u, --hubSiteUrl <hubSiteUrl> The URL of the hub site to grant rights on -p, --principals <principals> Comma-separated list of principals to grant join rights. Principals can be users or mail-enabled security groups in the form of alias or alias@<domain name>.com -r, --rights <rights> Rights to grant to principals. Available values Join -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Important To use this command you have to have permissions to access the tenant admin site.","title":"Options"},{"location":"cmd/spo/hubsite/hubsite-rights-grant/#remarks","text":"Attention This command is based on a SharePoint API that is currently in preview and is subject to change once the API reached general availability.","title":"Remarks"},{"location":"cmd/spo/hubsite/hubsite-rights-grant/#examples","text":"Grant user with alias PattiF permission to join sites to the hub site with URL https://contoso.sharepoint.com/sites/sales m365 spo hubsite rights grant --hubSiteUrl https://contoso.sharepoint.com/sites/sales --principals PattiF --rights Join Grant users with aliases PattiF and AdeleV permission to join sites to the hub site with URL https://contoso.sharepoint.com/sites/sales m365 spo hubsite rights grant --hubSiteUrl https://contoso.sharepoint.com/sites/sales --principals \"PattiF,AdeleV\" --rights Join Grant user with email PattiF@contoso.com permission to join sites to the hub site with URL https://contoso.sharepoint.com/sites/sales m365 spo hubsite rights grant --hubSiteUrl https://contoso.sharepoint.com/sites/sales --principals PattiF@contoso.com --rights Join","title":"Examples"},{"location":"cmd/spo/hubsite/hubsite-rights-grant/#more-information","text":"SharePoint hub sites new in Microsoft 365: https://techcommunity.microsoft.com/t5/SharePoint-Blog/SharePoint-hub-sites-new-in-Office-365/ba-p/109547","title":"More information"},{"location":"cmd/spo/hubsite/hubsite-rights-revoke/","text":"spo hubsite rights revoke \u00b6 Revokes rights to join sites to the specified hub site for one or more principals Usage \u00b6 m365 spo hubsite rights revoke [ options ] Options \u00b6 -u, --hubSiteUrl <hubSiteUrl> The URL of the hub site to revoke rights on -p, --principals <principals> Comma-separated list of principals to revoke join rights. Principals can be users or mail-enabled security groups in the form of alias or alias@<domain name>.com --confirm Don't prompt for confirming revoking rights -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Important To use this command you have to have permissions to access the tenant admin site. Remarks \u00b6 Attention This command is based on a SharePoint API that is currently in preview and is subject to change once the API reached general availability. Examples \u00b6 Revoke rights to join sites to the hub site with URL https://contoso.sharepoint.com/sites/sales from user with alias PattiF . Will prompt for confirmation before revoking the rights m365 spo hubsite rights revoke --hubSiteUrl https://contoso.sharepoint.com/sites/sales --principals PattiF Revoke rights to join sites to the hub site with URL https://contoso.sharepoint.com/sites/sales from user with aliases PattiF and AdeleV without prompting for confirmation m365 spo hubsite rights revoke --hubSiteUrl https://contoso.sharepoint.com/sites/sales --principals \"PattiF,AdeleV\" --confirm More information \u00b6 SharePoint hub sites new in Microsoft 365: https://techcommunity.microsoft.com/t5/SharePoint-Blog/SharePoint-hub-sites-new-in-Office-365/ba-p/109547","title":"hubsite rights revoke"},{"location":"cmd/spo/hubsite/hubsite-rights-revoke/#spo-hubsite-rights-revoke","text":"Revokes rights to join sites to the specified hub site for one or more principals","title":"spo hubsite rights revoke"},{"location":"cmd/spo/hubsite/hubsite-rights-revoke/#usage","text":"m365 spo hubsite rights revoke [ options ]","title":"Usage"},{"location":"cmd/spo/hubsite/hubsite-rights-revoke/#options","text":"-u, --hubSiteUrl <hubSiteUrl> The URL of the hub site to revoke rights on -p, --principals <principals> Comma-separated list of principals to revoke join rights. Principals can be users or mail-enabled security groups in the form of alias or alias@<domain name>.com --confirm Don't prompt for confirming revoking rights -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Important To use this command you have to have permissions to access the tenant admin site.","title":"Options"},{"location":"cmd/spo/hubsite/hubsite-rights-revoke/#remarks","text":"Attention This command is based on a SharePoint API that is currently in preview and is subject to change once the API reached general availability.","title":"Remarks"},{"location":"cmd/spo/hubsite/hubsite-rights-revoke/#examples","text":"Revoke rights to join sites to the hub site with URL https://contoso.sharepoint.com/sites/sales from user with alias PattiF . Will prompt for confirmation before revoking the rights m365 spo hubsite rights revoke --hubSiteUrl https://contoso.sharepoint.com/sites/sales --principals PattiF Revoke rights to join sites to the hub site with URL https://contoso.sharepoint.com/sites/sales from user with aliases PattiF and AdeleV without prompting for confirmation m365 spo hubsite rights revoke --hubSiteUrl https://contoso.sharepoint.com/sites/sales --principals \"PattiF,AdeleV\" --confirm","title":"Examples"},{"location":"cmd/spo/hubsite/hubsite-rights-revoke/#more-information","text":"SharePoint hub sites new in Microsoft 365: https://techcommunity.microsoft.com/t5/SharePoint-Blog/SharePoint-hub-sites-new-in-Office-365/ba-p/109547","title":"More information"},{"location":"cmd/spo/hubsite/hubsite-set/","text":"spo hubsite set \u00b6 Updates properties of the specified hub site Usage \u00b6 m365 spo hubsite set [ options ] Options \u00b6 -i, --id <id> ID of the hub site to update -t, --title [title] The new title for the hub site -d, --description [description] The new description for the hub site -l, --logoUrl [logoUrl] The URL of the new logo for the hub site -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Important To use this command you have to have permissions to access the tenant admin site. Remarks \u00b6 Attention This command is based on a SharePoint API that is currently in preview and is subject to change once the API reached general availability. If the specified id doesn't refer to an existing hub site, you will get an Unknown Error error. Examples \u00b6 Update hub site's title m365 spo hubsite set --id 255a50b2-527f-4413-8485-57f4c17a24d1 --title Sales Update hub site's title and description m365 spo hubsite set --id 255a50b2-527f-4413-8485-57f4c17a24d1 --title Sales --description \"All things sales\" More information \u00b6 SharePoint hub sites new in Microsoft 365: https://techcommunity.microsoft.com/t5/SharePoint-Blog/SharePoint-hub-sites-new-in-Office-365/ba-p/109547","title":"hubsite set"},{"location":"cmd/spo/hubsite/hubsite-set/#spo-hubsite-set","text":"Updates properties of the specified hub site","title":"spo hubsite set"},{"location":"cmd/spo/hubsite/hubsite-set/#usage","text":"m365 spo hubsite set [ options ]","title":"Usage"},{"location":"cmd/spo/hubsite/hubsite-set/#options","text":"-i, --id <id> ID of the hub site to update -t, --title [title] The new title for the hub site -d, --description [description] The new description for the hub site -l, --logoUrl [logoUrl] The URL of the new logo for the hub site -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Important To use this command you have to have permissions to access the tenant admin site.","title":"Options"},{"location":"cmd/spo/hubsite/hubsite-set/#remarks","text":"Attention This command is based on a SharePoint API that is currently in preview and is subject to change once the API reached general availability. If the specified id doesn't refer to an existing hub site, you will get an Unknown Error error.","title":"Remarks"},{"location":"cmd/spo/hubsite/hubsite-set/#examples","text":"Update hub site's title m365 spo hubsite set --id 255a50b2-527f-4413-8485-57f4c17a24d1 --title Sales Update hub site's title and description m365 spo hubsite set --id 255a50b2-527f-4413-8485-57f4c17a24d1 --title Sales --description \"All things sales\"","title":"Examples"},{"location":"cmd/spo/hubsite/hubsite-set/#more-information","text":"SharePoint hub sites new in Microsoft 365: https://techcommunity.microsoft.com/t5/SharePoint-Blog/SharePoint-hub-sites-new-in-Office-365/ba-p/109547","title":"More information"},{"location":"cmd/spo/hubsite/hubsite-unregister/","text":"spo hubsite unregister \u00b6 Unregisters the specified site collection as a hub site Usage \u00b6 m365 spo hubsite unregister [ options ] Options \u00b6 -u, --url <url> URL of the site collection to unregister as a hub site --confirm Don't prompt for confirming unregistering the hub site -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 Important To use this command you must be a Global or SharePoint administrator. If the specified site collection is not registered as a hub site, you will get a hubSiteId error. Examples \u00b6 Unregister the site collection with URL https://contoso.sharepoint.com/sites/sales as a hub site. Will prompt for confirmation before unregistering the hub site. m365 spo hubsite unregister --url https://contoso.sharepoint.com/sites/sales Unregister the site collection with URL https://contoso.sharepoint.com/sites/sales as a hub site without prompting for confirmation. m365 spo hubsite unregister --url https://contoso.sharepoint.com/sites/sales --confirm More information \u00b6 SharePoint hub sites new in Microsoft 365: https://techcommunity.microsoft.com/t5/SharePoint-Blog/SharePoint-hub-sites-new-in-Office-365/ba-p/109547","title":"hubsite unregister"},{"location":"cmd/spo/hubsite/hubsite-unregister/#spo-hubsite-unregister","text":"Unregisters the specified site collection as a hub site","title":"spo hubsite unregister"},{"location":"cmd/spo/hubsite/hubsite-unregister/#usage","text":"m365 spo hubsite unregister [ options ]","title":"Usage"},{"location":"cmd/spo/hubsite/hubsite-unregister/#options","text":"-u, --url <url> URL of the site collection to unregister as a hub site --confirm Don't prompt for confirming unregistering the hub site -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/hubsite/hubsite-unregister/#remarks","text":"Important To use this command you must be a Global or SharePoint administrator. If the specified site collection is not registered as a hub site, you will get a hubSiteId error.","title":"Remarks"},{"location":"cmd/spo/hubsite/hubsite-unregister/#examples","text":"Unregister the site collection with URL https://contoso.sharepoint.com/sites/sales as a hub site. Will prompt for confirmation before unregistering the hub site. m365 spo hubsite unregister --url https://contoso.sharepoint.com/sites/sales Unregister the site collection with URL https://contoso.sharepoint.com/sites/sales as a hub site without prompting for confirmation. m365 spo hubsite unregister --url https://contoso.sharepoint.com/sites/sales --confirm","title":"Examples"},{"location":"cmd/spo/hubsite/hubsite-unregister/#more-information","text":"SharePoint hub sites new in Microsoft 365: https://techcommunity.microsoft.com/t5/SharePoint-Blog/SharePoint-hub-sites-new-in-Office-365/ba-p/109547","title":"More information"},{"location":"cmd/spo/knowledgehub/knowledgehub-get/","text":"spo knowledgehub get \u00b6 Gets the Knowledge Hub Site URL for your tenant Usage \u00b6 m365 spo knowledgehub get [ options ] Options \u00b6 -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Important To use this command you have to have permissions to access the tenant admin site. Examples \u00b6 Gets the Knowledge Hub Site URL for your tenant m365 spo knowledgehub get","title":"knowledgehub get"},{"location":"cmd/spo/knowledgehub/knowledgehub-get/#spo-knowledgehub-get","text":"Gets the Knowledge Hub Site URL for your tenant","title":"spo knowledgehub get"},{"location":"cmd/spo/knowledgehub/knowledgehub-get/#usage","text":"m365 spo knowledgehub get [ options ]","title":"Usage"},{"location":"cmd/spo/knowledgehub/knowledgehub-get/#options","text":"-h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Important To use this command you have to have permissions to access the tenant admin site.","title":"Options"},{"location":"cmd/spo/knowledgehub/knowledgehub-get/#examples","text":"Gets the Knowledge Hub Site URL for your tenant m365 spo knowledgehub get","title":"Examples"},{"location":"cmd/spo/knowledgehub/knowledgehub-remove/","text":"spo knowledgehub remove \u00b6 Removes the Knowledge Hub Site setting for your tenant Usage \u00b6 m365 spo knowledgehub remove [ options ] Options \u00b6 --confirm Do not prompt for confirmation before removing the Knowledge Hub Site setting for your tenant -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Important To use this command you have to have permissions to access the tenant admin site. Examples \u00b6 Removes the Knowledge Hub Site setting for your tenant m365 spo knowledgehub remove Removes the Knowledge Hub Site setting for your tenant without confirmation m365 spo knowledgehub remove --confirm","title":"knowledgehub remove"},{"location":"cmd/spo/knowledgehub/knowledgehub-remove/#spo-knowledgehub-remove","text":"Removes the Knowledge Hub Site setting for your tenant","title":"spo knowledgehub remove"},{"location":"cmd/spo/knowledgehub/knowledgehub-remove/#usage","text":"m365 spo knowledgehub remove [ options ]","title":"Usage"},{"location":"cmd/spo/knowledgehub/knowledgehub-remove/#options","text":"--confirm Do not prompt for confirmation before removing the Knowledge Hub Site setting for your tenant -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Important To use this command you have to have permissions to access the tenant admin site.","title":"Options"},{"location":"cmd/spo/knowledgehub/knowledgehub-remove/#examples","text":"Removes the Knowledge Hub Site setting for your tenant m365 spo knowledgehub remove Removes the Knowledge Hub Site setting for your tenant without confirmation m365 spo knowledgehub remove --confirm","title":"Examples"},{"location":"cmd/spo/knowledgehub/knowledgehub-set/","text":"spo knowledgehub set \u00b6 Sets the Knowledge Hub Site for your tenant Usage \u00b6 m365 spo knowledgehub set [ options ] Options \u00b6 -u, --siteUrl <siteUrl> URL of the site to set as Knowledge Hub -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Important To use this command you have to have permissions to access the tenant admin site. Remarks \u00b6 If the specified url doesn't refer to an existing site collection, you will get a 404 - \"404 FILE NOT FOUND\" error. Examples \u00b6 Sets the Knowledge Hub Site for your tenant m365 spo knowledgehub set --siteUrl https://contoso.sharepoint.com/sites/knowledgesite","title":"knowledgehub set"},{"location":"cmd/spo/knowledgehub/knowledgehub-set/#spo-knowledgehub-set","text":"Sets the Knowledge Hub Site for your tenant","title":"spo knowledgehub set"},{"location":"cmd/spo/knowledgehub/knowledgehub-set/#usage","text":"m365 spo knowledgehub set [ options ]","title":"Usage"},{"location":"cmd/spo/knowledgehub/knowledgehub-set/#options","text":"-u, --siteUrl <siteUrl> URL of the site to set as Knowledge Hub -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Important To use this command you have to have permissions to access the tenant admin site.","title":"Options"},{"location":"cmd/spo/knowledgehub/knowledgehub-set/#remarks","text":"If the specified url doesn't refer to an existing site collection, you will get a 404 - \"404 FILE NOT FOUND\" error.","title":"Remarks"},{"location":"cmd/spo/knowledgehub/knowledgehub-set/#examples","text":"Sets the Knowledge Hub Site for your tenant m365 spo knowledgehub set --siteUrl https://contoso.sharepoint.com/sites/knowledgesite","title":"Examples"},{"location":"cmd/spo/list/list-add/","text":"spo list add \u00b6 Creates list in the specified site Usage \u00b6 m365 spo list add [ options ] Options \u00b6 -t, --title <title> Title of the list to add --baseTemplate <baseTemplate> The list definition type on which the list is based. Allowed values Announcements,Contacts,CustomGrid,DataSources,DiscussionBoard,DocumentLibrary,Events,GanttTasks,GenericList,IssuesTracking,Links,NoCodeWorkflows,PictureLibrary,Survey,Tasks,WebPageLibrary,WorkflowHistory,WorkflowProcess,XmlForm . Default GenericList -u, --webUrl <webUrl> URL of the site where the list should be added --description [description] The description for the list --templateFeatureId [templateFeatureId] The globally unique identifier (GUID) of a template feature that is associated with the list --schemaXml [schemaXml] The schema in Collaborative Application Markup Language (CAML) schemas that defines the list --allowDeletion [allowDeletion] Boolean value specifying whether the list can be deleted. Valid values are true,false --allowEveryoneViewItems [allowEveryoneViewItems] Boolean value specifying whether everyone can view documents in the documentlibrary or attachments to items in the list. Valid values are true,false --allowMultiResponses [allowMultiResponses] Boolean value specifying whether users are allowed to give multiple responses to the survey. Valid values are true,false --contentTypesEnabled [contentTypesEnabled] Boolean value specifying whether content types are enabled for the list. Valid values are true,false --crawlNonDefaultViews [crawlNonDefaultViews] Boolean value specifying whether to crawl non default views. Valid values are true,false --defaultContentApprovalWorkflowId [defaultContentApprovalWorkflowId] Value that specifies the default workflow identifier for content approval onthe list (GUID) --defaultDisplayFormUrl [defaultDisplayFormUrl] Value that specifies the location of the default display form for the list --defaultEditFormUrl [defaultEditFormUrl] Value that specifies the URL of the edit form to use for list items in the list --direction [direction] Value that specifies the reading order of the list. Valid values are NONE,LTR,RTL --disableGridEditing [disableGridEditing] Property for assigning or retrieving grid editing on the list. Valid values are true,false --draftVersionVisibility [draftVersionVisibility] Value that specifies the minimum permission required to view minor versions and drafts within the list. Allowed values Reader,Author,Approver . Default Reader --emailAlias [emailAlias] If e-mail notification is enabled, gets or sets the e-mail address to use tonotify to the owner of an item when an assignment has changed or the item has been updated. --enableAssignToEmail [enableAssignToEmail] Boolean value specifying whether e-mail notification is enabled for the list. Valid values are true,false --enableAttachments [enableAttachments] Boolean value that specifies whether attachments can be added to items in the list. Valid values are true,false --enableDeployWithDependentList [enableDeployWithDependentList] Boolean value that specifies whether the list can be deployed with a dependent list. Valid values are true,false --enableFolderCreation [enableFolderCreation] Boolean value that specifies whether folders can be created for the list. Valid values are true,false --enableMinorVersions [enableMinorVersions] Boolean value that specifies whether minor versions are enabled when versioning is enabled for the document library. Valid values are true,false --enableModeration [enableModeration] Boolean value that specifies whether Content Approval is enabled for the list. Valid values are true,false --enablePeopleSelector [enablePeopleSelector] Enable user selector on event list. Valid values are true,false --enableResourceSelector [enableResourceSelector] Enables resource selector on an event list. Valid values are true,false --enableSchemaCaching [enableSchemaCaching] Boolean value specifying whether schema caching is enabled for the list. Valid values are true,false --enableSyndication [enableSyndication] Boolean value that specifies whether RSS syndication is enabled for the list. Valid values are true,false --enableThrottling [enableThrottling] Indicates whether throttling for this list is enabled or not. Valid values are true,false --enableVersioning [enableVersioning] Boolean value that specifies whether versioning is enabled for the document library. Valid values are true,false --enforceDataValidation [enforceDataValidation] Value that indicates whether certain field properties are enforced when an item is added or updated. Valid values are true,false --excludeFromOfflineClient [excludeFromOfflineClient] Value that indicates whether the list should be downloaded to the client during offline synchronization. Valid values are true,false --fetchPropertyBagForListView [fetchPropertyBagForListView] Specifies whether property bag information, as part of the list schema JSON,is retrieved when the list is being rendered on the client. Valid values are true,false --followable [followable] Can a list be followed in an activity feed?. Valid values are true,false --forceCheckout [forceCheckout] Boolean value that specifies whether forced checkout is enabled for the document library. Valid values are true,false --forceDefaultContentType [forceDefaultContentType] Specifies whether we want to return the default Document root content type. Valid values are true,false --hidden [hidden] Boolean value that specifies whether the list is hidden. Valid values are true,false --includedInMyFilesScope [includedInMyFilesScope] Specifies whether this list is accessible to an app principal that has been granted an OAuth scope that contains the string \u201cmyfiles\u201d by a case-insensitive comparison when the current user is a site collection administrator of the personal site that contains the list --irmEnabled [irmEnabled] Gets or sets a Boolean value that specifies whether Information Rights Management (IRM) is enabled for the list --irmExpire [irmExpire] Gets or sets a Boolean value that specifies whether Information Rights Management (IRM) expiration is enabled for the list --irmReject [irmReject] Gets or sets a Boolean value that specifies whether Information Rights Management (IRM) rejection is enabled for the list --isApplicationList [isApplicationList] Indicates whether this list should be treated as a top level navigation object or not --listExperienceOptions [listExperienceOptions] Gets or sets the list experience for the list. Allowed values Auto,NewExperience,ClassicExperience. Default Auto --majorVersionLimit [majorVersionLimit] Gets or sets the maximum number of major versions allowed for an item in a document library that uses version control with major versions only. --majorWithMinorVersionsLimit [majorWithMinorVersionsLimit] Gets or sets the maximum number of major versions that are allowed for an item in a document library that uses version control with both major and minor versions. --multipleDataList [multipleDataList] Gets or sets a Boolean value that specifies whether the list in a Meeting Workspace sitecontains data for multiple meeting instances within the site --navigateForFormsPages [navigateForFormsPages] Indicates whether to navigate for forms pages or use a modal dialog --needUpdateSiteClientTag [needUpdateSiteClientTag] A boolean value that determines whether to editing documents in this list should increment the ClientTag for the site. The tag is used to allow clients to cache JS/CSS/resources that are retrieved from the Content DB, including custom CSR templates. --noCrawl [noCrawl] Gets or sets a Boolean value specifying whether crawling is enabled for the list --onQuickLaunch [onQuickLaunch] Gets or sets a Boolean value that specifies whether the list appears on the Quick Launcharea of the home page --ordered [ordered] Gets or sets a Boolean value that specifies whether the option to allow users to reorderitems in the list is available on the Edit View page for the list --parserDisabled [parserDisabled] Gets or sets a Boolean value that specifies whether the parser should be disabled --readOnlyUI [readOnlyUI] A boolean value that indicates whether the UI for this list should be presented in a read-only fashion. This will not affect security nor will it actually prevent changes to the list from occurring - it only affects the way the UI is displayed --readSecurity [readSecurity] Gets or sets the Read security setting for the list. Valid values are 1 (All users have Read access to all items)|2 (Users have Read access only to items that they create) --requestAccessEnabled [requestAccessEnabled] Gets or sets a Boolean value that specifies whether the option to allow users to requestaccess to the list is available --restrictUserUpdates [restrictUserUpdates] A boolean value that indicates whether the this list is a restricted one or not The value can't be changed if there are existing items in the list --sendToLocationName [sendToLocationName] Gets or sets a file name to use when copying an item in the list to another document library. --sendToLocationUrl [sendToLocationUrl] Gets or sets a URL to use when copying an item in the list to another document library --showUser [showUser] Gets or sets a Boolean value that specifies whether names of users are shown in the results of the survey --useFormsForDisplay [useFormsForDisplay] Indicates whether forms should be considered for display context or not --validationFormula [validationFormula] Gets or sets a formula that is evaluated each time that a list item is added or updated. --validationMessage [validationMessage] Gets or sets the message that is displayed when validation fails for a list item. --writeSecurity [writeSecurity] Gets or sets the Write security setting for the list. Valid values are 1 (All users can modify all items)|2 (Users can modify only items that they create)|4 (Users cannot modify any list item) -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Add a list with title Announcements and baseTemplate Announcements in site https://contoso.sharepoint.com/sites/project-x m365 spo list add --title Announcements --baseTemplate Announcements --webUrl https://contoso.sharepoint.com/sites/project-x Add a list with title Announcements , baseTemplate Announcements in site https://contoso.sharepoint.com/sites/project-x using a custom XML schema m365 spo list add --title Announcements --baseTemplate Announcements --webUrl https://contoso.sharepoint.com/sites/project-x --schemaXml '<List xmlns:ows=\"Microsoft SharePoint\" Title=\"List1\" FolderCreation=\"FALSE\" Direction=\"$Resources:Direction;\" Url=\"Lists/List1\" BaseType=\"0\" xmlns=\"http://schemas.microsoft.com/sharepoint/\"><MetaData><ContentTypes><ContentTypeRef ID=\"0x01\"><Folder TargetName=\"Item\" /></ContentTypeRef><ContentTypeRef ID=\"0x0120\" /></ContentTypes><Fields><Field ID=\"{fa564e0f-0c70-4ab9-b863-0177e6ddd247}\" Type=\"Text\" Name=\"Title\" DisplayName=\"$Resources:core,Title;\" Required=\"TRUE\" SourceID=\"http://schemas.microsoft.com/sharepoint/v3\" StaticName=\"Title\" MaxLength=\"255\" /></Fields><Views><View BaseViewID=\"0\" Type=\"HTML\" MobileView=\"TRUE\" TabularView=\"FALSE\"><Toolbar Type=\"Standard\" /><XslLink Default=\"TRUE\">main.xsl</XslLink><RowLimit Paged=\"TRUE\">30</RowLimit><ViewFields><FieldRef Name=\"LinkTitleNoMenu\"></FieldRef></ViewFields><Query><OrderBy><FieldRef Name=\"Modified\" Ascending=\"FALSE\"></FieldRef></OrderBy></Query><ParameterBindings><ParameterBinding Name=\"AddNewAnnouncement\" Location=\"Resource(wss,addnewitem)\" /><ParameterBinding Name=\"NoAnnouncements\" Location=\"Resource(wss,noXinviewofY_LIST)\" /><ParameterBinding Name=\"NoAnnouncementsHowTo\" Location=\"Resource(wss,noXinviewofY_ONET_HOME)\" /></ParameterBindings></View><View BaseViewID=\"1\" Type=\"HTML\" WebPartZoneID=\"Main\" DisplayName=\"$Resources:core,objectiv_schema_mwsidcamlidC24;\" DefaultView=\"TRUE\" MobileView=\"TRUE\" MobileDefaultView=\"TRUE\" SetupPath=\"pages\\viewpage.aspx\" ImageUrl=\"/_layouts/15/images/generic.png?rev=23\" Url=\"AllItems.aspx\"><Toolbar Type=\"Standard\" /><XslLink Default=\"TRUE\">main.xsl</XslLink><JSLink>clienttemplates.js</JSLink><RowLimit Paged=\"TRUE\">30</RowLimit><ViewFields><FieldRef Name=\"LinkTitle\"></FieldRef></ViewFields><Query><OrderBy><FieldRef Name=\"ID\"></FieldRef></OrderBy></Query><ParameterBindings><ParameterBinding Name=\"NoAnnouncements\" Location=\"Resource(wss,noXinviewofY_LIST)\" /><ParameterBinding Name=\"NoAnnouncementsHowTo\" Location=\"Resource(wss,noXinviewofY_DEFAULT)\" /></ParameterBindings></View></Views><Forms><Form Type=\"DisplayForm\" Url=\"DispForm.aspx\" SetupPath=\"pages\\form.aspx\" WebPartZoneID=\"Main\" /><Form Type=\"EditForm\" Url=\"EditForm.aspx\" SetupPath=\"pages\\form.aspx\" WebPartZoneID=\"Main\" /><Form Type=\"NewForm\" Url=\"NewForm.aspx\" SetupPath=\"pages\\form.aspx\" WebPartZoneID=\"Main\" /></Forms></MetaData></List>' Add a list with title Announcements , baseTemplate Announcements in site https://contoso.sharepoint.com/sites/project-x with content types and versioning enabled and major version limit set to 50 m365 spo list add --webUrl https://contoso.sharepoint.com/sites/project-x --title Announcements --baseTemplate Announcements --contentTypesEnabled true --enableVersioning true --majorVersionLimit 50 More information \u00b6 SPList Class Members information: https://msdn.microsoft.com/en-us/library/microsoft.sharepoint.client.list_members.aspx ListTemplateType enum information: https://msdn.microsoft.com/en-us/library/microsoft.sharepoint.client.listtemplatetype.aspx DraftVersionVisibilityType enum information: https://msdn.microsoft.com/en-us/library/microsoft.sharepoint.client.draftvisibilitytype.aspx ListExperience enum information: https://msdn.microsoft.com/en-us/library/microsoft.sharepoint.client.listexperience.aspx","title":"list add"},{"location":"cmd/spo/list/list-add/#spo-list-add","text":"Creates list in the specified site","title":"spo list add"},{"location":"cmd/spo/list/list-add/#usage","text":"m365 spo list add [ options ]","title":"Usage"},{"location":"cmd/spo/list/list-add/#options","text":"-t, --title <title> Title of the list to add --baseTemplate <baseTemplate> The list definition type on which the list is based. Allowed values Announcements,Contacts,CustomGrid,DataSources,DiscussionBoard,DocumentLibrary,Events,GanttTasks,GenericList,IssuesTracking,Links,NoCodeWorkflows,PictureLibrary,Survey,Tasks,WebPageLibrary,WorkflowHistory,WorkflowProcess,XmlForm . Default GenericList -u, --webUrl <webUrl> URL of the site where the list should be added --description [description] The description for the list --templateFeatureId [templateFeatureId] The globally unique identifier (GUID) of a template feature that is associated with the list --schemaXml [schemaXml] The schema in Collaborative Application Markup Language (CAML) schemas that defines the list --allowDeletion [allowDeletion] Boolean value specifying whether the list can be deleted. Valid values are true,false --allowEveryoneViewItems [allowEveryoneViewItems] Boolean value specifying whether everyone can view documents in the documentlibrary or attachments to items in the list. Valid values are true,false --allowMultiResponses [allowMultiResponses] Boolean value specifying whether users are allowed to give multiple responses to the survey. Valid values are true,false --contentTypesEnabled [contentTypesEnabled] Boolean value specifying whether content types are enabled for the list. Valid values are true,false --crawlNonDefaultViews [crawlNonDefaultViews] Boolean value specifying whether to crawl non default views. Valid values are true,false --defaultContentApprovalWorkflowId [defaultContentApprovalWorkflowId] Value that specifies the default workflow identifier for content approval onthe list (GUID) --defaultDisplayFormUrl [defaultDisplayFormUrl] Value that specifies the location of the default display form for the list --defaultEditFormUrl [defaultEditFormUrl] Value that specifies the URL of the edit form to use for list items in the list --direction [direction] Value that specifies the reading order of the list. Valid values are NONE,LTR,RTL --disableGridEditing [disableGridEditing] Property for assigning or retrieving grid editing on the list. Valid values are true,false --draftVersionVisibility [draftVersionVisibility] Value that specifies the minimum permission required to view minor versions and drafts within the list. Allowed values Reader,Author,Approver . Default Reader --emailAlias [emailAlias] If e-mail notification is enabled, gets or sets the e-mail address to use tonotify to the owner of an item when an assignment has changed or the item has been updated. --enableAssignToEmail [enableAssignToEmail] Boolean value specifying whether e-mail notification is enabled for the list. Valid values are true,false --enableAttachments [enableAttachments] Boolean value that specifies whether attachments can be added to items in the list. Valid values are true,false --enableDeployWithDependentList [enableDeployWithDependentList] Boolean value that specifies whether the list can be deployed with a dependent list. Valid values are true,false --enableFolderCreation [enableFolderCreation] Boolean value that specifies whether folders can be created for the list. Valid values are true,false --enableMinorVersions [enableMinorVersions] Boolean value that specifies whether minor versions are enabled when versioning is enabled for the document library. Valid values are true,false --enableModeration [enableModeration] Boolean value that specifies whether Content Approval is enabled for the list. Valid values are true,false --enablePeopleSelector [enablePeopleSelector] Enable user selector on event list. Valid values are true,false --enableResourceSelector [enableResourceSelector] Enables resource selector on an event list. Valid values are true,false --enableSchemaCaching [enableSchemaCaching] Boolean value specifying whether schema caching is enabled for the list. Valid values are true,false --enableSyndication [enableSyndication] Boolean value that specifies whether RSS syndication is enabled for the list. Valid values are true,false --enableThrottling [enableThrottling] Indicates whether throttling for this list is enabled or not. Valid values are true,false --enableVersioning [enableVersioning] Boolean value that specifies whether versioning is enabled for the document library. Valid values are true,false --enforceDataValidation [enforceDataValidation] Value that indicates whether certain field properties are enforced when an item is added or updated. Valid values are true,false --excludeFromOfflineClient [excludeFromOfflineClient] Value that indicates whether the list should be downloaded to the client during offline synchronization. Valid values are true,false --fetchPropertyBagForListView [fetchPropertyBagForListView] Specifies whether property bag information, as part of the list schema JSON,is retrieved when the list is being rendered on the client. Valid values are true,false --followable [followable] Can a list be followed in an activity feed?. Valid values are true,false --forceCheckout [forceCheckout] Boolean value that specifies whether forced checkout is enabled for the document library. Valid values are true,false --forceDefaultContentType [forceDefaultContentType] Specifies whether we want to return the default Document root content type. Valid values are true,false --hidden [hidden] Boolean value that specifies whether the list is hidden. Valid values are true,false --includedInMyFilesScope [includedInMyFilesScope] Specifies whether this list is accessible to an app principal that has been granted an OAuth scope that contains the string \u201cmyfiles\u201d by a case-insensitive comparison when the current user is a site collection administrator of the personal site that contains the list --irmEnabled [irmEnabled] Gets or sets a Boolean value that specifies whether Information Rights Management (IRM) is enabled for the list --irmExpire [irmExpire] Gets or sets a Boolean value that specifies whether Information Rights Management (IRM) expiration is enabled for the list --irmReject [irmReject] Gets or sets a Boolean value that specifies whether Information Rights Management (IRM) rejection is enabled for the list --isApplicationList [isApplicationList] Indicates whether this list should be treated as a top level navigation object or not --listExperienceOptions [listExperienceOptions] Gets or sets the list experience for the list. Allowed values Auto,NewExperience,ClassicExperience. Default Auto --majorVersionLimit [majorVersionLimit] Gets or sets the maximum number of major versions allowed for an item in a document library that uses version control with major versions only. --majorWithMinorVersionsLimit [majorWithMinorVersionsLimit] Gets or sets the maximum number of major versions that are allowed for an item in a document library that uses version control with both major and minor versions. --multipleDataList [multipleDataList] Gets or sets a Boolean value that specifies whether the list in a Meeting Workspace sitecontains data for multiple meeting instances within the site --navigateForFormsPages [navigateForFormsPages] Indicates whether to navigate for forms pages or use a modal dialog --needUpdateSiteClientTag [needUpdateSiteClientTag] A boolean value that determines whether to editing documents in this list should increment the ClientTag for the site. The tag is used to allow clients to cache JS/CSS/resources that are retrieved from the Content DB, including custom CSR templates. --noCrawl [noCrawl] Gets or sets a Boolean value specifying whether crawling is enabled for the list --onQuickLaunch [onQuickLaunch] Gets or sets a Boolean value that specifies whether the list appears on the Quick Launcharea of the home page --ordered [ordered] Gets or sets a Boolean value that specifies whether the option to allow users to reorderitems in the list is available on the Edit View page for the list --parserDisabled [parserDisabled] Gets or sets a Boolean value that specifies whether the parser should be disabled --readOnlyUI [readOnlyUI] A boolean value that indicates whether the UI for this list should be presented in a read-only fashion. This will not affect security nor will it actually prevent changes to the list from occurring - it only affects the way the UI is displayed --readSecurity [readSecurity] Gets or sets the Read security setting for the list. Valid values are 1 (All users have Read access to all items)|2 (Users have Read access only to items that they create) --requestAccessEnabled [requestAccessEnabled] Gets or sets a Boolean value that specifies whether the option to allow users to requestaccess to the list is available --restrictUserUpdates [restrictUserUpdates] A boolean value that indicates whether the this list is a restricted one or not The value can't be changed if there are existing items in the list --sendToLocationName [sendToLocationName] Gets or sets a file name to use when copying an item in the list to another document library. --sendToLocationUrl [sendToLocationUrl] Gets or sets a URL to use when copying an item in the list to another document library --showUser [showUser] Gets or sets a Boolean value that specifies whether names of users are shown in the results of the survey --useFormsForDisplay [useFormsForDisplay] Indicates whether forms should be considered for display context or not --validationFormula [validationFormula] Gets or sets a formula that is evaluated each time that a list item is added or updated. --validationMessage [validationMessage] Gets or sets the message that is displayed when validation fails for a list item. --writeSecurity [writeSecurity] Gets or sets the Write security setting for the list. Valid values are 1 (All users can modify all items)|2 (Users can modify only items that they create)|4 (Users cannot modify any list item) -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/list/list-add/#examples","text":"Add a list with title Announcements and baseTemplate Announcements in site https://contoso.sharepoint.com/sites/project-x m365 spo list add --title Announcements --baseTemplate Announcements --webUrl https://contoso.sharepoint.com/sites/project-x Add a list with title Announcements , baseTemplate Announcements in site https://contoso.sharepoint.com/sites/project-x using a custom XML schema m365 spo list add --title Announcements --baseTemplate Announcements --webUrl https://contoso.sharepoint.com/sites/project-x --schemaXml '<List xmlns:ows=\"Microsoft SharePoint\" Title=\"List1\" FolderCreation=\"FALSE\" Direction=\"$Resources:Direction;\" Url=\"Lists/List1\" BaseType=\"0\" xmlns=\"http://schemas.microsoft.com/sharepoint/\"><MetaData><ContentTypes><ContentTypeRef ID=\"0x01\"><Folder TargetName=\"Item\" /></ContentTypeRef><ContentTypeRef ID=\"0x0120\" /></ContentTypes><Fields><Field ID=\"{fa564e0f-0c70-4ab9-b863-0177e6ddd247}\" Type=\"Text\" Name=\"Title\" DisplayName=\"$Resources:core,Title;\" Required=\"TRUE\" SourceID=\"http://schemas.microsoft.com/sharepoint/v3\" StaticName=\"Title\" MaxLength=\"255\" /></Fields><Views><View BaseViewID=\"0\" Type=\"HTML\" MobileView=\"TRUE\" TabularView=\"FALSE\"><Toolbar Type=\"Standard\" /><XslLink Default=\"TRUE\">main.xsl</XslLink><RowLimit Paged=\"TRUE\">30</RowLimit><ViewFields><FieldRef Name=\"LinkTitleNoMenu\"></FieldRef></ViewFields><Query><OrderBy><FieldRef Name=\"Modified\" Ascending=\"FALSE\"></FieldRef></OrderBy></Query><ParameterBindings><ParameterBinding Name=\"AddNewAnnouncement\" Location=\"Resource(wss,addnewitem)\" /><ParameterBinding Name=\"NoAnnouncements\" Location=\"Resource(wss,noXinviewofY_LIST)\" /><ParameterBinding Name=\"NoAnnouncementsHowTo\" Location=\"Resource(wss,noXinviewofY_ONET_HOME)\" /></ParameterBindings></View><View BaseViewID=\"1\" Type=\"HTML\" WebPartZoneID=\"Main\" DisplayName=\"$Resources:core,objectiv_schema_mwsidcamlidC24;\" DefaultView=\"TRUE\" MobileView=\"TRUE\" MobileDefaultView=\"TRUE\" SetupPath=\"pages\\viewpage.aspx\" ImageUrl=\"/_layouts/15/images/generic.png?rev=23\" Url=\"AllItems.aspx\"><Toolbar Type=\"Standard\" /><XslLink Default=\"TRUE\">main.xsl</XslLink><JSLink>clienttemplates.js</JSLink><RowLimit Paged=\"TRUE\">30</RowLimit><ViewFields><FieldRef Name=\"LinkTitle\"></FieldRef></ViewFields><Query><OrderBy><FieldRef Name=\"ID\"></FieldRef></OrderBy></Query><ParameterBindings><ParameterBinding Name=\"NoAnnouncements\" Location=\"Resource(wss,noXinviewofY_LIST)\" /><ParameterBinding Name=\"NoAnnouncementsHowTo\" Location=\"Resource(wss,noXinviewofY_DEFAULT)\" /></ParameterBindings></View></Views><Forms><Form Type=\"DisplayForm\" Url=\"DispForm.aspx\" SetupPath=\"pages\\form.aspx\" WebPartZoneID=\"Main\" /><Form Type=\"EditForm\" Url=\"EditForm.aspx\" SetupPath=\"pages\\form.aspx\" WebPartZoneID=\"Main\" /><Form Type=\"NewForm\" Url=\"NewForm.aspx\" SetupPath=\"pages\\form.aspx\" WebPartZoneID=\"Main\" /></Forms></MetaData></List>' Add a list with title Announcements , baseTemplate Announcements in site https://contoso.sharepoint.com/sites/project-x with content types and versioning enabled and major version limit set to 50 m365 spo list add --webUrl https://contoso.sharepoint.com/sites/project-x --title Announcements --baseTemplate Announcements --contentTypesEnabled true --enableVersioning true --majorVersionLimit 50","title":"Examples"},{"location":"cmd/spo/list/list-add/#more-information","text":"SPList Class Members information: https://msdn.microsoft.com/en-us/library/microsoft.sharepoint.client.list_members.aspx ListTemplateType enum information: https://msdn.microsoft.com/en-us/library/microsoft.sharepoint.client.listtemplatetype.aspx DraftVersionVisibilityType enum information: https://msdn.microsoft.com/en-us/library/microsoft.sharepoint.client.draftvisibilitytype.aspx ListExperience enum information: https://msdn.microsoft.com/en-us/library/microsoft.sharepoint.client.listexperience.aspx","title":"More information"},{"location":"cmd/spo/list/list-contenttype-add/","text":"spo list contenttype add \u00b6 Adds content type to list Usage \u00b6 m365 spo list contenttype add [ options ] Options \u00b6 -u, --webUrl <webUrl> URL of the site where the list is located. -i, --listId [listId] ID of the list. Specify either listTitle , listId or listUrl . -t, --listTitle [listTitle] Title of the list. Specify either listTitle , listId or listUrl . --listUrl [listUrl] Server- or site-relative URL of the list. Specify either listTitle , listId or listUrl . -i, --id <id> ID of the content type to add to the list -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Adds a specific existing content type to a list retrieved by id in a specific site. m365 spo list contenttype add --webUrl https://contoso.sharepoint.com/sites/project-x --listId 0cd891ef-afce-4e55-b836-fce03286cccf --id 0x0120 Adds a specific existing content type to a list retrieved by title in a specific site. m365 spo list contenttype add --webUrl https://contoso.sharepoint.com/sites/project-x --listTitle Documents --id 0x0120 Adds a specific existing content type to a list retrieved by server relative URL in a specific site. m365 spo list contenttype add --webUrl https://contoso.sharepoint.com/sites/project-x --listUrl 'sites/project-x/Documents' --contentTypeId 0x0120","title":"list contenttype add"},{"location":"cmd/spo/list/list-contenttype-add/#spo-list-contenttype-add","text":"Adds content type to list","title":"spo list contenttype add"},{"location":"cmd/spo/list/list-contenttype-add/#usage","text":"m365 spo list contenttype add [ options ]","title":"Usage"},{"location":"cmd/spo/list/list-contenttype-add/#options","text":"-u, --webUrl <webUrl> URL of the site where the list is located. -i, --listId [listId] ID of the list. Specify either listTitle , listId or listUrl . -t, --listTitle [listTitle] Title of the list. Specify either listTitle , listId or listUrl . --listUrl [listUrl] Server- or site-relative URL of the list. Specify either listTitle , listId or listUrl . -i, --id <id> ID of the content type to add to the list -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/list/list-contenttype-add/#examples","text":"Adds a specific existing content type to a list retrieved by id in a specific site. m365 spo list contenttype add --webUrl https://contoso.sharepoint.com/sites/project-x --listId 0cd891ef-afce-4e55-b836-fce03286cccf --id 0x0120 Adds a specific existing content type to a list retrieved by title in a specific site. m365 spo list contenttype add --webUrl https://contoso.sharepoint.com/sites/project-x --listTitle Documents --id 0x0120 Adds a specific existing content type to a list retrieved by server relative URL in a specific site. m365 spo list contenttype add --webUrl https://contoso.sharepoint.com/sites/project-x --listUrl 'sites/project-x/Documents' --contentTypeId 0x0120","title":"Examples"},{"location":"cmd/spo/list/list-contenttype-default-set/","text":"spo list contenttype default set \u00b6 Sets the default content type for a list Usage \u00b6 m365 spo list contenttype default set [ options ] Options \u00b6 -u, --webUrl <webUrl> URL of the site where the list is located. -i, --listId [listId] ID of the list. Specify either listTitle , listId or listUrl . -t, --listTitle [listTitle] Title of the list. Specify either listTitle , listId or listUrl . --listUrl [listUrl] Server- or site-relative URL of the list. Specify either listTitle , listId or listUrl . -c, --contentTypeId <contentTypeId> ID of the content type -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Set a content type with a specific id as default a list retrieved by id located in a specific site. m365 spo list contenttype default set --webUrl https://contoso.sharepoint.com/sites/project-x --listId 0cd891ef-afce-4e55-b836-fce03286cccf --contentTypeId 0x0120 Set a content type with a specific id as default a list retrieved by title located in a specific site. m365 spo list contenttype default set --webUrl https://contoso.sharepoint.com/sites/project-x --listTitle Documents --contentTypeId 0x0120 Set a content type with a specific id as default a list retrieved by server relative URL located in a specific site. m365 spo list contenttype default set --webUrl https://contoso.sharepoint.com/sites/project-x --listUrl 'sites/project-x/Documents' --contentTypeId 0x0120","title":"list contenttype default set"},{"location":"cmd/spo/list/list-contenttype-default-set/#spo-list-contenttype-default-set","text":"Sets the default content type for a list","title":"spo list contenttype default set"},{"location":"cmd/spo/list/list-contenttype-default-set/#usage","text":"m365 spo list contenttype default set [ options ]","title":"Usage"},{"location":"cmd/spo/list/list-contenttype-default-set/#options","text":"-u, --webUrl <webUrl> URL of the site where the list is located. -i, --listId [listId] ID of the list. Specify either listTitle , listId or listUrl . -t, --listTitle [listTitle] Title of the list. Specify either listTitle , listId or listUrl . --listUrl [listUrl] Server- or site-relative URL of the list. Specify either listTitle , listId or listUrl . -c, --contentTypeId <contentTypeId> ID of the content type -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/list/list-contenttype-default-set/#examples","text":"Set a content type with a specific id as default a list retrieved by id located in a specific site. m365 spo list contenttype default set --webUrl https://contoso.sharepoint.com/sites/project-x --listId 0cd891ef-afce-4e55-b836-fce03286cccf --contentTypeId 0x0120 Set a content type with a specific id as default a list retrieved by title located in a specific site. m365 spo list contenttype default set --webUrl https://contoso.sharepoint.com/sites/project-x --listTitle Documents --contentTypeId 0x0120 Set a content type with a specific id as default a list retrieved by server relative URL located in a specific site. m365 spo list contenttype default set --webUrl https://contoso.sharepoint.com/sites/project-x --listUrl 'sites/project-x/Documents' --contentTypeId 0x0120","title":"Examples"},{"location":"cmd/spo/list/list-contenttype-list/","text":"spo list contenttype list \u00b6 Lists content types configured on the list Usage \u00b6 m365 spo list contenttype list [ options ] Options \u00b6 -u, --webUrl <webUrl> URL of the site where the list is located. -i, --listId [listId] ID of the list. Specify either listTitle , listId or listUrl . -t, --listTitle [listTitle] Title of the list. Specify either listTitle , listId or listUrl . --listUrl [listUrl] Server- or site-relative URL of the list. Specify either listTitle , listId or listUrl . -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 List all content types configured on a specific list retrieved by id in a specific site. m365 spo list contenttype list --webUrl https://contoso.sharepoint.com/sites/project-x --listId 0cd891ef-afce-4e55-b836-fce03286cccf List all content types configured on a specific list retrieved by title in a specific site. m365 spo list contenttype list --webUrl https://contoso.sharepoint.com/sites/project-x --listTitle Documents List all content types configured on a specific list retrieved by server relative URL in a specific site. m365 spo list contenttype list --webUrl https://contoso.sharepoint.com/sites/project-x --listUrl 'sites/project-x/Documents'","title":"list contenttype list"},{"location":"cmd/spo/list/list-contenttype-list/#spo-list-contenttype-list","text":"Lists content types configured on the list","title":"spo list contenttype list"},{"location":"cmd/spo/list/list-contenttype-list/#usage","text":"m365 spo list contenttype list [ options ]","title":"Usage"},{"location":"cmd/spo/list/list-contenttype-list/#options","text":"-u, --webUrl <webUrl> URL of the site where the list is located. -i, --listId [listId] ID of the list. Specify either listTitle , listId or listUrl . -t, --listTitle [listTitle] Title of the list. Specify either listTitle , listId or listUrl . --listUrl [listUrl] Server- or site-relative URL of the list. Specify either listTitle , listId or listUrl . -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/list/list-contenttype-list/#examples","text":"List all content types configured on a specific list retrieved by id in a specific site. m365 spo list contenttype list --webUrl https://contoso.sharepoint.com/sites/project-x --listId 0cd891ef-afce-4e55-b836-fce03286cccf List all content types configured on a specific list retrieved by title in a specific site. m365 spo list contenttype list --webUrl https://contoso.sharepoint.com/sites/project-x --listTitle Documents List all content types configured on a specific list retrieved by server relative URL in a specific site. m365 spo list contenttype list --webUrl https://contoso.sharepoint.com/sites/project-x --listUrl 'sites/project-x/Documents'","title":"Examples"},{"location":"cmd/spo/list/list-contenttype-remove/","text":"spo list contenttype remove \u00b6 Removes content type from list Usage \u00b6 m365 spo list contenttype remove [ options ] Options \u00b6 -u, --webUrl <webUrl> URL of the site where the list is located. -i, --listId [listId] ID of the list. Specify either listTitle , listId or listUrl . -t, --listTitle [listTitle] Title of the list. Specify either listTitle , listId or listUrl . --listUrl [listUrl] Server- or site-relative URL of the list. Specify either listTitle , listId or listUrl . -i, --id <id> ID of the content type to remove from the list --confirm Don't prompt for confirmation -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Remove content type with a specific id from the list retrieved by id in a specific site. m365 spo list contenttype remove --webUrl https://contoso.sharepoint.com/sites/project-x --listId 0cd891ef-afce-4e55-b836-fce03286cccf --id 0x010109010053EE7AEB1FC54A41B4D9F66ADBDC312A Remove content type with a specific id from the list retrieved by title in a specific site. m365 spo list contenttype remove --webUrl https://contoso.sharepoint.com/sites/project-x --listTitle Documents --id 0x010109010053EE7AEB1FC54A41B4D9F66ADBDC312A Remove content type with a specific id from the list retrieved by server relative URL in a specific site. This will not prompt for confirmation. m365 spo list contenttype remove --webUrl https://contoso.sharepoint.com/sites/project-x --listUrl 'sites/project-x/Documents' --contentTypeId 0x010109010053EE7AEB1FC54A41B4D9F66ADBDC312A --confirm","title":"list contenttype remove"},{"location":"cmd/spo/list/list-contenttype-remove/#spo-list-contenttype-remove","text":"Removes content type from list","title":"spo list contenttype remove"},{"location":"cmd/spo/list/list-contenttype-remove/#usage","text":"m365 spo list contenttype remove [ options ]","title":"Usage"},{"location":"cmd/spo/list/list-contenttype-remove/#options","text":"-u, --webUrl <webUrl> URL of the site where the list is located. -i, --listId [listId] ID of the list. Specify either listTitle , listId or listUrl . -t, --listTitle [listTitle] Title of the list. Specify either listTitle , listId or listUrl . --listUrl [listUrl] Server- or site-relative URL of the list. Specify either listTitle , listId or listUrl . -i, --id <id> ID of the content type to remove from the list --confirm Don't prompt for confirmation -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/list/list-contenttype-remove/#examples","text":"Remove content type with a specific id from the list retrieved by id in a specific site. m365 spo list contenttype remove --webUrl https://contoso.sharepoint.com/sites/project-x --listId 0cd891ef-afce-4e55-b836-fce03286cccf --id 0x010109010053EE7AEB1FC54A41B4D9F66ADBDC312A Remove content type with a specific id from the list retrieved by title in a specific site. m365 spo list contenttype remove --webUrl https://contoso.sharepoint.com/sites/project-x --listTitle Documents --id 0x010109010053EE7AEB1FC54A41B4D9F66ADBDC312A Remove content type with a specific id from the list retrieved by server relative URL in a specific site. This will not prompt for confirmation. m365 spo list contenttype remove --webUrl https://contoso.sharepoint.com/sites/project-x --listUrl 'sites/project-x/Documents' --contentTypeId 0x010109010053EE7AEB1FC54A41B4D9F66ADBDC312A --confirm","title":"Examples"},{"location":"cmd/spo/list/list-get/","text":"spo list get \u00b6 Gets information about the specific list Usage \u00b6 m365 spo list get [ options ] Options \u00b6 -u, --webUrl <webUrl> URL of the site where the list to retrieve is located -i, --id [id] ID of the list to retrieve information for. Specify either id or title but not both -t, --title [title] Title of the list to retrieve information for. Specify either id or title but not both -p, --properties [properties] Comma-separated list of properties to retrieve from the list. Will retrieve all properties possible from default response, if not specified. --withPermissions Set if you want to return associated roles and permissions of the list. -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Return information about a list with ID 0cd891ef-afce-4e55-b836-fce03286cccf located in site https://contoso.sharepoint.com/sites/project-x m365 spo list get --id 0cd891ef-afce-4e55-b836-fce03286cccf --webUrl https://contoso.sharepoint.com/sites/project-x Return information about a list with title Documents located in site https://contoso.sharepoint.com/sites/project-x m365 spo list get --title Documents --webUrl https://contoso.sharepoint.com/sites/project-x Get information about a list returning the specified list properties m365 spo list get --title Documents --webUrl https://contoso.sharepoint.com/sites/project-x --properties \"Title,Id,HasUniqueRoleAssignments,AllowContentTypes\" Get information about a list along with the roles and permissions m365 spo list get --title Documents --webUrl https://contoso.sharepoint.com/sites/project-x --withPermissions More information \u00b6 List REST API resources: https://msdn.microsoft.com/en-us/library/office/dn531433.aspx#bk_ListEndpoint","title":"list get"},{"location":"cmd/spo/list/list-get/#spo-list-get","text":"Gets information about the specific list","title":"spo list get"},{"location":"cmd/spo/list/list-get/#usage","text":"m365 spo list get [ options ]","title":"Usage"},{"location":"cmd/spo/list/list-get/#options","text":"-u, --webUrl <webUrl> URL of the site where the list to retrieve is located -i, --id [id] ID of the list to retrieve information for. Specify either id or title but not both -t, --title [title] Title of the list to retrieve information for. Specify either id or title but not both -p, --properties [properties] Comma-separated list of properties to retrieve from the list. Will retrieve all properties possible from default response, if not specified. --withPermissions Set if you want to return associated roles and permissions of the list. -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/list/list-get/#examples","text":"Return information about a list with ID 0cd891ef-afce-4e55-b836-fce03286cccf located in site https://contoso.sharepoint.com/sites/project-x m365 spo list get --id 0cd891ef-afce-4e55-b836-fce03286cccf --webUrl https://contoso.sharepoint.com/sites/project-x Return information about a list with title Documents located in site https://contoso.sharepoint.com/sites/project-x m365 spo list get --title Documents --webUrl https://contoso.sharepoint.com/sites/project-x Get information about a list returning the specified list properties m365 spo list get --title Documents --webUrl https://contoso.sharepoint.com/sites/project-x --properties \"Title,Id,HasUniqueRoleAssignments,AllowContentTypes\" Get information about a list along with the roles and permissions m365 spo list get --title Documents --webUrl https://contoso.sharepoint.com/sites/project-x --withPermissions","title":"Examples"},{"location":"cmd/spo/list/list-get/#more-information","text":"List REST API resources: https://msdn.microsoft.com/en-us/library/office/dn531433.aspx#bk_ListEndpoint","title":"More information"},{"location":"cmd/spo/list/list-label-get/","text":"spo list label get \u00b6 Gets label set on the specified list Usage \u00b6 m365 spo list label get [ options ] Options \u00b6 -u, --webUrl <webUrl> URL of the site where the list to get the label from is located -l, --listId [listId] ID of the list to get the label from. Specify either listId or listTitle but not both -t, --listTitle [listTitle] Title of the list to get the label from. Specify either listId or listTitle but not both -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Gets label set on the list with title ContosoList located in site https://contoso.sharepoint.com/sites/project-x m365 spo list label get --webUrl https://contoso.sharepoint.com/sites/project-x --listTitle ContosoList Gets label set on the list with id cc27a922-8224-4296-90a5-ebbc54da2e85 located in site https://contoso.sharepoint.com/sites/project-x m365 spo list label get --webUrl https://contoso.sharepoint.com/sites/project-x --listId cc27a922-8224-4296-90a5-ebbc54da2e85","title":"list label get"},{"location":"cmd/spo/list/list-label-get/#spo-list-label-get","text":"Gets label set on the specified list","title":"spo list label get"},{"location":"cmd/spo/list/list-label-get/#usage","text":"m365 spo list label get [ options ]","title":"Usage"},{"location":"cmd/spo/list/list-label-get/#options","text":"-u, --webUrl <webUrl> URL of the site where the list to get the label from is located -l, --listId [listId] ID of the list to get the label from. Specify either listId or listTitle but not both -t, --listTitle [listTitle] Title of the list to get the label from. Specify either listId or listTitle but not both -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/list/list-label-get/#examples","text":"Gets label set on the list with title ContosoList located in site https://contoso.sharepoint.com/sites/project-x m365 spo list label get --webUrl https://contoso.sharepoint.com/sites/project-x --listTitle ContosoList Gets label set on the list with id cc27a922-8224-4296-90a5-ebbc54da2e85 located in site https://contoso.sharepoint.com/sites/project-x m365 spo list label get --webUrl https://contoso.sharepoint.com/sites/project-x --listId cc27a922-8224-4296-90a5-ebbc54da2e85","title":"Examples"},{"location":"cmd/spo/list/list-label-set/","text":"spo list label set \u00b6 Sets classification label on the specified list Usage \u00b6 m365 spo list label set [ options ] Options \u00b6 -u, --webUrl <webUrl> The URL of the site where the list is located --label <label> The label to set on the list -t, --listTitle [listTitle] The title of the list on which to set the label. Specify only one of listTitle , listId or listUrl -l, --listId [listId] The ID of the list on which to set the label. Specify only one of listTitle , listId or listUrl --listUrl [listUrl] Server- or web-relative URL of the list on which to set the label. Specify only one of listTitle , listId or listUrl --syncToItems Specify, to set the label on all items in the list --blockDelete Specify, to disallow deleting items in the list --blockEdit Specify, to disallow editing items in the list -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Sets classification label \"Confidential\" for list Shared Documents located in site https://contoso.sharepoint.com/sites/project-x m365 spo list label set --webUrl https://contoso.sharepoint.com/sites/project-x --listUrl 'Shared Documents' --label 'Confidential' Sets classification label \"Confidential\" and disables editing and deleting items on the list and all existing items for list for list Documents located in site https://contoso.sharepoint.com/sites/project-x m365 spo list label set --webUrl https://contoso.sharepoint.com/sites/project-x --listTitle 'Documents' --label 'Confidential' --blockEdit --blockDelete --syncToItems","title":"list label set"},{"location":"cmd/spo/list/list-label-set/#spo-list-label-set","text":"Sets classification label on the specified list","title":"spo list label set"},{"location":"cmd/spo/list/list-label-set/#usage","text":"m365 spo list label set [ options ]","title":"Usage"},{"location":"cmd/spo/list/list-label-set/#options","text":"-u, --webUrl <webUrl> The URL of the site where the list is located --label <label> The label to set on the list -t, --listTitle [listTitle] The title of the list on which to set the label. Specify only one of listTitle , listId or listUrl -l, --listId [listId] The ID of the list on which to set the label. Specify only one of listTitle , listId or listUrl --listUrl [listUrl] Server- or web-relative URL of the list on which to set the label. Specify only one of listTitle , listId or listUrl --syncToItems Specify, to set the label on all items in the list --blockDelete Specify, to disallow deleting items in the list --blockEdit Specify, to disallow editing items in the list -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/list/list-label-set/#examples","text":"Sets classification label \"Confidential\" for list Shared Documents located in site https://contoso.sharepoint.com/sites/project-x m365 spo list label set --webUrl https://contoso.sharepoint.com/sites/project-x --listUrl 'Shared Documents' --label 'Confidential' Sets classification label \"Confidential\" and disables editing and deleting items on the list and all existing items for list for list Documents located in site https://contoso.sharepoint.com/sites/project-x m365 spo list label set --webUrl https://contoso.sharepoint.com/sites/project-x --listTitle 'Documents' --label 'Confidential' --blockEdit --blockDelete --syncToItems","title":"Examples"},{"location":"cmd/spo/list/list-list/","text":"spo list list \u00b6 Gets all lists within the specified site Usage \u00b6 m365 spo list list [ options ] Options \u00b6 -u, --webUrl <webUrl> URL of the site where the lists to retrieve are located -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Return all lists located in site https://contoso.sharepoint.com/sites/project-x m365 spo list list --webUrl https://contoso.sharepoint.com/sites/project-x More information \u00b6 List REST API resources: https://msdn.microsoft.com/en-us/library/office/dn531433.aspx#bk_ListEndpoint","title":"list list"},{"location":"cmd/spo/list/list-list/#spo-list-list","text":"Gets all lists within the specified site","title":"spo list list"},{"location":"cmd/spo/list/list-list/#usage","text":"m365 spo list list [ options ]","title":"Usage"},{"location":"cmd/spo/list/list-list/#options","text":"-u, --webUrl <webUrl> URL of the site where the lists to retrieve are located -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/list/list-list/#examples","text":"Return all lists located in site https://contoso.sharepoint.com/sites/project-x m365 spo list list --webUrl https://contoso.sharepoint.com/sites/project-x","title":"Examples"},{"location":"cmd/spo/list/list-list/#more-information","text":"List REST API resources: https://msdn.microsoft.com/en-us/library/office/dn531433.aspx#bk_ListEndpoint","title":"More information"},{"location":"cmd/spo/list/list-remove/","text":"spo list remove \u00b6 Removes the specified list Usage \u00b6 m365 spo list remove [ options ] Options \u00b6 -u, --webUrl <webUrl> URL of the site where the list to remove is located -i, --id [id] The ID of the list to remove. Specify either id or title but not both -t, --title [title] Title of the list to remove. Specify either id or title but not both --confirm Don't prompt for confirming removing the list -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Remove the list with ID 0cd891ef-afce-4e55-b836-fce03286cccf located in site https://contoso.sharepoint.com/sites/project-x m365 spo list remove --webUrl https://contoso.sharepoint.com/sites/project-x --id 0cd891ef-afce-4e55-b836-fce03286cccf Remove the list with title List 1 located in site https://contoso.sharepoint.com/sites/project-x m365 spo list remove --webUrl https://contoso.sharepoint.com/sites/project-x --title 'List 1'","title":"list remove"},{"location":"cmd/spo/list/list-remove/#spo-list-remove","text":"Removes the specified list","title":"spo list remove"},{"location":"cmd/spo/list/list-remove/#usage","text":"m365 spo list remove [ options ]","title":"Usage"},{"location":"cmd/spo/list/list-remove/#options","text":"-u, --webUrl <webUrl> URL of the site where the list to remove is located -i, --id [id] The ID of the list to remove. Specify either id or title but not both -t, --title [title] Title of the list to remove. Specify either id or title but not both --confirm Don't prompt for confirming removing the list -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/list/list-remove/#examples","text":"Remove the list with ID 0cd891ef-afce-4e55-b836-fce03286cccf located in site https://contoso.sharepoint.com/sites/project-x m365 spo list remove --webUrl https://contoso.sharepoint.com/sites/project-x --id 0cd891ef-afce-4e55-b836-fce03286cccf Remove the list with title List 1 located in site https://contoso.sharepoint.com/sites/project-x m365 spo list remove --webUrl https://contoso.sharepoint.com/sites/project-x --title 'List 1'","title":"Examples"},{"location":"cmd/spo/list/list-roleassignment-add/","text":"spo list roleassignment add \u00b6 Adds a role assignment to list permissions Usage \u00b6 m365 spo list roleassignment add [ options ] Options \u00b6 -u, --webUrl <webUrl> URL of the site where the list is located -i, --listId [listId] ID of the list. Specify either listId, listTitle or listUrl but not multiple. -t, --listTitle [listTitle] Title of the list. Specify either listId, listTitle or listUrl but not multiple. --listUrl [listUrl] Relative URL of the list. Specify either listId, listTitle or listUrl but not multiple. --principalId [principalId] SharePoint ID of principal it may be either user id or group id we want to add permissions to. Specify principalId only when upn or groupName are not used. --upn [upn] Upn/email of user to assign role to. Specify either upn or principalId --groupName [groupName] Enter group name of Azure AD or SharePoint group.. Specify either groupName or principalId --roleDefinitionId [roleDefinitionId] ID of role definition. Specify either roleDefinitionId or roleDefinitionName but not both --roleDefinitionName [roleDefinitionName] Enter the name of a role definition, like 'Contribute', 'Read', etc. Specify either roleDefinitionId or roleDefinitionName but not both -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 add role assignment to list someList located in site https://contoso.sharepoint.com/sites/project-x_for principal id _11 and role definition id 1073741829 m365 spo list roleassignment add --webUrl \"https://contoso.sharepoint.com/sites/project-x\" --listTitle \"someList\" --principalId 11 --roleDefinitionId 1073741829 add role assignment to list 0CD891EF-AFCE-4E55-B836-FCE03286CCCF located in site https://contoso.sharepoint.com/sites/project-x_for principal id _11 and role definition id 1073741829 m365 spo list roleassignment add --webUrl \"https://contoso.sharepoint.com/sites/project-x\" --listId \"0CD891EF-AFCE-4E55-B836-FCE03286CCCF\" --principalId 11 --roleDefinitionId 1073741829 add role assignment to list sites/documents located in site https://contoso.sharepoint.com/sites/project-x_for principal id _11 and role definition id 1073741829 m365 spo list roleassignment add --webUrl \"https://contoso.sharepoint.com/sites/project-x\" --listUrl \"sites/documents\" --principalId 11 --roleDefinitionId 1073741829 add role assignment to list someList located in site https://contoso.sharepoint.com/sites/project-x_for upn _someaccount@tenant.onmicrosoft.com and role definition id 1073741829 m365 spo list roleassignment add --webUrl \"https://contoso.sharepoint.com/sites/project-x\" --listTitle \"someList\" --upn \"someaccount@tenant.onmicrosoft.com\" --roleDefinitionId 1073741829 add role assignment to list someList located in site https://contoso.sharepoint.com/sites/project-x_for group _someGroup and role definition id 1073741829 m365 spo list roleassignment add --webUrl \"https://contoso.sharepoint.com/sites/project-x\" --listTitle \"someList\" --groupName \"someGroup\" --roleDefinitionId 1073741829 add role assignment to list someList located in site https://contoso.sharepoint.com/sites/project-x_for principal id _11 and role definition name Full Control m365 spo list roleassignment add --webUrl \"https://contoso.sharepoint.com/sites/project-x\" --listTitle \"someList\" --principalId 11 --roleDefinitionName \"Full Control\"","title":"list roleassignment add"},{"location":"cmd/spo/list/list-roleassignment-add/#spo-list-roleassignment-add","text":"Adds a role assignment to list permissions","title":"spo list roleassignment add"},{"location":"cmd/spo/list/list-roleassignment-add/#usage","text":"m365 spo list roleassignment add [ options ]","title":"Usage"},{"location":"cmd/spo/list/list-roleassignment-add/#options","text":"-u, --webUrl <webUrl> URL of the site where the list is located -i, --listId [listId] ID of the list. Specify either listId, listTitle or listUrl but not multiple. -t, --listTitle [listTitle] Title of the list. Specify either listId, listTitle or listUrl but not multiple. --listUrl [listUrl] Relative URL of the list. Specify either listId, listTitle or listUrl but not multiple. --principalId [principalId] SharePoint ID of principal it may be either user id or group id we want to add permissions to. Specify principalId only when upn or groupName are not used. --upn [upn] Upn/email of user to assign role to. Specify either upn or principalId --groupName [groupName] Enter group name of Azure AD or SharePoint group.. Specify either groupName or principalId --roleDefinitionId [roleDefinitionId] ID of role definition. Specify either roleDefinitionId or roleDefinitionName but not both --roleDefinitionName [roleDefinitionName] Enter the name of a role definition, like 'Contribute', 'Read', etc. Specify either roleDefinitionId or roleDefinitionName but not both -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/list/list-roleassignment-add/#examples","text":"add role assignment to list someList located in site https://contoso.sharepoint.com/sites/project-x_for principal id _11 and role definition id 1073741829 m365 spo list roleassignment add --webUrl \"https://contoso.sharepoint.com/sites/project-x\" --listTitle \"someList\" --principalId 11 --roleDefinitionId 1073741829 add role assignment to list 0CD891EF-AFCE-4E55-B836-FCE03286CCCF located in site https://contoso.sharepoint.com/sites/project-x_for principal id _11 and role definition id 1073741829 m365 spo list roleassignment add --webUrl \"https://contoso.sharepoint.com/sites/project-x\" --listId \"0CD891EF-AFCE-4E55-B836-FCE03286CCCF\" --principalId 11 --roleDefinitionId 1073741829 add role assignment to list sites/documents located in site https://contoso.sharepoint.com/sites/project-x_for principal id _11 and role definition id 1073741829 m365 spo list roleassignment add --webUrl \"https://contoso.sharepoint.com/sites/project-x\" --listUrl \"sites/documents\" --principalId 11 --roleDefinitionId 1073741829 add role assignment to list someList located in site https://contoso.sharepoint.com/sites/project-x_for upn _someaccount@tenant.onmicrosoft.com and role definition id 1073741829 m365 spo list roleassignment add --webUrl \"https://contoso.sharepoint.com/sites/project-x\" --listTitle \"someList\" --upn \"someaccount@tenant.onmicrosoft.com\" --roleDefinitionId 1073741829 add role assignment to list someList located in site https://contoso.sharepoint.com/sites/project-x_for group _someGroup and role definition id 1073741829 m365 spo list roleassignment add --webUrl \"https://contoso.sharepoint.com/sites/project-x\" --listTitle \"someList\" --groupName \"someGroup\" --roleDefinitionId 1073741829 add role assignment to list someList located in site https://contoso.sharepoint.com/sites/project-x_for principal id _11 and role definition name Full Control m365 spo list roleassignment add --webUrl \"https://contoso.sharepoint.com/sites/project-x\" --listTitle \"someList\" --principalId 11 --roleDefinitionName \"Full Control\"","title":"Examples"},{"location":"cmd/spo/list/list-roleassignment-remove/","text":"spo list roleassignment remove \u00b6 Removes a role assignment from list permissions Usage \u00b6 m365 spo list roleassignment remove [ options ] Options \u00b6 -u, --webUrl <webUrl> URL of the site where the list is located -i, --listId [listId] ID of the list. Specify either listId, listTitle or listUrl but not multiple. -t, --listTitle [listTitle] Title of the list. Specify either listId, listTitle or listUrl but not multiple. --listUrl [listUrl] Relative URL of the list. Specify either listId, listTitle or listUrl but not multiple. --principalId [principalId] SharePoint ID of principal it may be either user id or group id we want to remove permissions Specify principalId only when upn or groupName are not used. --upn [upn] upn/email of user. Specify either upn or principalId. --groupName [groupName] enter group name of Azure AD or SharePoint group. Specify either groupName or principalId. --confirm Don't prompt for confirming removing the role assignment -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Remove roleassignment from list by title based on group name m365 spo list roleassignment remove --webUrl \"https://contoso.sharepoint.com/sites/contoso-sales\" --listTitle \"someList\" --groupName \"saleGroup\" Remove roleassignment from list by title based on principal Id m365 spo list roleassignment remove --webUrl \"https://contoso.sharepoint.com/sites/contoso-sales\" --listTitle \"Events\" --principalId 2 Remove roleassignment from list by url based on principal Id m365 spo list roleassignment remove --webUrl \"https://contoso.sharepoint.com/sites/contoso-sales\" --listUrl '/sites/contoso-sales/lists/Events' --principalId 2","title":"list roleassignment remove"},{"location":"cmd/spo/list/list-roleassignment-remove/#spo-list-roleassignment-remove","text":"Removes a role assignment from list permissions","title":"spo list roleassignment remove"},{"location":"cmd/spo/list/list-roleassignment-remove/#usage","text":"m365 spo list roleassignment remove [ options ]","title":"Usage"},{"location":"cmd/spo/list/list-roleassignment-remove/#options","text":"-u, --webUrl <webUrl> URL of the site where the list is located -i, --listId [listId] ID of the list. Specify either listId, listTitle or listUrl but not multiple. -t, --listTitle [listTitle] Title of the list. Specify either listId, listTitle or listUrl but not multiple. --listUrl [listUrl] Relative URL of the list. Specify either listId, listTitle or listUrl but not multiple. --principalId [principalId] SharePoint ID of principal it may be either user id or group id we want to remove permissions Specify principalId only when upn or groupName are not used. --upn [upn] upn/email of user. Specify either upn or principalId. --groupName [groupName] enter group name of Azure AD or SharePoint group. Specify either groupName or principalId. --confirm Don't prompt for confirming removing the role assignment -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/list/list-roleassignment-remove/#examples","text":"Remove roleassignment from list by title based on group name m365 spo list roleassignment remove --webUrl \"https://contoso.sharepoint.com/sites/contoso-sales\" --listTitle \"someList\" --groupName \"saleGroup\" Remove roleassignment from list by title based on principal Id m365 spo list roleassignment remove --webUrl \"https://contoso.sharepoint.com/sites/contoso-sales\" --listTitle \"Events\" --principalId 2 Remove roleassignment from list by url based on principal Id m365 spo list roleassignment remove --webUrl \"https://contoso.sharepoint.com/sites/contoso-sales\" --listUrl '/sites/contoso-sales/lists/Events' --principalId 2","title":"Examples"},{"location":"cmd/spo/list/list-roleinheritance-break/","text":"spo list roleinheritance break \u00b6 Breaks role inheritance on list or library Usage \u00b6 m365 spo list roleinheritance break [ options ] Options \u00b6 -u, --webUrl <webUrl> URL of the site where the list is located. -i, --listId [listId] ID of the list. Specify either listTitle , listId or listUrl . -t, --listTitle [listTitle] Title of the list. Specify either listTitle , listId or listUrl . --listUrl [listUrl] Server- or site-relative URL of the list. Specify either listTitle , listId or listUrl . -c, --clearExistingPermissions Flag if used clears all roles from the list --confirm Do not prompt for confirmation before breaking role inheritance. -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 By default, when breaking permissions inheritance, the list will retain existing permissions. To remove existing permissions, use the --clearExistingPermissions option. Examples \u00b6 Break inheritance of list by title in a specific site m365 spo list roleinheritance break --webUrl \"https://contoso.sharepoint.com/sites/project-x\" --listTitle \"someList\" Break inheritance of list by id in a specific site m365 spo list roleinheritance break --webUrl \"https://contoso.sharepoint.com/sites/project-x\" --listId \"202b8199-b9de-43fd-9737-7f213f51c991\" Break inheritance of list by title located in a specific site and clearing the existing permissions m365 spo list roleinheritance break --webUrl \"https://contoso.sharepoint.com/sites/project-x\" --listTitle \"someList\" --clearExistingPermissions Break inheritance of list by url in a specific site and clearing the existing permissions m365 spo list roleinheritance break --webUrl \"https://contoso.sharepoint.com/sites/project-x\" --listUrl '/sites/project-x/lists/events' --clearExistingPermissions Break inheritance of list with ID 202b8199-b9de-43fd-9737-7f213f51c991 located in site https://contoso.sharepoint.com/sites/project-x with clearing permissions without prompting for confirmation m365 spo list roleinheritance break --webUrl \"https://contoso.sharepoint.com/sites/project-x\" --listId \"202b8199-b9de-43fd-9737-7f213f51c991\" --clearExistingPermissions --confirm","title":"list roleinheritance break"},{"location":"cmd/spo/list/list-roleinheritance-break/#spo-list-roleinheritance-break","text":"Breaks role inheritance on list or library","title":"spo list roleinheritance break"},{"location":"cmd/spo/list/list-roleinheritance-break/#usage","text":"m365 spo list roleinheritance break [ options ]","title":"Usage"},{"location":"cmd/spo/list/list-roleinheritance-break/#options","text":"-u, --webUrl <webUrl> URL of the site where the list is located. -i, --listId [listId] ID of the list. Specify either listTitle , listId or listUrl . -t, --listTitle [listTitle] Title of the list. Specify either listTitle , listId or listUrl . --listUrl [listUrl] Server- or site-relative URL of the list. Specify either listTitle , listId or listUrl . -c, --clearExistingPermissions Flag if used clears all roles from the list --confirm Do not prompt for confirmation before breaking role inheritance. -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/list/list-roleinheritance-break/#remarks","text":"By default, when breaking permissions inheritance, the list will retain existing permissions. To remove existing permissions, use the --clearExistingPermissions option.","title":"Remarks"},{"location":"cmd/spo/list/list-roleinheritance-break/#examples","text":"Break inheritance of list by title in a specific site m365 spo list roleinheritance break --webUrl \"https://contoso.sharepoint.com/sites/project-x\" --listTitle \"someList\" Break inheritance of list by id in a specific site m365 spo list roleinheritance break --webUrl \"https://contoso.sharepoint.com/sites/project-x\" --listId \"202b8199-b9de-43fd-9737-7f213f51c991\" Break inheritance of list by title located in a specific site and clearing the existing permissions m365 spo list roleinheritance break --webUrl \"https://contoso.sharepoint.com/sites/project-x\" --listTitle \"someList\" --clearExistingPermissions Break inheritance of list by url in a specific site and clearing the existing permissions m365 spo list roleinheritance break --webUrl \"https://contoso.sharepoint.com/sites/project-x\" --listUrl '/sites/project-x/lists/events' --clearExistingPermissions Break inheritance of list with ID 202b8199-b9de-43fd-9737-7f213f51c991 located in site https://contoso.sharepoint.com/sites/project-x with clearing permissions without prompting for confirmation m365 spo list roleinheritance break --webUrl \"https://contoso.sharepoint.com/sites/project-x\" --listId \"202b8199-b9de-43fd-9737-7f213f51c991\" --clearExistingPermissions --confirm","title":"Examples"},{"location":"cmd/spo/list/list-roleinheritance-reset/","text":"spo list roleinheritance reset \u00b6 Restores role inheritance on list or library Usage \u00b6 m365 spo list roleinheritance reset [ options ] Options \u00b6 -u, --webUrl <webUrl> URL of the site where the list is located. -i, --listId [listId] ID of the list. Specify either listTitle , listId or listUrl . -t, --listTitle [listTitle] Title of the list. Specify either listTitle , listId or listUrl . --listUrl [listUrl] Server- or site-relative URL of the list. Specify either listTitle , listId or listUrl . --confirm Do not prompt for confirmation before resetting role inheritance. -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Restores role inheritance of a specific list by id in a specific site m365 spo list roleinheritance reset --webUrl https://contoso.sharepoint.com/sites/project-x --listId 0cd891ef-afce-4e55-b836-fce03286cccf Restores role inheritance of a specific list by title in a specific site m365 spo list roleinheritance reset --webUrl https://contoso.sharepoint.com/sites/project-x --listTitle test Restores role inheritance of a specific list by url in a specific site m365 spo list roleinheritance reset --webUrl https://contoso.sharepoint.com/sites/project-x --listUrl '/sites/project-x/lists/events' Restores role inheritance of list a specific list by title without prompting for confirmation m365 spo list roleinheritance reset --webUrl https://contoso.sharepoint.com/sites/project-x --listTitle test --confirm","title":"list roleinheritance reset"},{"location":"cmd/spo/list/list-roleinheritance-reset/#spo-list-roleinheritance-reset","text":"Restores role inheritance on list or library","title":"spo list roleinheritance reset"},{"location":"cmd/spo/list/list-roleinheritance-reset/#usage","text":"m365 spo list roleinheritance reset [ options ]","title":"Usage"},{"location":"cmd/spo/list/list-roleinheritance-reset/#options","text":"-u, --webUrl <webUrl> URL of the site where the list is located. -i, --listId [listId] ID of the list. Specify either listTitle , listId or listUrl . -t, --listTitle [listTitle] Title of the list. Specify either listTitle , listId or listUrl . --listUrl [listUrl] Server- or site-relative URL of the list. Specify either listTitle , listId or listUrl . --confirm Do not prompt for confirmation before resetting role inheritance. -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/list/list-roleinheritance-reset/#examples","text":"Restores role inheritance of a specific list by id in a specific site m365 spo list roleinheritance reset --webUrl https://contoso.sharepoint.com/sites/project-x --listId 0cd891ef-afce-4e55-b836-fce03286cccf Restores role inheritance of a specific list by title in a specific site m365 spo list roleinheritance reset --webUrl https://contoso.sharepoint.com/sites/project-x --listTitle test Restores role inheritance of a specific list by url in a specific site m365 spo list roleinheritance reset --webUrl https://contoso.sharepoint.com/sites/project-x --listUrl '/sites/project-x/lists/events' Restores role inheritance of list a specific list by title without prompting for confirmation m365 spo list roleinheritance reset --webUrl https://contoso.sharepoint.com/sites/project-x --listTitle test --confirm","title":"Examples"},{"location":"cmd/spo/list/list-set/","text":"spo list set \u00b6 Updates the settings of the specified list Usage \u00b6 m365 spo list set [ options ] Options \u00b6 -i, --id <id> Id of the list to update -u, --webUrl <webUrl> URL of the site where the list to update is located -t, --title [title] The displayed title for the list --allowDeletion [allowDeletion] Boolean value specifying whether the list can be deleted. Valid values are true,false --allowEveryoneViewItems [allowEveryoneViewItems] Boolean value specifying whether everyone can view documents in the documentlibrary or attachments to items in the list. Valid values are true,false --allowMultiResponses [allowMultiResponses] Boolean value specifying whether users are allowed to give multiple responses to the survey. Valid values are true,false --contentTypesEnabled [contentTypesEnabled] Boolean value specifying whether content types are enabled for the list. Valid values are true,false --crawlNonDefaultViews [crawlNonDefaultViews] Boolean value specifying whether to crawl non default views. Valid values are true,false --defaultContentApprovalWorkflowId [defaultContentApprovalWorkflowId] Value that specifies the default workflow identifier for content approval on the list (GUID) --defaultDisplayFormUrl [defaultDisplayFormUrl] Value that specifies the location of the default display form for the list --defaultEditFormUrl [defaultEditFormUrl] Value that specifies the URL of the edit form to use for list items in the list --description [description] The description for the list --direction [direction] Value that specifies the reading order of the list. Valid values are NONE,LTR,RTL --disableGridEditing [disableGridEditing] Property for assigning or retrieving grid editing on the list. Valid values are true,false --draftVersionVisibility [draftVersionVisibility] Value that specifies the minimum permission required to view minor versions and drafts within the list. Allowed values Reader,Author,Approver. Default Reader --emailAlias [emailAlias] If e-mail notification is enabled, gets or sets the e-mail address to use tonotify to the owner of an item when an assignment has changed or the item has been updated. --enableAssignToEmail [enableAssignToEmail] Boolean value specifying whether e-mail notification is enabled for the list. Valid values are true,false --enableAttachments [enableAttachments] Boolean value that specifies whether attachments can be added to items in the list. Valid values are true,false --enableDeployWithDependentList [enableDeployWithDependentList] Boolean value that specifies whether the list can be deployed with a dependent list. Valid values are true,false --enableFolderCreation [enableFolderCreation] Boolean value that specifies whether folders can be created for the list. Valid values are true,false --enableMinorVersions [enableMinorVersions] Boolean value that specifies whether minor versions are enabled when versioning is enabled for the document library. Valid values are true,false --enableModeration [enableModeration] Boolean value that specifies whether Content Approval is enabled for the list. Valid values are true,false --enablePeopleSelector [enablePeopleSelector] Enable user selector on event list. Valid values are true,false --enableResourceSelector [enableResourceSelector] Enables resource selector on an event list. Valid values are true,false --enableSchemaCaching [enableSchemaCaching] Boolean value specifying whether schema caching is enabled for the list. Valid values are true,false --enableSyndication [enableSyndication] Boolean value that specifies whether RSS syndication is enabled for the list. Valid values are true,false --enableThrottling [enableThrottling] Indicates whether throttling for this list is enabled or not. Valid values are true,false --enableVersioning [enableVersioning] Boolean value that specifies whether versioning is enabled for the document library. Valid values are true,false --enforceDataValidation [enforceDataValidation] Value that indicates whether certain field properties are enforced when an item is added or updated. Valid values are true,false --excludeFromOfflineClient [excludeFromOfflineClient] Value that indicates whether the list should be downloaded to the client during offline synchronization. Valid values are true,false --fetchPropertyBagForListView [fetchPropertyBagForListView] Specifies whether property bag information, as part of the list schema JSON,is retrieved when the list is being rendered on the client. Valid values are true,false --followable [followable] Can a list be followed in an activity feed?. Valid values are true,false --forceCheckout [forceCheckout] Boolean value that specifies whether forced checkout is enabled for the document library. Valid values are true,false --forceDefaultContentType [forceDefaultContentType] Specifies whether we want to return the default Document root content type. Valid values are true,false --hidden [hidden] Boolean value that specifies whether the list is hidden. Valid values are true,false --includedInMyFilesScope [includedInMyFilesScope] Specifies whether this list is accessible to an app principal that has been granted an OAuth scope that contains the string \u201cmyfiles\u201d by a case-insensitive comparison when the current user is a site collection administrator of the personal site that contains the list --irmEnabled [irmEnabled] Gets or sets a Boolean value that specifies whether Information Rights Management (IRM) is enabled for the list --irmExpire [irmExpire] Gets or sets a Boolean value that specifies whether Information Rights Management (IRM) expiration is enabled for the list --irmReject [irmReject] Gets or sets a Boolean value that specifies whether Information Rights Management (IRM) rejection is enabled for the list --isApplicationList [isApplicationList] Indicates whether this list should be treated as a top level navigation object or not --listExperienceOptions [listExperienceOptions] Gets or sets the list experience for the list. Allowed values Auto,NewExperience,ClassicExperience. Default Auto --majorVersionLimit [majorVersionLimit] Gets or sets the maximum number of major versions allowed for an item in a document library that uses version control with major versions only. --majorWithMinorVersionsLimit [majorWithMinorVersionsLimit] Gets or sets the maximum number of major versions that are allowed for an item in a document library that uses version control with both major and minor versions. --multipleDataList [multipleDataList] Gets or sets a Boolean value that specifies whether the list in a Meeting Workspace sitecontains data for multiple meeting instances within the site --navigateForFormsPages [navigateForFormsPages] Indicates whether to navigate for forms pages or use a modal dialog --needUpdateSiteClientTag [needUpdateSiteClientTag] A boolean value that determines whether to editing documents in this list should increment the ClientTag for the site. The tag is used to allow clients to cache JS/CSS/resources that are retrieved from the Content DB, including custom CSR templates. --noCrawl [noCrawl] Gets or sets a Boolean value specifying whether crawling is enabled for the list --onQuickLaunch [onQuickLaunch] Gets or sets a Boolean value that specifies whether the list appears on the Quick Launch area of the home page --ordered [ordered] Gets or sets a Boolean value that specifies whether the option to allow users to reorder items in the list is available on the Edit View page for the list --parserDisabled [parserDisabled] Gets or sets a Boolean value that specifies whether the parser should be disabled --readOnlyUI [readOnlyUI] A boolean value that indicates whether the UI for this list should be presented in a read-only fashion. This will not affect security nor will it actually prevent changes to the list from occurring - it only affects the way the UI is displayed --readSecurity [readSecurity] Gets or sets the Read security setting for the list. Valid values are 1 (All users have Read access to all items)|2 (Users have Read access only to items that they create) --requestAccessEnabled [requestAccessEnabled] Gets or sets a Boolean value that specifies whether the option to allow users to request access to the list is available --restrictUserUpdates [restrictUserUpdates] A boolean value that indicates whether the this list is a restricted one or not The value can't be changed if there are existing items in the list --schemaXml [schemaXml] The schema in Collaborative Application Markup Language (CAML) schemas that defines the list --sendToLocationName [sendToLocationName] Gets or sets a file name to use when copying an item in the list to another document library. --sendToLocationUrl [sendToLocationUrl] Gets or sets a URL to use when copying an item in the list to another document library --showUser [showUser] Gets or sets a Boolean value that specifies whether names of users are shown in the results of the survey --templateFeatureId [templateFeatureId] The globally unique identifier (GUID) of a template feature that is associated with the list --useFormsForDisplay [useFormsForDisplay] Indicates whether forms should be considered for display context or not --validationFormula [validationFormula] Gets or sets a formula that is evaluated each time that a list item is added or updated. --validationMessage [validationMessage] Gets or sets the message that is displayed when validation fails for a list item. --writeSecurity [writeSecurity] Gets or sets the Write security setting for the list. Valid values are 1 (All users can modify all items)|2 (Users can modify only items that they create)|4 (Users cannot modify any list item) -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Update the contentTypesEnabled property of the list with id 3EA5A977-315E-4E25-8B0F-E4F949BF6B8F located in site https://contoso.sharepoint.com/sites/project-x m365 spo list set --webUrl https://contoso.sharepoint.com/sites/project-x --id 3EA5A977-315E-4E25-8B0F-E4F949BF6B8F --contentTypesEnabled true Enable versioning and set the number of major versions to keep on the list with id 3EA5A977-315E-4E25-8B0F-E4F949BF6B8F located in site https://contoso.sharepoint.com/sites/project-x m365 spo list set --webUrl https://contoso.sharepoint.com/sites/project-x --id 3EA5A977-315E-4E25-8B0F-E4F949BF6B8F --enableVersioning true --majorVersionLimit 50 Enable content types and versioning in the list with id 3EA5A977-315E-4E25-8B0F-E4F949BF6B8F located in site https://contoso.sharepoint.com/sites/project-x m365 spo list set --webUrl https://contoso.sharepoint.com/sites/project-x --id 3EA5A977-315E-4E25-8B0F-E4F949BF6B8F --contentTypesEnabled true --enableVersioning true --majorVersionLimit 50 --majorWithMinorVersionsLimit 100 More information \u00b6 SPList Class Members information: https://msdn.microsoft.com/en-us/library/microsoft.sharepoint.client.list_members.aspx ListTemplateType enum information: https://msdn.microsoft.com/en-us/library/microsoft.sharepoint.client.listtemplatetype.aspx DraftVersionVisibilityType enum information: https://msdn.microsoft.com/en-us/library/microsoft.sharepoint.client.draftvisibilitytype.aspx ListExperience enum information: https://msdn.microsoft.com/en-us/library/microsoft.sharepoint.client.listexperience.aspx","title":"list set"},{"location":"cmd/spo/list/list-set/#spo-list-set","text":"Updates the settings of the specified list","title":"spo list set"},{"location":"cmd/spo/list/list-set/#usage","text":"m365 spo list set [ options ]","title":"Usage"},{"location":"cmd/spo/list/list-set/#options","text":"-i, --id <id> Id of the list to update -u, --webUrl <webUrl> URL of the site where the list to update is located -t, --title [title] The displayed title for the list --allowDeletion [allowDeletion] Boolean value specifying whether the list can be deleted. Valid values are true,false --allowEveryoneViewItems [allowEveryoneViewItems] Boolean value specifying whether everyone can view documents in the documentlibrary or attachments to items in the list. Valid values are true,false --allowMultiResponses [allowMultiResponses] Boolean value specifying whether users are allowed to give multiple responses to the survey. Valid values are true,false --contentTypesEnabled [contentTypesEnabled] Boolean value specifying whether content types are enabled for the list. Valid values are true,false --crawlNonDefaultViews [crawlNonDefaultViews] Boolean value specifying whether to crawl non default views. Valid values are true,false --defaultContentApprovalWorkflowId [defaultContentApprovalWorkflowId] Value that specifies the default workflow identifier for content approval on the list (GUID) --defaultDisplayFormUrl [defaultDisplayFormUrl] Value that specifies the location of the default display form for the list --defaultEditFormUrl [defaultEditFormUrl] Value that specifies the URL of the edit form to use for list items in the list --description [description] The description for the list --direction [direction] Value that specifies the reading order of the list. Valid values are NONE,LTR,RTL --disableGridEditing [disableGridEditing] Property for assigning or retrieving grid editing on the list. Valid values are true,false --draftVersionVisibility [draftVersionVisibility] Value that specifies the minimum permission required to view minor versions and drafts within the list. Allowed values Reader,Author,Approver. Default Reader --emailAlias [emailAlias] If e-mail notification is enabled, gets or sets the e-mail address to use tonotify to the owner of an item when an assignment has changed or the item has been updated. --enableAssignToEmail [enableAssignToEmail] Boolean value specifying whether e-mail notification is enabled for the list. Valid values are true,false --enableAttachments [enableAttachments] Boolean value that specifies whether attachments can be added to items in the list. Valid values are true,false --enableDeployWithDependentList [enableDeployWithDependentList] Boolean value that specifies whether the list can be deployed with a dependent list. Valid values are true,false --enableFolderCreation [enableFolderCreation] Boolean value that specifies whether folders can be created for the list. Valid values are true,false --enableMinorVersions [enableMinorVersions] Boolean value that specifies whether minor versions are enabled when versioning is enabled for the document library. Valid values are true,false --enableModeration [enableModeration] Boolean value that specifies whether Content Approval is enabled for the list. Valid values are true,false --enablePeopleSelector [enablePeopleSelector] Enable user selector on event list. Valid values are true,false --enableResourceSelector [enableResourceSelector] Enables resource selector on an event list. Valid values are true,false --enableSchemaCaching [enableSchemaCaching] Boolean value specifying whether schema caching is enabled for the list. Valid values are true,false --enableSyndication [enableSyndication] Boolean value that specifies whether RSS syndication is enabled for the list. Valid values are true,false --enableThrottling [enableThrottling] Indicates whether throttling for this list is enabled or not. Valid values are true,false --enableVersioning [enableVersioning] Boolean value that specifies whether versioning is enabled for the document library. Valid values are true,false --enforceDataValidation [enforceDataValidation] Value that indicates whether certain field properties are enforced when an item is added or updated. Valid values are true,false --excludeFromOfflineClient [excludeFromOfflineClient] Value that indicates whether the list should be downloaded to the client during offline synchronization. Valid values are true,false --fetchPropertyBagForListView [fetchPropertyBagForListView] Specifies whether property bag information, as part of the list schema JSON,is retrieved when the list is being rendered on the client. Valid values are true,false --followable [followable] Can a list be followed in an activity feed?. Valid values are true,false --forceCheckout [forceCheckout] Boolean value that specifies whether forced checkout is enabled for the document library. Valid values are true,false --forceDefaultContentType [forceDefaultContentType] Specifies whether we want to return the default Document root content type. Valid values are true,false --hidden [hidden] Boolean value that specifies whether the list is hidden. Valid values are true,false --includedInMyFilesScope [includedInMyFilesScope] Specifies whether this list is accessible to an app principal that has been granted an OAuth scope that contains the string \u201cmyfiles\u201d by a case-insensitive comparison when the current user is a site collection administrator of the personal site that contains the list --irmEnabled [irmEnabled] Gets or sets a Boolean value that specifies whether Information Rights Management (IRM) is enabled for the list --irmExpire [irmExpire] Gets or sets a Boolean value that specifies whether Information Rights Management (IRM) expiration is enabled for the list --irmReject [irmReject] Gets or sets a Boolean value that specifies whether Information Rights Management (IRM) rejection is enabled for the list --isApplicationList [isApplicationList] Indicates whether this list should be treated as a top level navigation object or not --listExperienceOptions [listExperienceOptions] Gets or sets the list experience for the list. Allowed values Auto,NewExperience,ClassicExperience. Default Auto --majorVersionLimit [majorVersionLimit] Gets or sets the maximum number of major versions allowed for an item in a document library that uses version control with major versions only. --majorWithMinorVersionsLimit [majorWithMinorVersionsLimit] Gets or sets the maximum number of major versions that are allowed for an item in a document library that uses version control with both major and minor versions. --multipleDataList [multipleDataList] Gets or sets a Boolean value that specifies whether the list in a Meeting Workspace sitecontains data for multiple meeting instances within the site --navigateForFormsPages [navigateForFormsPages] Indicates whether to navigate for forms pages or use a modal dialog --needUpdateSiteClientTag [needUpdateSiteClientTag] A boolean value that determines whether to editing documents in this list should increment the ClientTag for the site. The tag is used to allow clients to cache JS/CSS/resources that are retrieved from the Content DB, including custom CSR templates. --noCrawl [noCrawl] Gets or sets a Boolean value specifying whether crawling is enabled for the list --onQuickLaunch [onQuickLaunch] Gets or sets a Boolean value that specifies whether the list appears on the Quick Launch area of the home page --ordered [ordered] Gets or sets a Boolean value that specifies whether the option to allow users to reorder items in the list is available on the Edit View page for the list --parserDisabled [parserDisabled] Gets or sets a Boolean value that specifies whether the parser should be disabled --readOnlyUI [readOnlyUI] A boolean value that indicates whether the UI for this list should be presented in a read-only fashion. This will not affect security nor will it actually prevent changes to the list from occurring - it only affects the way the UI is displayed --readSecurity [readSecurity] Gets or sets the Read security setting for the list. Valid values are 1 (All users have Read access to all items)|2 (Users have Read access only to items that they create) --requestAccessEnabled [requestAccessEnabled] Gets or sets a Boolean value that specifies whether the option to allow users to request access to the list is available --restrictUserUpdates [restrictUserUpdates] A boolean value that indicates whether the this list is a restricted one or not The value can't be changed if there are existing items in the list --schemaXml [schemaXml] The schema in Collaborative Application Markup Language (CAML) schemas that defines the list --sendToLocationName [sendToLocationName] Gets or sets a file name to use when copying an item in the list to another document library. --sendToLocationUrl [sendToLocationUrl] Gets or sets a URL to use when copying an item in the list to another document library --showUser [showUser] Gets or sets a Boolean value that specifies whether names of users are shown in the results of the survey --templateFeatureId [templateFeatureId] The globally unique identifier (GUID) of a template feature that is associated with the list --useFormsForDisplay [useFormsForDisplay] Indicates whether forms should be considered for display context or not --validationFormula [validationFormula] Gets or sets a formula that is evaluated each time that a list item is added or updated. --validationMessage [validationMessage] Gets or sets the message that is displayed when validation fails for a list item. --writeSecurity [writeSecurity] Gets or sets the Write security setting for the list. Valid values are 1 (All users can modify all items)|2 (Users can modify only items that they create)|4 (Users cannot modify any list item) -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/list/list-set/#examples","text":"Update the contentTypesEnabled property of the list with id 3EA5A977-315E-4E25-8B0F-E4F949BF6B8F located in site https://contoso.sharepoint.com/sites/project-x m365 spo list set --webUrl https://contoso.sharepoint.com/sites/project-x --id 3EA5A977-315E-4E25-8B0F-E4F949BF6B8F --contentTypesEnabled true Enable versioning and set the number of major versions to keep on the list with id 3EA5A977-315E-4E25-8B0F-E4F949BF6B8F located in site https://contoso.sharepoint.com/sites/project-x m365 spo list set --webUrl https://contoso.sharepoint.com/sites/project-x --id 3EA5A977-315E-4E25-8B0F-E4F949BF6B8F --enableVersioning true --majorVersionLimit 50 Enable content types and versioning in the list with id 3EA5A977-315E-4E25-8B0F-E4F949BF6B8F located in site https://contoso.sharepoint.com/sites/project-x m365 spo list set --webUrl https://contoso.sharepoint.com/sites/project-x --id 3EA5A977-315E-4E25-8B0F-E4F949BF6B8F --contentTypesEnabled true --enableVersioning true --majorVersionLimit 50 --majorWithMinorVersionsLimit 100","title":"Examples"},{"location":"cmd/spo/list/list-set/#more-information","text":"SPList Class Members information: https://msdn.microsoft.com/en-us/library/microsoft.sharepoint.client.list_members.aspx ListTemplateType enum information: https://msdn.microsoft.com/en-us/library/microsoft.sharepoint.client.listtemplatetype.aspx DraftVersionVisibilityType enum information: https://msdn.microsoft.com/en-us/library/microsoft.sharepoint.client.draftvisibilitytype.aspx ListExperience enum information: https://msdn.microsoft.com/en-us/library/microsoft.sharepoint.client.listexperience.aspx","title":"More information"},{"location":"cmd/spo/list/list-sitescript-get/","text":"spo list sitescript get \u00b6 Extracts a site script from a SharePoint list Usage \u00b6 m365 spo list sitescript get [ options ] Options \u00b6 -u, --webUrl <webUrl> URL of the site where the list to extract the site script from is located -l, --listId [listId] ID of the list to extract the site script from. Specify either listId or listTitle but not both -t, --listTitle [listTitle] Title of the list to extract the site script from. Specify either listId or listTitle but not both -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Extract a site script from an existing SharePoint list with title ContosoList located in site https://contoso.sharepoint.com/sites/project-x m365 spo list sitescript get --webUrl https://contoso.sharepoint.com/sites/project-x --listTitle ContosoList Extract a site script from an existing SharePoint list with id cc27a922-8224-4296-90a5-ebbc54da2e85 located in site https://contoso.sharepoint.com/sites/project-x m365 spo list sitescript get --webUrl https://contoso.sharepoint.com/sites/project-x --listId cc27a922-8224-4296-90a5-ebbc54da2e85","title":"list sitescript get"},{"location":"cmd/spo/list/list-sitescript-get/#spo-list-sitescript-get","text":"Extracts a site script from a SharePoint list","title":"spo list sitescript get"},{"location":"cmd/spo/list/list-sitescript-get/#usage","text":"m365 spo list sitescript get [ options ]","title":"Usage"},{"location":"cmd/spo/list/list-sitescript-get/#options","text":"-u, --webUrl <webUrl> URL of the site where the list to extract the site script from is located -l, --listId [listId] ID of the list to extract the site script from. Specify either listId or listTitle but not both -t, --listTitle [listTitle] Title of the list to extract the site script from. Specify either listId or listTitle but not both -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/list/list-sitescript-get/#examples","text":"Extract a site script from an existing SharePoint list with title ContosoList located in site https://contoso.sharepoint.com/sites/project-x m365 spo list sitescript get --webUrl https://contoso.sharepoint.com/sites/project-x --listTitle ContosoList Extract a site script from an existing SharePoint list with id cc27a922-8224-4296-90a5-ebbc54da2e85 located in site https://contoso.sharepoint.com/sites/project-x m365 spo list sitescript get --webUrl https://contoso.sharepoint.com/sites/project-x --listId cc27a922-8224-4296-90a5-ebbc54da2e85","title":"Examples"},{"location":"cmd/spo/list/list-view-add/","text":"spo list view add \u00b6 Adds a new view to a SharePoint list Usage \u00b6 m365 spo list view add [ options ] Options \u00b6 -u, --webUrl <webUrl> URL of the site where the list is located. --listId [listId] ID of the list to which the view should be added. Specify either listId , listTitle or listUrl but not multiple. --listTitle [listTitle] Title of the list to which the view should be added. Specify either listId , listTitle or listUrl but not multiple. --listUrl [listUrl] Relative URL of the list to which the view should be added. Specify either listId , listTitle or listUrl but not multiple. --title <title> Title of the view to be created for the list. --fields <fields> Comma-separated list of case-sensitive internal names of the fields to add to the view. --viewQuery [viewQuery] XML representation of the list query for the underlying view. --personal View will be created as personal view, if specified. --default View will be set as default view, if specified. --paged View supports paging, if specified (recommended to use this). --rowLimit [rowLimit] Sets the number of items to display for the view. Default value is 30. -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 We recommend using the paged option. When specified, the view supports displaying more items page by page (default behavior). When not specified, the rowLimit is absolute, and there is no link to see more items. Examples \u00b6 Add a view called All events to a list with specific title. m365 spo list view add --webUrl https://contoso.sharepoint.com/sites/project-x --listTitle \"My List\" --title \"All events\" --fields \"FieldName1,FieldName2,Created,Author,Modified,Editor\" --paged Add a view as default view with title All events to a list with a specific URL. m365 spo list view add --webUrl https://contoso.sharepoint.com/sites/project-x --listUrl \"/Lists/MyList\" --title \"All events\" --fields \"FieldName1,Created\" --paged --default Add a personal view called All events to a list with a specific ID. m365 spo list view add --webUrl https://contoso.sharepoint.com/sites/project-x --listId 00000000 -0000-0000-0000-000000000000 --title \"All events\" --fields \"FieldName1,Created\" --paged --personal Add a view called All events with defined filter and sorting. m365 spo list view add --webUrl https://contoso.sharepoint.com/sites/project-x --listTitle \"My List\" --title \"All events\" --fields \"FieldName1\" --viewQuery \"<OrderBy><FieldRef Name='Created' Ascending='FALSE' /></OrderBy><Where><Eq><FieldRef Name='TextFieldName' /><Value Type='Text'>Field value</Value></Eq></Where>\" --paged","title":"list view add"},{"location":"cmd/spo/list/list-view-add/#spo-list-view-add","text":"Adds a new view to a SharePoint list","title":"spo list view add"},{"location":"cmd/spo/list/list-view-add/#usage","text":"m365 spo list view add [ options ]","title":"Usage"},{"location":"cmd/spo/list/list-view-add/#options","text":"-u, --webUrl <webUrl> URL of the site where the list is located. --listId [listId] ID of the list to which the view should be added. Specify either listId , listTitle or listUrl but not multiple. --listTitle [listTitle] Title of the list to which the view should be added. Specify either listId , listTitle or listUrl but not multiple. --listUrl [listUrl] Relative URL of the list to which the view should be added. Specify either listId , listTitle or listUrl but not multiple. --title <title> Title of the view to be created for the list. --fields <fields> Comma-separated list of case-sensitive internal names of the fields to add to the view. --viewQuery [viewQuery] XML representation of the list query for the underlying view. --personal View will be created as personal view, if specified. --default View will be set as default view, if specified. --paged View supports paging, if specified (recommended to use this). --rowLimit [rowLimit] Sets the number of items to display for the view. Default value is 30. -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/list/list-view-add/#remarks","text":"We recommend using the paged option. When specified, the view supports displaying more items page by page (default behavior). When not specified, the rowLimit is absolute, and there is no link to see more items.","title":"Remarks"},{"location":"cmd/spo/list/list-view-add/#examples","text":"Add a view called All events to a list with specific title. m365 spo list view add --webUrl https://contoso.sharepoint.com/sites/project-x --listTitle \"My List\" --title \"All events\" --fields \"FieldName1,FieldName2,Created,Author,Modified,Editor\" --paged Add a view as default view with title All events to a list with a specific URL. m365 spo list view add --webUrl https://contoso.sharepoint.com/sites/project-x --listUrl \"/Lists/MyList\" --title \"All events\" --fields \"FieldName1,Created\" --paged --default Add a personal view called All events to a list with a specific ID. m365 spo list view add --webUrl https://contoso.sharepoint.com/sites/project-x --listId 00000000 -0000-0000-0000-000000000000 --title \"All events\" --fields \"FieldName1,Created\" --paged --personal Add a view called All events with defined filter and sorting. m365 spo list view add --webUrl https://contoso.sharepoint.com/sites/project-x --listTitle \"My List\" --title \"All events\" --fields \"FieldName1\" --viewQuery \"<OrderBy><FieldRef Name='Created' Ascending='FALSE' /></OrderBy><Where><Eq><FieldRef Name='TextFieldName' /><Value Type='Text'>Field value</Value></Eq></Where>\" --paged","title":"Examples"},{"location":"cmd/spo/list/list-view-field-add/","text":"spo list view field add \u00b6 Adds the specified field to list view Usage \u00b6 m365 spo list view field add [ options ] Options \u00b6 -u, --webUrl <webUrl> URL of the site where the list is located --listId [listId] ID of the list where the view is located. Specify listTitle or listId but not both --listTitle [listTitle] Title of the list where the view is located. Specify listTitle or listId but not both --viewId [viewId] ID of the view to update. Specify viewTitle or viewId but not both --viewTitle [viewTitle] Title of the view to update. Specify viewTitle or viewId but not both --id [id] ID of the field to add. Specify id or title but not both --title [title] The case-sensitive internal name or display name of the field to add. Specify id or title but not both --position [position] The zero-based index of the position for the field -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Add field with ID 330f29c5-5c4c-465f-9f4b-7903020ae1ce to view with ID 3d760127-982c-405e-9c93-e1f76e1a1110 of the list with ID 1f187321-f086-4d3d-8523-517e94cc9df9 located in site https://contoso.sharepoint.com/sites/project-x m365 spo list view field add --webUrl https://contoso.sharepoint.com/sites/project-x --listId 1f187321-f086-4d3d-8523-517e94cc9df9 --viewId 3d760127-982c-405e-9c93-e1f76e1a1110 --id 330f29c5-5c4c-465f-9f4b-7903020ae1ce Add field with title Custom field to view with title All Documents of the list with title Documents located in site https://contoso.sharepoint.com/sites/project-x m365 spo list view field add --webUrl https://contoso.sharepoint.com/sites/project-x --listTitle Documents --viewTitle 'All Documents' --title 'Custom field' Add field with title Custom field at the position 0 to view with title All Documents of the list with title Documents located in site https://contoso.sharepoint.com/sites/project-x m365 spo list view field add --webUrl https://contoso.sharepoint.com/sites/project-x --listTitle Documents --viewTitle 'All Documents' --title 'Custom field' --position 0","title":"list view field add"},{"location":"cmd/spo/list/list-view-field-add/#spo-list-view-field-add","text":"Adds the specified field to list view","title":"spo list view field add"},{"location":"cmd/spo/list/list-view-field-add/#usage","text":"m365 spo list view field add [ options ]","title":"Usage"},{"location":"cmd/spo/list/list-view-field-add/#options","text":"-u, --webUrl <webUrl> URL of the site where the list is located --listId [listId] ID of the list where the view is located. Specify listTitle or listId but not both --listTitle [listTitle] Title of the list where the view is located. Specify listTitle or listId but not both --viewId [viewId] ID of the view to update. Specify viewTitle or viewId but not both --viewTitle [viewTitle] Title of the view to update. Specify viewTitle or viewId but not both --id [id] ID of the field to add. Specify id or title but not both --title [title] The case-sensitive internal name or display name of the field to add. Specify id or title but not both --position [position] The zero-based index of the position for the field -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/list/list-view-field-add/#examples","text":"Add field with ID 330f29c5-5c4c-465f-9f4b-7903020ae1ce to view with ID 3d760127-982c-405e-9c93-e1f76e1a1110 of the list with ID 1f187321-f086-4d3d-8523-517e94cc9df9 located in site https://contoso.sharepoint.com/sites/project-x m365 spo list view field add --webUrl https://contoso.sharepoint.com/sites/project-x --listId 1f187321-f086-4d3d-8523-517e94cc9df9 --viewId 3d760127-982c-405e-9c93-e1f76e1a1110 --id 330f29c5-5c4c-465f-9f4b-7903020ae1ce Add field with title Custom field to view with title All Documents of the list with title Documents located in site https://contoso.sharepoint.com/sites/project-x m365 spo list view field add --webUrl https://contoso.sharepoint.com/sites/project-x --listTitle Documents --viewTitle 'All Documents' --title 'Custom field' Add field with title Custom field at the position 0 to view with title All Documents of the list with title Documents located in site https://contoso.sharepoint.com/sites/project-x m365 spo list view field add --webUrl https://contoso.sharepoint.com/sites/project-x --listTitle Documents --viewTitle 'All Documents' --title 'Custom field' --position 0","title":"Examples"},{"location":"cmd/spo/list/list-view-field-remove/","text":"spo list view field remove \u00b6 Removes the specified field from list view Usage \u00b6 m365 spo list view field remove [ options ] Options \u00b6 -u, --webUrl <webUrl> URL of the site where the list is located --listId [listId] ID of the list where the view is located. Specify listTitle or listId but not both --listTitle [listTitle] Title of the list where the view is located. Specify listTitle or listId but not both --viewId [viewId] ID of the view to update. Specify viewTitle or viewId but not both --viewTitle [viewTitle] Title of the view to update. Specify viewTitle or viewId but not both --id [id] ID of the field to remove. Specify id or title but not both --title [title] The case-sensitive internal name or display name of the field to remove. Specify id or title but not both -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Remove field with ID 330f29c5-5c4c-465f-9f4b-7903020ae1ce from view with ID 3d760127-982c-405e-9c93-e1f76e1a1110 from the list with ID 1f187321-f086-4d3d-8523-517e94cc9df9 located in site https://contoso.sharepoint.com/sites/project-x m365 spo list view field remove --webUrl https://contoso.sharepoint.com/sites/project-x --listId 1f187321-f086-4d3d-8523-517e94cc9df9 --viewId 3d760127-982c-405e-9c93-e1f76e1a1110 --id 330f29c5-5c4c-465f-9f4b-7903020ae1ce Remove field with title Custom field from view with title Custom view from the list with title Documents located in site https://contoso.sharepoint.com/sites/project-x m365 spo list view field remove --webUrl https://contoso.sharepoint.com/sites/project-x --title 'Custom field' --listTitle Documents --viewTitle 'Custom view'","title":"list view field remove"},{"location":"cmd/spo/list/list-view-field-remove/#spo-list-view-field-remove","text":"Removes the specified field from list view","title":"spo list view field remove"},{"location":"cmd/spo/list/list-view-field-remove/#usage","text":"m365 spo list view field remove [ options ]","title":"Usage"},{"location":"cmd/spo/list/list-view-field-remove/#options","text":"-u, --webUrl <webUrl> URL of the site where the list is located --listId [listId] ID of the list where the view is located. Specify listTitle or listId but not both --listTitle [listTitle] Title of the list where the view is located. Specify listTitle or listId but not both --viewId [viewId] ID of the view to update. Specify viewTitle or viewId but not both --viewTitle [viewTitle] Title of the view to update. Specify viewTitle or viewId but not both --id [id] ID of the field to remove. Specify id or title but not both --title [title] The case-sensitive internal name or display name of the field to remove. Specify id or title but not both -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/list/list-view-field-remove/#examples","text":"Remove field with ID 330f29c5-5c4c-465f-9f4b-7903020ae1ce from view with ID 3d760127-982c-405e-9c93-e1f76e1a1110 from the list with ID 1f187321-f086-4d3d-8523-517e94cc9df9 located in site https://contoso.sharepoint.com/sites/project-x m365 spo list view field remove --webUrl https://contoso.sharepoint.com/sites/project-x --listId 1f187321-f086-4d3d-8523-517e94cc9df9 --viewId 3d760127-982c-405e-9c93-e1f76e1a1110 --id 330f29c5-5c4c-465f-9f4b-7903020ae1ce Remove field with title Custom field from view with title Custom view from the list with title Documents located in site https://contoso.sharepoint.com/sites/project-x m365 spo list view field remove --webUrl https://contoso.sharepoint.com/sites/project-x --title 'Custom field' --listTitle Documents --viewTitle 'Custom view'","title":"Examples"},{"location":"cmd/spo/list/list-view-field-set/","text":"spo list view field set \u00b6 Updates existing column in an existing view (eg. move to a specific position) Usage \u00b6 m365 spo list view field set [ options ] Options \u00b6 -u, --webUrl <webUrl> URL of the site where the list is located --listId [listId] ID of the list where the view is located. Specify listTitle or listId but not both --listTitle [listTitle] Title of the list where the view is located. Specify listTitle or listId but not both --viewId [viewId] ID of the view to update. Specify viewTitle or viewId but not both --viewTitle [viewTitle] Title of the view to update. Specify viewTitle or viewId but not both --id [id] ID of the field to update. Specify id or title but not both --title [title] The case-sensitive internal name or display name of the field to update. Specify id or title but not both --position <position> The zero-based index of the position to which to move the field -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Move field with ID 330f29c5-5c4c-465f-9f4b-7903020ae1ce to the front in view with ID 3d760127-982c-405e-9c93-e1f76e1a1110 of list with ID 1f187321-f086-4d3d-8523-517e94cc9df9 located in site https://contoso.sharepoint.com/sites/project-x m365 spo list view field set --webUrl https://contoso.sharepoint.com/sites/project-x --listId 1f187321-f086-4d3d-8523-517e94cc9df9 --viewId 3d760127-982c-405e-9c93-e1f76e1a1110 --id 330f29c5-5c4c-465f-9f4b-7903020ae1ce --position 0 Move field with title Custom field to position 1 in view with title All Documents of the list with title Documents located in site https://contoso.sharepoint.com/sites/project-x m365 spo list view field set --webUrl https://contoso.sharepoint.com/sites/project-x --listTitle Documents --viewTitle 'All Documents' --title 'Custom field' --position 1","title":"list view field set"},{"location":"cmd/spo/list/list-view-field-set/#spo-list-view-field-set","text":"Updates existing column in an existing view (eg. move to a specific position)","title":"spo list view field set"},{"location":"cmd/spo/list/list-view-field-set/#usage","text":"m365 spo list view field set [ options ]","title":"Usage"},{"location":"cmd/spo/list/list-view-field-set/#options","text":"-u, --webUrl <webUrl> URL of the site where the list is located --listId [listId] ID of the list where the view is located. Specify listTitle or listId but not both --listTitle [listTitle] Title of the list where the view is located. Specify listTitle or listId but not both --viewId [viewId] ID of the view to update. Specify viewTitle or viewId but not both --viewTitle [viewTitle] Title of the view to update. Specify viewTitle or viewId but not both --id [id] ID of the field to update. Specify id or title but not both --title [title] The case-sensitive internal name or display name of the field to update. Specify id or title but not both --position <position> The zero-based index of the position to which to move the field -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/list/list-view-field-set/#examples","text":"Move field with ID 330f29c5-5c4c-465f-9f4b-7903020ae1ce to the front in view with ID 3d760127-982c-405e-9c93-e1f76e1a1110 of list with ID 1f187321-f086-4d3d-8523-517e94cc9df9 located in site https://contoso.sharepoint.com/sites/project-x m365 spo list view field set --webUrl https://contoso.sharepoint.com/sites/project-x --listId 1f187321-f086-4d3d-8523-517e94cc9df9 --viewId 3d760127-982c-405e-9c93-e1f76e1a1110 --id 330f29c5-5c4c-465f-9f4b-7903020ae1ce --position 0 Move field with title Custom field to position 1 in view with title All Documents of the list with title Documents located in site https://contoso.sharepoint.com/sites/project-x m365 spo list view field set --webUrl https://contoso.sharepoint.com/sites/project-x --listTitle Documents --viewTitle 'All Documents' --title 'Custom field' --position 1","title":"Examples"},{"location":"cmd/spo/list/list-view-get/","text":"spo list view get \u00b6 Gets information about specific list view Usage \u00b6 m365 spo list view get [ options ] Options \u00b6 -u, --webUrl <webUrl> URL of the site where the list is located --listId [listId] ID of the list where the view is located. Specify only one of listTitle , listId or listUrl --listTitle [listTitle] Title of the list where the view is located. Specify only one of listTitle , listId or listUrl --listUrl [listUrl] Server- or web-relative URL of the list where the view is located. Specify only one of listTitle , listId or listUrl --id [id] ID of the view to get. Specify title or id but not both --title [title] Title of the view to get. Specify title or id but not both -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Gets a list view by name from a list located in site https://contoso.sharepoint.com/sites/project-x m365 spo list view get --webUrl https://contoso.sharepoint.com/sites/project-x --listTitle 'My List' --title 'All Items' Gets a list view by ID from a list located in site https://contoso.sharepoint.com/sites/project-x m365 spo list view get --webUrl https://contoso.sharepoint.com/sites/project-x --listUrl 'Lists/My List' --id 330f29c5-5c4c-465f-9f4b-7903020ae1ce Gets a list view by name from a list located in site https://contoso.sharepoint.com/sites/project-x . Retrieve the list by its ID m365 spo list view get --webUrl https://contoso.sharepoint.com/sites/project-x --listId 330f29c5-5c4c-465f-9f4b-7903020ae1c1 --title 'All Items'","title":"list view get"},{"location":"cmd/spo/list/list-view-get/#spo-list-view-get","text":"Gets information about specific list view","title":"spo list view get"},{"location":"cmd/spo/list/list-view-get/#usage","text":"m365 spo list view get [ options ]","title":"Usage"},{"location":"cmd/spo/list/list-view-get/#options","text":"-u, --webUrl <webUrl> URL of the site where the list is located --listId [listId] ID of the list where the view is located. Specify only one of listTitle , listId or listUrl --listTitle [listTitle] Title of the list where the view is located. Specify only one of listTitle , listId or listUrl --listUrl [listUrl] Server- or web-relative URL of the list where the view is located. Specify only one of listTitle , listId or listUrl --id [id] ID of the view to get. Specify title or id but not both --title [title] Title of the view to get. Specify title or id but not both -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/list/list-view-get/#examples","text":"Gets a list view by name from a list located in site https://contoso.sharepoint.com/sites/project-x m365 spo list view get --webUrl https://contoso.sharepoint.com/sites/project-x --listTitle 'My List' --title 'All Items' Gets a list view by ID from a list located in site https://contoso.sharepoint.com/sites/project-x m365 spo list view get --webUrl https://contoso.sharepoint.com/sites/project-x --listUrl 'Lists/My List' --id 330f29c5-5c4c-465f-9f4b-7903020ae1ce Gets a list view by name from a list located in site https://contoso.sharepoint.com/sites/project-x . Retrieve the list by its ID m365 spo list view get --webUrl https://contoso.sharepoint.com/sites/project-x --listId 330f29c5-5c4c-465f-9f4b-7903020ae1c1 --title 'All Items'","title":"Examples"},{"location":"cmd/spo/list/list-view-list/","text":"spo list view list \u00b6 Lists views configured on the specified list Usage \u00b6 m365 spo list view list [ options ] Options \u00b6 -u, --webUrl <webUrl> URL of the site where the list is located -i, --listId [listId] ID of the list for which to list configured views. Specify listId or listTitle but not both -t, --listTitle [listTitle] Title of the list for which to list configured views. Specify listId or listTitle but not both -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 List all views for a list with title Documents located in site https://contoso.sharepoint.com/sites/project-x m365 spo list view list --webUrl https://contoso.sharepoint.com/sites/project-x --listTitle Documents List all views for a list with ID 0cd891ef-afce-4e55-b836-fce03286cccf located in site https://contoso.sharepoint.com/sites/project-x m365 spo list view list --webUrl https://contoso.sharepoint.com/sites/project-x --listId 0cd891ef-afce-4e55-b836-fce03286cccf","title":"list view list"},{"location":"cmd/spo/list/list-view-list/#spo-list-view-list","text":"Lists views configured on the specified list","title":"spo list view list"},{"location":"cmd/spo/list/list-view-list/#usage","text":"m365 spo list view list [ options ]","title":"Usage"},{"location":"cmd/spo/list/list-view-list/#options","text":"-u, --webUrl <webUrl> URL of the site where the list is located -i, --listId [listId] ID of the list for which to list configured views. Specify listId or listTitle but not both -t, --listTitle [listTitle] Title of the list for which to list configured views. Specify listId or listTitle but not both -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/list/list-view-list/#examples","text":"List all views for a list with title Documents located in site https://contoso.sharepoint.com/sites/project-x m365 spo list view list --webUrl https://contoso.sharepoint.com/sites/project-x --listTitle Documents List all views for a list with ID 0cd891ef-afce-4e55-b836-fce03286cccf located in site https://contoso.sharepoint.com/sites/project-x m365 spo list view list --webUrl https://contoso.sharepoint.com/sites/project-x --listId 0cd891ef-afce-4e55-b836-fce03286cccf","title":"Examples"},{"location":"cmd/spo/list/list-view-remove/","text":"spo list view remove \u00b6 Deletes the specified view from the list Usage \u00b6 m365 spo list view remove [ options ] Options \u00b6 -u, --webUrl <webUrl> URL of the site where the list to remove the view from is located --listId [listId] ID of the list from which the view should be removed. Specify either listId or listTitle but not both --listTitle [listTitle] Title of the list from which the view should be removed. Specify either listId or listTitle but not both --id [id] ID of the view to remove. Specify either id or title but not both --title [title] Title of the view to remove. Specify either id or title but not both --confirm Don't prompt for confirming removing the view -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Remove view with ID cc27a922-8224-4296-90a5-ebbc54da2e81 from the list with ID 0cd891ef-afce-4e55-b836-fce03286cccf located in site https://contoso.sharepoint.com/sites/project-x m365 spo list view remove --webUrl https://contoso.sharepoint.com/sites/project-x --listId 0cd891ef-afce-4e55-b836-fce03286cccf --id cc27a922-8224-4296-90a5-ebbc54da2e81 Remove view with ID cc27a922-8224-4296-90a5-ebbc54da2e81 from the list with title Documents located in site https://contoso.sharepoint.com/sites/project-x m365 spo list view remove --webUrl https://contoso.sharepoint.com/sites/project-x --listTitle Documents --id cc27a922-8224-4296-90a5-ebbc54da2e81 Remove view with title MyView from a list with title Documents located in site https://contoso.sharepoint.com/sites/project-x m365 spo list view remove --webUrl https://contoso.sharepoint.com/sites/project-x --listTitle Documents --title MyView Remove view with ID cc27a922-8224-4296-90a5-ebbc54da2e81 from a list with title Documents located in site https://contoso.sharepoint.com/sites/project-x without being asked for confirmation m365 spo list view remove --webUrl https://contoso.sharepoint.com/sites/project-x --listTitle Documents --id cc27a922-8224-4296-90a5-ebbc54da2e81 --confirm","title":"list view remove"},{"location":"cmd/spo/list/list-view-remove/#spo-list-view-remove","text":"Deletes the specified view from the list","title":"spo list view remove"},{"location":"cmd/spo/list/list-view-remove/#usage","text":"m365 spo list view remove [ options ]","title":"Usage"},{"location":"cmd/spo/list/list-view-remove/#options","text":"-u, --webUrl <webUrl> URL of the site where the list to remove the view from is located --listId [listId] ID of the list from which the view should be removed. Specify either listId or listTitle but not both --listTitle [listTitle] Title of the list from which the view should be removed. Specify either listId or listTitle but not both --id [id] ID of the view to remove. Specify either id or title but not both --title [title] Title of the view to remove. Specify either id or title but not both --confirm Don't prompt for confirming removing the view -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/list/list-view-remove/#examples","text":"Remove view with ID cc27a922-8224-4296-90a5-ebbc54da2e81 from the list with ID 0cd891ef-afce-4e55-b836-fce03286cccf located in site https://contoso.sharepoint.com/sites/project-x m365 spo list view remove --webUrl https://contoso.sharepoint.com/sites/project-x --listId 0cd891ef-afce-4e55-b836-fce03286cccf --id cc27a922-8224-4296-90a5-ebbc54da2e81 Remove view with ID cc27a922-8224-4296-90a5-ebbc54da2e81 from the list with title Documents located in site https://contoso.sharepoint.com/sites/project-x m365 spo list view remove --webUrl https://contoso.sharepoint.com/sites/project-x --listTitle Documents --id cc27a922-8224-4296-90a5-ebbc54da2e81 Remove view with title MyView from a list with title Documents located in site https://contoso.sharepoint.com/sites/project-x m365 spo list view remove --webUrl https://contoso.sharepoint.com/sites/project-x --listTitle Documents --title MyView Remove view with ID cc27a922-8224-4296-90a5-ebbc54da2e81 from a list with title Documents located in site https://contoso.sharepoint.com/sites/project-x without being asked for confirmation m365 spo list view remove --webUrl https://contoso.sharepoint.com/sites/project-x --listTitle Documents --id cc27a922-8224-4296-90a5-ebbc54da2e81 --confirm","title":"Examples"},{"location":"cmd/spo/list/list-view-set/","text":"spo list view set \u00b6 Updates existing list view Usage \u00b6 m365 spo list view set [ options ] Options \u00b6 -u, --webUrl <webUrl> URL of the site where the list is located --listId [listId] ID of the list where the view is located. Specify listTitle or listId but not both --listTitle [listTitle] Title of the list where the view is located. Specify listTitle or listId but not both --id [id] ID of the view to update. Specify title or id but not both --title [title] Title of the view to update. Specify title or id but not both -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 Specify properties to update using their names, eg. --Title 'New Title' --JSLink jslink.js When updating list formatting, the value of the CustomFormatter property must be XML-escaped, eg. &lt; instead of < . Escaping JSON in PowerShell When updating list view formatting for a view with the --CustomFormatter option, it's possible to enter a JSON string. In PowerShell 5 to 7.2 specific escaping rules apply due to an issue. Remember that you can also use file tokens instead. Examples \u00b6 Update the title of the list view specified by its name m365 spo list view set --webUrl https://contoso.sharepoint.com/sites/project-x --listTitle 'My List' --title 'All items' --Title 'All events' Update the title of the list view specified by its ID m365 spo list view set --webUrl https://contoso.sharepoint.com/sites/project-x --listTitle 'My List' --id 330f29c5-5c4c-465f-9f4b-7903020ae1ce --Title 'All events' Update view formatting of the specified list view PowerShell Bash m365 spo list view set --webUrl https://contoso.sharepoint.com/sites/project-x --listTitle 'My List' --viewTitle 'All items' --CustomFormatter '{\\\"schema\\\":\\\"https://developer.microsoft.com/json-schemas/sp/view-formatting.schema.json\\\",\\\"additionalRowClass\\\": \\\"=if([$DueDate] &lt;= @now, ''sp-field-severity--severeWarning'', '''')\\\"}' m365 spo list view set --webUrl https://contoso.sharepoint.com/sites/project-x --listTitle 'My List' --viewTitle 'All items' --CustomFormatter \"{\\\"schema\\\":\\\"https://developer.microsoft.com/json-schemas/sp/view-formatting.schema.json\\\",\\\"additionalRowClass\\\": \\\"=if([ $DueDate ] &lt;= @now, 'sp-field-severity--severeWarning', '')\\\"}\"","title":"list view set"},{"location":"cmd/spo/list/list-view-set/#spo-list-view-set","text":"Updates existing list view","title":"spo list view set"},{"location":"cmd/spo/list/list-view-set/#usage","text":"m365 spo list view set [ options ]","title":"Usage"},{"location":"cmd/spo/list/list-view-set/#options","text":"-u, --webUrl <webUrl> URL of the site where the list is located --listId [listId] ID of the list where the view is located. Specify listTitle or listId but not both --listTitle [listTitle] Title of the list where the view is located. Specify listTitle or listId but not both --id [id] ID of the view to update. Specify title or id but not both --title [title] Title of the view to update. Specify title or id but not both -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/list/list-view-set/#remarks","text":"Specify properties to update using their names, eg. --Title 'New Title' --JSLink jslink.js When updating list formatting, the value of the CustomFormatter property must be XML-escaped, eg. &lt; instead of < . Escaping JSON in PowerShell When updating list view formatting for a view with the --CustomFormatter option, it's possible to enter a JSON string. In PowerShell 5 to 7.2 specific escaping rules apply due to an issue. Remember that you can also use file tokens instead.","title":"Remarks"},{"location":"cmd/spo/list/list-view-set/#examples","text":"Update the title of the list view specified by its name m365 spo list view set --webUrl https://contoso.sharepoint.com/sites/project-x --listTitle 'My List' --title 'All items' --Title 'All events' Update the title of the list view specified by its ID m365 spo list view set --webUrl https://contoso.sharepoint.com/sites/project-x --listTitle 'My List' --id 330f29c5-5c4c-465f-9f4b-7903020ae1ce --Title 'All events' Update view formatting of the specified list view PowerShell Bash m365 spo list view set --webUrl https://contoso.sharepoint.com/sites/project-x --listTitle 'My List' --viewTitle 'All items' --CustomFormatter '{\\\"schema\\\":\\\"https://developer.microsoft.com/json-schemas/sp/view-formatting.schema.json\\\",\\\"additionalRowClass\\\": \\\"=if([$DueDate] &lt;= @now, ''sp-field-severity--severeWarning'', '''')\\\"}' m365 spo list view set --webUrl https://contoso.sharepoint.com/sites/project-x --listTitle 'My List' --viewTitle 'All items' --CustomFormatter \"{\\\"schema\\\":\\\"https://developer.microsoft.com/json-schemas/sp/view-formatting.schema.json\\\",\\\"additionalRowClass\\\": \\\"=if([ $DueDate ] &lt;= @now, 'sp-field-severity--severeWarning', '')\\\"}\"","title":"Examples"},{"location":"cmd/spo/list/list-webhook-add/","text":"spo list webhook add \u00b6 Adds a new webhook to the specified list Usage \u00b6 m365 spo list webhook add [ options ] Options \u00b6 -u, --webUrl <webUrl> URL of the site where the list is located. -l, --listId [listId] ID of the list. Specify either listTitle , listId or listUrl . -t, --listTitle [listTitle] Title of the list. Specify either listTitle , listId or listUrl . --listUrl [listUrl] Server- or site-relative URL of the list. Specify either listTitle , listId or listUrl . -n, --notificationUrl <notificationUrl> The notification URL. -e, --expirationDateTime [expirationDateTime] The expiration date. Will be set to max (6 months from today) if not provided. -c, --clientState [clientState] A client state information that will be passed through notifications. -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Add a web hook to the list retrieved by Title located in a specific site with a specific notification url and the default expiration date m365 spo list webhook add --webUrl https://contoso.sharepoint.com/sites/ninja --listTitle Documents --notificationUrl https://contoso-funcions.azurewebsites.net/webhook Add a web hook to the list retrieved by URL located in a specific site with a specific notification url and a specific expiration date m365 spo list webhook add --webUrl https://contoso.sharepoint.com/sites/ninja --listUrl '/sites/ninja/Documents' --notificationUrl https://contoso-funcions.azurewebsites.net/webhook --expirationDateTime 2019 -01-21 Add a web hook to the list retrieved by ID located in a specific site with a specific notification url, a specific expiration date and a client state m365 spo list webhook add --webUrl https://contoso.sharepoint.com/sites/ninja --listId '3d6aefa0-f438-4789-b0cd-6e865f5d65b5' --notificationUrl https://contoso-funcions.azurewebsites.net/webhook --expirationDateTime '2019-03-02T18:15' --clientState \"Hello State!\"","title":"list webhook add"},{"location":"cmd/spo/list/list-webhook-add/#spo-list-webhook-add","text":"Adds a new webhook to the specified list","title":"spo list webhook add"},{"location":"cmd/spo/list/list-webhook-add/#usage","text":"m365 spo list webhook add [ options ]","title":"Usage"},{"location":"cmd/spo/list/list-webhook-add/#options","text":"-u, --webUrl <webUrl> URL of the site where the list is located. -l, --listId [listId] ID of the list. Specify either listTitle , listId or listUrl . -t, --listTitle [listTitle] Title of the list. Specify either listTitle , listId or listUrl . --listUrl [listUrl] Server- or site-relative URL of the list. Specify either listTitle , listId or listUrl . -n, --notificationUrl <notificationUrl> The notification URL. -e, --expirationDateTime [expirationDateTime] The expiration date. Will be set to max (6 months from today) if not provided. -c, --clientState [clientState] A client state information that will be passed through notifications. -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/list/list-webhook-add/#examples","text":"Add a web hook to the list retrieved by Title located in a specific site with a specific notification url and the default expiration date m365 spo list webhook add --webUrl https://contoso.sharepoint.com/sites/ninja --listTitle Documents --notificationUrl https://contoso-funcions.azurewebsites.net/webhook Add a web hook to the list retrieved by URL located in a specific site with a specific notification url and a specific expiration date m365 spo list webhook add --webUrl https://contoso.sharepoint.com/sites/ninja --listUrl '/sites/ninja/Documents' --notificationUrl https://contoso-funcions.azurewebsites.net/webhook --expirationDateTime 2019 -01-21 Add a web hook to the list retrieved by ID located in a specific site with a specific notification url, a specific expiration date and a client state m365 spo list webhook add --webUrl https://contoso.sharepoint.com/sites/ninja --listId '3d6aefa0-f438-4789-b0cd-6e865f5d65b5' --notificationUrl https://contoso-funcions.azurewebsites.net/webhook --expirationDateTime '2019-03-02T18:15' --clientState \"Hello State!\"","title":"Examples"},{"location":"cmd/spo/list/list-webhook-get/","text":"spo list webhook get \u00b6 Gets information about the specific webhook Usage \u00b6 m365 spo list webhook get [ options ] Options \u00b6 -u, --webUrl <webUrl> URL of the site where the list is located. -l, --listId [listId] ID of the list. Specify either listTitle , listId or listUrl . -t, --listTitle [listTitle] Title of the list. Specify either listTitle , listId or listUrl . --listUrl [listUrl] Server- or site-relative URL of the list. Specify either listTitle , listId or listUrl . -i, --id <id> ID of the webhook. -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 If the specified id doesn't refer to an existing webhook, you will get a 404 - \"404 FILE NOT FOUND\" error. Examples \u00b6 Return information about a specific webhook which belongs to a list retrieved by ID in a specific site m365 spo list webhook get --webUrl https://contoso.sharepoint.com/sites/project-x --listId 0cd891ef-afce-4e55-b836-fce03286cccf --id cc27a922-8224-4296-90a5-ebbc54da2e85 Return information about a specific webhook which belongs to a list retrieved by Title in a specific site m365 spo list webhook get --webUrl https://contoso.sharepoint.com/sites/project-x --listTitle Documents --id cc27a922-8224-4296-90a5-ebbc54da2e85 Return information about a specific webhook which belongs to a list retrieved by URL in a specific site m365 spo list webhook get --webUrl https://contoso.sharepoint.com/sites/project-x --listUrl '/sites/project-x/Documents' --id cc27a922-8224-4296-90a5-ebbc54da2e85","title":"list webhook get"},{"location":"cmd/spo/list/list-webhook-get/#spo-list-webhook-get","text":"Gets information about the specific webhook","title":"spo list webhook get"},{"location":"cmd/spo/list/list-webhook-get/#usage","text":"m365 spo list webhook get [ options ]","title":"Usage"},{"location":"cmd/spo/list/list-webhook-get/#options","text":"-u, --webUrl <webUrl> URL of the site where the list is located. -l, --listId [listId] ID of the list. Specify either listTitle , listId or listUrl . -t, --listTitle [listTitle] Title of the list. Specify either listTitle , listId or listUrl . --listUrl [listUrl] Server- or site-relative URL of the list. Specify either listTitle , listId or listUrl . -i, --id <id> ID of the webhook. -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/list/list-webhook-get/#remarks","text":"If the specified id doesn't refer to an existing webhook, you will get a 404 - \"404 FILE NOT FOUND\" error.","title":"Remarks"},{"location":"cmd/spo/list/list-webhook-get/#examples","text":"Return information about a specific webhook which belongs to a list retrieved by ID in a specific site m365 spo list webhook get --webUrl https://contoso.sharepoint.com/sites/project-x --listId 0cd891ef-afce-4e55-b836-fce03286cccf --id cc27a922-8224-4296-90a5-ebbc54da2e85 Return information about a specific webhook which belongs to a list retrieved by Title in a specific site m365 spo list webhook get --webUrl https://contoso.sharepoint.com/sites/project-x --listTitle Documents --id cc27a922-8224-4296-90a5-ebbc54da2e85 Return information about a specific webhook which belongs to a list retrieved by URL in a specific site m365 spo list webhook get --webUrl https://contoso.sharepoint.com/sites/project-x --listUrl '/sites/project-x/Documents' --id cc27a922-8224-4296-90a5-ebbc54da2e85","title":"Examples"},{"location":"cmd/spo/list/list-webhook-list/","text":"spo list webhook list \u00b6 Lists all webhooks for the specified list Usage \u00b6 m365 spo list webhook list [ options ] Options \u00b6 -u, --webUrl <webUrl> URL of the site where the list is located. -i, --listId [listId] ID of the list. Specify either listTitle , listId or listUrl . -t, --listTitle [listTitle] Title of the list. Specify either listTitle , listId or listUrl . --listUrl [listUrl] Server- or site-relative URL of the list. Specify either listTitle , listId or listUrl . -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 List all webhooks for a list with a specific ID in a specific site m365 spo list webhook list --webUrl https://contoso.sharepoint.com/sites/project-x --listId 0cd891ef-afce-4e55-b836-fce03286cccf List all webhooks for a list with a specific title in a specific site m365 spo list webhook list --webUrl https://contoso.sharepoint.com/sites/project-x --listTitle Documents List all webhooks for a list with a specific URL in a specific site m365 spo list webhook list --webUrl https://contoso.sharepoint.com/sites/project-x --listUrl '/sites/project-x/Documents'","title":"list webhook list"},{"location":"cmd/spo/list/list-webhook-list/#spo-list-webhook-list","text":"Lists all webhooks for the specified list","title":"spo list webhook list"},{"location":"cmd/spo/list/list-webhook-list/#usage","text":"m365 spo list webhook list [ options ]","title":"Usage"},{"location":"cmd/spo/list/list-webhook-list/#options","text":"-u, --webUrl <webUrl> URL of the site where the list is located. -i, --listId [listId] ID of the list. Specify either listTitle , listId or listUrl . -t, --listTitle [listTitle] Title of the list. Specify either listTitle , listId or listUrl . --listUrl [listUrl] Server- or site-relative URL of the list. Specify either listTitle , listId or listUrl . -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/list/list-webhook-list/#examples","text":"List all webhooks for a list with a specific ID in a specific site m365 spo list webhook list --webUrl https://contoso.sharepoint.com/sites/project-x --listId 0cd891ef-afce-4e55-b836-fce03286cccf List all webhooks for a list with a specific title in a specific site m365 spo list webhook list --webUrl https://contoso.sharepoint.com/sites/project-x --listTitle Documents List all webhooks for a list with a specific URL in a specific site m365 spo list webhook list --webUrl https://contoso.sharepoint.com/sites/project-x --listUrl '/sites/project-x/Documents'","title":"Examples"},{"location":"cmd/spo/list/list-webhook-remove/","text":"spo list webhook remove \u00b6 Removes the specified webhook from the list Usage \u00b6 m365 spo list webhook remove [ options ] Options \u00b6 -u, --webUrl <webUrl> URL of the site where the list is located. -l, --listId [listId] ID of the list. Specify either listId , listTitle or listUrl . -t, --listTitle [listTitle] Title of the list. Specify either listId , listTitle or listUrl . --listUrl [listUrl] Server- or site-relative URL of the list. Specify either listId , listTitle or listUrl . -i, --id <id> ID of the webhook. --confirm Don't prompt for confirmation. -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 If the specified id doesn't refer to an existing webhook, you will get a 404 - \"404 FILE NOT FOUND\" error. Examples \u00b6 Remove webhook with a specific ID from a list retrieved by ID in a specific site m365 spo list webhook remove --webUrl https://contoso.sharepoint.com/sites/ninja --listId 0cd891ef-afce-4e55-b836-fce03286cccf --id cc27a922-8224-4296-90a5-ebbc54da2e81 Remove webhook with a specific ID from a list retrieved by Title in a specific site m365 spo list webhook remove --webUrl https://contoso.sharepoint.com/sites/ninja --listTitle Documents --id cc27a922-8224-4296-90a5-ebbc54da2e81 Remove webhook with a specific ID from a list retrieved by URL in a specific site without being asked for confirmation m365 spo list webhook remove --webUrl https://contoso.sharepoint.com/sites/ninja --listUrl '/sites/ninja/Documents' --id cc27a922-8224-4296-90a5-ebbc54da2e81 --confirm","title":"list webhook remove"},{"location":"cmd/spo/list/list-webhook-remove/#spo-list-webhook-remove","text":"Removes the specified webhook from the list","title":"spo list webhook remove"},{"location":"cmd/spo/list/list-webhook-remove/#usage","text":"m365 spo list webhook remove [ options ]","title":"Usage"},{"location":"cmd/spo/list/list-webhook-remove/#options","text":"-u, --webUrl <webUrl> URL of the site where the list is located. -l, --listId [listId] ID of the list. Specify either listId , listTitle or listUrl . -t, --listTitle [listTitle] Title of the list. Specify either listId , listTitle or listUrl . --listUrl [listUrl] Server- or site-relative URL of the list. Specify either listId , listTitle or listUrl . -i, --id <id> ID of the webhook. --confirm Don't prompt for confirmation. -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/list/list-webhook-remove/#remarks","text":"If the specified id doesn't refer to an existing webhook, you will get a 404 - \"404 FILE NOT FOUND\" error.","title":"Remarks"},{"location":"cmd/spo/list/list-webhook-remove/#examples","text":"Remove webhook with a specific ID from a list retrieved by ID in a specific site m365 spo list webhook remove --webUrl https://contoso.sharepoint.com/sites/ninja --listId 0cd891ef-afce-4e55-b836-fce03286cccf --id cc27a922-8224-4296-90a5-ebbc54da2e81 Remove webhook with a specific ID from a list retrieved by Title in a specific site m365 spo list webhook remove --webUrl https://contoso.sharepoint.com/sites/ninja --listTitle Documents --id cc27a922-8224-4296-90a5-ebbc54da2e81 Remove webhook with a specific ID from a list retrieved by URL in a specific site without being asked for confirmation m365 spo list webhook remove --webUrl https://contoso.sharepoint.com/sites/ninja --listUrl '/sites/ninja/Documents' --id cc27a922-8224-4296-90a5-ebbc54da2e81 --confirm","title":"Examples"},{"location":"cmd/spo/list/list-webhook-set/","text":"spo list webhook set \u00b6 Updates the specified webhook Usage \u00b6 m365 spo list webhook set [ options ] Options \u00b6 -u, --webUrl <webUrl> URL of the site where the list is located. -l, --listId [listId] ID of the list. Specify either listId , listTitle or listUrl . -t, --listTitle [listTitle] Title of the list. Specify either listId , listTitle or listUrl . --listUrl [listUrl] Server- or site-relative URL of the list. Specify either listId , listTitle or listUrl . -i, --id <id> ID of the webhook to update. -n, --notificationUrl [notificationUrl] The new notification url. -e, --expirationDateTime [expirationDateTime] The new expiration date. Note: Expiration Time cannot be more than 6 months in future -c, --clientState [clientState] A client state information that will be passed through notifications. -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 If the specified id doesn't refer to an existing webhook, you will get a 404 - \"404 FILE NOT FOUND\" error. Examples \u00b6 Update the notification url of a webhook with a specific ID attached to a list with a specific ID in a specific site to a specific URL m365 spo list webhook set --webUrl https://contoso.sharepoint.com/sites/ninja --listId 0cd891ef-afce-4e55-b836-fce03286cccf --id cc27a922-8224-4296-90a5-ebbc54da2e81 --notificationUrl https://contoso-functions.azurewebsites.net/webhook Update the expiration date of a webhook with a specific ID attached to a list with a specific title in a specific site to a specfic date m365 spo list webhook set --webUrl https://contoso.sharepoint.com/sites/ninja --listTitle Documents --id cc27a922-8224-4296-90a5-ebbc54da2e81 --expirationDateTime 2018 -10-09T18:15 Update the notification url and clientState of a webhook with a specific ID attached to a list with a specific URL in a specific site to a specific URL and the expiration date to a specific date m365 spo list webhook set --webUrl https://contoso.sharepoint.com/sites/ninja --listUrl '/sites/ninja/Documents' --id cc27a922-8224-4296-90a5-ebbc54da2e81 --notificationUrl https://contoso-functions.azurewebsites.net/webhook --expirationDateTime 2019 -03-02 --clientState 'My client state' Respone \u00b6 The command won't return a response on success.","title":"list webhook set"},{"location":"cmd/spo/list/list-webhook-set/#spo-list-webhook-set","text":"Updates the specified webhook","title":"spo list webhook set"},{"location":"cmd/spo/list/list-webhook-set/#usage","text":"m365 spo list webhook set [ options ]","title":"Usage"},{"location":"cmd/spo/list/list-webhook-set/#options","text":"-u, --webUrl <webUrl> URL of the site where the list is located. -l, --listId [listId] ID of the list. Specify either listId , listTitle or listUrl . -t, --listTitle [listTitle] Title of the list. Specify either listId , listTitle or listUrl . --listUrl [listUrl] Server- or site-relative URL of the list. Specify either listId , listTitle or listUrl . -i, --id <id> ID of the webhook to update. -n, --notificationUrl [notificationUrl] The new notification url. -e, --expirationDateTime [expirationDateTime] The new expiration date. Note: Expiration Time cannot be more than 6 months in future -c, --clientState [clientState] A client state information that will be passed through notifications. -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/list/list-webhook-set/#remarks","text":"If the specified id doesn't refer to an existing webhook, you will get a 404 - \"404 FILE NOT FOUND\" error.","title":"Remarks"},{"location":"cmd/spo/list/list-webhook-set/#examples","text":"Update the notification url of a webhook with a specific ID attached to a list with a specific ID in a specific site to a specific URL m365 spo list webhook set --webUrl https://contoso.sharepoint.com/sites/ninja --listId 0cd891ef-afce-4e55-b836-fce03286cccf --id cc27a922-8224-4296-90a5-ebbc54da2e81 --notificationUrl https://contoso-functions.azurewebsites.net/webhook Update the expiration date of a webhook with a specific ID attached to a list with a specific title in a specific site to a specfic date m365 spo list webhook set --webUrl https://contoso.sharepoint.com/sites/ninja --listTitle Documents --id cc27a922-8224-4296-90a5-ebbc54da2e81 --expirationDateTime 2018 -10-09T18:15 Update the notification url and clientState of a webhook with a specific ID attached to a list with a specific URL in a specific site to a specific URL and the expiration date to a specific date m365 spo list webhook set --webUrl https://contoso.sharepoint.com/sites/ninja --listUrl '/sites/ninja/Documents' --id cc27a922-8224-4296-90a5-ebbc54da2e81 --notificationUrl https://contoso-functions.azurewebsites.net/webhook --expirationDateTime 2019 -03-02 --clientState 'My client state'","title":"Examples"},{"location":"cmd/spo/list/list-webhook-set/#respone","text":"The command won't return a response on success.","title":"Respone"},{"location":"cmd/spo/listitem/listitem-add/","text":"spo listitem add \u00b6 Creates a list item in the specified list Usage \u00b6 m365 spo listitem add [ options ] Options \u00b6 -u, --webUrl <webUrl> URL of the site where the item should be added -l, --listId [listId] ID of the list where the item should be added. Specify either listTitle , listId or listUrl -t, --listTitle [listTitle] Title of the list where the item should be added. Specify either listTitle , listId or listUrl --listUrl [listUrl] Server- or site-relative URL of the list. Specify either listTitle , listId or listUrl -c, --contentType [contentType] The name or the ID of the content type to associate with the new item -f, --folder [folder] The list-relative URL of the folder where the item should be created -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Add an item with Title Demo Item and content type name Item to list with title Demo List in site https://contoso.sharepoint.com/sites/project-x m365 spo listitem add --contentType Item --listTitle \"Demo List\" --webUrl https://contoso.sharepoint.com/sites/project-x --Title \"Demo Item\" Add an item with Title Demo Multi Managed Metadata Field and a single-select metadata field named SingleMetadataField to list with title Demo List in site https://contoso.sharepoint.com/sites/project-x m365 spo listitem add --listTitle \"Demo List\" --webUrl https://contoso.sharepoint.com/sites/project-x --Title \"Demo Single Managed Metadata Field\" --SingleMetadataField \"TermLabel1|fa2f6bfd-1fad-4d18-9c89-289fe6941377;\" Add an item with Title Demo Multi Managed Metadata Field and a multi-select metadata field named MultiMetadataField to list with title Demo List in site https://contoso.sharepoint.com/sites/project-x m365 spo listitem add --listTitle \"Demo List\" --webUrl https://contoso.sharepoint.com/sites/project-x --Title \"Demo Multi Managed Metadata Field\" --MultiMetadataField \"TermLabel1|cf8c72a1-0207-40ee-aebd-fca67d20bc8a;TermLabel2|e5cc320f-8b65-4882-afd5-f24d88d52b75;\" Add an item with Title Demo Single Person Field and a single-select people field named SinglePeopleField to list with title Demo List in site https://contoso.sharepoint.com/sites/project-x m365 spo listitem add --listTitle \"Demo List\" --webUrl https://contoso.sharepoint.com/sites/project-x --Title \"Demo Single Person Field\" --SinglePeopleField \"[{'Key':'i:0#.f|membership|markh@conotoso.com'}]\" Add an item with Title Demo Multi Person Field and a multi-select people field named MultiPeopleField to list with title Demo List in site https://contoso.sharepoint.com/sites/project-x m365 spo listitem add --listTitle \"Demo List\" --webUrl https://contoso.sharepoint.com/sites/project-x --Title \"Demo Multi Person Field\" --MultiPeopleField \"[{'Key':'i:0#.f|membership|markh@conotoso.com'},{'Key':'i:0#.f|membership|adamb@conotoso.com'}]\" Add an item with Title Demo Hyperlink Field and a hyperlink field named CustomHyperlink to list with title Demo List in site https://contoso.sharepoint.com/sites/project-x m365 spo listitem add --listTitle \"Demo List\" --webUrl https://contoso.sharepoint.com/sites/project-x --Title \"Demo Hyperlink Field\" --CustomHyperlink \"https://www.bing.com, Bing\" Add an item with a specific title to a list retrieved by server-relative URL in a specific site m365 spo listitem add --contentType Item --listUrl /sites/project-x/Documents --webUrl https://contoso.sharepoint.com/sites/project-x --Title \"Demo Item\"","title":"listitem add"},{"location":"cmd/spo/listitem/listitem-add/#spo-listitem-add","text":"Creates a list item in the specified list","title":"spo listitem add"},{"location":"cmd/spo/listitem/listitem-add/#usage","text":"m365 spo listitem add [ options ]","title":"Usage"},{"location":"cmd/spo/listitem/listitem-add/#options","text":"-u, --webUrl <webUrl> URL of the site where the item should be added -l, --listId [listId] ID of the list where the item should be added. Specify either listTitle , listId or listUrl -t, --listTitle [listTitle] Title of the list where the item should be added. Specify either listTitle , listId or listUrl --listUrl [listUrl] Server- or site-relative URL of the list. Specify either listTitle , listId or listUrl -c, --contentType [contentType] The name or the ID of the content type to associate with the new item -f, --folder [folder] The list-relative URL of the folder where the item should be created -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/listitem/listitem-add/#examples","text":"Add an item with Title Demo Item and content type name Item to list with title Demo List in site https://contoso.sharepoint.com/sites/project-x m365 spo listitem add --contentType Item --listTitle \"Demo List\" --webUrl https://contoso.sharepoint.com/sites/project-x --Title \"Demo Item\" Add an item with Title Demo Multi Managed Metadata Field and a single-select metadata field named SingleMetadataField to list with title Demo List in site https://contoso.sharepoint.com/sites/project-x m365 spo listitem add --listTitle \"Demo List\" --webUrl https://contoso.sharepoint.com/sites/project-x --Title \"Demo Single Managed Metadata Field\" --SingleMetadataField \"TermLabel1|fa2f6bfd-1fad-4d18-9c89-289fe6941377;\" Add an item with Title Demo Multi Managed Metadata Field and a multi-select metadata field named MultiMetadataField to list with title Demo List in site https://contoso.sharepoint.com/sites/project-x m365 spo listitem add --listTitle \"Demo List\" --webUrl https://contoso.sharepoint.com/sites/project-x --Title \"Demo Multi Managed Metadata Field\" --MultiMetadataField \"TermLabel1|cf8c72a1-0207-40ee-aebd-fca67d20bc8a;TermLabel2|e5cc320f-8b65-4882-afd5-f24d88d52b75;\" Add an item with Title Demo Single Person Field and a single-select people field named SinglePeopleField to list with title Demo List in site https://contoso.sharepoint.com/sites/project-x m365 spo listitem add --listTitle \"Demo List\" --webUrl https://contoso.sharepoint.com/sites/project-x --Title \"Demo Single Person Field\" --SinglePeopleField \"[{'Key':'i:0#.f|membership|markh@conotoso.com'}]\" Add an item with Title Demo Multi Person Field and a multi-select people field named MultiPeopleField to list with title Demo List in site https://contoso.sharepoint.com/sites/project-x m365 spo listitem add --listTitle \"Demo List\" --webUrl https://contoso.sharepoint.com/sites/project-x --Title \"Demo Multi Person Field\" --MultiPeopleField \"[{'Key':'i:0#.f|membership|markh@conotoso.com'},{'Key':'i:0#.f|membership|adamb@conotoso.com'}]\" Add an item with Title Demo Hyperlink Field and a hyperlink field named CustomHyperlink to list with title Demo List in site https://contoso.sharepoint.com/sites/project-x m365 spo listitem add --listTitle \"Demo List\" --webUrl https://contoso.sharepoint.com/sites/project-x --Title \"Demo Hyperlink Field\" --CustomHyperlink \"https://www.bing.com, Bing\" Add an item with a specific title to a list retrieved by server-relative URL in a specific site m365 spo listitem add --contentType Item --listUrl /sites/project-x/Documents --webUrl https://contoso.sharepoint.com/sites/project-x --Title \"Demo Item\"","title":"Examples"},{"location":"cmd/spo/listitem/listitem-attachment-list/","text":"spo listitem attachment list \u00b6 Gets the attachments associated to a list item Usage \u00b6 m365 spo listitem attachment list [ options ] Options \u00b6 -u, --webUrl <webUrl> URL of the site from which the item should be retrieved --listId [listId] ID of the list where the item should be added. Specify either listTitle , listId or listUrl --listTitle [listTitle] Title of the list where the item should be added. Specify either listTitle , listId or listUrl --listUrl [listUrl] Server- or site-relative URL of the list. Specify either listTitle , listId or listUrl --itemId <itemId> ID of the list item to in question -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Gets the attachments from list item with itemId 147 in list with title Demo List in site https://contoso.sharepoint.com/sites/project-x m365 spo listitem attachment list --webUrl https://contoso.sharepoint.com/sites/project-x --listTitle \"Demo List\" --itemId 147 Gets the attachments from list item with itemId 147 in list with id 0cd891ef-afce-4e55-b836-fce03286cccf in site https://contoso.sharepoint.com/sites/project-x m365 spo listitem attachment list --webUrl https://contoso.sharepoint.com/sites/project-x --listId 0cd891ef-afce-4e55-b836-fce03286cccf --itemId 147 Gets the attachments from a specific list item in a specific list obtained by server-relative URL in a specific site m365 spo listitem attachment list --webUrl https://contoso.sharepoint.com/sites/project-x --listUrl /sites/project-x/Documents --itemId 147","title":"listitem attachment list"},{"location":"cmd/spo/listitem/listitem-attachment-list/#spo-listitem-attachment-list","text":"Gets the attachments associated to a list item","title":"spo listitem attachment list"},{"location":"cmd/spo/listitem/listitem-attachment-list/#usage","text":"m365 spo listitem attachment list [ options ]","title":"Usage"},{"location":"cmd/spo/listitem/listitem-attachment-list/#options","text":"-u, --webUrl <webUrl> URL of the site from which the item should be retrieved --listId [listId] ID of the list where the item should be added. Specify either listTitle , listId or listUrl --listTitle [listTitle] Title of the list where the item should be added. Specify either listTitle , listId or listUrl --listUrl [listUrl] Server- or site-relative URL of the list. Specify either listTitle , listId or listUrl --itemId <itemId> ID of the list item to in question -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/listitem/listitem-attachment-list/#examples","text":"Gets the attachments from list item with itemId 147 in list with title Demo List in site https://contoso.sharepoint.com/sites/project-x m365 spo listitem attachment list --webUrl https://contoso.sharepoint.com/sites/project-x --listTitle \"Demo List\" --itemId 147 Gets the attachments from list item with itemId 147 in list with id 0cd891ef-afce-4e55-b836-fce03286cccf in site https://contoso.sharepoint.com/sites/project-x m365 spo listitem attachment list --webUrl https://contoso.sharepoint.com/sites/project-x --listId 0cd891ef-afce-4e55-b836-fce03286cccf --itemId 147 Gets the attachments from a specific list item in a specific list obtained by server-relative URL in a specific site m365 spo listitem attachment list --webUrl https://contoso.sharepoint.com/sites/project-x --listUrl /sites/project-x/Documents --itemId 147","title":"Examples"},{"location":"cmd/spo/listitem/listitem-get/","text":"spo listitem get \u00b6 Gets a list item from the specified list Usage \u00b6 m365 spo listitem get [ options ] Options \u00b6 -u, --webUrl <webUrl> URL of the site from which the item should be retrieved -i, --id <id> ID of the item to retrieve. -l, --listId [listId] ID of the list where the item should be added. Specify either listTitle , listId or listUrl -t, --listTitle [listTitle] Title of the list where the item should be added. Specify either listTitle , listId or listUrl --listUrl [listUrl] Server- or site-relative URL of the list. Specify either listTitle , listId or listUrl -p, --properties [properties] Comma-separated list of properties to retrieve. Will retrieve all properties if not specified and json output is requested -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 If you want to specify a lookup type in the properties option, define which columns from the related list should be returned. Examples \u00b6 Get an item with ID 147 from list with title Demo List in site https://contoso.sharepoint.com/sites/project-x m365 spo listitem get --listTitle \"Demo List\" --id 147 --webUrl https://contoso.sharepoint.com/sites/project-x Get an items Title and Created column with ID 147 from list with title Demo List in site https://contoso.sharepoint.com/sites/project-x m365 spo listitem get --listTitle \"Demo List\" --id 147 --webUrl https://contoso.sharepoint.com/sites/project-x --properties \"Title,Created\" Get an items Title , Created column and lookup column Company with ID 147 from list with title Demo List in site https://contoso.sharepoint.com/sites/project-x m365 spo listitem get --listTitle \"Demo List\" --id 147 --webUrl https://contoso.sharepoint.com/sites/project-x --properties \"Title,Created,Company/Title\" Get an item with specific properties from a list retrieved by server-relative URL in a specific site m365 spo listitem get --listUrl /sites/project-x/documents --id 147 --webUrl https://contoso.sharepoint.com/sites/project-x --properties \"Title,Created,Company/Title\"","title":"listitem get"},{"location":"cmd/spo/listitem/listitem-get/#spo-listitem-get","text":"Gets a list item from the specified list","title":"spo listitem get"},{"location":"cmd/spo/listitem/listitem-get/#usage","text":"m365 spo listitem get [ options ]","title":"Usage"},{"location":"cmd/spo/listitem/listitem-get/#options","text":"-u, --webUrl <webUrl> URL of the site from which the item should be retrieved -i, --id <id> ID of the item to retrieve. -l, --listId [listId] ID of the list where the item should be added. Specify either listTitle , listId or listUrl -t, --listTitle [listTitle] Title of the list where the item should be added. Specify either listTitle , listId or listUrl --listUrl [listUrl] Server- or site-relative URL of the list. Specify either listTitle , listId or listUrl -p, --properties [properties] Comma-separated list of properties to retrieve. Will retrieve all properties if not specified and json output is requested -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/listitem/listitem-get/#remarks","text":"If you want to specify a lookup type in the properties option, define which columns from the related list should be returned.","title":"Remarks"},{"location":"cmd/spo/listitem/listitem-get/#examples","text":"Get an item with ID 147 from list with title Demo List in site https://contoso.sharepoint.com/sites/project-x m365 spo listitem get --listTitle \"Demo List\" --id 147 --webUrl https://contoso.sharepoint.com/sites/project-x Get an items Title and Created column with ID 147 from list with title Demo List in site https://contoso.sharepoint.com/sites/project-x m365 spo listitem get --listTitle \"Demo List\" --id 147 --webUrl https://contoso.sharepoint.com/sites/project-x --properties \"Title,Created\" Get an items Title , Created column and lookup column Company with ID 147 from list with title Demo List in site https://contoso.sharepoint.com/sites/project-x m365 spo listitem get --listTitle \"Demo List\" --id 147 --webUrl https://contoso.sharepoint.com/sites/project-x --properties \"Title,Created,Company/Title\" Get an item with specific properties from a list retrieved by server-relative URL in a specific site m365 spo listitem get --listUrl /sites/project-x/documents --id 147 --webUrl https://contoso.sharepoint.com/sites/project-x --properties \"Title,Created,Company/Title\"","title":"Examples"},{"location":"cmd/spo/listitem/listitem-isrecord/","text":"spo listitem isrecord \u00b6 Checks if the specified list item is a record Usage \u00b6 m365 spo listitem isrecord [ options ] Options \u00b6 -u, --webUrl <webUrl> The URL of the site where the list is located -i, --id <id> The ID of the list item to check if it is a record -l, --listId [listId] ID of the list where the item should be added. Specify either listTitle , listId or listUrl -t, --listTitle [listTitle] Title of the list where the item should be added. Specify either listTitle , listId or listUrl --listUrl [listUrl] Server- or site-relative URL of the list. Specify either listTitle , listId or listUrl -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Check whether the document with id 1 in list with title Documents located in site https://contoso.sharepoint.com/sites/project-x is a record m365 spo listitem isrecord --webUrl https://contoso.sharepoint.com/sites/project-x --listTitle 'Documents' --id 1 Check whether the document with id 1 in list with id 0cd891ef-afce-4e55-b836-fce03286cccf located in site https://contoso.sharepoint.com/sites/project-x is a record m365 spo listitem isrecord --webUrl https://contoso.sharepoint.com/sites/project-x --listId 0cd891ef-afce-4e55-b836-fce03286cccf --id 1 Check whether a document with a specific id in a list retrieved by server-relative URL in a specific site is a record m365 spo listitem isrecord --webUrl https://contoso.sharepoint.com/sites/project-x --listUrl /sites/project-x/documents --id 1","title":"listitem isrecord"},{"location":"cmd/spo/listitem/listitem-isrecord/#spo-listitem-isrecord","text":"Checks if the specified list item is a record","title":"spo listitem isrecord"},{"location":"cmd/spo/listitem/listitem-isrecord/#usage","text":"m365 spo listitem isrecord [ options ]","title":"Usage"},{"location":"cmd/spo/listitem/listitem-isrecord/#options","text":"-u, --webUrl <webUrl> The URL of the site where the list is located -i, --id <id> The ID of the list item to check if it is a record -l, --listId [listId] ID of the list where the item should be added. Specify either listTitle , listId or listUrl -t, --listTitle [listTitle] Title of the list where the item should be added. Specify either listTitle , listId or listUrl --listUrl [listUrl] Server- or site-relative URL of the list. Specify either listTitle , listId or listUrl -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/listitem/listitem-isrecord/#examples","text":"Check whether the document with id 1 in list with title Documents located in site https://contoso.sharepoint.com/sites/project-x is a record m365 spo listitem isrecord --webUrl https://contoso.sharepoint.com/sites/project-x --listTitle 'Documents' --id 1 Check whether the document with id 1 in list with id 0cd891ef-afce-4e55-b836-fce03286cccf located in site https://contoso.sharepoint.com/sites/project-x is a record m365 spo listitem isrecord --webUrl https://contoso.sharepoint.com/sites/project-x --listId 0cd891ef-afce-4e55-b836-fce03286cccf --id 1 Check whether a document with a specific id in a list retrieved by server-relative URL in a specific site is a record m365 spo listitem isrecord --webUrl https://contoso.sharepoint.com/sites/project-x --listUrl /sites/project-x/documents --id 1","title":"Examples"},{"location":"cmd/spo/listitem/listitem-list/","text":"spo listitem list \u00b6 Gets a list of items from the specified list Usage \u00b6 m365 spo listitem list [ options ] Options \u00b6 -u, --webUrl <webUrl> URL of the site from which the item should be retrieved -i, --listId [listId] ID of the list to retrieve items from. Specify listId or listTitle but not both -l, --listId [listId] ID of the list where the item should be added. Specify either listTitle , listId or listUrl -t, --listTitle [listTitle] Title of the list where the item should be added. Specify either listTitle , listId or listUrl -q, --camlQuery [camlQuery] CAML query to use to query the list of items with -f, --fields [fields] Comma-separated list of fields to retrieve. Will retrieve all fields if not specified and json output is requested. Specify camlQuery or fields but not both -l, --filter [filter] OData filter to use to query the list of items with. Specify camlQuery or filter but not both -p, --pageSize [pageSize] Number of list items to return. Specify camlQuery or pageSize but not both -n, --pageNumber [pageNumber] Page number to return if pageSize is specified (first page is indexed as value of 0) -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 pageNumber is specified as a 0-based index. A value of 2 returns the third page of items. If you want to specify a lookup type in the properties option, define which columns from the related list should be returned. Examples \u00b6 Get all items from a list named Demo List m365 spo listitem list --listTitle \"Demo List\" --webUrl https://contoso.sharepoint.com/sites/project-x From a list named Demo List get all items with title Demo list item using a CAML query m365 spo listitem list --listTitle \"Demo List\" --webUrl https://contoso.sharepoint.com/sites/project-x --camlQuery \"<View><Query><Where><Eq><FieldRef Name='Title' /><Value Type='Text'>Demo list item</Value></Eq></Where></Query></View>\" Get all items from a list with ID 935c13a0-cc53-4103-8b48-c1d0828eaa7f m365 spo listitem list --listId 935c13a0-cc53-4103-8b48-c1d0828eaa7f --webUrl https://contoso.sharepoint.com/sites/project-x Get all items from list named Demo List . For each item, retrieve the value of the ID , Title and Modified fields m365 spo listitem list --listTitle \"Demo List\" --webUrl https://contoso.sharepoint.com/sites/project-x --fields \"ID,Title,Modified\" Get all items from list named Demo List . For each item, retrieve the value of the ID , Title , Modified fields, and the value of lookup field Company m365 spo listitem list --listTitle \"Demo List\" --webUrl https://contoso.sharepoint.com/sites/project-x --fields \"ID,Title,Modified,Company/Title\" From a list named Demo List get all items with title Demo list item using an OData filter m365 spo listitem list --listTitle \"Demo List\" --webUrl https://contoso.sharepoint.com/sites/project-x --filter \"Title eq 'Demo list item'\" From a list named Demo List get the second batch of 10 items m365 spo listitem list --listTitle \"Demo List\" --webUrl https://contoso.sharepoint.com/sites/project-x --pageSize 10 --pageNumber 2 Get all items from a list by server-relative URL m365 spo listitem list --listUrl /sites/project-x/documents --webUrl https://contoso.sharepoint.com/sites/project-x","title":"listitem list"},{"location":"cmd/spo/listitem/listitem-list/#spo-listitem-list","text":"Gets a list of items from the specified list","title":"spo listitem list"},{"location":"cmd/spo/listitem/listitem-list/#usage","text":"m365 spo listitem list [ options ]","title":"Usage"},{"location":"cmd/spo/listitem/listitem-list/#options","text":"-u, --webUrl <webUrl> URL of the site from which the item should be retrieved -i, --listId [listId] ID of the list to retrieve items from. Specify listId or listTitle but not both -l, --listId [listId] ID of the list where the item should be added. Specify either listTitle , listId or listUrl -t, --listTitle [listTitle] Title of the list where the item should be added. Specify either listTitle , listId or listUrl -q, --camlQuery [camlQuery] CAML query to use to query the list of items with -f, --fields [fields] Comma-separated list of fields to retrieve. Will retrieve all fields if not specified and json output is requested. Specify camlQuery or fields but not both -l, --filter [filter] OData filter to use to query the list of items with. Specify camlQuery or filter but not both -p, --pageSize [pageSize] Number of list items to return. Specify camlQuery or pageSize but not both -n, --pageNumber [pageNumber] Page number to return if pageSize is specified (first page is indexed as value of 0) -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/listitem/listitem-list/#remarks","text":"pageNumber is specified as a 0-based index. A value of 2 returns the third page of items. If you want to specify a lookup type in the properties option, define which columns from the related list should be returned.","title":"Remarks"},{"location":"cmd/spo/listitem/listitem-list/#examples","text":"Get all items from a list named Demo List m365 spo listitem list --listTitle \"Demo List\" --webUrl https://contoso.sharepoint.com/sites/project-x From a list named Demo List get all items with title Demo list item using a CAML query m365 spo listitem list --listTitle \"Demo List\" --webUrl https://contoso.sharepoint.com/sites/project-x --camlQuery \"<View><Query><Where><Eq><FieldRef Name='Title' /><Value Type='Text'>Demo list item</Value></Eq></Where></Query></View>\" Get all items from a list with ID 935c13a0-cc53-4103-8b48-c1d0828eaa7f m365 spo listitem list --listId 935c13a0-cc53-4103-8b48-c1d0828eaa7f --webUrl https://contoso.sharepoint.com/sites/project-x Get all items from list named Demo List . For each item, retrieve the value of the ID , Title and Modified fields m365 spo listitem list --listTitle \"Demo List\" --webUrl https://contoso.sharepoint.com/sites/project-x --fields \"ID,Title,Modified\" Get all items from list named Demo List . For each item, retrieve the value of the ID , Title , Modified fields, and the value of lookup field Company m365 spo listitem list --listTitle \"Demo List\" --webUrl https://contoso.sharepoint.com/sites/project-x --fields \"ID,Title,Modified,Company/Title\" From a list named Demo List get all items with title Demo list item using an OData filter m365 spo listitem list --listTitle \"Demo List\" --webUrl https://contoso.sharepoint.com/sites/project-x --filter \"Title eq 'Demo list item'\" From a list named Demo List get the second batch of 10 items m365 spo listitem list --listTitle \"Demo List\" --webUrl https://contoso.sharepoint.com/sites/project-x --pageSize 10 --pageNumber 2 Get all items from a list by server-relative URL m365 spo listitem list --listUrl /sites/project-x/documents --webUrl https://contoso.sharepoint.com/sites/project-x","title":"Examples"},{"location":"cmd/spo/listitem/listitem-record-declare/","text":"spo listitem record declare \u00b6 Declares the specified list item as a record Usage \u00b6 m365 spo listitem record declare [ options ] Options \u00b6 -u, --webUrl <webUrl> URL of the site where the list is located -l, --listId [listId] The ID of the list where the item is located. Specify either listTitle , listId or listUrl -t, --listTitle [listTitle] The title of the list where the item is located. Specify either listTitle , listId or listUrl --listUrl [listUrl] Server- or site-relative URL of the list. Specify either listTitle , listId or listUrl -i, --listItemId <listItemId> The ID of the list item to declare as record -d, --date [date] Record declaration date in ISO format. eg. 2019-12-31 -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Declare a document with id 1 as a record in list with title Demo List located in site https://contoso.sharepoint.com/sites/project-x m365 spo listitem record declare --webUrl https://contoso.sharepoint.com/sites/project-x --listTitle \"Demo List\" --listItemId 1 Declare a document with id 1 as a record in list with id ea8e1109-2013-1a69-bc05-1403201257fc located in site https://contoso.sharepoint.com/sites/project-x m365 spo listitem record declare --webUrl https://contoso.sharepoint.com/sites/project-x --listId ea8e1109-2013-1a69-bc05-1403201257fc --listItemId 1 Declare a document with id 1 as a record with record declaration date March 14, 2012 in list with title Demo List located in site https://contoso.sharepoint.com/sites/project-x m365 spo listitem record declare --webUrl https://contoso.sharepoint.com/sites/project-x --listTitle \"Demo List\" --listItemId 1 --date 2012 -03-14 Declare a document with a specific id as a record with a record declaration date a list retrieved by server-relative URL located in a specific site m365 spo listitem record declare --webUrl https://contoso.sharepoint.com/sites/project-x --listUrl '/sites/project-x/Lists/Demo List' --listItemId 1 --date 2013 -09-03","title":"listitem record declare"},{"location":"cmd/spo/listitem/listitem-record-declare/#spo-listitem-record-declare","text":"Declares the specified list item as a record","title":"spo listitem record declare"},{"location":"cmd/spo/listitem/listitem-record-declare/#usage","text":"m365 spo listitem record declare [ options ]","title":"Usage"},{"location":"cmd/spo/listitem/listitem-record-declare/#options","text":"-u, --webUrl <webUrl> URL of the site where the list is located -l, --listId [listId] The ID of the list where the item is located. Specify either listTitle , listId or listUrl -t, --listTitle [listTitle] The title of the list where the item is located. Specify either listTitle , listId or listUrl --listUrl [listUrl] Server- or site-relative URL of the list. Specify either listTitle , listId or listUrl -i, --listItemId <listItemId> The ID of the list item to declare as record -d, --date [date] Record declaration date in ISO format. eg. 2019-12-31 -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/listitem/listitem-record-declare/#examples","text":"Declare a document with id 1 as a record in list with title Demo List located in site https://contoso.sharepoint.com/sites/project-x m365 spo listitem record declare --webUrl https://contoso.sharepoint.com/sites/project-x --listTitle \"Demo List\" --listItemId 1 Declare a document with id 1 as a record in list with id ea8e1109-2013-1a69-bc05-1403201257fc located in site https://contoso.sharepoint.com/sites/project-x m365 spo listitem record declare --webUrl https://contoso.sharepoint.com/sites/project-x --listId ea8e1109-2013-1a69-bc05-1403201257fc --listItemId 1 Declare a document with id 1 as a record with record declaration date March 14, 2012 in list with title Demo List located in site https://contoso.sharepoint.com/sites/project-x m365 spo listitem record declare --webUrl https://contoso.sharepoint.com/sites/project-x --listTitle \"Demo List\" --listItemId 1 --date 2012 -03-14 Declare a document with a specific id as a record with a record declaration date a list retrieved by server-relative URL located in a specific site m365 spo listitem record declare --webUrl https://contoso.sharepoint.com/sites/project-x --listUrl '/sites/project-x/Lists/Demo List' --listItemId 1 --date 2013 -09-03","title":"Examples"},{"location":"cmd/spo/listitem/listitem-record-undeclare/","text":"spo listitem record undeclare \u00b6 Undeclares list item as a record Usage \u00b6 m365 spo listitem record undeclare [ options ] Options \u00b6 -u, --webUrl <webUrl> The URL of the site where the list is located -i, --listItemId <listItemId> ID of the list item to be undeclared as a record. -l, --listId [listId] The ID of the list where the item is located. Specify either listTitle , listId or listUrl -t, --listTitle [listTitle] The title of the list where the item is located. Specify either listTitle , listId or listUrl --listUrl [listUrl] Server- or site-relative URL of the list where the item is located. Specify either listTitle , listId or listUrl -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Undeclare the list item as a record with ID 1 from list with ID 0cd891ef-afce-4e55-b836-fce03286cccf located in site _https://contoso.sharepoint.com/sites/project-x spo listitem record undeclare --webUrl https://contoso.sharepoint.com/sites/project-x --listId 0cd891ef-afce-4e55-b836-fce03286cccf --listItemId 1 Undeclare the list item as a record with ID 1 from list with title List 1 located in site https://contoso.sharepoint.com/sites/project-x m365 spo listitem record undeclare --webUrl https://contoso.sharepoint.com/sites/project-x --listTitle 'List 1' --listItemId 1 Undeclare a list item with a specific id as a record from a list retrieved by server-relative URL located in a specific site m365 spo listitem record undeclare --webUrl https://contoso.sharepoint.com/sites/project-x --listUrl '/sites/project-x/Lists/Lists 1' --id 1","title":"listitem record undeclare"},{"location":"cmd/spo/listitem/listitem-record-undeclare/#spo-listitem-record-undeclare","text":"Undeclares list item as a record","title":"spo listitem record undeclare"},{"location":"cmd/spo/listitem/listitem-record-undeclare/#usage","text":"m365 spo listitem record undeclare [ options ]","title":"Usage"},{"location":"cmd/spo/listitem/listitem-record-undeclare/#options","text":"-u, --webUrl <webUrl> The URL of the site where the list is located -i, --listItemId <listItemId> ID of the list item to be undeclared as a record. -l, --listId [listId] The ID of the list where the item is located. Specify either listTitle , listId or listUrl -t, --listTitle [listTitle] The title of the list where the item is located. Specify either listTitle , listId or listUrl --listUrl [listUrl] Server- or site-relative URL of the list where the item is located. Specify either listTitle , listId or listUrl -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/listitem/listitem-record-undeclare/#examples","text":"Undeclare the list item as a record with ID 1 from list with ID 0cd891ef-afce-4e55-b836-fce03286cccf located in site _https://contoso.sharepoint.com/sites/project-x spo listitem record undeclare --webUrl https://contoso.sharepoint.com/sites/project-x --listId 0cd891ef-afce-4e55-b836-fce03286cccf --listItemId 1 Undeclare the list item as a record with ID 1 from list with title List 1 located in site https://contoso.sharepoint.com/sites/project-x m365 spo listitem record undeclare --webUrl https://contoso.sharepoint.com/sites/project-x --listTitle 'List 1' --listItemId 1 Undeclare a list item with a specific id as a record from a list retrieved by server-relative URL located in a specific site m365 spo listitem record undeclare --webUrl https://contoso.sharepoint.com/sites/project-x --listUrl '/sites/project-x/Lists/Lists 1' --id 1","title":"Examples"},{"location":"cmd/spo/listitem/listitem-remove/","text":"spo listitem remove \u00b6 Removes the specified list item Usage \u00b6 m365 spo listitem remove [ options ] Options \u00b6 -u, --webUrl <webUrl> URL of the site where the list to remove is located -i, --id <id> The ID of the list item to remove. -l, --listId [listId] ID of the list where the item should be added. Specify either listTitle , listId or listUrl -t, --listTitle [listTitle] Title of the list where the item should be added. Specify either listTitle , listId or listUrl --listUrl [listUrl] Server- or site-relative URL of the list. Specify either listTitle , listId or listUrl --recycle Recycle the list item --confirm Don't prompt for confirming removing the list item -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Remove the list item with ID 1 from list with ID 0cd891ef-afce-4e55-b836-fce03286cccf located in site https://contoso.sharepoint.com/sites/project-x m365 spo listitem remove --webUrl https://contoso.sharepoint.com/sites/project-x --listId 0cd891ef-afce-4e55-b836-fce03286cccf --id 1 Remove the list item with ID 1 from list with title List 1 located in site https://contoso.sharepoint.com/sites/project-x m365 spo listitem remove --webUrl https://contoso.sharepoint.com/sites/project-x --listTitle 'List 1' --id 1 Remove the list item with a specific ID from a list retrieved by server-relative URL located in a specific site m365 spo listitem remove --webUrl https://contoso.sharepoint.com/sites/project-x --listUrl /sites/project-x/lists/TestList --id 1","title":"listitem remove"},{"location":"cmd/spo/listitem/listitem-remove/#spo-listitem-remove","text":"Removes the specified list item","title":"spo listitem remove"},{"location":"cmd/spo/listitem/listitem-remove/#usage","text":"m365 spo listitem remove [ options ]","title":"Usage"},{"location":"cmd/spo/listitem/listitem-remove/#options","text":"-u, --webUrl <webUrl> URL of the site where the list to remove is located -i, --id <id> The ID of the list item to remove. -l, --listId [listId] ID of the list where the item should be added. Specify either listTitle , listId or listUrl -t, --listTitle [listTitle] Title of the list where the item should be added. Specify either listTitle , listId or listUrl --listUrl [listUrl] Server- or site-relative URL of the list. Specify either listTitle , listId or listUrl --recycle Recycle the list item --confirm Don't prompt for confirming removing the list item -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/listitem/listitem-remove/#examples","text":"Remove the list item with ID 1 from list with ID 0cd891ef-afce-4e55-b836-fce03286cccf located in site https://contoso.sharepoint.com/sites/project-x m365 spo listitem remove --webUrl https://contoso.sharepoint.com/sites/project-x --listId 0cd891ef-afce-4e55-b836-fce03286cccf --id 1 Remove the list item with ID 1 from list with title List 1 located in site https://contoso.sharepoint.com/sites/project-x m365 spo listitem remove --webUrl https://contoso.sharepoint.com/sites/project-x --listTitle 'List 1' --id 1 Remove the list item with a specific ID from a list retrieved by server-relative URL located in a specific site m365 spo listitem remove --webUrl https://contoso.sharepoint.com/sites/project-x --listUrl /sites/project-x/lists/TestList --id 1","title":"Examples"},{"location":"cmd/spo/listitem/listitem-roleassignment-add/","text":"spo listitem roleassignment add \u00b6 Adds a role assignment to a listitem. Usage \u00b6 m365 spo listitem roleassignment add [ options ] Options \u00b6 -u, --webUrl <webUrl> URL of the site where the listitem is located --listId [listId] ID of the list. Specify either listId, listTitle or listUrl but not multiple. --listTitle [listTitle] Title of the list. Specify either listId, listTitle or listUrl but not multiple. --listUrl [listUrl] Relative URL of the list. Specify either listId, listTitle or listUrl but not multiple. --listItemId <listItemId> Id of the listitem to assign the role to. --principalId [principalId] The SharePoint Id of the principal. It may be either a user id or group id to add a role assignment for. Specify either upn, groupName or principalId. --upn [upn] upn/email of user to assign role to. Specify either upn, groupName or principalId. --groupName [groupName] The group name of Azure AD or SharePoint group. Specify either upn, groupName or principalId. --roleDefinitionId [roleDefinitionId] ID of role definition. Specify either roleDefinitionId or roleDefinitionName but not both --roleDefinitionName [roleDefinitionName] Enter the name of a role definition, like 'Contribute', 'Read', etc. Specify either roleDefinitionId or roleDefinitionName but not both -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Add role assignment to specified listitem in specified list located in specified site for specified principal id and specified role definition id. m365 spo listitem roleassignment add --webUrl \"https://contoso.sharepoint.com/sites/project-x\" --listTitle \"someList\" --listItemId 1 --principalId 11 --roleDefinitionId 1073741829 Add role assignment to specified listitem in specified list located in specified site for specified principal id and specified role definition id. m365 spo listitem roleassignment add --webUrl \"https://contoso.sharepoint.com/sites/project-x\" --listId \"0CD891EF-AFCE-4E55-B836-FCE03286CCCF\" --listItemId 1 --principalId 11 --roleDefinitionId 1073741829 Add role assignment to specified listitem in specified list located in specified site for specified principal id and specified role definition id. m365 spo listitem roleassignment add --webUrl \"https://contoso.sharepoint.com/sites/project-x\" --listUrl \"sites/documents\" --listItemId 1 --principalId 11 --roleDefinitionId 1073741829 Add role assignment to specified listitem in specified list located in specified site for specified upn and specified role definition id. m365 spo listitem roleassignment add --webUrl \"https://contoso.sharepoint.com/sites/project-x\" --listTitle \"someList\" --listItemId 1 --upn \"someaccount@tenant.onmicrosoft.com\" --roleDefinitionId 1073741829 Add role assignment to specified listitem in specified list located in specified site for specified group and specified role definition id. m365 spo listitem roleassignment add --webUrl \"https://contoso.sharepoint.com/sites/project-x\" --listTitle \"someList\" --listItemId 1 --groupName \"someGroup\" --roleDefinitionId 1073741829 Add role assignment to specified listitem in specified list located in specified site for specified principal id and specified role definition name. m365 spo listitem roleassignment add --webUrl \"https://contoso.sharepoint.com/sites/project-x\" --listTitle \"someList\" --listItemId 1 --principalId 11 --roleDefinitionName \"Full Control\"","title":"listitem roleassignment add"},{"location":"cmd/spo/listitem/listitem-roleassignment-add/#spo-listitem-roleassignment-add","text":"Adds a role assignment to a listitem.","title":"spo listitem roleassignment add"},{"location":"cmd/spo/listitem/listitem-roleassignment-add/#usage","text":"m365 spo listitem roleassignment add [ options ]","title":"Usage"},{"location":"cmd/spo/listitem/listitem-roleassignment-add/#options","text":"-u, --webUrl <webUrl> URL of the site where the listitem is located --listId [listId] ID of the list. Specify either listId, listTitle or listUrl but not multiple. --listTitle [listTitle] Title of the list. Specify either listId, listTitle or listUrl but not multiple. --listUrl [listUrl] Relative URL of the list. Specify either listId, listTitle or listUrl but not multiple. --listItemId <listItemId> Id of the listitem to assign the role to. --principalId [principalId] The SharePoint Id of the principal. It may be either a user id or group id to add a role assignment for. Specify either upn, groupName or principalId. --upn [upn] upn/email of user to assign role to. Specify either upn, groupName or principalId. --groupName [groupName] The group name of Azure AD or SharePoint group. Specify either upn, groupName or principalId. --roleDefinitionId [roleDefinitionId] ID of role definition. Specify either roleDefinitionId or roleDefinitionName but not both --roleDefinitionName [roleDefinitionName] Enter the name of a role definition, like 'Contribute', 'Read', etc. Specify either roleDefinitionId or roleDefinitionName but not both -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/listitem/listitem-roleassignment-add/#examples","text":"Add role assignment to specified listitem in specified list located in specified site for specified principal id and specified role definition id. m365 spo listitem roleassignment add --webUrl \"https://contoso.sharepoint.com/sites/project-x\" --listTitle \"someList\" --listItemId 1 --principalId 11 --roleDefinitionId 1073741829 Add role assignment to specified listitem in specified list located in specified site for specified principal id and specified role definition id. m365 spo listitem roleassignment add --webUrl \"https://contoso.sharepoint.com/sites/project-x\" --listId \"0CD891EF-AFCE-4E55-B836-FCE03286CCCF\" --listItemId 1 --principalId 11 --roleDefinitionId 1073741829 Add role assignment to specified listitem in specified list located in specified site for specified principal id and specified role definition id. m365 spo listitem roleassignment add --webUrl \"https://contoso.sharepoint.com/sites/project-x\" --listUrl \"sites/documents\" --listItemId 1 --principalId 11 --roleDefinitionId 1073741829 Add role assignment to specified listitem in specified list located in specified site for specified upn and specified role definition id. m365 spo listitem roleassignment add --webUrl \"https://contoso.sharepoint.com/sites/project-x\" --listTitle \"someList\" --listItemId 1 --upn \"someaccount@tenant.onmicrosoft.com\" --roleDefinitionId 1073741829 Add role assignment to specified listitem in specified list located in specified site for specified group and specified role definition id. m365 spo listitem roleassignment add --webUrl \"https://contoso.sharepoint.com/sites/project-x\" --listTitle \"someList\" --listItemId 1 --groupName \"someGroup\" --roleDefinitionId 1073741829 Add role assignment to specified listitem in specified list located in specified site for specified principal id and specified role definition name. m365 spo listitem roleassignment add --webUrl \"https://contoso.sharepoint.com/sites/project-x\" --listTitle \"someList\" --listItemId 1 --principalId 11 --roleDefinitionName \"Full Control\"","title":"Examples"},{"location":"cmd/spo/listitem/listitem-roleassignment-remove/","text":"spo listitem roleassignment remove \u00b6 Removes a role assignment from a listitem. Usage \u00b6 m365 spo listitem roleassignment remove [ options ] Options \u00b6 -u, --webUrl <webUrl> URL of the site where the listitem is located -i, --listId [listId] ID of the list. Specify either listId, listTitle or listUrl but not multiple. -t, --listTitle [listTitle] Title of the list. Specify either listId, listTitle or listUrl but not multiple. --listUrl [listUrl] Relative URL of the list. Specify either listId, listTitle or listUrl but not multiple. --listItemId <listItemId> Id of the listitem to remove the role from. --principalId [principalId] SharePoint ID of principal it may be either user id or group id we want to remove permissions Specify principalId only when upn or groupName are not used. --upn [upn] upn/email of user. Specify either upn or principalId. --groupName [groupName] enter group name of Azure AD or SharePoint group. Specify either groupName or principalId. --confirm Don't prompt for confirming removing the role assignment -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Remove roleassignment from listitem getting list by title based on group name m365 spo listitem roleassignment remove --webUrl \"https://contoso.sharepoint.com/sites/contoso-sales\" --listTitle \"someList\" --listItemId 1 --groupName \"saleGroup\" Remove roleassignment from listitem getting list by title based on principal Id m365 spo listitem roleassignment remove --webUrl \"https://contoso.sharepoint.com/sites/contoso-sales\" --listTitle \"Events\" --listItemId 1 --principalId 2 Remove roleassignment from listitem getting list by url based on principal Id m365 spo listitem roleassignment remove --webUrl \"https://contoso.sharepoint.com/sites/contoso-sales\" --listUrl '/sites/contoso-sales/lists/Events' --listItemId 1 --principalId 2 Remove roleassignment from listitem getting list by url based on principal Id without prompting for confirmation m365 spo listitem roleassignment remove --webUrl \"https://contoso.sharepoint.com/sites/contoso-sales\" --listUrl '/sites/contoso-sales/lists/Events' --listItemId 1 --principalId 2 --confirm","title":"listitem roleassignment remove"},{"location":"cmd/spo/listitem/listitem-roleassignment-remove/#spo-listitem-roleassignment-remove","text":"Removes a role assignment from a listitem.","title":"spo listitem roleassignment remove"},{"location":"cmd/spo/listitem/listitem-roleassignment-remove/#usage","text":"m365 spo listitem roleassignment remove [ options ]","title":"Usage"},{"location":"cmd/spo/listitem/listitem-roleassignment-remove/#options","text":"-u, --webUrl <webUrl> URL of the site where the listitem is located -i, --listId [listId] ID of the list. Specify either listId, listTitle or listUrl but not multiple. -t, --listTitle [listTitle] Title of the list. Specify either listId, listTitle or listUrl but not multiple. --listUrl [listUrl] Relative URL of the list. Specify either listId, listTitle or listUrl but not multiple. --listItemId <listItemId> Id of the listitem to remove the role from. --principalId [principalId] SharePoint ID of principal it may be either user id or group id we want to remove permissions Specify principalId only when upn or groupName are not used. --upn [upn] upn/email of user. Specify either upn or principalId. --groupName [groupName] enter group name of Azure AD or SharePoint group. Specify either groupName or principalId. --confirm Don't prompt for confirming removing the role assignment -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/listitem/listitem-roleassignment-remove/#examples","text":"Remove roleassignment from listitem getting list by title based on group name m365 spo listitem roleassignment remove --webUrl \"https://contoso.sharepoint.com/sites/contoso-sales\" --listTitle \"someList\" --listItemId 1 --groupName \"saleGroup\" Remove roleassignment from listitem getting list by title based on principal Id m365 spo listitem roleassignment remove --webUrl \"https://contoso.sharepoint.com/sites/contoso-sales\" --listTitle \"Events\" --listItemId 1 --principalId 2 Remove roleassignment from listitem getting list by url based on principal Id m365 spo listitem roleassignment remove --webUrl \"https://contoso.sharepoint.com/sites/contoso-sales\" --listUrl '/sites/contoso-sales/lists/Events' --listItemId 1 --principalId 2 Remove roleassignment from listitem getting list by url based on principal Id without prompting for confirmation m365 spo listitem roleassignment remove --webUrl \"https://contoso.sharepoint.com/sites/contoso-sales\" --listUrl '/sites/contoso-sales/lists/Events' --listItemId 1 --principalId 2 --confirm","title":"Examples"},{"location":"cmd/spo/listitem/listitem-roleinheritance-break/","text":"spo listitem roleinheritance break \u00b6 Break inheritance of list item. Usage \u00b6 m365 spo listitem roleinheritance break [ options ] Options \u00b6 -u, --webUrl <webUrl> URL of the site where the item for which to break role inheritance is located --listItemId <listItemId> ID of the item for which to break role inheritance -l, --listId [listId] ID of the list. Specify either listTitle , listId or listUrl -t, --listTitle [listTitle] Title of the list. Specify either listTitle , listId or listUrl --listUrl [listUrl] Server- or site-relative URL of the list. Specify either listTitle , listId or listUrl -c, --clearExistingPermissions Set to clear existing roles from the list item --confirm Do not prompt for confirmation before breaking role inheritance. -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 By default, when breaking permissions inheritance, the list item will retain existing permissions. To remove existing permissions, use the --clearExistingPermissions option. Examples \u00b6 Break inheritance of list item 1 in list someList located in site https://contoso.sharepoint.com/sites/project-x m365 spo listitem roleinheritance break --webUrl \"https://contoso.sharepoint.com/sites/project-x\" --listTitle \"_someList_\" --listItemId 1 Break inheritance of list item 1 in list with ID 202b8199-b9de-43fd-9737-7f213f51c991 located in site https://contoso.sharepoint.com/sites/project-x m365 spo listitem roleinheritance break --webUrl https://contoso.sharepoint.com/sites/project-x --listId 202b8199-b9de-43fd-9737-7f213f51c991 --listItemId 1 Break inheritance of list item 1 in list someList located in site https://contoso.sharepoint.com/sites/project-x with clearing permissions m365 spo listitem roleinheritance break --webUrl \"https://contoso.sharepoint.com/sites/project-x\" --listTitle \"_someList_\" --listItemId 1 --clearExistingPermissions Break inheritance of a specific list item in a list retrieved by server-relative URL in a specific site and clear the existing permissions m365 spo listitem roleinheritance break --webUrl https://contoso.sharepoint.com/sites/project-x --listUrl /sites/project-x/Documents --listItemId 1 --clearExistingPermissions Break inheritance of list item 1 in list with ID 202b8199-b9de-43fd-9737-7f213f51c991 located in site https://contoso.sharepoint.com/sites/project-x with clearing permissions without prompting for confirmation m365 spo listitem roleinheritance break --webUrl https://contoso.sharepoint.com/sites/project-x --listId 202b8199-b9de-43fd-9737-7f213f51c991 --listItemId 1 --clearExistingPermissions --confirm","title":"listitem roleinheritance break"},{"location":"cmd/spo/listitem/listitem-roleinheritance-break/#spo-listitem-roleinheritance-break","text":"Break inheritance of list item.","title":"spo listitem roleinheritance break"},{"location":"cmd/spo/listitem/listitem-roleinheritance-break/#usage","text":"m365 spo listitem roleinheritance break [ options ]","title":"Usage"},{"location":"cmd/spo/listitem/listitem-roleinheritance-break/#options","text":"-u, --webUrl <webUrl> URL of the site where the item for which to break role inheritance is located --listItemId <listItemId> ID of the item for which to break role inheritance -l, --listId [listId] ID of the list. Specify either listTitle , listId or listUrl -t, --listTitle [listTitle] Title of the list. Specify either listTitle , listId or listUrl --listUrl [listUrl] Server- or site-relative URL of the list. Specify either listTitle , listId or listUrl -c, --clearExistingPermissions Set to clear existing roles from the list item --confirm Do not prompt for confirmation before breaking role inheritance. -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/listitem/listitem-roleinheritance-break/#remarks","text":"By default, when breaking permissions inheritance, the list item will retain existing permissions. To remove existing permissions, use the --clearExistingPermissions option.","title":"Remarks"},{"location":"cmd/spo/listitem/listitem-roleinheritance-break/#examples","text":"Break inheritance of list item 1 in list someList located in site https://contoso.sharepoint.com/sites/project-x m365 spo listitem roleinheritance break --webUrl \"https://contoso.sharepoint.com/sites/project-x\" --listTitle \"_someList_\" --listItemId 1 Break inheritance of list item 1 in list with ID 202b8199-b9de-43fd-9737-7f213f51c991 located in site https://contoso.sharepoint.com/sites/project-x m365 spo listitem roleinheritance break --webUrl https://contoso.sharepoint.com/sites/project-x --listId 202b8199-b9de-43fd-9737-7f213f51c991 --listItemId 1 Break inheritance of list item 1 in list someList located in site https://contoso.sharepoint.com/sites/project-x with clearing permissions m365 spo listitem roleinheritance break --webUrl \"https://contoso.sharepoint.com/sites/project-x\" --listTitle \"_someList_\" --listItemId 1 --clearExistingPermissions Break inheritance of a specific list item in a list retrieved by server-relative URL in a specific site and clear the existing permissions m365 spo listitem roleinheritance break --webUrl https://contoso.sharepoint.com/sites/project-x --listUrl /sites/project-x/Documents --listItemId 1 --clearExistingPermissions Break inheritance of list item 1 in list with ID 202b8199-b9de-43fd-9737-7f213f51c991 located in site https://contoso.sharepoint.com/sites/project-x with clearing permissions without prompting for confirmation m365 spo listitem roleinheritance break --webUrl https://contoso.sharepoint.com/sites/project-x --listId 202b8199-b9de-43fd-9737-7f213f51c991 --listItemId 1 --clearExistingPermissions --confirm","title":"Examples"},{"location":"cmd/spo/listitem/listitem-roleinheritance-reset/","text":"spo listitem roleinheritance reset \u00b6 Restores the role inheritance of list item, file, or folder Usage \u00b6 m365 spo listitem roleinheritance reset [ options ] Options \u00b6 -u, --webUrl <webUrl> URL of the site where the item for which to reset role inheritance is located --listItemId <listItemId> ID of the item for which to reset role inheritance --listId [listId] ID of the list. Specify either listTitle , listId or listUrl --listTitle [listTitle] Title of the list. Specify either listTitle , listId or listUrl --listUrl [listUrl] Server- or site-relative URL of the list. Specify either listTitle , listId or listUrl --confirm Do not prompt for confirmation before resetting role inheritance. -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Restore role inheritance of list item with id 8 from list with ID 0cd891ef-afce-4e55-b836-fce03286cccf located in site https://contoso.sharepoint.com/sites/project-x m365 spo listitem roleinheritance reset --webUrl https://contoso.sharepoint.com/sites/project-x --listItemId 8 --listId 0cd891ef-afce-4e55-b836-fce03286cccf Restore role inheritance of list item with id 8 from list with title test located in site https://contoso.sharepoint.com/sites/project-x m365 spo listitem roleinheritance reset --webUrl https://contoso.sharepoint.com/sites/project-x --listItemId 8 --listTitle test Restore role inheritance of a list item with a specific id in a list retrieved by server relative URL located in a specific site without prompting for confirmation m365 spo listitem roleinheritance reset --webUrl https://contoso.sharepoint.com/sites/project-x --listItemId 8 --listUrl /sites/project-x/lists/test --confirm","title":"listitem roleinheritance reset"},{"location":"cmd/spo/listitem/listitem-roleinheritance-reset/#spo-listitem-roleinheritance-reset","text":"Restores the role inheritance of list item, file, or folder","title":"spo listitem roleinheritance reset"},{"location":"cmd/spo/listitem/listitem-roleinheritance-reset/#usage","text":"m365 spo listitem roleinheritance reset [ options ]","title":"Usage"},{"location":"cmd/spo/listitem/listitem-roleinheritance-reset/#options","text":"-u, --webUrl <webUrl> URL of the site where the item for which to reset role inheritance is located --listItemId <listItemId> ID of the item for which to reset role inheritance --listId [listId] ID of the list. Specify either listTitle , listId or listUrl --listTitle [listTitle] Title of the list. Specify either listTitle , listId or listUrl --listUrl [listUrl] Server- or site-relative URL of the list. Specify either listTitle , listId or listUrl --confirm Do not prompt for confirmation before resetting role inheritance. -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/listitem/listitem-roleinheritance-reset/#examples","text":"Restore role inheritance of list item with id 8 from list with ID 0cd891ef-afce-4e55-b836-fce03286cccf located in site https://contoso.sharepoint.com/sites/project-x m365 spo listitem roleinheritance reset --webUrl https://contoso.sharepoint.com/sites/project-x --listItemId 8 --listId 0cd891ef-afce-4e55-b836-fce03286cccf Restore role inheritance of list item with id 8 from list with title test located in site https://contoso.sharepoint.com/sites/project-x m365 spo listitem roleinheritance reset --webUrl https://contoso.sharepoint.com/sites/project-x --listItemId 8 --listTitle test Restore role inheritance of a list item with a specific id in a list retrieved by server relative URL located in a specific site without prompting for confirmation m365 spo listitem roleinheritance reset --webUrl https://contoso.sharepoint.com/sites/project-x --listItemId 8 --listUrl /sites/project-x/lists/test --confirm","title":"Examples"},{"location":"cmd/spo/listitem/listitem-set/","text":"spo listitem set \u00b6 Updates a list item in the specified list Usage \u00b6 m365 spo listitem set [ options ] Options \u00b6 -u, --webUrl <webUrl> URL of the site where the item should be updated -i, --id <id> ID of the list item to update. -l, --listId [listId] ID of the list where the item should be updated. Specify either listTitle , listId or listUrl -t, --listTitle [listTitle] Title of the list where the item should be updated. Specify either listTitle , listId or listUrl --listUrl [listUrl] Server- or site-relative URL of the list where the item should be updated. Specify either listTitle , listId or listUrl -c, --contentType [contentType] The name or the ID of the content type to associate with the updated item -s, --systemUpdate Update the item without updating the modified date and modified by fields -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Update an item with id 147 with title Demo Item and content type name Item in list with title Demo List in site https://contoso.sharepoint.com/sites/project-x m365 spo listitem set --contentType Item --listTitle \"Demo List\" --id 147 --webUrl https://contoso.sharepoint.com/sites/project-x --Title \"Demo Item\" Update an item with id 147 with title Demo Multi Managed Metadata Field and a single-select metadata field named SingleMetadataField in list with title Demo List in site https://contoso.sharepoint.com/sites/project-x m365 spo listitem set --listTitle \"Demo List\" --id 147 --webUrl https://contoso.sharepoint.com/sites/project-x --Title \"Demo Single Managed Metadata Field\" --SingleMetadataField \"TermLabel1|fa2f6bfd-1fad-4d18-9c89-289fe6941377;\" Update an item with id 147 with Title Demo Multi Managed Metadata Field and a multi-select metadata field named MultiMetadataField in list with title Demo List in site https://contoso.sharepoint.com/sites/project-x m365 spo listitem set --listTitle \"Demo List\" --id 147 --webUrl https://contoso.sharepoint.com/sites/project-x --Title \"Demo Multi Managed Metadata Field\" --MultiMetadataField \"TermLabel1|cf8c72a1-0207-40ee-aebd-fca67d20bc8a;TermLabel2|e5cc320f-8b65-4882-afd5-f24d88d52b75;\" Update an item with id 147 with Title Demo Single Person Field and a single-select people field named SinglePeopleField to list with title Demo List in site https://contoso.sharepoint.com/sites/project-x m365 spo listitem set --listTitle \"Demo List\" --id 147 --webUrl https://contoso.sharepoint.com/sites/project-x --Title \"Demo Single Person Field\" --SinglePeopleField \"[{'Key':'i:0#.f|membership|markh@conotoso.com'}]\" Update an item with id 147 with Title Demo Multi Person Field and a multi-select people field named MultiPeopleField to list with title Demo List in site https://contoso.sharepoint.com/sites/project-x m365 spo listitem set --listTitle \"Demo List\" --id 147 --webUrl https://contoso.sharepoint.com/sites/project-x --Title \"Demo Multi Person Field\" --MultiPeopleField \"[{'Key':'i:0#.f|membership|markh@conotoso.com'},{'Key':'i:0#.f|membership|adamb@conotoso.com'}]\" Update the field Title and CustomHyperlink of an item with a specific id in a list retrieved by server-relative URL in a specific site m365 spo listitem set --listUrl '/sites/project-x/lists/Demo List' --id 147 --webUrl https://contoso.sharepoint.com/sites/project-x --Title \"Demo Hyperlink Field\" --CustomHyperlink \"https://www.bing.com, Bing\"","title":"listitem set"},{"location":"cmd/spo/listitem/listitem-set/#spo-listitem-set","text":"Updates a list item in the specified list","title":"spo listitem set"},{"location":"cmd/spo/listitem/listitem-set/#usage","text":"m365 spo listitem set [ options ]","title":"Usage"},{"location":"cmd/spo/listitem/listitem-set/#options","text":"-u, --webUrl <webUrl> URL of the site where the item should be updated -i, --id <id> ID of the list item to update. -l, --listId [listId] ID of the list where the item should be updated. Specify either listTitle , listId or listUrl -t, --listTitle [listTitle] Title of the list where the item should be updated. Specify either listTitle , listId or listUrl --listUrl [listUrl] Server- or site-relative URL of the list where the item should be updated. Specify either listTitle , listId or listUrl -c, --contentType [contentType] The name or the ID of the content type to associate with the updated item -s, --systemUpdate Update the item without updating the modified date and modified by fields -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/listitem/listitem-set/#examples","text":"Update an item with id 147 with title Demo Item and content type name Item in list with title Demo List in site https://contoso.sharepoint.com/sites/project-x m365 spo listitem set --contentType Item --listTitle \"Demo List\" --id 147 --webUrl https://contoso.sharepoint.com/sites/project-x --Title \"Demo Item\" Update an item with id 147 with title Demo Multi Managed Metadata Field and a single-select metadata field named SingleMetadataField in list with title Demo List in site https://contoso.sharepoint.com/sites/project-x m365 spo listitem set --listTitle \"Demo List\" --id 147 --webUrl https://contoso.sharepoint.com/sites/project-x --Title \"Demo Single Managed Metadata Field\" --SingleMetadataField \"TermLabel1|fa2f6bfd-1fad-4d18-9c89-289fe6941377;\" Update an item with id 147 with Title Demo Multi Managed Metadata Field and a multi-select metadata field named MultiMetadataField in list with title Demo List in site https://contoso.sharepoint.com/sites/project-x m365 spo listitem set --listTitle \"Demo List\" --id 147 --webUrl https://contoso.sharepoint.com/sites/project-x --Title \"Demo Multi Managed Metadata Field\" --MultiMetadataField \"TermLabel1|cf8c72a1-0207-40ee-aebd-fca67d20bc8a;TermLabel2|e5cc320f-8b65-4882-afd5-f24d88d52b75;\" Update an item with id 147 with Title Demo Single Person Field and a single-select people field named SinglePeopleField to list with title Demo List in site https://contoso.sharepoint.com/sites/project-x m365 spo listitem set --listTitle \"Demo List\" --id 147 --webUrl https://contoso.sharepoint.com/sites/project-x --Title \"Demo Single Person Field\" --SinglePeopleField \"[{'Key':'i:0#.f|membership|markh@conotoso.com'}]\" Update an item with id 147 with Title Demo Multi Person Field and a multi-select people field named MultiPeopleField to list with title Demo List in site https://contoso.sharepoint.com/sites/project-x m365 spo listitem set --listTitle \"Demo List\" --id 147 --webUrl https://contoso.sharepoint.com/sites/project-x --Title \"Demo Multi Person Field\" --MultiPeopleField \"[{'Key':'i:0#.f|membership|markh@conotoso.com'},{'Key':'i:0#.f|membership|adamb@conotoso.com'}]\" Update the field Title and CustomHyperlink of an item with a specific id in a list retrieved by server-relative URL in a specific site m365 spo listitem set --listUrl '/sites/project-x/lists/Demo List' --id 147 --webUrl https://contoso.sharepoint.com/sites/project-x --Title \"Demo Hyperlink Field\" --CustomHyperlink \"https://www.bing.com, Bing\"","title":"Examples"},{"location":"cmd/spo/mail/mail-send/","text":"spo mail send \u00b6 Sends an e-mail from SharePoint Usage \u00b6 m365 spo mail send [ options ] Options \u00b6 -u, --webUrl <webUrl> Absolute URL of the site from which the email will be sent --to <to> Comma-separated list of recipients' e-mail addresses --subject <subject> Subject of the e-mail --body <body> Content of the e-mail --from [from] Sender's e-mail address --cc [cc] Comma-separated list of CC recipients --bcc [bcc] Comma-separated list of BCC recipients --additionalHeaders [additionalHeaders] JSON string with additional headers -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 All recipients (internal and external) have to have access to the target SharePoint site. Examples \u00b6 Send an e-mail to user@contoso.com m365 spo mail send --webUrl https://contoso.sharepoint.com/sites/project-x --to \"user@contoso.com\" --subject \"Email sent via CLI for Microsoft 365\" --body \"<h1>CLI for Microsoft 365</h1>Email sent via <b>command</b>.\" Send an e-mail to multiples addresses m365 spo mail send --webUrl https://contoso.sharepoint.com/sites/project-x --to \"user1@contoso.com,user2@contoso.com\" --subject \"Email sent via CLI for Microsoft 365\" --body \"<h1>CLI for Microsoft 365</h1>Email sent via <b>command</b>.\" --cc \"user3@contoso.com\" --bcc \"user4@contoso.com\" Send an e-mail to user@contoso.com with additional headers m365 spo mail send --webUrl https://contoso.sharepoint.com/sites/project-x --to \"user@contoso.com\" --subject \"Email sent via CLI for Microsoft 365\" --body \"<h1>CLI for Microsoft 365</h1>Email sent via <b>command</b>.\" --additionalHeaders \"'{\\\"X-MC-Tags\\\":\\\"CLI for Microsoft 365\\\"}'\"","title":"mail send"},{"location":"cmd/spo/mail/mail-send/#spo-mail-send","text":"Sends an e-mail from SharePoint","title":"spo mail send"},{"location":"cmd/spo/mail/mail-send/#usage","text":"m365 spo mail send [ options ]","title":"Usage"},{"location":"cmd/spo/mail/mail-send/#options","text":"-u, --webUrl <webUrl> Absolute URL of the site from which the email will be sent --to <to> Comma-separated list of recipients' e-mail addresses --subject <subject> Subject of the e-mail --body <body> Content of the e-mail --from [from] Sender's e-mail address --cc [cc] Comma-separated list of CC recipients --bcc [bcc] Comma-separated list of BCC recipients --additionalHeaders [additionalHeaders] JSON string with additional headers -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/mail/mail-send/#remarks","text":"All recipients (internal and external) have to have access to the target SharePoint site.","title":"Remarks"},{"location":"cmd/spo/mail/mail-send/#examples","text":"Send an e-mail to user@contoso.com m365 spo mail send --webUrl https://contoso.sharepoint.com/sites/project-x --to \"user@contoso.com\" --subject \"Email sent via CLI for Microsoft 365\" --body \"<h1>CLI for Microsoft 365</h1>Email sent via <b>command</b>.\" Send an e-mail to multiples addresses m365 spo mail send --webUrl https://contoso.sharepoint.com/sites/project-x --to \"user1@contoso.com,user2@contoso.com\" --subject \"Email sent via CLI for Microsoft 365\" --body \"<h1>CLI for Microsoft 365</h1>Email sent via <b>command</b>.\" --cc \"user3@contoso.com\" --bcc \"user4@contoso.com\" Send an e-mail to user@contoso.com with additional headers m365 spo mail send --webUrl https://contoso.sharepoint.com/sites/project-x --to \"user@contoso.com\" --subject \"Email sent via CLI for Microsoft 365\" --body \"<h1>CLI for Microsoft 365</h1>Email sent via <b>command</b>.\" --additionalHeaders \"'{\\\"X-MC-Tags\\\":\\\"CLI for Microsoft 365\\\"}'\"","title":"Examples"},{"location":"cmd/spo/navigation/navigation-node-add/","text":"spo navigation node add \u00b6 Adds a navigation node to the specified site navigation Usage \u00b6 m365 spo navigation node add [ options ] Options \u00b6 -u, --webUrl <webUrl> Absolute URL of the site to which navigation should be modified -l, --location [location] Navigation type where the node should be added. Available options: QuickLaunch , TopNavigationBar -t, --title <title> Navigation node title --url <url> Navigation node URL --parentNodeId [parentNodeId] ID of the node below which the node should be added --isExternal Set, if the navigation node points to an external URL -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Add a navigation node pointing to a SharePoint page to the top navigation m365 spo navigation node add --webUrl https://contoso.sharepoint.com/sites/team-a --location TopNavigationBar --title About --url /sites/team-s/sitepages/about.aspx Add a navigation node pointing to an external page to the quick launch m365 spo navigation node add --webUrl https://contoso.sharepoint.com/sites/team-a --location QuickLaunch --title \"About us\" --url https://contoso.com/about-us --isExternal Add a navigation node below an existing node m365 spo navigation node add --webUrl https://contoso.sharepoint.com/sites/team-a --parentNodeId 2010 --title About --url /sites/team-s/sitepages/about.aspx","title":"navigation node add"},{"location":"cmd/spo/navigation/navigation-node-add/#spo-navigation-node-add","text":"Adds a navigation node to the specified site navigation","title":"spo navigation node add"},{"location":"cmd/spo/navigation/navigation-node-add/#usage","text":"m365 spo navigation node add [ options ]","title":"Usage"},{"location":"cmd/spo/navigation/navigation-node-add/#options","text":"-u, --webUrl <webUrl> Absolute URL of the site to which navigation should be modified -l, --location [location] Navigation type where the node should be added. Available options: QuickLaunch , TopNavigationBar -t, --title <title> Navigation node title --url <url> Navigation node URL --parentNodeId [parentNodeId] ID of the node below which the node should be added --isExternal Set, if the navigation node points to an external URL -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/navigation/navigation-node-add/#examples","text":"Add a navigation node pointing to a SharePoint page to the top navigation m365 spo navigation node add --webUrl https://contoso.sharepoint.com/sites/team-a --location TopNavigationBar --title About --url /sites/team-s/sitepages/about.aspx Add a navigation node pointing to an external page to the quick launch m365 spo navigation node add --webUrl https://contoso.sharepoint.com/sites/team-a --location QuickLaunch --title \"About us\" --url https://contoso.com/about-us --isExternal Add a navigation node below an existing node m365 spo navigation node add --webUrl https://contoso.sharepoint.com/sites/team-a --parentNodeId 2010 --title About --url /sites/team-s/sitepages/about.aspx","title":"Examples"},{"location":"cmd/spo/navigation/navigation-node-list/","text":"spo navigation node list \u00b6 Lists nodes from the specified site navigation Usage \u00b6 m365 spo navigation node list [ options ] Options \u00b6 -u, --webUrl <webUrl> Absolute URL of the site for which to retrieve navigation -l, --location <location> Navigation type to retrieve. Available options: QuickLaunch,TopNavigationBar -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Retrieve nodes from the top navigation m365 spo navigation node list --webUrl https://contoso.sharepoint.com/sites/team-a --location TopNavigationBar Retrieve nodes from the quick launch m365 spo navigation node list --webUrl https://contoso.sharepoint.com/sites/team-a --location QuickLaunch","title":"navigation node list"},{"location":"cmd/spo/navigation/navigation-node-list/#spo-navigation-node-list","text":"Lists nodes from the specified site navigation","title":"spo navigation node list"},{"location":"cmd/spo/navigation/navigation-node-list/#usage","text":"m365 spo navigation node list [ options ]","title":"Usage"},{"location":"cmd/spo/navigation/navigation-node-list/#options","text":"-u, --webUrl <webUrl> Absolute URL of the site for which to retrieve navigation -l, --location <location> Navigation type to retrieve. Available options: QuickLaunch,TopNavigationBar -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/navigation/navigation-node-list/#examples","text":"Retrieve nodes from the top navigation m365 spo navigation node list --webUrl https://contoso.sharepoint.com/sites/team-a --location TopNavigationBar Retrieve nodes from the quick launch m365 spo navigation node list --webUrl https://contoso.sharepoint.com/sites/team-a --location QuickLaunch","title":"Examples"},{"location":"cmd/spo/navigation/navigation-node-remove/","text":"spo navigation node remove \u00b6 Removes the specified navigation node Usage \u00b6 m365 spo navigation node remove [ options ] Options \u00b6 -u, --webUrl <webUrl> Absolute URL of the site to which navigation should be modified -l, --location <location> Navigation type where the node should be added. Available options: QuickLaunch,TopNavigationBar -i, --id <id> ID of the node to remove --confirm Don't prompt for confirming removing the node -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Remove a node from the top navigation. Will prompt for confirmation m365 spo navigation node remove --webUrl https://contoso.sharepoint.com/sites/team-a --location TopNavigationBar --id 2003 Remove a node from the quick launch without prompting for confirmation m365 spo navigation node remove --webUrl https://contoso.sharepoint.com/sites/team-a --location QuickLaunch --id 2003 --confirm","title":"navigation node remove"},{"location":"cmd/spo/navigation/navigation-node-remove/#spo-navigation-node-remove","text":"Removes the specified navigation node","title":"spo navigation node remove"},{"location":"cmd/spo/navigation/navigation-node-remove/#usage","text":"m365 spo navigation node remove [ options ]","title":"Usage"},{"location":"cmd/spo/navigation/navigation-node-remove/#options","text":"-u, --webUrl <webUrl> Absolute URL of the site to which navigation should be modified -l, --location <location> Navigation type where the node should be added. Available options: QuickLaunch,TopNavigationBar -i, --id <id> ID of the node to remove --confirm Don't prompt for confirming removing the node -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/navigation/navigation-node-remove/#examples","text":"Remove a node from the top navigation. Will prompt for confirmation m365 spo navigation node remove --webUrl https://contoso.sharepoint.com/sites/team-a --location TopNavigationBar --id 2003 Remove a node from the quick launch without prompting for confirmation m365 spo navigation node remove --webUrl https://contoso.sharepoint.com/sites/team-a --location QuickLaunch --id 2003 --confirm","title":"Examples"},{"location":"cmd/spo/orgassetslibrary/orgassetslibrary-add/","text":"spo orgassetslibrary add \u00b6 Promotes an existing library to become an organization assets library Usage \u00b6 m365 spo orgassetslibrary add [ options ] Options \u00b6 --libraryUrl <libraryUrl> The URL of the library to promote --thumbnailUrl <thumbnailUrl> The URL of the thumbnail to render --cdnType [cdnType] Specifies the CDN type. Public,Private . Default is Private -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Important To use this command you have to have permissions to access the tenant admin site. Examples \u00b6 Promotes an existing library to become an organization assets library m365 spo orgassetslibrary add --libraryUrl \"https://contoso.sharepoint.com/assets\" Promotes an existing library to become an organization assets library with Thumbnail m365 spo orgassetslibrary --libraryUrl \"https://contoso.sharepoint.com/assets\" --thumbnailUrl \"https://contoso.sharepoint.com/assets/logo.png\"","title":"orgassetslibrary add"},{"location":"cmd/spo/orgassetslibrary/orgassetslibrary-add/#spo-orgassetslibrary-add","text":"Promotes an existing library to become an organization assets library","title":"spo orgassetslibrary add"},{"location":"cmd/spo/orgassetslibrary/orgassetslibrary-add/#usage","text":"m365 spo orgassetslibrary add [ options ]","title":"Usage"},{"location":"cmd/spo/orgassetslibrary/orgassetslibrary-add/#options","text":"--libraryUrl <libraryUrl> The URL of the library to promote --thumbnailUrl <thumbnailUrl> The URL of the thumbnail to render --cdnType [cdnType] Specifies the CDN type. Public,Private . Default is Private -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Important To use this command you have to have permissions to access the tenant admin site.","title":"Options"},{"location":"cmd/spo/orgassetslibrary/orgassetslibrary-add/#examples","text":"Promotes an existing library to become an organization assets library m365 spo orgassetslibrary add --libraryUrl \"https://contoso.sharepoint.com/assets\" Promotes an existing library to become an organization assets library with Thumbnail m365 spo orgassetslibrary --libraryUrl \"https://contoso.sharepoint.com/assets\" --thumbnailUrl \"https://contoso.sharepoint.com/assets/logo.png\"","title":"Examples"},{"location":"cmd/spo/orgassetslibrary/orgassetslibrary-list/","text":"spo orgassetslibrary list \u00b6 List all libraries that are assigned as asset library Usage \u00b6 m365 spo orgassetslibrary list [ options ] Options \u00b6 -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Important To use this command you have to have permissions to access the tenant admin site. Examples \u00b6 List all libraries that are assigned as asset library m365 spo orgassetslibrary list","title":"orgassetslibrary list"},{"location":"cmd/spo/orgassetslibrary/orgassetslibrary-list/#spo-orgassetslibrary-list","text":"List all libraries that are assigned as asset library","title":"spo orgassetslibrary list"},{"location":"cmd/spo/orgassetslibrary/orgassetslibrary-list/#usage","text":"m365 spo orgassetslibrary list [ options ]","title":"Usage"},{"location":"cmd/spo/orgassetslibrary/orgassetslibrary-list/#options","text":"-h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Important To use this command you have to have permissions to access the tenant admin site.","title":"Options"},{"location":"cmd/spo/orgassetslibrary/orgassetslibrary-list/#examples","text":"List all libraries that are assigned as asset library m365 spo orgassetslibrary list","title":"Examples"},{"location":"cmd/spo/orgassetslibrary/orgassetslibrary-remove/","text":"spo orgassetslibrary remove \u00b6 Removes a library that was designated as a central location for organization assets across the tenant. Usage \u00b6 m365 spo orgassetslibrary remove [ options ] Options \u00b6 --libraryUrl <libraryUrl> The server relative URL of the library to be removed as a central location for organization assets --confirm Don't prompt for confirming removing the organization asset library -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Important To use this command you have to have permissions to access the tenant admin site. Examples \u00b6 Removes organization assets library without confirmation m365 spo orgassetslibrary remove --libraryUrl \"/sites/branding/assets\" --confirm","title":"orgassetslibrary remove"},{"location":"cmd/spo/orgassetslibrary/orgassetslibrary-remove/#spo-orgassetslibrary-remove","text":"Removes a library that was designated as a central location for organization assets across the tenant.","title":"spo orgassetslibrary remove"},{"location":"cmd/spo/orgassetslibrary/orgassetslibrary-remove/#usage","text":"m365 spo orgassetslibrary remove [ options ]","title":"Usage"},{"location":"cmd/spo/orgassetslibrary/orgassetslibrary-remove/#options","text":"--libraryUrl <libraryUrl> The server relative URL of the library to be removed as a central location for organization assets --confirm Don't prompt for confirming removing the organization asset library -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Important To use this command you have to have permissions to access the tenant admin site.","title":"Options"},{"location":"cmd/spo/orgassetslibrary/orgassetslibrary-remove/#examples","text":"Removes organization assets library without confirmation m365 spo orgassetslibrary remove --libraryUrl \"/sites/branding/assets\" --confirm","title":"Examples"},{"location":"cmd/spo/orgnewssite/orgnewssite-list/","text":"spo orgnewssite list \u00b6 Lists all organizational news sites Usage \u00b6 m365 spo orgnewssite list [ options ] Options \u00b6 -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Important To use this command you have to have permissions to access the tenant admin site. Examples \u00b6 List all organizational news sites m365 spo orgnewssite list","title":"orgnewssite list"},{"location":"cmd/spo/orgnewssite/orgnewssite-list/#spo-orgnewssite-list","text":"Lists all organizational news sites","title":"spo orgnewssite list"},{"location":"cmd/spo/orgnewssite/orgnewssite-list/#usage","text":"m365 spo orgnewssite list [ options ]","title":"Usage"},{"location":"cmd/spo/orgnewssite/orgnewssite-list/#options","text":"-h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Important To use this command you have to have permissions to access the tenant admin site.","title":"Options"},{"location":"cmd/spo/orgnewssite/orgnewssite-list/#examples","text":"List all organizational news sites m365 spo orgnewssite list","title":"Examples"},{"location":"cmd/spo/orgnewssite/orgnewssite-remove/","text":"spo orgnewssite remove \u00b6 Removes a site from the list of organizational news sites Usage \u00b6 m365 spo orgnewssite remove [ options ] Options \u00b6 -u, --url <url> Absolute URL of the site to remove --confirm Don't prompt for confirmation -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Important To use this command you have to have permissions to access the tenant admin site. Examples \u00b6 Remove a site from the list of organizational news m365 spo orgnewssite remove --url https://contoso.sharepoint.com/sites/site1 Remove a site from the list of organizational news sites, without prompting for confirmation m365 spo orgnewssite remove --url https://contoso.sharepoint.com/sites/site1 --confirm","title":"orgnewssite remove"},{"location":"cmd/spo/orgnewssite/orgnewssite-remove/#spo-orgnewssite-remove","text":"Removes a site from the list of organizational news sites","title":"spo orgnewssite remove"},{"location":"cmd/spo/orgnewssite/orgnewssite-remove/#usage","text":"m365 spo orgnewssite remove [ options ]","title":"Usage"},{"location":"cmd/spo/orgnewssite/orgnewssite-remove/#options","text":"-u, --url <url> Absolute URL of the site to remove --confirm Don't prompt for confirmation -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Important To use this command you have to have permissions to access the tenant admin site.","title":"Options"},{"location":"cmd/spo/orgnewssite/orgnewssite-remove/#examples","text":"Remove a site from the list of organizational news m365 spo orgnewssite remove --url https://contoso.sharepoint.com/sites/site1 Remove a site from the list of organizational news sites, without prompting for confirmation m365 spo orgnewssite remove --url https://contoso.sharepoint.com/sites/site1 --confirm","title":"Examples"},{"location":"cmd/spo/orgnewssite/orgnewssite-set/","text":"spo orgnewssite set \u00b6 Marks site as an organizational news site Usage \u00b6 m365 spo orgnewssite set [ options ] Options \u00b6 -u, --url <url> The URL of the site to mark as an organizational news site -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Important To use this command you have to have permissions to access the tenant admin site. Remarks \u00b6 Using the -u, --url option you can specify which site to add to the list of organizational news sites. Examples \u00b6 Set a site as an organizational news site m365 spo orgnewssite set --url https://contoso.sharepoint.com/sites/site1","title":"orgnewssite set"},{"location":"cmd/spo/orgnewssite/orgnewssite-set/#spo-orgnewssite-set","text":"Marks site as an organizational news site","title":"spo orgnewssite set"},{"location":"cmd/spo/orgnewssite/orgnewssite-set/#usage","text":"m365 spo orgnewssite set [ options ]","title":"Usage"},{"location":"cmd/spo/orgnewssite/orgnewssite-set/#options","text":"-u, --url <url> The URL of the site to mark as an organizational news site -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Important To use this command you have to have permissions to access the tenant admin site.","title":"Options"},{"location":"cmd/spo/orgnewssite/orgnewssite-set/#remarks","text":"Using the -u, --url option you can specify which site to add to the list of organizational news sites.","title":"Remarks"},{"location":"cmd/spo/orgnewssite/orgnewssite-set/#examples","text":"Set a site as an organizational news site m365 spo orgnewssite set --url https://contoso.sharepoint.com/sites/site1","title":"Examples"},{"location":"cmd/spo/page/page-add/","text":"spo page add \u00b6 Creates modern page Usage \u00b6 m365 spo page add [ options ] Options \u00b6 -n, --name <name> Name of the page to create -u, --webUrl <webUrl> URL of the site where the page should be created -t, --title [title] Title of the page to create. If not specified, will use the page name as its title -l, --layoutType [layoutType] Layout of the page. Allowed values Article , Home , SingleWebPartAppPage , RepostPage , HeaderlessSearchResults , Spaces , Topic . Default Article -p, --promoteAs [promoteAs] Create the page for a specific purpose. Allowed values HomePage , NewsPage --commentsEnabled Set to enable comments on the page --publish Set to publish the page --publishMessage [publishMessage] Message to set when publishing the page --description [description] The description to set for the page -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 If you try to create a page with a name of a page that already exists, you will get a The file exists error. If you choose to promote the page using the promoteAs option or enable page comments, you will see the result only after publishing the page. Examples \u00b6 Create new modern page. Use the Article layout m365 spo page add --name new-page.aspx --webUrl https://contoso.sharepoint.com/sites/a-team Create new modern page and set its title m365 spo page add --name new-page.aspx --title 'My page' --webUrl https://contoso.sharepoint.com/sites/a-team Create new modern page. Use the Home page layout and include the default set of web parts m365 spo page add --name new-page.aspx --webUrl https://contoso.sharepoint.com/sites/a-team --layoutType Home Create new article page and promote it as a news article m365 spo page add --name new-page.aspx --webUrl https://contoso.sharepoint.com/sites/a-team --promoteAs NewsPage Create new page and set it as the site's home page m365 spo page add --name new-page.aspx --webUrl https://contoso.sharepoint.com/sites/a-team --layoutType Home --promoteAs HomePage Create new article page and promote it as a template m365 spo page add --name page.aspx --webUrl https://contoso.sharepoint.com/sites/a-team --promoteAs Template Create new article page and enable comments on the page m365 spo page add --name new-page.aspx --webUrl https://contoso.sharepoint.com/sites/a-team --commentsEnabled Create new article page and publish it m365 spo page add --name new-page.aspx --webUrl https://contoso.sharepoint.com/sites/a-team --publish Create new article page with description m365 spo page add --name page.aspx --webUrl https://contoso.sharepoint.com/sites/a-team --description \"Description to add for the page\"","title":"page add"},{"location":"cmd/spo/page/page-add/#spo-page-add","text":"Creates modern page","title":"spo page add"},{"location":"cmd/spo/page/page-add/#usage","text":"m365 spo page add [ options ]","title":"Usage"},{"location":"cmd/spo/page/page-add/#options","text":"-n, --name <name> Name of the page to create -u, --webUrl <webUrl> URL of the site where the page should be created -t, --title [title] Title of the page to create. If not specified, will use the page name as its title -l, --layoutType [layoutType] Layout of the page. Allowed values Article , Home , SingleWebPartAppPage , RepostPage , HeaderlessSearchResults , Spaces , Topic . Default Article -p, --promoteAs [promoteAs] Create the page for a specific purpose. Allowed values HomePage , NewsPage --commentsEnabled Set to enable comments on the page --publish Set to publish the page --publishMessage [publishMessage] Message to set when publishing the page --description [description] The description to set for the page -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/page/page-add/#remarks","text":"If you try to create a page with a name of a page that already exists, you will get a The file exists error. If you choose to promote the page using the promoteAs option or enable page comments, you will see the result only after publishing the page.","title":"Remarks"},{"location":"cmd/spo/page/page-add/#examples","text":"Create new modern page. Use the Article layout m365 spo page add --name new-page.aspx --webUrl https://contoso.sharepoint.com/sites/a-team Create new modern page and set its title m365 spo page add --name new-page.aspx --title 'My page' --webUrl https://contoso.sharepoint.com/sites/a-team Create new modern page. Use the Home page layout and include the default set of web parts m365 spo page add --name new-page.aspx --webUrl https://contoso.sharepoint.com/sites/a-team --layoutType Home Create new article page and promote it as a news article m365 spo page add --name new-page.aspx --webUrl https://contoso.sharepoint.com/sites/a-team --promoteAs NewsPage Create new page and set it as the site's home page m365 spo page add --name new-page.aspx --webUrl https://contoso.sharepoint.com/sites/a-team --layoutType Home --promoteAs HomePage Create new article page and promote it as a template m365 spo page add --name page.aspx --webUrl https://contoso.sharepoint.com/sites/a-team --promoteAs Template Create new article page and enable comments on the page m365 spo page add --name new-page.aspx --webUrl https://contoso.sharepoint.com/sites/a-team --commentsEnabled Create new article page and publish it m365 spo page add --name new-page.aspx --webUrl https://contoso.sharepoint.com/sites/a-team --publish Create new article page with description m365 spo page add --name page.aspx --webUrl https://contoso.sharepoint.com/sites/a-team --description \"Description to add for the page\"","title":"Examples"},{"location":"cmd/spo/page/page-clientsidewebpart-add/","text":"spo page clientsidewebpart add \u00b6 Adds a client-side web part to a modern page Usage \u00b6 m365 spo page clientsidewebpart add [ options ] Options \u00b6 -u, --webUrl <webUrl> URL of the site where the page to add the web part to is located -n, --pageName <pageName> Name of the page to which add the web part --standardWebPart [standardWebPart] Name of the standard web part to add (see the possible values below) --webPartId [webPartId] ID of the custom web part to add --webPartProperties [webPartProperties] JSON string with web part properties to set on the web part. Specify webPartProperties or webPartData but not both --webPartData [webPartData] JSON string with web part data as retrieved from the web part maintenance mode. Specify webPartProperties or webPartData but not both --section [section] Number of the section to which the web part should be added (1 or higher) --column [column] Number of the column in which the web part should be added (1 or higher) --order [order] Order of the web part in the column -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 If the specified pageName doesn't refer to an existing modern page, you will get a File doesn't exists error. To add a standard web part to the page, specify one of the following values: ContentRollup, BingMap, ContentEmbed, DocumentEmbed, Image, ImageGallery, LinkPreview, NewsFeed, NewsReel, PowerBIReportEmbed, QuickChart, SiteActivity, VideoEmbed, YammerEmbed, Events, GroupCalendar, Hero, List, PageTitle, People, QuickLinks, CustomMessageRegion, Divider, MicrosoftForms, Spacer . Escaping JSON in PowerShell When using the --webPartProperties option it's possible to enter a JSON string. In PowerShell 5 to 7.2 specific escaping rules apply due to an issue. Remember that you can also use file tokens instead. Examples \u00b6 Add the standard Bing Map web part to a modern page in the first available location on the page m365 spo page clientsidewebpart add --webUrl https://contoso.sharepoint.com/sites/a-team --pageName page.aspx --standardWebPart BingMap Add the standard Bing Map web part to a modern page in the third column of the second section m365 spo page clientsidewebpart add --webUrl https://contoso.sharepoint.com/sites/a-team --pageName page.aspx --standardWebPart BingMap --section 2 --column 3 Add a custom web part to the modern page m365 spo page clientsidewebpart add --webUrl https://contoso.sharepoint.com/sites/a-team --pageName page.aspx --webPartId 3ede60d3-dc2c-438b-b5bf-cc40bb2351e1 Add the standard Bing Map web part with the specific properties to a modern page m365 spo page clientsidewebpart add --webUrl https://contoso.sharepoint.com/sites/a-team --pageName page.aspx --standardWebPart BingMap --webPartProperties '{\"Title\":\"Foo location\"}' Add the standard Image web part with the preconfigured image m365 spo page clientsidewebpart add --webUrl https://contoso.sharepoint.com/sites/a-team --pageName page.aspx --standardWebPart Image --webPartData '{ \"dataVersion\": \"1.8\", \"serverProcessedContent\": {\"htmlStrings\":{},\"searchablePlainTexts\":{\"captionText\":\"\"},\"imageSources\":{\"imageSource\":\"/sites/team-a/SiteAssets/work-life-balance.png\"},\"links\":{}}, \"properties\": {\"imageSourceType\":2,\"altText\":\"a group of people on a beach\",\"overlayText\":\"Work life balance\",\"fileName\":\"48146-OFF12_Justice_01.png\",\"siteId\":\"27664b85-067d-4be9-a7d7-89b2e804d09f\",\"webId\":\"a7664b85-067d-4be9-a7d7-89b2e804d09f\",\"listId\":\"37664b85-067d-4be9-a7d7-89b2e804d09f\",\"uniqueId\":\"67664b85-067d-4be9-a7d7-89b2e804d09f\",\"imgWidth\":650,\"imgHeight\":433,\"fixAspectRatio\":false,\"isOverlayTextEnabled\":true}}'","title":"page clientsidewebpart add"},{"location":"cmd/spo/page/page-clientsidewebpart-add/#spo-page-clientsidewebpart-add","text":"Adds a client-side web part to a modern page","title":"spo page clientsidewebpart add"},{"location":"cmd/spo/page/page-clientsidewebpart-add/#usage","text":"m365 spo page clientsidewebpart add [ options ]","title":"Usage"},{"location":"cmd/spo/page/page-clientsidewebpart-add/#options","text":"-u, --webUrl <webUrl> URL of the site where the page to add the web part to is located -n, --pageName <pageName> Name of the page to which add the web part --standardWebPart [standardWebPart] Name of the standard web part to add (see the possible values below) --webPartId [webPartId] ID of the custom web part to add --webPartProperties [webPartProperties] JSON string with web part properties to set on the web part. Specify webPartProperties or webPartData but not both --webPartData [webPartData] JSON string with web part data as retrieved from the web part maintenance mode. Specify webPartProperties or webPartData but not both --section [section] Number of the section to which the web part should be added (1 or higher) --column [column] Number of the column in which the web part should be added (1 or higher) --order [order] Order of the web part in the column -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/page/page-clientsidewebpart-add/#remarks","text":"If the specified pageName doesn't refer to an existing modern page, you will get a File doesn't exists error. To add a standard web part to the page, specify one of the following values: ContentRollup, BingMap, ContentEmbed, DocumentEmbed, Image, ImageGallery, LinkPreview, NewsFeed, NewsReel, PowerBIReportEmbed, QuickChart, SiteActivity, VideoEmbed, YammerEmbed, Events, GroupCalendar, Hero, List, PageTitle, People, QuickLinks, CustomMessageRegion, Divider, MicrosoftForms, Spacer . Escaping JSON in PowerShell When using the --webPartProperties option it's possible to enter a JSON string. In PowerShell 5 to 7.2 specific escaping rules apply due to an issue. Remember that you can also use file tokens instead.","title":"Remarks"},{"location":"cmd/spo/page/page-clientsidewebpart-add/#examples","text":"Add the standard Bing Map web part to a modern page in the first available location on the page m365 spo page clientsidewebpart add --webUrl https://contoso.sharepoint.com/sites/a-team --pageName page.aspx --standardWebPart BingMap Add the standard Bing Map web part to a modern page in the third column of the second section m365 spo page clientsidewebpart add --webUrl https://contoso.sharepoint.com/sites/a-team --pageName page.aspx --standardWebPart BingMap --section 2 --column 3 Add a custom web part to the modern page m365 spo page clientsidewebpart add --webUrl https://contoso.sharepoint.com/sites/a-team --pageName page.aspx --webPartId 3ede60d3-dc2c-438b-b5bf-cc40bb2351e1 Add the standard Bing Map web part with the specific properties to a modern page m365 spo page clientsidewebpart add --webUrl https://contoso.sharepoint.com/sites/a-team --pageName page.aspx --standardWebPart BingMap --webPartProperties '{\"Title\":\"Foo location\"}' Add the standard Image web part with the preconfigured image m365 spo page clientsidewebpart add --webUrl https://contoso.sharepoint.com/sites/a-team --pageName page.aspx --standardWebPart Image --webPartData '{ \"dataVersion\": \"1.8\", \"serverProcessedContent\": {\"htmlStrings\":{},\"searchablePlainTexts\":{\"captionText\":\"\"},\"imageSources\":{\"imageSource\":\"/sites/team-a/SiteAssets/work-life-balance.png\"},\"links\":{}}, \"properties\": {\"imageSourceType\":2,\"altText\":\"a group of people on a beach\",\"overlayText\":\"Work life balance\",\"fileName\":\"48146-OFF12_Justice_01.png\",\"siteId\":\"27664b85-067d-4be9-a7d7-89b2e804d09f\",\"webId\":\"a7664b85-067d-4be9-a7d7-89b2e804d09f\",\"listId\":\"37664b85-067d-4be9-a7d7-89b2e804d09f\",\"uniqueId\":\"67664b85-067d-4be9-a7d7-89b2e804d09f\",\"imgWidth\":650,\"imgHeight\":433,\"fixAspectRatio\":false,\"isOverlayTextEnabled\":true}}'","title":"Examples"},{"location":"cmd/spo/page/page-column-get/","text":"spo page column get \u00b6 Get information about a specific column of a modern page Usage \u00b6 m365 spo page column get [ options ] Options \u00b6 -u, --webUrl <webUrl> URL of the site where the page to retrieve is located -n, --pageName <pageName> Name of the page to get column information of -s, --section <section> ID of the section where the column is located -c, --column <column> ID of the column for which to retrieve more information -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 If the specified pageName doesn't refer to an existing modern page, you will get a File doesn't exists error. Examples \u00b6 Get information about the first column in the first section of a modern page with name home.aspx m365 spo page column get --webUrl https://contoso.sharepoint.com/sites/team-a --pageName home.aspx --section 1 --column 1","title":"page column get"},{"location":"cmd/spo/page/page-column-get/#spo-page-column-get","text":"Get information about a specific column of a modern page","title":"spo page column get"},{"location":"cmd/spo/page/page-column-get/#usage","text":"m365 spo page column get [ options ]","title":"Usage"},{"location":"cmd/spo/page/page-column-get/#options","text":"-u, --webUrl <webUrl> URL of the site where the page to retrieve is located -n, --pageName <pageName> Name of the page to get column information of -s, --section <section> ID of the section where the column is located -c, --column <column> ID of the column for which to retrieve more information -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/page/page-column-get/#remarks","text":"If the specified pageName doesn't refer to an existing modern page, you will get a File doesn't exists error.","title":"Remarks"},{"location":"cmd/spo/page/page-column-get/#examples","text":"Get information about the first column in the first section of a modern page with name home.aspx m365 spo page column get --webUrl https://contoso.sharepoint.com/sites/team-a --pageName home.aspx --section 1 --column 1","title":"Examples"},{"location":"cmd/spo/page/page-column-list/","text":"spo page column list \u00b6 Lists columns in the specific section of a modern page Usage \u00b6 m365 spo page column list [ options ] Options \u00b6 -u, --webUrl <webUrl> URL of the site where the page to retrieve is located -n, --pageName <pageName> Name of the page to list columns of -s, --section <sectionId> ID of the section for which to list columns -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 If the specified pageName doesn't refer to an existing modern page, you will get a File doesn't exists error. Examples \u00b6 List columns in the first section of a modern page with name home.aspx m365 spo page column list --webUrl https://contoso.sharepoint.com/sites/team-a --pageName home.aspx --section 1","title":"page column list"},{"location":"cmd/spo/page/page-column-list/#spo-page-column-list","text":"Lists columns in the specific section of a modern page","title":"spo page column list"},{"location":"cmd/spo/page/page-column-list/#usage","text":"m365 spo page column list [ options ]","title":"Usage"},{"location":"cmd/spo/page/page-column-list/#options","text":"-u, --webUrl <webUrl> URL of the site where the page to retrieve is located -n, --pageName <pageName> Name of the page to list columns of -s, --section <sectionId> ID of the section for which to list columns -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/page/page-column-list/#remarks","text":"If the specified pageName doesn't refer to an existing modern page, you will get a File doesn't exists error.","title":"Remarks"},{"location":"cmd/spo/page/page-column-list/#examples","text":"List columns in the first section of a modern page with name home.aspx m365 spo page column list --webUrl https://contoso.sharepoint.com/sites/team-a --pageName home.aspx --section 1","title":"Examples"},{"location":"cmd/spo/page/page-control-get/","text":"spo page control get \u00b6 Gets information about the specific control on a modern page Usage \u00b6 m365 spo page control get [ options ] Options \u00b6 -i, --id <id> ID of the control to retrieve information for -n, --pageName <pageName> Name of the page where the control is located -u, --webUrl <webUrl> URL of the site where the page to retrieve is located -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 If the specified pageName doesn't refer to an existing modern page, you will get a File doesn't exists error. Examples \u00b6 Get information about the control with ID 3ede60d3-dc2c-438b-b5bf-cc40bb2351e1 placed on a modern page with name home.aspx m365 spo page control get --id 3ede60d3-dc2c-438b-b5bf-cc40bb2351e1 --webUrl https://contoso.sharepoint.com/sites/team-a --pageName home.aspx","title":"page control get"},{"location":"cmd/spo/page/page-control-get/#spo-page-control-get","text":"Gets information about the specific control on a modern page","title":"spo page control get"},{"location":"cmd/spo/page/page-control-get/#usage","text":"m365 spo page control get [ options ]","title":"Usage"},{"location":"cmd/spo/page/page-control-get/#options","text":"-i, --id <id> ID of the control to retrieve information for -n, --pageName <pageName> Name of the page where the control is located -u, --webUrl <webUrl> URL of the site where the page to retrieve is located -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/page/page-control-get/#remarks","text":"If the specified pageName doesn't refer to an existing modern page, you will get a File doesn't exists error.","title":"Remarks"},{"location":"cmd/spo/page/page-control-get/#examples","text":"Get information about the control with ID 3ede60d3-dc2c-438b-b5bf-cc40bb2351e1 placed on a modern page with name home.aspx m365 spo page control get --id 3ede60d3-dc2c-438b-b5bf-cc40bb2351e1 --webUrl https://contoso.sharepoint.com/sites/team-a --pageName home.aspx","title":"Examples"},{"location":"cmd/spo/page/page-control-list/","text":"spo page control list \u00b6 Lists controls on the specific modern page Usage \u00b6 m365 spo page control list [ options ] Options \u00b6 -n, --pageName <pageName> Name of the page to list controls of -u, --webUrl <webUrl> URL of the site where the page to retrieve is located -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 If the specified pageName doesn't refer to an existing modern page, you will get a File doesn't exists error. Examples \u00b6 List controls on the modern page with name home.aspx m365 spo page control list --webUrl https://contoso.sharepoint.com/sites/team-a --pageName home.aspx","title":"page control list"},{"location":"cmd/spo/page/page-control-list/#spo-page-control-list","text":"Lists controls on the specific modern page","title":"spo page control list"},{"location":"cmd/spo/page/page-control-list/#usage","text":"m365 spo page control list [ options ]","title":"Usage"},{"location":"cmd/spo/page/page-control-list/#options","text":"-n, --pageName <pageName> Name of the page to list controls of -u, --webUrl <webUrl> URL of the site where the page to retrieve is located -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/page/page-control-list/#remarks","text":"If the specified pageName doesn't refer to an existing modern page, you will get a File doesn't exists error.","title":"Remarks"},{"location":"cmd/spo/page/page-control-list/#examples","text":"List controls on the modern page with name home.aspx m365 spo page control list --webUrl https://contoso.sharepoint.com/sites/team-a --pageName home.aspx","title":"Examples"},{"location":"cmd/spo/page/page-control-set/","text":"spo page control set \u00b6 Updates web part data or properties of a control on a modern page Usage \u00b6 m365 spo page control set [ options ] Options \u00b6 -i, --id <id> ID of the control to update properties of -n, --pageName <pageName> Name of the page where the control is located -u, --webUrl <webUrl> URL of the site where the page is located --webPartData [webPartData] JSON string with web part data as retrieved from the web part maintenance mode. Specify webPartProperties or webPartData but not both --webPartProperties [webPartProperties] JSON string with web part data as retrieved from the web part maintenance mode. Specify webPartProperties or webPartData but not both -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 If the specified pageName doesn't refer to an existing modern page, you will get a File doesn't exists error. Escaping JSON in PowerShell When using the --webPartProperties option it's possible to enter a JSON string. In PowerShell 5 to 7.2 specific escaping rules apply due to an issue. Remember that you can also use file tokens instead. Examples \u00b6 Update web part data for the control with ID 3ede60d3-dc2c-438b-b5bf-cc40bb2351e1 placed on a modern page with name home.aspx m365 spo page control set --id 3ede60d3-dc2c-438b-b5bf-cc40bb2351e1 --webUrl https://contoso.sharepoint.com/sites/team-a --pageName home.aspx --webPartData '{\"title\":\"New WP Title\",\"properties\": {\"description\": \"New description\"}}' Update web part properties for the control with ID 3ede60d3-dc2c-438b-b5bf-cc40bb2351e1 placed on a modern page with name home.aspx m365 spo page control set --id 3ede60d3-dc2c-438b-b5bf-cc40bb2351e1 --webUrl https://contoso.sharepoint.com/sites/team-a --pageName home.aspx --webPartProperties '{\"description\": \"New description\"}'","title":"page control set"},{"location":"cmd/spo/page/page-control-set/#spo-page-control-set","text":"Updates web part data or properties of a control on a modern page","title":"spo page control set"},{"location":"cmd/spo/page/page-control-set/#usage","text":"m365 spo page control set [ options ]","title":"Usage"},{"location":"cmd/spo/page/page-control-set/#options","text":"-i, --id <id> ID of the control to update properties of -n, --pageName <pageName> Name of the page where the control is located -u, --webUrl <webUrl> URL of the site where the page is located --webPartData [webPartData] JSON string with web part data as retrieved from the web part maintenance mode. Specify webPartProperties or webPartData but not both --webPartProperties [webPartProperties] JSON string with web part data as retrieved from the web part maintenance mode. Specify webPartProperties or webPartData but not both -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/page/page-control-set/#remarks","text":"If the specified pageName doesn't refer to an existing modern page, you will get a File doesn't exists error. Escaping JSON in PowerShell When using the --webPartProperties option it's possible to enter a JSON string. In PowerShell 5 to 7.2 specific escaping rules apply due to an issue. Remember that you can also use file tokens instead.","title":"Remarks"},{"location":"cmd/spo/page/page-control-set/#examples","text":"Update web part data for the control with ID 3ede60d3-dc2c-438b-b5bf-cc40bb2351e1 placed on a modern page with name home.aspx m365 spo page control set --id 3ede60d3-dc2c-438b-b5bf-cc40bb2351e1 --webUrl https://contoso.sharepoint.com/sites/team-a --pageName home.aspx --webPartData '{\"title\":\"New WP Title\",\"properties\": {\"description\": \"New description\"}}' Update web part properties for the control with ID 3ede60d3-dc2c-438b-b5bf-cc40bb2351e1 placed on a modern page with name home.aspx m365 spo page control set --id 3ede60d3-dc2c-438b-b5bf-cc40bb2351e1 --webUrl https://contoso.sharepoint.com/sites/team-a --pageName home.aspx --webPartProperties '{\"description\": \"New description\"}'","title":"Examples"},{"location":"cmd/spo/page/page-copy/","text":"spo page copy \u00b6 Creates a copy of a modern page or template Usage \u00b6 m365 spo page copy [ options ] Options \u00b6 --sourceName <sourceName> The name of the source file --targetUrl <targetUrl> The URL of the target file. You can specify page's name or relative- or absolute URL --overwrite Overwrite the target page when it already exists -u, --webUrl <webUrl> URL of the site where the page to retrieve is located -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 If another page exists at the specified target location, copying the page will fail, unless you include the --overwrite option. Examples \u00b6 Create a copy of the home.aspx page m365 spo page copy --webUrl https://contoso.sharepoint.com/sites/team-a --sourceName \"home.aspx\" --targetUrl \"home-copy.aspx\" Overwrite the target page if it already exists m365 spo page copy --webUrl https://contoso.sharepoint.com/sites/team-a --sourceName \"home.aspx\" --targetUrl \"home-copy.aspx\" --overwrite Create a copy of a page template m365 spo page copy --webUrl https://contoso.sharepoint.com/sites/team-a --sourceName \"templates/PageTemplate.aspx\" --targetUrl \"page.aspx\" Copy the page to another site m365 spo page copy --webUrl https://contoso.sharepoint.com/sites/team-a --sourceName \"templates/PageTemplate.aspx\" --targetUrl \"https://contoso.sharepoint.com/sites/team-b/sitepages/page.aspx\"","title":"page copy"},{"location":"cmd/spo/page/page-copy/#spo-page-copy","text":"Creates a copy of a modern page or template","title":"spo page copy"},{"location":"cmd/spo/page/page-copy/#usage","text":"m365 spo page copy [ options ]","title":"Usage"},{"location":"cmd/spo/page/page-copy/#options","text":"--sourceName <sourceName> The name of the source file --targetUrl <targetUrl> The URL of the target file. You can specify page's name or relative- or absolute URL --overwrite Overwrite the target page when it already exists -u, --webUrl <webUrl> URL of the site where the page to retrieve is located -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/page/page-copy/#remarks","text":"If another page exists at the specified target location, copying the page will fail, unless you include the --overwrite option.","title":"Remarks"},{"location":"cmd/spo/page/page-copy/#examples","text":"Create a copy of the home.aspx page m365 spo page copy --webUrl https://contoso.sharepoint.com/sites/team-a --sourceName \"home.aspx\" --targetUrl \"home-copy.aspx\" Overwrite the target page if it already exists m365 spo page copy --webUrl https://contoso.sharepoint.com/sites/team-a --sourceName \"home.aspx\" --targetUrl \"home-copy.aspx\" --overwrite Create a copy of a page template m365 spo page copy --webUrl https://contoso.sharepoint.com/sites/team-a --sourceName \"templates/PageTemplate.aspx\" --targetUrl \"page.aspx\" Copy the page to another site m365 spo page copy --webUrl https://contoso.sharepoint.com/sites/team-a --sourceName \"templates/PageTemplate.aspx\" --targetUrl \"https://contoso.sharepoint.com/sites/team-b/sitepages/page.aspx\"","title":"Examples"},{"location":"cmd/spo/page/page-get/","text":"spo page get \u00b6 Gets information about the specific modern page Usage \u00b6 m365 spo page get [ options ] Options \u00b6 -n, --name <name> Name of the page to retrieve -u, --webUrl <webUrl> URL of the site where the page to retrieve is located --metadataOnly Specify to only retrieve the metadata without the section and control information -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 If the specified name doesn't refer to an existing modern page, you will get a File doesn't exists error. Examples \u00b6 Get information about the modern page with name home.aspx m365 spo page get --webUrl https://contoso.sharepoint.com/sites/team-a --name home.aspx Get all the metadata from the modern page, without the section and control count information m365 spo page get --webUrl https://contoso.sharepoint.com/sites/team-a --name home.aspx --metadataOnly","title":"page get"},{"location":"cmd/spo/page/page-get/#spo-page-get","text":"Gets information about the specific modern page","title":"spo page get"},{"location":"cmd/spo/page/page-get/#usage","text":"m365 spo page get [ options ]","title":"Usage"},{"location":"cmd/spo/page/page-get/#options","text":"-n, --name <name> Name of the page to retrieve -u, --webUrl <webUrl> URL of the site where the page to retrieve is located --metadataOnly Specify to only retrieve the metadata without the section and control information -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/page/page-get/#remarks","text":"If the specified name doesn't refer to an existing modern page, you will get a File doesn't exists error.","title":"Remarks"},{"location":"cmd/spo/page/page-get/#examples","text":"Get information about the modern page with name home.aspx m365 spo page get --webUrl https://contoso.sharepoint.com/sites/team-a --name home.aspx Get all the metadata from the modern page, without the section and control count information m365 spo page get --webUrl https://contoso.sharepoint.com/sites/team-a --name home.aspx --metadataOnly","title":"Examples"},{"location":"cmd/spo/page/page-header-set/","text":"spo page header set \u00b6 Sets modern page header Usage \u00b6 m365 spo page header set [ options ] Options \u00b6 -n, --pageName <pageName> Name of the page to set the header for -u, --webUrl <webUrl> URL of the site where the page to update is located -t, --type [type] Type of header, allowed values None,Default,Custom . Default Default --imageUrl [imageUrl] Server-relative URL of the image to use in the header. Image must be stored in the same site collection as the page --altText [altText] Header image alt text -x, --translateX [translateX] X focal point of the header image -y, --translateY [translateY] Y focal point of the header image --layout [layout] Layout to use in the header. Allowed values FullWidthImage,NoImage,ColorBlock,CutInShape . Default FullWidthImage --textAlignment [textAlignment] How to align text in the header. Allowed values Center,Left . Default Left --showTopicHeader Set, to show the topic header --showPublishDate Set, to show the publishing date --topicHeader [topicHeader] Text to show in the topic header, when showTopicHeader is set --authors [authors] Comma-separated list of page authors to show in the header -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 If the specified name doesn't refer to an existing modern page, you will get a File doesn't exists error. Examples \u00b6 Reset the page header to default m365 spo page header set --webUrl https://contoso.sharepoint.com/sites/team-a --pageName home.aspx Reset the page header to default and set authors m365 spo page header set --webUrl https://contoso.sharepoint.com/sites/team-a --pageName home.aspx --authors \"steve@contoso.com, bob@contoso.com\" Use the specified image focused on the given coordinates in the page header m365 spo page header set --webUrl https://contoso.sharepoint.com/sites/team-a --pageName home.aspx --type Custom --imageUrl /sites/team-a/SiteAssets/hero.jpg --altText 'Sunset over the ocean' --translateX 42 .3837520042758 --translateY 56 .4285714285714 Center the page title in the header and show the publishing date m365 spo page header set --webUrl https://contoso.sharepoint.com/sites/team-a --pageName home.aspx --textAlignment Center --showPublishDate","title":"page header set"},{"location":"cmd/spo/page/page-header-set/#spo-page-header-set","text":"Sets modern page header","title":"spo page header set"},{"location":"cmd/spo/page/page-header-set/#usage","text":"m365 spo page header set [ options ]","title":"Usage"},{"location":"cmd/spo/page/page-header-set/#options","text":"-n, --pageName <pageName> Name of the page to set the header for -u, --webUrl <webUrl> URL of the site where the page to update is located -t, --type [type] Type of header, allowed values None,Default,Custom . Default Default --imageUrl [imageUrl] Server-relative URL of the image to use in the header. Image must be stored in the same site collection as the page --altText [altText] Header image alt text -x, --translateX [translateX] X focal point of the header image -y, --translateY [translateY] Y focal point of the header image --layout [layout] Layout to use in the header. Allowed values FullWidthImage,NoImage,ColorBlock,CutInShape . Default FullWidthImage --textAlignment [textAlignment] How to align text in the header. Allowed values Center,Left . Default Left --showTopicHeader Set, to show the topic header --showPublishDate Set, to show the publishing date --topicHeader [topicHeader] Text to show in the topic header, when showTopicHeader is set --authors [authors] Comma-separated list of page authors to show in the header -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/page/page-header-set/#remarks","text":"If the specified name doesn't refer to an existing modern page, you will get a File doesn't exists error.","title":"Remarks"},{"location":"cmd/spo/page/page-header-set/#examples","text":"Reset the page header to default m365 spo page header set --webUrl https://contoso.sharepoint.com/sites/team-a --pageName home.aspx Reset the page header to default and set authors m365 spo page header set --webUrl https://contoso.sharepoint.com/sites/team-a --pageName home.aspx --authors \"steve@contoso.com, bob@contoso.com\" Use the specified image focused on the given coordinates in the page header m365 spo page header set --webUrl https://contoso.sharepoint.com/sites/team-a --pageName home.aspx --type Custom --imageUrl /sites/team-a/SiteAssets/hero.jpg --altText 'Sunset over the ocean' --translateX 42 .3837520042758 --translateY 56 .4285714285714 Center the page title in the header and show the publishing date m365 spo page header set --webUrl https://contoso.sharepoint.com/sites/team-a --pageName home.aspx --textAlignment Center --showPublishDate","title":"Examples"},{"location":"cmd/spo/page/page-list/","text":"spo page list \u00b6 Lists all modern pages in the given site Usage \u00b6 m365 spo page list [ options ] Options \u00b6 -u, --webUrl <webUrl> URL of the site from which to retrieve available pages -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 List all modern pages in the specific site m365 spo page list --webUrl https://contoso.sharepoint.com/sites/team-a","title":"page list"},{"location":"cmd/spo/page/page-list/#spo-page-list","text":"Lists all modern pages in the given site","title":"spo page list"},{"location":"cmd/spo/page/page-list/#usage","text":"m365 spo page list [ options ]","title":"Usage"},{"location":"cmd/spo/page/page-list/#options","text":"-u, --webUrl <webUrl> URL of the site from which to retrieve available pages -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/page/page-list/#examples","text":"List all modern pages in the specific site m365 spo page list --webUrl https://contoso.sharepoint.com/sites/team-a","title":"Examples"},{"location":"cmd/spo/page/page-remove/","text":"spo page remove \u00b6 Removes a modern page Usage \u00b6 m365 spo page remove [ options ] Options \u00b6 -n, --name <name> Name of the page to remove -u, --webUrl <webUrl> URL of the site from which the page should be removed --confirm Do not prompt for confirmation before removing the page -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 If you try to remove a page with that does not exist, you will get a The file does not exist error. If you set the --confirm flag, you will not be prompted for confirmation before the page is actually removed. Examples \u00b6 Remove a modern page. m365 spo page remove --name page.aspx --webUrl https://contoso.sharepoint.com/sites/a-team Remove a modern page without a confirmation prompt. m365 spo page remove --name page.aspx --webUrl https://contoso.sharepoint.com/sites/a-team --confirm","title":"page remove"},{"location":"cmd/spo/page/page-remove/#spo-page-remove","text":"Removes a modern page","title":"spo page remove"},{"location":"cmd/spo/page/page-remove/#usage","text":"m365 spo page remove [ options ]","title":"Usage"},{"location":"cmd/spo/page/page-remove/#options","text":"-n, --name <name> Name of the page to remove -u, --webUrl <webUrl> URL of the site from which the page should be removed --confirm Do not prompt for confirmation before removing the page -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/page/page-remove/#remarks","text":"If you try to remove a page with that does not exist, you will get a The file does not exist error. If you set the --confirm flag, you will not be prompted for confirmation before the page is actually removed.","title":"Remarks"},{"location":"cmd/spo/page/page-remove/#examples","text":"Remove a modern page. m365 spo page remove --name page.aspx --webUrl https://contoso.sharepoint.com/sites/a-team Remove a modern page without a confirmation prompt. m365 spo page remove --name page.aspx --webUrl https://contoso.sharepoint.com/sites/a-team --confirm","title":"Examples"},{"location":"cmd/spo/page/page-section-add/","text":"spo page section add \u00b6 Adds section to modern page Usage \u00b6 m365 spo page section add [ options ] Options \u00b6 -n, --pageName <pageName> Name of the page to add section to -u, --webUrl <webUrl> URL of the site where the page to retrieve is located -t, --sectionTemplate <sectionTemplate> Type of section to add. Allowed values OneColumn,OneColumnFullWidth,TwoColumn,ThreeColumn,TwoColumnLeft,TwoColumnRight --order [order] Order of the section to add -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 If the specified pageName doesn't refer to an existing modern page, you will get a File doesn't exists error. Examples \u00b6 Add section to the modern page named home.aspx m365 spo page section add --pageName home.aspx --webUrl https://contoso.sharepoint.com/sites/newsletter --sectionTemplate OneColumn --order 1","title":"page section add"},{"location":"cmd/spo/page/page-section-add/#spo-page-section-add","text":"Adds section to modern page","title":"spo page section add"},{"location":"cmd/spo/page/page-section-add/#usage","text":"m365 spo page section add [ options ]","title":"Usage"},{"location":"cmd/spo/page/page-section-add/#options","text":"-n, --pageName <pageName> Name of the page to add section to -u, --webUrl <webUrl> URL of the site where the page to retrieve is located -t, --sectionTemplate <sectionTemplate> Type of section to add. Allowed values OneColumn,OneColumnFullWidth,TwoColumn,ThreeColumn,TwoColumnLeft,TwoColumnRight --order [order] Order of the section to add -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/page/page-section-add/#remarks","text":"If the specified pageName doesn't refer to an existing modern page, you will get a File doesn't exists error.","title":"Remarks"},{"location":"cmd/spo/page/page-section-add/#examples","text":"Add section to the modern page named home.aspx m365 spo page section add --pageName home.aspx --webUrl https://contoso.sharepoint.com/sites/newsletter --sectionTemplate OneColumn --order 1","title":"Examples"},{"location":"cmd/spo/page/page-section-get/","text":"spo page section get \u00b6 Get information about the specified modern page section Usage \u00b6 m365 spo page section get [ options ] Options \u00b6 -u, --webUrl <webUrl> URL of the site where the page to retrieve is located -n, --pageName <pageName> Name of the page to get section information of -s, --section <sectionId> ID of the section for which to retrieve information -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 If the specified pageName doesn't refer to an existing modern page, you will get a File doesn't exists error. Examples \u00b6 Get information about the specified section of the modern page named home.aspx m365 spo page section get --webUrl https://contoso.sharepoint.com/sites/team-a --pageName home.aspx --section 1","title":"page section get"},{"location":"cmd/spo/page/page-section-get/#spo-page-section-get","text":"Get information about the specified modern page section","title":"spo page section get"},{"location":"cmd/spo/page/page-section-get/#usage","text":"m365 spo page section get [ options ]","title":"Usage"},{"location":"cmd/spo/page/page-section-get/#options","text":"-u, --webUrl <webUrl> URL of the site where the page to retrieve is located -n, --pageName <pageName> Name of the page to get section information of -s, --section <sectionId> ID of the section for which to retrieve information -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/page/page-section-get/#remarks","text":"If the specified pageName doesn't refer to an existing modern page, you will get a File doesn't exists error.","title":"Remarks"},{"location":"cmd/spo/page/page-section-get/#examples","text":"Get information about the specified section of the modern page named home.aspx m365 spo page section get --webUrl https://contoso.sharepoint.com/sites/team-a --pageName home.aspx --section 1","title":"Examples"},{"location":"cmd/spo/page/page-section-list/","text":"spo page section list \u00b6 List sections in the specific modern page Usage \u00b6 m365 spo page section list [ options ] Options \u00b6 -u, --webUrl <webUrl> URL of the site where the page to retrieve is located -n, --pageName <pageName> Name of the page to list sections of -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 If the specified pageName doesn't refer to an existing modern page, you will get a File doesn't exists error. Examples \u00b6 List sections of a modern page named home.aspx m365 spo page section list --webUrl https://contoso.sharepoint.com/sites/team-a --pageName home.aspx","title":"page section list"},{"location":"cmd/spo/page/page-section-list/#spo-page-section-list","text":"List sections in the specific modern page","title":"spo page section list"},{"location":"cmd/spo/page/page-section-list/#usage","text":"m365 spo page section list [ options ]","title":"Usage"},{"location":"cmd/spo/page/page-section-list/#options","text":"-u, --webUrl <webUrl> URL of the site where the page to retrieve is located -n, --pageName <pageName> Name of the page to list sections of -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/page/page-section-list/#remarks","text":"If the specified pageName doesn't refer to an existing modern page, you will get a File doesn't exists error.","title":"Remarks"},{"location":"cmd/spo/page/page-section-list/#examples","text":"List sections of a modern page named home.aspx m365 spo page section list --webUrl https://contoso.sharepoint.com/sites/team-a --pageName home.aspx","title":"Examples"},{"location":"cmd/spo/page/page-set/","text":"spo page set \u00b6 Updates modern page properties Usage \u00b6 m365 spo page set [ options ] Options \u00b6 -n, --name <name> Name of the page to update -u, --webUrl <webUrl> URL of the site where the page to update is located -l, --layoutType [layoutType] Layout of the page. Allowed values Article , Home , SingleWebPartAppPage , RepostPage , HeaderlessSearchResults , Spaces , Topic -p, --promoteAs [promoteAs] Update the page purpose. Allowed values HomePage , NewsPage --commentsEnabled [commentsEnabled] Set to true , to enable comments on the page. Allowed values true , false --publish Set to publish the page --publishMessage [publishMessage] Message to set when publishing the page --description [description] The description to set for the page --title [title] The title to set for the page -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 If you try to create a page with a name of a page that already exists, you will get a The file doesn't exists error. If you choose to promote the page using the promoteAs option or enable page comments, you will see the result only after publishing the page. Examples \u00b6 Change the layout of the existing page to Article m365 spo page set --name page.aspx --webUrl https://contoso.sharepoint.com/sites/a-team --layoutType Article Promote the existing article page as a news article m365 spo page set --name page.aspx --webUrl https://contoso.sharepoint.com/sites/a-team --promoteAs NewsPage Promote the existing article page as a template m365 spo page set --name page.aspx --webUrl https://contoso.sharepoint.com/sites/a-team --promoteAs Template Change the page's layout to Home and set it as the site's home page m365 spo page set --name page.aspx --webUrl https://contoso.sharepoint.com/sites/a-team --layoutType Home --promoteAs HomePage Enable comments on the existing page m365 spo page set --name page.aspx --webUrl https://contoso.sharepoint.com/sites/a-team --commentsEnabled true Publish existing page m365 spo page set --name page.aspx --webUrl https://contoso.sharepoint.com/sites/a-team --publish Set page description m365 spo page set --name page.aspx --webUrl https://contoso.sharepoint.com/sites/a-team --description \"Description to add for the page\"","title":"page set"},{"location":"cmd/spo/page/page-set/#spo-page-set","text":"Updates modern page properties","title":"spo page set"},{"location":"cmd/spo/page/page-set/#usage","text":"m365 spo page set [ options ]","title":"Usage"},{"location":"cmd/spo/page/page-set/#options","text":"-n, --name <name> Name of the page to update -u, --webUrl <webUrl> URL of the site where the page to update is located -l, --layoutType [layoutType] Layout of the page. Allowed values Article , Home , SingleWebPartAppPage , RepostPage , HeaderlessSearchResults , Spaces , Topic -p, --promoteAs [promoteAs] Update the page purpose. Allowed values HomePage , NewsPage --commentsEnabled [commentsEnabled] Set to true , to enable comments on the page. Allowed values true , false --publish Set to publish the page --publishMessage [publishMessage] Message to set when publishing the page --description [description] The description to set for the page --title [title] The title to set for the page -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/page/page-set/#remarks","text":"If you try to create a page with a name of a page that already exists, you will get a The file doesn't exists error. If you choose to promote the page using the promoteAs option or enable page comments, you will see the result only after publishing the page.","title":"Remarks"},{"location":"cmd/spo/page/page-set/#examples","text":"Change the layout of the existing page to Article m365 spo page set --name page.aspx --webUrl https://contoso.sharepoint.com/sites/a-team --layoutType Article Promote the existing article page as a news article m365 spo page set --name page.aspx --webUrl https://contoso.sharepoint.com/sites/a-team --promoteAs NewsPage Promote the existing article page as a template m365 spo page set --name page.aspx --webUrl https://contoso.sharepoint.com/sites/a-team --promoteAs Template Change the page's layout to Home and set it as the site's home page m365 spo page set --name page.aspx --webUrl https://contoso.sharepoint.com/sites/a-team --layoutType Home --promoteAs HomePage Enable comments on the existing page m365 spo page set --name page.aspx --webUrl https://contoso.sharepoint.com/sites/a-team --commentsEnabled true Publish existing page m365 spo page set --name page.aspx --webUrl https://contoso.sharepoint.com/sites/a-team --publish Set page description m365 spo page set --name page.aspx --webUrl https://contoso.sharepoint.com/sites/a-team --description \"Description to add for the page\"","title":"Examples"},{"location":"cmd/spo/page/page-template-list/","text":"spo page template list \u00b6 Lists all page templates in the given site Usage \u00b6 m365 spo page template list [ options ] Options \u00b6 -u, --webUrl <webUrl> URL of the site from which to retrieve available pages -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Lists all page templates in the given site m365 spo page template list --webUrl https://contoso.sharepoint.com/sites/team-a","title":"page template list"},{"location":"cmd/spo/page/page-template-list/#spo-page-template-list","text":"Lists all page templates in the given site","title":"spo page template list"},{"location":"cmd/spo/page/page-template-list/#usage","text":"m365 spo page template list [ options ]","title":"Usage"},{"location":"cmd/spo/page/page-template-list/#options","text":"-u, --webUrl <webUrl> URL of the site from which to retrieve available pages -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/page/page-template-list/#examples","text":"Lists all page templates in the given site m365 spo page template list --webUrl https://contoso.sharepoint.com/sites/team-a","title":"Examples"},{"location":"cmd/spo/page/page-text-add/","text":"spo page text add \u00b6 Adds text to a modern page Usage \u00b6 m365 spo page text add [ options ] Options \u00b6 -u, --webUrl <webUrl> URL of the site where the page to add the text to is located -n, --pageName <pageName> Name of the page to which add the text -t, --text <text> Text to add to the page --section [section] Number of the section to which the text should be added (1 or higher) --column [column] Number of the column in which the text should be added (1 or higher) --order [order] Order of the text in the column -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 If the specified pageName doesn't refer to an existing modern page, you will get a File doesn't exists error. Examples \u00b6 Add text to a modern page in the first available location on the page m365 spo page text add --webUrl https://contoso.sharepoint.com/sites/a-team --pageName page.aspx --text 'Hello world' Add text to a modern page in the third column of the second section m365 spo page text add --webUrl https://contoso.sharepoint.com/sites/a-team --pageName page.aspx --text 'Hello world' --section 2 --column 3 Add text at the beginning of the default column on a modern page m365 spo page text add --webUrl https://contoso.sharepoint.com/sites/a-team --pageName page.aspx --text 'Hello world' --order 1","title":"page text add"},{"location":"cmd/spo/page/page-text-add/#spo-page-text-add","text":"Adds text to a modern page","title":"spo page text add"},{"location":"cmd/spo/page/page-text-add/#usage","text":"m365 spo page text add [ options ]","title":"Usage"},{"location":"cmd/spo/page/page-text-add/#options","text":"-u, --webUrl <webUrl> URL of the site where the page to add the text to is located -n, --pageName <pageName> Name of the page to which add the text -t, --text <text> Text to add to the page --section [section] Number of the section to which the text should be added (1 or higher) --column [column] Number of the column in which the text should be added (1 or higher) --order [order] Order of the text in the column -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/page/page-text-add/#remarks","text":"If the specified pageName doesn't refer to an existing modern page, you will get a File doesn't exists error.","title":"Remarks"},{"location":"cmd/spo/page/page-text-add/#examples","text":"Add text to a modern page in the first available location on the page m365 spo page text add --webUrl https://contoso.sharepoint.com/sites/a-team --pageName page.aspx --text 'Hello world' Add text to a modern page in the third column of the second section m365 spo page text add --webUrl https://contoso.sharepoint.com/sites/a-team --pageName page.aspx --text 'Hello world' --section 2 --column 3 Add text at the beginning of the default column on a modern page m365 spo page text add --webUrl https://contoso.sharepoint.com/sites/a-team --pageName page.aspx --text 'Hello world' --order 1","title":"Examples"},{"location":"cmd/spo/propertybag/propertybag-get/","text":"spo propertybag get \u00b6 Gets the value of the specified property from the property bag Usage \u00b6 m365 spo propertybag get [ options ] Options \u00b6 -u, --webUrl <webUrl> The URL of the site from which the property bag value should be retrieved -k, --key <key> Key of the property for which the value should be retrieved. Case-sensitive -f, --folder [folder] Site-relative URL of the folder from which to retrieve property bag value. Case-sensitive -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Returns the value of the key1 property from the property bag located in site https://contoso.sharepoint.com/sites/test m365 spo propertybag get --webUrl https://contoso.sharepoint.com/sites/test --key key1 Returns the value of the key1 property from the property bag located in site root folder https://contoso.sharepoint.com/sites/test m365 spo propertybag get --webUrl https://contoso.sharepoint.com/sites/test --key key1 --folder / Returns the value of the key1 property from the property bag located in site document library https://contoso.sharepoint.com/sites/test m365 spo propertybag get --webUrl https://contoso.sharepoint.com/sites/test --key key1 --folder '/Shared Documents' Returns the value of the key1 property from the property bag located in folder in site document library https://contoso.sharepoint.com/sites/test m365 spo propertybag get --webUrl https://contoso.sharepoint.com/sites/test --key key1 --folder '/Shared Documents/MyFolder' Returns the value of the key1 property from the property bag located in site list https://contoso.sharepoint.com/sites/test m365 spo propertybag get --webUrl https://contoso.sharepoint.com/sites/test --key key1 --folder /Lists/MyList","title":"propertybag get"},{"location":"cmd/spo/propertybag/propertybag-get/#spo-propertybag-get","text":"Gets the value of the specified property from the property bag","title":"spo propertybag get"},{"location":"cmd/spo/propertybag/propertybag-get/#usage","text":"m365 spo propertybag get [ options ]","title":"Usage"},{"location":"cmd/spo/propertybag/propertybag-get/#options","text":"-u, --webUrl <webUrl> The URL of the site from which the property bag value should be retrieved -k, --key <key> Key of the property for which the value should be retrieved. Case-sensitive -f, --folder [folder] Site-relative URL of the folder from which to retrieve property bag value. Case-sensitive -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/propertybag/propertybag-get/#examples","text":"Returns the value of the key1 property from the property bag located in site https://contoso.sharepoint.com/sites/test m365 spo propertybag get --webUrl https://contoso.sharepoint.com/sites/test --key key1 Returns the value of the key1 property from the property bag located in site root folder https://contoso.sharepoint.com/sites/test m365 spo propertybag get --webUrl https://contoso.sharepoint.com/sites/test --key key1 --folder / Returns the value of the key1 property from the property bag located in site document library https://contoso.sharepoint.com/sites/test m365 spo propertybag get --webUrl https://contoso.sharepoint.com/sites/test --key key1 --folder '/Shared Documents' Returns the value of the key1 property from the property bag located in folder in site document library https://contoso.sharepoint.com/sites/test m365 spo propertybag get --webUrl https://contoso.sharepoint.com/sites/test --key key1 --folder '/Shared Documents/MyFolder' Returns the value of the key1 property from the property bag located in site list https://contoso.sharepoint.com/sites/test m365 spo propertybag get --webUrl https://contoso.sharepoint.com/sites/test --key key1 --folder /Lists/MyList","title":"Examples"},{"location":"cmd/spo/propertybag/propertybag-list/","text":"spo propertybag list \u00b6 Gets property bag values Usage \u00b6 m365 spo propertybag list [ options ] Options \u00b6 -u, --webUrl <webUrl> The URL of the site from which the property bag value should be retrieved -f, --folder [folder] Site-relative URL of the folder from which to retrieve property bag value. Case-sensitive -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Return property bag values located in site https://contoso.sharepoint.com/sites/test m365 spo propertybag list --webUrl https://contoso.sharepoint.com/sites/test Return property bag values located in site root folder https://contoso.sharepoint.com/sites/test m365 spo propertybag list --webUrl https://contoso.sharepoint.com/sites/test --folder / Return property bag values located in site document library https://contoso.sharepoint.com/sites/test m365 spo propertybag list --webUrl https://contoso.sharepoint.com/sites/test --folder '/Shared Documents' Return property bag values located in folder in site document library https://contoso.sharepoint.com/sites/test m365 spo propertybag list --webUrl https://contoso.sharepoint.com/sites/test --folder '/Shared Documents/MyFolder' Return property bag values located in site list https://contoso.sharepoint.com/sites/test m365 spo propertybag list --webUrl https://contoso.sharepoint.com/sites/test --folder /Lists/MyList","title":"propertybag list"},{"location":"cmd/spo/propertybag/propertybag-list/#spo-propertybag-list","text":"Gets property bag values","title":"spo propertybag list"},{"location":"cmd/spo/propertybag/propertybag-list/#usage","text":"m365 spo propertybag list [ options ]","title":"Usage"},{"location":"cmd/spo/propertybag/propertybag-list/#options","text":"-u, --webUrl <webUrl> The URL of the site from which the property bag value should be retrieved -f, --folder [folder] Site-relative URL of the folder from which to retrieve property bag value. Case-sensitive -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/propertybag/propertybag-list/#examples","text":"Return property bag values located in site https://contoso.sharepoint.com/sites/test m365 spo propertybag list --webUrl https://contoso.sharepoint.com/sites/test Return property bag values located in site root folder https://contoso.sharepoint.com/sites/test m365 spo propertybag list --webUrl https://contoso.sharepoint.com/sites/test --folder / Return property bag values located in site document library https://contoso.sharepoint.com/sites/test m365 spo propertybag list --webUrl https://contoso.sharepoint.com/sites/test --folder '/Shared Documents' Return property bag values located in folder in site document library https://contoso.sharepoint.com/sites/test m365 spo propertybag list --webUrl https://contoso.sharepoint.com/sites/test --folder '/Shared Documents/MyFolder' Return property bag values located in site list https://contoso.sharepoint.com/sites/test m365 spo propertybag list --webUrl https://contoso.sharepoint.com/sites/test --folder /Lists/MyList","title":"Examples"},{"location":"cmd/spo/propertybag/propertybag-remove/","text":"spo propertybag remove \u00b6 Removes specified property from the property bag Usage \u00b6 m365 spo propertybag remove [ options ] Options \u00b6 -u, --webUrl <webUrl> The URL of the site from which the property should be removed -k, --key <key> Key of the property to be removed. Case-sensitive -f, --folder [folder] Site-relative URL of the folder from which to remove the property bag value --confirm Don't prompt for confirming removal of property bag value -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Removes the value of the key1 property from the property bag located in site https://contoso.sharepoint.com/sites/test m365 spo propertybag remove --webUrl https://contoso.sharepoint.com/sites/test --key key1 Removes the value of the key1 property from the property bag located in site root folder https://contoso.sharepoint.com/sites/test m365 spo propertybag remove --webUrl https://contoso.sharepoint.com/sites/test --key key1 --folder / --confirm Removes the value of the key1 property from the property bag located in site document library https://contoso.sharepoint.com/sites/test m365 spo propertybag remove --webUrl https://contoso.sharepoint.com/sites/test --key key1 --folder '/Shared Documents' Removes the value of the key1 property from the property bag located in folder in site document library https://contoso.sharepoint.com/sites/test m365 spo propertybag remove --webUrl https://contoso.sharepoint.com/sites/test --key key1 --folder '/Shared Documents/MyFolder' Removes the value of the key1 property from the property bag located in site list https://contoso.sharepoint.com/sites/test m365 spo propertybag remove --webUrl https://contoso.sharepoint.com/sites/test --key key1 --folder /Lists/MyList","title":"propertybag remove"},{"location":"cmd/spo/propertybag/propertybag-remove/#spo-propertybag-remove","text":"Removes specified property from the property bag","title":"spo propertybag remove"},{"location":"cmd/spo/propertybag/propertybag-remove/#usage","text":"m365 spo propertybag remove [ options ]","title":"Usage"},{"location":"cmd/spo/propertybag/propertybag-remove/#options","text":"-u, --webUrl <webUrl> The URL of the site from which the property should be removed -k, --key <key> Key of the property to be removed. Case-sensitive -f, --folder [folder] Site-relative URL of the folder from which to remove the property bag value --confirm Don't prompt for confirming removal of property bag value -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/propertybag/propertybag-remove/#examples","text":"Removes the value of the key1 property from the property bag located in site https://contoso.sharepoint.com/sites/test m365 spo propertybag remove --webUrl https://contoso.sharepoint.com/sites/test --key key1 Removes the value of the key1 property from the property bag located in site root folder https://contoso.sharepoint.com/sites/test m365 spo propertybag remove --webUrl https://contoso.sharepoint.com/sites/test --key key1 --folder / --confirm Removes the value of the key1 property from the property bag located in site document library https://contoso.sharepoint.com/sites/test m365 spo propertybag remove --webUrl https://contoso.sharepoint.com/sites/test --key key1 --folder '/Shared Documents' Removes the value of the key1 property from the property bag located in folder in site document library https://contoso.sharepoint.com/sites/test m365 spo propertybag remove --webUrl https://contoso.sharepoint.com/sites/test --key key1 --folder '/Shared Documents/MyFolder' Removes the value of the key1 property from the property bag located in site list https://contoso.sharepoint.com/sites/test m365 spo propertybag remove --webUrl https://contoso.sharepoint.com/sites/test --key key1 --folder /Lists/MyList","title":"Examples"},{"location":"cmd/spo/propertybag/propertybag-set/","text":"spo propertybag set \u00b6 Sets the value of the specified property in the property bag. Adds the property if it does not exist Usage \u00b6 m365 spo propertybag set [ options ] Options \u00b6 -u, --webUrl <webUrl> The URL of the site in which the property should be set -k, --key <key> Key of the property to be set. Case-sensitive -v, --value <value> Value of the property to be set -f, --folder [folder] Site-relative URL of the folder on which the property should be set -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Sets the value of the key1 property in the property bag of site https://contoso.sharepoint.com/sites/test m365 spo propertybag set --webUrl https://contoso.sharepoint.com/sites/test --key key1 --value value1 Sets the value of the key1 property in the property bag of the root folder of site https://contoso.sharepoint.com/sites/test m365 spo propertybag set --webUrl https://contoso.sharepoint.com/sites/test --key key1 --value value1 --folder / Sets the value of the key1 property in the property bag of a document library located in site https://contoso.sharepoint.com/sites/test m365 spo propertybag set --webUrl https://contoso.sharepoint.com/sites/test --key key1 --value value1 --folder '/Shared Documents' Sets the value of the key1 property in the property bag of a folder in a document library located in site https://contoso.sharepoint.com/sites/test m365 spo propertybag set --webUrl https://contoso.sharepoint.com/sites/test --key key1 --value value1 --folder '/Shared Documents/MyFolder' Sets the value of the key1 property in the property bag of a list in site https://contoso.sharepoint.com/sites/test m365 spo propertybag set --webUrl https://contoso.sharepoint.com/sites/test --key key1 --value value1 --folder /Lists/MyList","title":"propertybag set"},{"location":"cmd/spo/propertybag/propertybag-set/#spo-propertybag-set","text":"Sets the value of the specified property in the property bag. Adds the property if it does not exist","title":"spo propertybag set"},{"location":"cmd/spo/propertybag/propertybag-set/#usage","text":"m365 spo propertybag set [ options ]","title":"Usage"},{"location":"cmd/spo/propertybag/propertybag-set/#options","text":"-u, --webUrl <webUrl> The URL of the site in which the property should be set -k, --key <key> Key of the property to be set. Case-sensitive -v, --value <value> Value of the property to be set -f, --folder [folder] Site-relative URL of the folder on which the property should be set -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/propertybag/propertybag-set/#examples","text":"Sets the value of the key1 property in the property bag of site https://contoso.sharepoint.com/sites/test m365 spo propertybag set --webUrl https://contoso.sharepoint.com/sites/test --key key1 --value value1 Sets the value of the key1 property in the property bag of the root folder of site https://contoso.sharepoint.com/sites/test m365 spo propertybag set --webUrl https://contoso.sharepoint.com/sites/test --key key1 --value value1 --folder / Sets the value of the key1 property in the property bag of a document library located in site https://contoso.sharepoint.com/sites/test m365 spo propertybag set --webUrl https://contoso.sharepoint.com/sites/test --key key1 --value value1 --folder '/Shared Documents' Sets the value of the key1 property in the property bag of a folder in a document library located in site https://contoso.sharepoint.com/sites/test m365 spo propertybag set --webUrl https://contoso.sharepoint.com/sites/test --key key1 --value value1 --folder '/Shared Documents/MyFolder' Sets the value of the key1 property in the property bag of a list in site https://contoso.sharepoint.com/sites/test m365 spo propertybag set --webUrl https://contoso.sharepoint.com/sites/test --key key1 --value value1 --folder /Lists/MyList","title":"Examples"},{"location":"cmd/spo/report/report-activityfilecounts/","text":"spo report activityfilecounts \u00b6 Gets the number of unique, licensed users who interacted with files stored on SharePoint sites Usage \u00b6 m365 spo report activityfilecounts [ options ] Options \u00b6 -p, --period <period> The length of time over which the report is aggregated. Supported values D7,D30,D90,D180 -f, --outputFile [outputFile] Path to the file where the report should be stored in -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Gets the number of unique, licensed users who interacted with files stored on SharePoint sites for the last week m365 spo report activityfilecounts --period D7 Gets the number of unique, licensed users who interacted with files stored on SharePoint sites for the last week and exports the report data in the specified path in text format m365 spo report activityfilecounts --period D7 --output text > \"activityfilecounts.txt\" Gets the number of unique, licensed users who interacted with files stored on SharePoint sites for the last week and exports the report data in the specified path in json format m365 spo report activityfilecounts --period D7 --output json > \"activityfilecounts.json\"","title":"report activityfilecounts"},{"location":"cmd/spo/report/report-activityfilecounts/#spo-report-activityfilecounts","text":"Gets the number of unique, licensed users who interacted with files stored on SharePoint sites","title":"spo report activityfilecounts"},{"location":"cmd/spo/report/report-activityfilecounts/#usage","text":"m365 spo report activityfilecounts [ options ]","title":"Usage"},{"location":"cmd/spo/report/report-activityfilecounts/#options","text":"-p, --period <period> The length of time over which the report is aggregated. Supported values D7,D30,D90,D180 -f, --outputFile [outputFile] Path to the file where the report should be stored in -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/report/report-activityfilecounts/#examples","text":"Gets the number of unique, licensed users who interacted with files stored on SharePoint sites for the last week m365 spo report activityfilecounts --period D7 Gets the number of unique, licensed users who interacted with files stored on SharePoint sites for the last week and exports the report data in the specified path in text format m365 spo report activityfilecounts --period D7 --output text > \"activityfilecounts.txt\" Gets the number of unique, licensed users who interacted with files stored on SharePoint sites for the last week and exports the report data in the specified path in json format m365 spo report activityfilecounts --period D7 --output json > \"activityfilecounts.json\"","title":"Examples"},{"location":"cmd/spo/report/report-activitypages/","text":"spo report activitypages \u00b6 Gets the number of unique pages visited by users Usage \u00b6 m365 spo report activitypages [ options ] Options \u00b6 -p, --period <period> The length of time over which the report is aggregated. Supported values D7,D30,D90,D180 -f, --outputFile [outputFile] Path to the file where the report should be stored in -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Gets the number of unique pages visited by users for the last week m365 spo report activitypages --period D7 Gets the number of unique pages visited by users for the last week and exports the report data in the specified path in text format m365 spo report activitypages --period D7 --output text > \"activitypages.txt\" Gets the number of unique pages visited by users for the last week and exports the report data in the specified path in json format m365 spo report activitypages --period D7 --output json > \"activitypages.json\"","title":"report activitypages"},{"location":"cmd/spo/report/report-activitypages/#spo-report-activitypages","text":"Gets the number of unique pages visited by users","title":"spo report activitypages"},{"location":"cmd/spo/report/report-activitypages/#usage","text":"m365 spo report activitypages [ options ]","title":"Usage"},{"location":"cmd/spo/report/report-activitypages/#options","text":"-p, --period <period> The length of time over which the report is aggregated. Supported values D7,D30,D90,D180 -f, --outputFile [outputFile] Path to the file where the report should be stored in -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/report/report-activitypages/#examples","text":"Gets the number of unique pages visited by users for the last week m365 spo report activitypages --period D7 Gets the number of unique pages visited by users for the last week and exports the report data in the specified path in text format m365 spo report activitypages --period D7 --output text > \"activitypages.txt\" Gets the number of unique pages visited by users for the last week and exports the report data in the specified path in json format m365 spo report activitypages --period D7 --output json > \"activitypages.json\"","title":"Examples"},{"location":"cmd/spo/report/report-activityusercounts/","text":"spo report activityusercounts \u00b6 Gets the trend in the number of active users Usage \u00b6 m365 spo report activityusercounts [ options ] Options \u00b6 -p, --period <period> The length of time over which the report is aggregated. Supported values D7,D30,D90,D180 -f, --outputFile [outputFile] Path to the file where the report should be stored in -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 A user is considered active if he or she has executed a file activity (save, sync, modify, or share) or visited a page within the specified time period Examples \u00b6 Gets the trend in the number of active users for the last week m365 spo report activityusercounts --period D7 Gets the trend in the number of active users for the last week and exports the report data in the specified path in text format m365 spo report activityusercounts --period D7 --output text > \"activityusercounts.txt\" Gets the trend in the number of active users for the last week and exports the report data in the specified path in json format m365 spo report activityusercounts --period D7 --output json > \"activityusercounts.json\"","title":"report activityusercounts"},{"location":"cmd/spo/report/report-activityusercounts/#spo-report-activityusercounts","text":"Gets the trend in the number of active users","title":"spo report activityusercounts"},{"location":"cmd/spo/report/report-activityusercounts/#usage","text":"m365 spo report activityusercounts [ options ]","title":"Usage"},{"location":"cmd/spo/report/report-activityusercounts/#options","text":"-p, --period <period> The length of time over which the report is aggregated. Supported values D7,D30,D90,D180 -f, --outputFile [outputFile] Path to the file where the report should be stored in -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/report/report-activityusercounts/#remarks","text":"A user is considered active if he or she has executed a file activity (save, sync, modify, or share) or visited a page within the specified time period","title":"Remarks"},{"location":"cmd/spo/report/report-activityusercounts/#examples","text":"Gets the trend in the number of active users for the last week m365 spo report activityusercounts --period D7 Gets the trend in the number of active users for the last week and exports the report data in the specified path in text format m365 spo report activityusercounts --period D7 --output text > \"activityusercounts.txt\" Gets the trend in the number of active users for the last week and exports the report data in the specified path in json format m365 spo report activityusercounts --period D7 --output json > \"activityusercounts.json\"","title":"Examples"},{"location":"cmd/spo/report/report-activityuserdetail/","text":"spo report activityuserdetail \u00b6 Gets details about SharePoint activity by user. Usage \u00b6 m365 spo report activityuserdetail [ options ] Options \u00b6 -d, --date [date] The date for which you would like to view the users who performed any activity. Supported date format is YYYY-MM-DD . Specify the date or period, but not both. -p, --period [period] The length of time over which the report is aggregated. Supported values D7,D30,D90,D180 -f, --outputFile [outputFile] Path to the file where the Microsoft Teams device usage by user report should be stored in -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 As this report is only available for the past 28 days, date parameter value should be a date from that range. Examples \u00b6 Gets details about SharePoint activity by user for the last week m365 spo report activityuserdetail --period D7 Gets details about SharePoint activity by user for May 1, 2019 m365 spo report activityuserdetail --date 2019 -05-01 Gets details about SharePoint activity by user for the last week and exports the report data in the specified path in text format m365 spo report activityuserdetail --period D7 --output text > \"activityuserdetail.txt\" Gets details about SharePoint activity by user for the last week and exports the report data in the specified path in json format m365 spo report activityuserdetail --period D7 --output json > \"activityuserdetail.json\"","title":"report activityuserdetail"},{"location":"cmd/spo/report/report-activityuserdetail/#spo-report-activityuserdetail","text":"Gets details about SharePoint activity by user.","title":"spo report activityuserdetail"},{"location":"cmd/spo/report/report-activityuserdetail/#usage","text":"m365 spo report activityuserdetail [ options ]","title":"Usage"},{"location":"cmd/spo/report/report-activityuserdetail/#options","text":"-d, --date [date] The date for which you would like to view the users who performed any activity. Supported date format is YYYY-MM-DD . Specify the date or period, but not both. -p, --period [period] The length of time over which the report is aggregated. Supported values D7,D30,D90,D180 -f, --outputFile [outputFile] Path to the file where the Microsoft Teams device usage by user report should be stored in -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/report/report-activityuserdetail/#remarks","text":"As this report is only available for the past 28 days, date parameter value should be a date from that range.","title":"Remarks"},{"location":"cmd/spo/report/report-activityuserdetail/#examples","text":"Gets details about SharePoint activity by user for the last week m365 spo report activityuserdetail --period D7 Gets details about SharePoint activity by user for May 1, 2019 m365 spo report activityuserdetail --date 2019 -05-01 Gets details about SharePoint activity by user for the last week and exports the report data in the specified path in text format m365 spo report activityuserdetail --period D7 --output text > \"activityuserdetail.txt\" Gets details about SharePoint activity by user for the last week and exports the report data in the specified path in json format m365 spo report activityuserdetail --period D7 --output json > \"activityuserdetail.json\"","title":"Examples"},{"location":"cmd/spo/report/report-siteusagedetail/","text":"spo report siteusagedetail \u00b6 Gets details about SharePoint site usage Usage \u00b6 m365 spo report siteusagedetail [ options ] Options \u00b6 -d, --date [date] The date for which you would like to view the users who performed any activity. Supported date format is YYYY-MM-DD . Specify the date or period, but not both. -p, --period [period] The length of time over which the report is aggregated. Supported values D7,D30,D90,D180 -f, --outputFile [outputFile] Path to the file where the report should be stored in -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 As this report is only available for the past 28 days, date parameter value should be a date from that range. Examples \u00b6 Gets details about SharePoint site usage for the last week m365 spo report siteusagedetail --period D7 Gets details about SharePoint site usage for May 1, 2019 m365 spo report siteusagedetail --date 2019 -05-01 Gets details about SharePoint site usage for the last week and exports the report data in the specified path in text format m365 spo report siteusagedetail --period D7 --output text > \"siteusagedetail.txt\" Gets details about SharePoint site usage for the last week and exports the report data in the specified path in json format m365 spo report siteusagedetail --period D7 --output json > \"siteusagedetail.json\"","title":"report siteusagedetail"},{"location":"cmd/spo/report/report-siteusagedetail/#spo-report-siteusagedetail","text":"Gets details about SharePoint site usage","title":"spo report siteusagedetail"},{"location":"cmd/spo/report/report-siteusagedetail/#usage","text":"m365 spo report siteusagedetail [ options ]","title":"Usage"},{"location":"cmd/spo/report/report-siteusagedetail/#options","text":"-d, --date [date] The date for which you would like to view the users who performed any activity. Supported date format is YYYY-MM-DD . Specify the date or period, but not both. -p, --period [period] The length of time over which the report is aggregated. Supported values D7,D30,D90,D180 -f, --outputFile [outputFile] Path to the file where the report should be stored in -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/report/report-siteusagedetail/#remarks","text":"As this report is only available for the past 28 days, date parameter value should be a date from that range.","title":"Remarks"},{"location":"cmd/spo/report/report-siteusagedetail/#examples","text":"Gets details about SharePoint site usage for the last week m365 spo report siteusagedetail --period D7 Gets details about SharePoint site usage for May 1, 2019 m365 spo report siteusagedetail --date 2019 -05-01 Gets details about SharePoint site usage for the last week and exports the report data in the specified path in text format m365 spo report siteusagedetail --period D7 --output text > \"siteusagedetail.txt\" Gets details about SharePoint site usage for the last week and exports the report data in the specified path in json format m365 spo report siteusagedetail --period D7 --output json > \"siteusagedetail.json\"","title":"Examples"},{"location":"cmd/spo/report/report-siteusagefilecounts/","text":"spo report siteusagefilecounts \u00b6 Get the total number of files across all sites and the number of active files Usage \u00b6 m365 spo report siteusagefilecounts [ options ] Options \u00b6 -p, --period <period> The length of time over which the report is aggregated. Supported values D7,D30,D90,D180 -f, --outputFile [outputFile] Path to the file where the report should be stored in -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 A file (user or system) is considered active if it has been saved, synced, modified, or shared within the specified time period. Examples \u00b6 Get the total number of files across all sites and the number of active files for the last week m365 spo report siteusagefilecounts --period D7 Get the total number of files across all sites and the number of active files for the last week and exports the report data in the specified path in text format m365 spo report siteusagefilecounts --period D7 --output text > \"siteusagefilecounts.txt\" Get the total number of files across all sites and the number of active files for the last week and exports the report data in the specified path in json format m365 spo report siteusagefilecounts --period D7 --output json > \"siteusagefilecounts.json\"","title":"report siteusagefilecounts"},{"location":"cmd/spo/report/report-siteusagefilecounts/#spo-report-siteusagefilecounts","text":"Get the total number of files across all sites and the number of active files","title":"spo report siteusagefilecounts"},{"location":"cmd/spo/report/report-siteusagefilecounts/#usage","text":"m365 spo report siteusagefilecounts [ options ]","title":"Usage"},{"location":"cmd/spo/report/report-siteusagefilecounts/#options","text":"-p, --period <period> The length of time over which the report is aggregated. Supported values D7,D30,D90,D180 -f, --outputFile [outputFile] Path to the file where the report should be stored in -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/report/report-siteusagefilecounts/#remarks","text":"A file (user or system) is considered active if it has been saved, synced, modified, or shared within the specified time period.","title":"Remarks"},{"location":"cmd/spo/report/report-siteusagefilecounts/#examples","text":"Get the total number of files across all sites and the number of active files for the last week m365 spo report siteusagefilecounts --period D7 Get the total number of files across all sites and the number of active files for the last week and exports the report data in the specified path in text format m365 spo report siteusagefilecounts --period D7 --output text > \"siteusagefilecounts.txt\" Get the total number of files across all sites and the number of active files for the last week and exports the report data in the specified path in json format m365 spo report siteusagefilecounts --period D7 --output json > \"siteusagefilecounts.json\"","title":"Examples"},{"location":"cmd/spo/report/report-siteusagepages/","text":"spo report siteusagepages \u00b6 Gets the number of pages viewed across all sites Usage \u00b6 m365 spo report siteusagepages [ options ] Options \u00b6 -p, --period <period> The length of time over which the report is aggregated. Supported values D7,D30,D90,D180 -f, --outputFile [outputFile] Path to the file where the report should be stored in -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Gets the number of pages viewed across all sites for the last week m365 spo report siteusagepages --period D7 Gets the number of pages viewed across all sites for the last week and exports the report data in the specified path in text format m365 spo report siteusagepages --period D7 --output text > \"siteusagepages.txt\" Gets the number of pages viewed across all sites for the last week and exports the report data in the specified path in json format m365 spo report siteusagepages --period D7 --output json > \"siteusagepages.json\"","title":"report siteusagepages"},{"location":"cmd/spo/report/report-siteusagepages/#spo-report-siteusagepages","text":"Gets the number of pages viewed across all sites","title":"spo report siteusagepages"},{"location":"cmd/spo/report/report-siteusagepages/#usage","text":"m365 spo report siteusagepages [ options ]","title":"Usage"},{"location":"cmd/spo/report/report-siteusagepages/#options","text":"-p, --period <period> The length of time over which the report is aggregated. Supported values D7,D30,D90,D180 -f, --outputFile [outputFile] Path to the file where the report should be stored in -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/report/report-siteusagepages/#examples","text":"Gets the number of pages viewed across all sites for the last week m365 spo report siteusagepages --period D7 Gets the number of pages viewed across all sites for the last week and exports the report data in the specified path in text format m365 spo report siteusagepages --period D7 --output text > \"siteusagepages.txt\" Gets the number of pages viewed across all sites for the last week and exports the report data in the specified path in json format m365 spo report siteusagepages --period D7 --output json > \"siteusagepages.json\"","title":"Examples"},{"location":"cmd/spo/report/report-siteusagesitecounts/","text":"spo report siteusagesitecounts \u00b6 Gets the total number of files across all sites and the number of active files Usage \u00b6 m365 spo report siteusagesitecounts [ options ] Options \u00b6 -p, --period <period> The length of time over which the report is aggregated. Supported values D7,D30,D90,D180 -f, --outputFile [outputFile] Path to the file where the report should be stored in -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 A file (user or system) is considered active if it has been saved, synced, modified, or shared within the specified time period. Examples \u00b6 Gets the total number of files across all sites and the number of active files for the last week m365 spo report siteusagesitecounts --period D7 Gets the total number of files across all sites and the number of active files for the last week and exports the report data in the specified path in text format m365 spo report siteusagesitecounts --period D7 --output text > \"siteusagesitecounts.txt\" Gets the total number of files across all sites and the number of active files for the last week and exports the report data in the specified path in json format m365 spo report siteusagesitecounts --period D7 --output json > \"siteusagesitecounts.json\"","title":"report siteusagesitecounts"},{"location":"cmd/spo/report/report-siteusagesitecounts/#spo-report-siteusagesitecounts","text":"Gets the total number of files across all sites and the number of active files","title":"spo report siteusagesitecounts"},{"location":"cmd/spo/report/report-siteusagesitecounts/#usage","text":"m365 spo report siteusagesitecounts [ options ]","title":"Usage"},{"location":"cmd/spo/report/report-siteusagesitecounts/#options","text":"-p, --period <period> The length of time over which the report is aggregated. Supported values D7,D30,D90,D180 -f, --outputFile [outputFile] Path to the file where the report should be stored in -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/report/report-siteusagesitecounts/#remarks","text":"A file (user or system) is considered active if it has been saved, synced, modified, or shared within the specified time period.","title":"Remarks"},{"location":"cmd/spo/report/report-siteusagesitecounts/#examples","text":"Gets the total number of files across all sites and the number of active files for the last week m365 spo report siteusagesitecounts --period D7 Gets the total number of files across all sites and the number of active files for the last week and exports the report data in the specified path in text format m365 spo report siteusagesitecounts --period D7 --output text > \"siteusagesitecounts.txt\" Gets the total number of files across all sites and the number of active files for the last week and exports the report data in the specified path in json format m365 spo report siteusagesitecounts --period D7 --output json > \"siteusagesitecounts.json\"","title":"Examples"},{"location":"cmd/spo/report/report-siteusagestorage/","text":"spo report siteusagestorage \u00b6 Gets the trend of storage allocated and consumed during the reporting period Usage \u00b6 m365 spo report siteusagestorage [ options ] Options \u00b6 -p, --period <period> The length of time over which the report is aggregated. Supported values D7,D30,D90,D180 -f, --outputFile [outputFile] Path to the file where the report should be stored in -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Gets the trend of storage allocated and consumed during the last week m365 spo report siteusagestorage --period D7 Gets the trend of storage allocated and consumed during the last week and exports the report data in the specified path in text format m365 spo report siteusagestorage --period D7 --output text > \"siteusagestorage.txt\" Gets the trend of storage allocated and consumed during the last week and exports the report data in the specified path in json format m365 spo report siteusagestorage --period D7 --output json > \"siteusagestorage.json\"","title":"report siteusagestorage"},{"location":"cmd/spo/report/report-siteusagestorage/#spo-report-siteusagestorage","text":"Gets the trend of storage allocated and consumed during the reporting period","title":"spo report siteusagestorage"},{"location":"cmd/spo/report/report-siteusagestorage/#usage","text":"m365 spo report siteusagestorage [ options ]","title":"Usage"},{"location":"cmd/spo/report/report-siteusagestorage/#options","text":"-p, --period <period> The length of time over which the report is aggregated. Supported values D7,D30,D90,D180 -f, --outputFile [outputFile] Path to the file where the report should be stored in -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/report/report-siteusagestorage/#examples","text":"Gets the trend of storage allocated and consumed during the last week m365 spo report siteusagestorage --period D7 Gets the trend of storage allocated and consumed during the last week and exports the report data in the specified path in text format m365 spo report siteusagestorage --period D7 --output text > \"siteusagestorage.txt\" Gets the trend of storage allocated and consumed during the last week and exports the report data in the specified path in json format m365 spo report siteusagestorage --period D7 --output json > \"siteusagestorage.json\"","title":"Examples"},{"location":"cmd/spo/roledefinition/roledefinition-add/","text":"spo roledefinition add \u00b6 Adds a new roledefinition to web Usage \u00b6 m365 spo roledefinition add [ options ] Options \u00b6 -u, --webUrl <webUrl> URL of the site to which role should be added -n, --name <name> role definition name -d, --description [description] role definition description --rights [rights] A case-sensitive string array that contain the permissions needed for the custom action. Allowed values EmptyMask,ViewListItems,AddListItems,EditListItems,DeleteListItems,ApproveItems,OpenItems,ViewVersions,DeleteVersions,CancelCheckout,ManagePersonalViews,ManageLists,ViewFormPages,AnonymousSearchAccessList,Open,ViewPages,AddAndCustomizePages,ApplyThemeAndBorder,ApplyStyleSheets,ViewUsageData,CreateSSCSite,ManageSubwebs,CreateGroups,ManagePermissions,BrowseDirectories,BrowseUserInfo,AddDelPrivateWebParts,UpdatePersonalWebParts,ManageWeb,AnonymousSearchAccessWebLists,UseClientIntegration,UseRemoteAPIs,ManageAlerts,CreateAlerts,EditMyUserInfo,EnumeratePermissions,FullMask . Default EmptyMask -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 The --rights option accepts case-sensitive values. Examples \u00b6 Adds the role definition for site https://contoso.sharepoint.com/sites/project-x with name test m365 spo roledefinition add --webUrl https://contoso.sharepoint.com/sites/project-x --name test Adds the role definition for site https://contoso.sharepoint.com/sites/project-x with name test and description test description and rights ViewListItems,AddListItems,EditListItems,DeleteListItems m365 spo roledefinition add --webUrl https://contoso.sharepoint.com/sites/project-x --name test --description \"test description\" --rights \"ViewListItems,AddListItems,EditListItems,DeleteListItems\"","title":"roledefinition add"},{"location":"cmd/spo/roledefinition/roledefinition-add/#spo-roledefinition-add","text":"Adds a new roledefinition to web","title":"spo roledefinition add"},{"location":"cmd/spo/roledefinition/roledefinition-add/#usage","text":"m365 spo roledefinition add [ options ]","title":"Usage"},{"location":"cmd/spo/roledefinition/roledefinition-add/#options","text":"-u, --webUrl <webUrl> URL of the site to which role should be added -n, --name <name> role definition name -d, --description [description] role definition description --rights [rights] A case-sensitive string array that contain the permissions needed for the custom action. Allowed values EmptyMask,ViewListItems,AddListItems,EditListItems,DeleteListItems,ApproveItems,OpenItems,ViewVersions,DeleteVersions,CancelCheckout,ManagePersonalViews,ManageLists,ViewFormPages,AnonymousSearchAccessList,Open,ViewPages,AddAndCustomizePages,ApplyThemeAndBorder,ApplyStyleSheets,ViewUsageData,CreateSSCSite,ManageSubwebs,CreateGroups,ManagePermissions,BrowseDirectories,BrowseUserInfo,AddDelPrivateWebParts,UpdatePersonalWebParts,ManageWeb,AnonymousSearchAccessWebLists,UseClientIntegration,UseRemoteAPIs,ManageAlerts,CreateAlerts,EditMyUserInfo,EnumeratePermissions,FullMask . Default EmptyMask -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/roledefinition/roledefinition-add/#remarks","text":"The --rights option accepts case-sensitive values.","title":"Remarks"},{"location":"cmd/spo/roledefinition/roledefinition-add/#examples","text":"Adds the role definition for site https://contoso.sharepoint.com/sites/project-x with name test m365 spo roledefinition add --webUrl https://contoso.sharepoint.com/sites/project-x --name test Adds the role definition for site https://contoso.sharepoint.com/sites/project-x with name test and description test description and rights ViewListItems,AddListItems,EditListItems,DeleteListItems m365 spo roledefinition add --webUrl https://contoso.sharepoint.com/sites/project-x --name test --description \"test description\" --rights \"ViewListItems,AddListItems,EditListItems,DeleteListItems\"","title":"Examples"},{"location":"cmd/spo/roledefinition/roledefinition-get/","text":"spo roledefinition get \u00b6 Gets specified role definition from web Usage \u00b6 m365 spo roledefinition get [ options ] Options \u00b6 -u, --webUrl <webUrl> URL of the site for which to retrieve the role definition -i, --id <id> The Id of the role definition to retrieve. -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Retrieve the role definition for site https://contoso.sharepoint.com/sites/project-x with id 1 m365 spo roledefinition get --webUrl https://contoso.sharepoint.com/sites/project-x --id 1","title":"roledefinition get"},{"location":"cmd/spo/roledefinition/roledefinition-get/#spo-roledefinition-get","text":"Gets specified role definition from web","title":"spo roledefinition get"},{"location":"cmd/spo/roledefinition/roledefinition-get/#usage","text":"m365 spo roledefinition get [ options ]","title":"Usage"},{"location":"cmd/spo/roledefinition/roledefinition-get/#options","text":"-u, --webUrl <webUrl> URL of the site for which to retrieve the role definition -i, --id <id> The Id of the role definition to retrieve. -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/roledefinition/roledefinition-get/#examples","text":"Retrieve the role definition for site https://contoso.sharepoint.com/sites/project-x with id 1 m365 spo roledefinition get --webUrl https://contoso.sharepoint.com/sites/project-x --id 1","title":"Examples"},{"location":"cmd/spo/roledefinition/roledefinition-list/","text":"spo roledefinition list \u00b6 Gets list of role definitions for the specified site Usage \u00b6 m365 spo roledefinition list [ options ] Options \u00b6 -u, --webUrl <webUrl> URL of the site for which to retrieve role definitions -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Return list of role definitions for site https://contoso.sharepoint.com/sites/project-x m365 spo roledefinition list --webUrl https://contoso.sharepoint.com/sites/project-x","title":"roledefinition list"},{"location":"cmd/spo/roledefinition/roledefinition-list/#spo-roledefinition-list","text":"Gets list of role definitions for the specified site","title":"spo roledefinition list"},{"location":"cmd/spo/roledefinition/roledefinition-list/#usage","text":"m365 spo roledefinition list [ options ]","title":"Usage"},{"location":"cmd/spo/roledefinition/roledefinition-list/#options","text":"-u, --webUrl <webUrl> URL of the site for which to retrieve role definitions -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/roledefinition/roledefinition-list/#examples","text":"Return list of role definitions for site https://contoso.sharepoint.com/sites/project-x m365 spo roledefinition list --webUrl https://contoso.sharepoint.com/sites/project-x","title":"Examples"},{"location":"cmd/spo/roledefinition/roledefinition-remove/","text":"spo roledefinition remove \u00b6 Removes the role definition from the specified site Usage \u00b6 m365 spo roledefinition remove [ options ] Options \u00b6 -u, --webUrl <webUrl> URL of the site from which role should be removed -i, --id <id> ID of the role definition to remove --confirm Don't prompt for confirming removing the role definition -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Remove the role definition from site https://contoso.sharepoint.com/sites/project-x with id 1 m365 spo roledefinition remove --webUrl https://contoso.sharepoint.com/sites/project-x --id 1 Remove the role definition from site https://contoso.sharepoint.com/sites/project-x with id 1 and don't prompt for confirmation m365 spo roledefinition remove --webUrl https://contoso.sharepoint.com/sites/project-x --id 1 --confirm","title":"roledefinition remove"},{"location":"cmd/spo/roledefinition/roledefinition-remove/#spo-roledefinition-remove","text":"Removes the role definition from the specified site","title":"spo roledefinition remove"},{"location":"cmd/spo/roledefinition/roledefinition-remove/#usage","text":"m365 spo roledefinition remove [ options ]","title":"Usage"},{"location":"cmd/spo/roledefinition/roledefinition-remove/#options","text":"-u, --webUrl <webUrl> URL of the site from which role should be removed -i, --id <id> ID of the role definition to remove --confirm Don't prompt for confirming removing the role definition -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/roledefinition/roledefinition-remove/#examples","text":"Remove the role definition from site https://contoso.sharepoint.com/sites/project-x with id 1 m365 spo roledefinition remove --webUrl https://contoso.sharepoint.com/sites/project-x --id 1 Remove the role definition from site https://contoso.sharepoint.com/sites/project-x with id 1 and don't prompt for confirmation m365 spo roledefinition remove --webUrl https://contoso.sharepoint.com/sites/project-x --id 1 --confirm","title":"Examples"},{"location":"cmd/spo/serviceprincipal/serviceprincipal-grant-add/","text":"spo serviceprincipal grant add \u00b6 Grants the service principal permission to the specified API Usage \u00b6 m365 spo serviceprincipal grant add [ options ] Alias \u00b6 m365 spo sp grant add Options \u00b6 -r, --resource <resource> The name of the resource for which permissions should be granted -s, --scope <scope> The name of the permission that should be granted -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Important To use this command you have to have permissions to access the tenant admin site. Examples \u00b6 Grant the service principal permission to read email using the Microsoft Graph m365 spo serviceprincipal grant add --resource 'Microsoft Graph' --scope 'Mail.Read' Grant the service principal permission to a custom API m365 spo serviceprincipal grant add --resource 'contoso-api' --scope 'user_impersonation'","title":"serviceprincipal grant add"},{"location":"cmd/spo/serviceprincipal/serviceprincipal-grant-add/#spo-serviceprincipal-grant-add","text":"Grants the service principal permission to the specified API","title":"spo serviceprincipal grant add"},{"location":"cmd/spo/serviceprincipal/serviceprincipal-grant-add/#usage","text":"m365 spo serviceprincipal grant add [ options ]","title":"Usage"},{"location":"cmd/spo/serviceprincipal/serviceprincipal-grant-add/#alias","text":"m365 spo sp grant add","title":"Alias"},{"location":"cmd/spo/serviceprincipal/serviceprincipal-grant-add/#options","text":"-r, --resource <resource> The name of the resource for which permissions should be granted -s, --scope <scope> The name of the permission that should be granted -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Important To use this command you have to have permissions to access the tenant admin site.","title":"Options"},{"location":"cmd/spo/serviceprincipal/serviceprincipal-grant-add/#examples","text":"Grant the service principal permission to read email using the Microsoft Graph m365 spo serviceprincipal grant add --resource 'Microsoft Graph' --scope 'Mail.Read' Grant the service principal permission to a custom API m365 spo serviceprincipal grant add --resource 'contoso-api' --scope 'user_impersonation'","title":"Examples"},{"location":"cmd/spo/serviceprincipal/serviceprincipal-grant-list/","text":"spo serviceprincipal grant list \u00b6 Lists permissions granted to the service principal Usage \u00b6 m365 spo serviceprincipal grant list [ options ] Alias \u00b6 m365 spo sp grant list Options \u00b6 -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Important To use this command you have to have permissions to access the tenant admin site. Examples \u00b6 List all permissions granted to the service principal m365 spo serviceprincipal grant list","title":"serviceprincipal grant list"},{"location":"cmd/spo/serviceprincipal/serviceprincipal-grant-list/#spo-serviceprincipal-grant-list","text":"Lists permissions granted to the service principal","title":"spo serviceprincipal grant list"},{"location":"cmd/spo/serviceprincipal/serviceprincipal-grant-list/#usage","text":"m365 spo serviceprincipal grant list [ options ]","title":"Usage"},{"location":"cmd/spo/serviceprincipal/serviceprincipal-grant-list/#alias","text":"m365 spo sp grant list","title":"Alias"},{"location":"cmd/spo/serviceprincipal/serviceprincipal-grant-list/#options","text":"-h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Important To use this command you have to have permissions to access the tenant admin site.","title":"Options"},{"location":"cmd/spo/serviceprincipal/serviceprincipal-grant-list/#examples","text":"List all permissions granted to the service principal m365 spo serviceprincipal grant list","title":"Examples"},{"location":"cmd/spo/serviceprincipal/serviceprincipal-grant-revoke/","text":"spo serviceprincipal grant revoke \u00b6 Revokes the specified set of permissions granted to the service principal Usage \u00b6 m365 spo serviceprincipal grant revoke [ options ] Alias \u00b6 m365 spo sp grant revoke Options \u00b6 -i, --id <id> ObjectId of the permission grant to revoke -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Important To use this command you have to have permissions to access the tenant admin site. Remarks \u00b6 The permission grant you want to revoke is denoted using its ObjectId . You can retrieve it using the spo serviceprincipal grant list command. Examples \u00b6 Revoke permission grant with ObjectId 50NAzUm3C0K9B6p8ORLtIsQccg4rMERGvFGRtBsk2fA m365 spo serviceprincipal grant revoke --id 50NAzUm3C0K9B6p8ORLtIsQccg4rMERGvFGRtBsk2fA","title":"serviceprincipal grant revoke"},{"location":"cmd/spo/serviceprincipal/serviceprincipal-grant-revoke/#spo-serviceprincipal-grant-revoke","text":"Revokes the specified set of permissions granted to the service principal","title":"spo serviceprincipal grant revoke"},{"location":"cmd/spo/serviceprincipal/serviceprincipal-grant-revoke/#usage","text":"m365 spo serviceprincipal grant revoke [ options ]","title":"Usage"},{"location":"cmd/spo/serviceprincipal/serviceprincipal-grant-revoke/#alias","text":"m365 spo sp grant revoke","title":"Alias"},{"location":"cmd/spo/serviceprincipal/serviceprincipal-grant-revoke/#options","text":"-i, --id <id> ObjectId of the permission grant to revoke -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Important To use this command you have to have permissions to access the tenant admin site.","title":"Options"},{"location":"cmd/spo/serviceprincipal/serviceprincipal-grant-revoke/#remarks","text":"The permission grant you want to revoke is denoted using its ObjectId . You can retrieve it using the spo serviceprincipal grant list command.","title":"Remarks"},{"location":"cmd/spo/serviceprincipal/serviceprincipal-grant-revoke/#examples","text":"Revoke permission grant with ObjectId 50NAzUm3C0K9B6p8ORLtIsQccg4rMERGvFGRtBsk2fA m365 spo serviceprincipal grant revoke --id 50NAzUm3C0K9B6p8ORLtIsQccg4rMERGvFGRtBsk2fA","title":"Examples"},{"location":"cmd/spo/serviceprincipal/serviceprincipal-permissionrequest-approve/","text":"spo serviceprincipal permissionrequest approve \u00b6 Approves the specified permission request Usage \u00b6 m365 spo serviceprincipal permissionrequest approve [ options ] Alias \u00b6 m365 spo sp permissionrequest approve Options \u00b6 -i, --id <id> ID of the permission request to approve -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Important To use this command you have to have permissions to access the tenant admin site. Remarks \u00b6 The permission request you want to approve is denoted using its ID . You can retrieve it using the spo serviceprincipal permissionrequest list command. Examples \u00b6 Approve permission request with id 4dc4c043-25ee-40f2-81d3-b3bf63da7538 m365 spo serviceprincipal permissionrequest approve --id 4dc4c043-25ee-40f2-81d3-b3bf63da7538","title":"serviceprincipal permissionrequest approve"},{"location":"cmd/spo/serviceprincipal/serviceprincipal-permissionrequest-approve/#spo-serviceprincipal-permissionrequest-approve","text":"Approves the specified permission request","title":"spo serviceprincipal permissionrequest approve"},{"location":"cmd/spo/serviceprincipal/serviceprincipal-permissionrequest-approve/#usage","text":"m365 spo serviceprincipal permissionrequest approve [ options ]","title":"Usage"},{"location":"cmd/spo/serviceprincipal/serviceprincipal-permissionrequest-approve/#alias","text":"m365 spo sp permissionrequest approve","title":"Alias"},{"location":"cmd/spo/serviceprincipal/serviceprincipal-permissionrequest-approve/#options","text":"-i, --id <id> ID of the permission request to approve -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Important To use this command you have to have permissions to access the tenant admin site.","title":"Options"},{"location":"cmd/spo/serviceprincipal/serviceprincipal-permissionrequest-approve/#remarks","text":"The permission request you want to approve is denoted using its ID . You can retrieve it using the spo serviceprincipal permissionrequest list command.","title":"Remarks"},{"location":"cmd/spo/serviceprincipal/serviceprincipal-permissionrequest-approve/#examples","text":"Approve permission request with id 4dc4c043-25ee-40f2-81d3-b3bf63da7538 m365 spo serviceprincipal permissionrequest approve --id 4dc4c043-25ee-40f2-81d3-b3bf63da7538","title":"Examples"},{"location":"cmd/spo/serviceprincipal/serviceprincipal-permissionrequest-deny/","text":"spo serviceprincipal permissionrequest deny \u00b6 Denies the specified permission request Usage \u00b6 m365 spo serviceprincipal permissionrequest deny [ options ] Alias \u00b6 m365 spo sp permissionrequest deny Options \u00b6 -i, --id <id> ID of the permission request to deny -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Important To use this command you have to have permissions to access the tenant admin site. Remarks \u00b6 The permission request you want to approve is denoted using its ID . You can retrieve it using the spo serviceprincipal permissionrequest list command. Examples \u00b6 Deny permission request with id 4dc4c043-25ee-40f2-81d3-b3bf63da7538 m365 spo serviceprincipal permissionrequest deny --id 4dc4c043-25ee-40f2-81d3-b3bf63da7538","title":"serviceprincipal permissionrequest deny"},{"location":"cmd/spo/serviceprincipal/serviceprincipal-permissionrequest-deny/#spo-serviceprincipal-permissionrequest-deny","text":"Denies the specified permission request","title":"spo serviceprincipal permissionrequest deny"},{"location":"cmd/spo/serviceprincipal/serviceprincipal-permissionrequest-deny/#usage","text":"m365 spo serviceprincipal permissionrequest deny [ options ]","title":"Usage"},{"location":"cmd/spo/serviceprincipal/serviceprincipal-permissionrequest-deny/#alias","text":"m365 spo sp permissionrequest deny","title":"Alias"},{"location":"cmd/spo/serviceprincipal/serviceprincipal-permissionrequest-deny/#options","text":"-i, --id <id> ID of the permission request to deny -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Important To use this command you have to have permissions to access the tenant admin site.","title":"Options"},{"location":"cmd/spo/serviceprincipal/serviceprincipal-permissionrequest-deny/#remarks","text":"The permission request you want to approve is denoted using its ID . You can retrieve it using the spo serviceprincipal permissionrequest list command.","title":"Remarks"},{"location":"cmd/spo/serviceprincipal/serviceprincipal-permissionrequest-deny/#examples","text":"Deny permission request with id 4dc4c043-25ee-40f2-81d3-b3bf63da7538 m365 spo serviceprincipal permissionrequest deny --id 4dc4c043-25ee-40f2-81d3-b3bf63da7538","title":"Examples"},{"location":"cmd/spo/serviceprincipal/serviceprincipal-permissionrequest-list/","text":"spo serviceprincipal permissionrequest list \u00b6 Lists pending permission requests Usage \u00b6 m365 spo serviceprincipal permissionrequest list [ options ] Alias \u00b6 m365 spo sp permissionrequest list Options \u00b6 -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Important To use this command you have to have permissions to access the tenant admin site. Examples \u00b6 List all pending permission requests m365 spo serviceprincipal permissionrequest list","title":"serviceprincipal permissionrequest list"},{"location":"cmd/spo/serviceprincipal/serviceprincipal-permissionrequest-list/#spo-serviceprincipal-permissionrequest-list","text":"Lists pending permission requests","title":"spo serviceprincipal permissionrequest list"},{"location":"cmd/spo/serviceprincipal/serviceprincipal-permissionrequest-list/#usage","text":"m365 spo serviceprincipal permissionrequest list [ options ]","title":"Usage"},{"location":"cmd/spo/serviceprincipal/serviceprincipal-permissionrequest-list/#alias","text":"m365 spo sp permissionrequest list","title":"Alias"},{"location":"cmd/spo/serviceprincipal/serviceprincipal-permissionrequest-list/#options","text":"-h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Important To use this command you have to have permissions to access the tenant admin site.","title":"Options"},{"location":"cmd/spo/serviceprincipal/serviceprincipal-permissionrequest-list/#examples","text":"List all pending permission requests m365 spo serviceprincipal permissionrequest list","title":"Examples"},{"location":"cmd/spo/serviceprincipal/serviceprincipal-set/","text":"spo serviceprincipal set \u00b6 Enable or disable the service principal Usage \u00b6 m365 spo serviceprincipal set [ options ] Alias \u00b6 m365 spo sp set Options \u00b6 -e, --enabled <enabled> Set to true to enable the service principal or to false to disable it. Valid values are true,false --confirm Don't prompt for confirming enabling/disabling the service principal -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Important To use this command you have to have permissions to access the tenant admin site. Remarks \u00b6 Using the -e, --enabled option you can specify whether the service principal should be enabled or disabled. Use true to enable the service principal and false to disable it. Examples \u00b6 Enable the service principal. Will prompt for confirmation m365 spo serviceprincipal set --enabled true Disable the service principal. Will prompt for confirmation m365 spo serviceprincipal set --enabled false Enable the service principal without prompting for confirmation m365 spo serviceprincipal set --enabled true --confirm","title":"serviceprincipal set"},{"location":"cmd/spo/serviceprincipal/serviceprincipal-set/#spo-serviceprincipal-set","text":"Enable or disable the service principal","title":"spo serviceprincipal set"},{"location":"cmd/spo/serviceprincipal/serviceprincipal-set/#usage","text":"m365 spo serviceprincipal set [ options ]","title":"Usage"},{"location":"cmd/spo/serviceprincipal/serviceprincipal-set/#alias","text":"m365 spo sp set","title":"Alias"},{"location":"cmd/spo/serviceprincipal/serviceprincipal-set/#options","text":"-e, --enabled <enabled> Set to true to enable the service principal or to false to disable it. Valid values are true,false --confirm Don't prompt for confirming enabling/disabling the service principal -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Important To use this command you have to have permissions to access the tenant admin site.","title":"Options"},{"location":"cmd/spo/serviceprincipal/serviceprincipal-set/#remarks","text":"Using the -e, --enabled option you can specify whether the service principal should be enabled or disabled. Use true to enable the service principal and false to disable it.","title":"Remarks"},{"location":"cmd/spo/serviceprincipal/serviceprincipal-set/#examples","text":"Enable the service principal. Will prompt for confirmation m365 spo serviceprincipal set --enabled true Disable the service principal. Will prompt for confirmation m365 spo serviceprincipal set --enabled false Enable the service principal without prompting for confirmation m365 spo serviceprincipal set --enabled true --confirm","title":"Examples"},{"location":"cmd/spo/site/site-add/","text":"spo site add \u00b6 Creates new SharePoint Online site Usage \u00b6 m365 spo site add [ options ] Options \u00b6 --type [type] Type of sites to add. Allowed values TeamSite,CommunicationSite,ClassicSite , default TeamSite -t, --title <title> Site title -a, --alias [alias] Site alias, used in the URL and in the team site group e-mail (applies to type TeamSite) -u, --url [url] Site URL (applies to type CommunicationSite, ClassicSite) -z, --timeZone [timeZone] Integer representing time zone to use for the site (applies to type ClassicSite) -d, --description [description] Site description -l, --lcid [lcid] Site language in the LCID format, eg. 1033 for en-US . See SharePoint documentation for the list of supported languages --owners [owners] Comma-separated list of users to set as site owners (applies to type TeamSite, ClassicSite) --isPublic Determines if the associated group is public or not (applies to type TeamSite) -c, --classification [classification] Site classification (applies to type TeamSite, CommunicationSite) --siteDesign [siteDesign] Type of communication site to create. Allowed values Topic,Showcase,Blank , default Topic . When creating a communication site, specify either siteDesign or siteDesignId (applies to type CommunicationSite) --siteDesignId [siteDesignId] Id of the custom site design to use to create the site. When creating a communication site, specify either siteDesign or siteDesignId (applies to type CommunicationSite) --shareByEmailEnabled Determines whether it's allowed to share file with guests (applies to type CommunicationSite) -w, --webTemplate [webTemplate] Template to use for creating the site. Default STS#0 (applies to type ClassicSite) --resourceQuota [resourceQuota] The quota for this site collection in Sandboxed Solutions units. Default 0 (applies to type ClassicSite) --resourceQuotaWarningLevel [resourceQuotaWarningLevel] The warning level for the resource quota. Default 0 (applies to type ClassicSite) --storageQuota [storageQuota] The storage quota for this site collection in megabytes. Default 100 (applies to type ClassicSite) --storageQuotaWarningLevel [storageQuotaWarningLevel] The warning level for the storage quota in megabytes. Default 100 (applies to type ClassicSite) --removeDeletedSite Set, to remove existing deleted site with the same URL from the Recycle Bin (applies to type ClassicSite) --wait Wait for the site to be provisioned before completing the command (applies to type ClassicSite) -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks for classic sites \u00b6 Using the -z, --timeZone option you have to specify the time zone of the site. For more information about the valid values see https://msdn.microsoft.com/library/microsoft.sharepoint.spregionalsettings.timezones.aspx . The value of the --resourceQuota option must not exceed the company's aggregate available Sandboxed Solutions quota. For more information, see Resource Usage Limits on Sandboxed Solutions in SharePoint 2010: http://msdn.microsoft.com/en-us/library/gg615462.aspx . The value of the --resourceQuotaWarningLevel option must not exceed the value of the --resourceQuota option. The value of the --storageQuota option must not exceed the company's available quota. The value of the --storageQuotaWarningLevel option must not exceed the the value of the --storageQuota option. If you try to create a site with the same URL as a site that has been previously moved to the recycle bin, you will get an error. To avoid this error, you can use the --removeDeletedSite option. Prior to creating the site, the spo site add command will check if the site with the specified URL has been previously moved to the recycle bin and if so, will remove it. Because removing sites from the recycle bin might take a moment, it should be used in conjunction with the --wait option so that the new site is not created before the old site is fully removed. Deleting and creating classic site collections is by default asynchronous and depending on the current state of Office 365, might take up to few minutes. If you're building a script with steps that require the site to be fully provisioned, you should use the --wait flag. When using this flag, the spo site add command will keep running until it received confirmation from Office 365 that the site has been fully provisioned. Remarks for modern sites \u00b6 The --owners option is mandatory for creating CommunicationSite sites with app-only permissions. When trying to create a team site using app-only permissions, you will get an Insufficient privileges to complete the operation. error. As a workaround, you can use the aad o365group add command, followed by spo site set to further configure the Team site. Examples \u00b6 Create modern team site with private group m365 spo site add --alias team1 --title \"Team 1\" Create modern team site with description and classification m365 spo site add --type TeamSite --alias team1 --title \"Team 1\" --description \"Site of team 1\" --classification LBI Create modern team site with public group m365 spo site add --type TeamSite --alias team1 --title \"Team 1\" --isPublic Create modern team site using the Dutch language m365 spo site add --alias team1 --title \"Team 1\" --lcid 1043 Create modern team site with the specified users as owners m365 spo site add --alias team1 --title \"Team 1\" --owners \"steve@contoso.com, bob@contoso.com\" Create communication site using the Topic design m365 spo site add --type CommunicationSite --url https://contoso.sharepoint.com/sites/marketing --title Marketing Create communication site using app-only permissions m365 spo site add --type CommunicationSite --url https://contoso.sharepoint.com/sites/marketing --title Marketing --owners \"john.smith@contoso.com\" Create communication site using the Showcase design m365 spo site add --type CommunicationSite --url https://contoso.sharepoint.com/sites/marketing --title Marketing --siteDesign Showcase Create communication site using a custom site design m365 spo site add --type CommunicationSite --url https://contoso.sharepoint.com/sites/marketing --title Marketing --siteDesignId 99f410fe-dd79-4b9d-8531-f2270c9c621c Create communication site using the Blank design with description and classification m365 spo site add --type CommunicationSite --url https://contoso.sharepoint.com/sites/marketing --title Marketing --description Site of the marketing department --classification MBI --siteDesign Blank Create new classic site collection using the Team site template. Set time zone to UTC+01:00 . Don't wait for the site provisioning to complete m365 spo site add --type ClassicSite --url https://contoso.sharepoint.com/sites/team --title Team --owners admin@contoso.onmicrosoft.com --timeZone 4 Create new classic site collection using the Team site template. Set time zone to UTC+01:00 . Wait for the site provisioning to complete m365 spo site add --type ClassicSite --url https://contoso.sharepoint.com/sites/team --title Team --owners admin@contoso.onmicrosoft.com --timeZone 4 --webTemplate STS#0 --wait Create new classic site collection using the Team site template. Set time zone to UTC+01:00 . If a site with the same URL is in the recycle bin, delete it. Wait for the site provisioning to complete m365 spo site add --type ClassicSite --url https://contoso.sharepoint.com/sites/team --title Team --owners admin@contoso.onmicrosoft.com --timeZone 4 --webTemplate STS#0 --removeDeletedSite --wait More information \u00b6 Creating SharePoint Communication Site using REST: https://docs.microsoft.com/en-us/sharepoint/dev/apis/communication-site-creation-rest","title":"site add"},{"location":"cmd/spo/site/site-add/#spo-site-add","text":"Creates new SharePoint Online site","title":"spo site add"},{"location":"cmd/spo/site/site-add/#usage","text":"m365 spo site add [ options ]","title":"Usage"},{"location":"cmd/spo/site/site-add/#options","text":"--type [type] Type of sites to add. Allowed values TeamSite,CommunicationSite,ClassicSite , default TeamSite -t, --title <title> Site title -a, --alias [alias] Site alias, used in the URL and in the team site group e-mail (applies to type TeamSite) -u, --url [url] Site URL (applies to type CommunicationSite, ClassicSite) -z, --timeZone [timeZone] Integer representing time zone to use for the site (applies to type ClassicSite) -d, --description [description] Site description -l, --lcid [lcid] Site language in the LCID format, eg. 1033 for en-US . See SharePoint documentation for the list of supported languages --owners [owners] Comma-separated list of users to set as site owners (applies to type TeamSite, ClassicSite) --isPublic Determines if the associated group is public or not (applies to type TeamSite) -c, --classification [classification] Site classification (applies to type TeamSite, CommunicationSite) --siteDesign [siteDesign] Type of communication site to create. Allowed values Topic,Showcase,Blank , default Topic . When creating a communication site, specify either siteDesign or siteDesignId (applies to type CommunicationSite) --siteDesignId [siteDesignId] Id of the custom site design to use to create the site. When creating a communication site, specify either siteDesign or siteDesignId (applies to type CommunicationSite) --shareByEmailEnabled Determines whether it's allowed to share file with guests (applies to type CommunicationSite) -w, --webTemplate [webTemplate] Template to use for creating the site. Default STS#0 (applies to type ClassicSite) --resourceQuota [resourceQuota] The quota for this site collection in Sandboxed Solutions units. Default 0 (applies to type ClassicSite) --resourceQuotaWarningLevel [resourceQuotaWarningLevel] The warning level for the resource quota. Default 0 (applies to type ClassicSite) --storageQuota [storageQuota] The storage quota for this site collection in megabytes. Default 100 (applies to type ClassicSite) --storageQuotaWarningLevel [storageQuotaWarningLevel] The warning level for the storage quota in megabytes. Default 100 (applies to type ClassicSite) --removeDeletedSite Set, to remove existing deleted site with the same URL from the Recycle Bin (applies to type ClassicSite) --wait Wait for the site to be provisioned before completing the command (applies to type ClassicSite) -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/site/site-add/#remarks-for-classic-sites","text":"Using the -z, --timeZone option you have to specify the time zone of the site. For more information about the valid values see https://msdn.microsoft.com/library/microsoft.sharepoint.spregionalsettings.timezones.aspx . The value of the --resourceQuota option must not exceed the company's aggregate available Sandboxed Solutions quota. For more information, see Resource Usage Limits on Sandboxed Solutions in SharePoint 2010: http://msdn.microsoft.com/en-us/library/gg615462.aspx . The value of the --resourceQuotaWarningLevel option must not exceed the value of the --resourceQuota option. The value of the --storageQuota option must not exceed the company's available quota. The value of the --storageQuotaWarningLevel option must not exceed the the value of the --storageQuota option. If you try to create a site with the same URL as a site that has been previously moved to the recycle bin, you will get an error. To avoid this error, you can use the --removeDeletedSite option. Prior to creating the site, the spo site add command will check if the site with the specified URL has been previously moved to the recycle bin and if so, will remove it. Because removing sites from the recycle bin might take a moment, it should be used in conjunction with the --wait option so that the new site is not created before the old site is fully removed. Deleting and creating classic site collections is by default asynchronous and depending on the current state of Office 365, might take up to few minutes. If you're building a script with steps that require the site to be fully provisioned, you should use the --wait flag. When using this flag, the spo site add command will keep running until it received confirmation from Office 365 that the site has been fully provisioned.","title":"Remarks for classic sites"},{"location":"cmd/spo/site/site-add/#remarks-for-modern-sites","text":"The --owners option is mandatory for creating CommunicationSite sites with app-only permissions. When trying to create a team site using app-only permissions, you will get an Insufficient privileges to complete the operation. error. As a workaround, you can use the aad o365group add command, followed by spo site set to further configure the Team site.","title":"Remarks for modern sites"},{"location":"cmd/spo/site/site-add/#examples","text":"Create modern team site with private group m365 spo site add --alias team1 --title \"Team 1\" Create modern team site with description and classification m365 spo site add --type TeamSite --alias team1 --title \"Team 1\" --description \"Site of team 1\" --classification LBI Create modern team site with public group m365 spo site add --type TeamSite --alias team1 --title \"Team 1\" --isPublic Create modern team site using the Dutch language m365 spo site add --alias team1 --title \"Team 1\" --lcid 1043 Create modern team site with the specified users as owners m365 spo site add --alias team1 --title \"Team 1\" --owners \"steve@contoso.com, bob@contoso.com\" Create communication site using the Topic design m365 spo site add --type CommunicationSite --url https://contoso.sharepoint.com/sites/marketing --title Marketing Create communication site using app-only permissions m365 spo site add --type CommunicationSite --url https://contoso.sharepoint.com/sites/marketing --title Marketing --owners \"john.smith@contoso.com\" Create communication site using the Showcase design m365 spo site add --type CommunicationSite --url https://contoso.sharepoint.com/sites/marketing --title Marketing --siteDesign Showcase Create communication site using a custom site design m365 spo site add --type CommunicationSite --url https://contoso.sharepoint.com/sites/marketing --title Marketing --siteDesignId 99f410fe-dd79-4b9d-8531-f2270c9c621c Create communication site using the Blank design with description and classification m365 spo site add --type CommunicationSite --url https://contoso.sharepoint.com/sites/marketing --title Marketing --description Site of the marketing department --classification MBI --siteDesign Blank Create new classic site collection using the Team site template. Set time zone to UTC+01:00 . Don't wait for the site provisioning to complete m365 spo site add --type ClassicSite --url https://contoso.sharepoint.com/sites/team --title Team --owners admin@contoso.onmicrosoft.com --timeZone 4 Create new classic site collection using the Team site template. Set time zone to UTC+01:00 . Wait for the site provisioning to complete m365 spo site add --type ClassicSite --url https://contoso.sharepoint.com/sites/team --title Team --owners admin@contoso.onmicrosoft.com --timeZone 4 --webTemplate STS#0 --wait Create new classic site collection using the Team site template. Set time zone to UTC+01:00 . If a site with the same URL is in the recycle bin, delete it. Wait for the site provisioning to complete m365 spo site add --type ClassicSite --url https://contoso.sharepoint.com/sites/team --title Team --owners admin@contoso.onmicrosoft.com --timeZone 4 --webTemplate STS#0 --removeDeletedSite --wait","title":"Examples"},{"location":"cmd/spo/site/site-add/#more-information","text":"Creating SharePoint Communication Site using REST: https://docs.microsoft.com/en-us/sharepoint/dev/apis/communication-site-creation-rest","title":"More information"},{"location":"cmd/spo/site/site-appcatalog-add/","text":"spo site appcatalog add \u00b6 Creates a site collection app catalog in the specified site Usage \u00b6 m365 spo site appcatalog add [ options ] Options \u00b6 -u, --siteUrl <siteUrl> URL of the site collection where the app catalog should be added -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Important To use this command you have to have permissions to access the tenant admin site. Examples \u00b6 Add a site collection app catalog to the specified site m365 spo site appcatalog add --siteUrl https://contoso.sharepoint/sites/site More information \u00b6 Use the site collection app catalog: https://docs.microsoft.com/en-us/sharepoint/dev/general-development/site-collection-app-catalog","title":"site appcatalog add"},{"location":"cmd/spo/site/site-appcatalog-add/#spo-site-appcatalog-add","text":"Creates a site collection app catalog in the specified site","title":"spo site appcatalog add"},{"location":"cmd/spo/site/site-appcatalog-add/#usage","text":"m365 spo site appcatalog add [ options ]","title":"Usage"},{"location":"cmd/spo/site/site-appcatalog-add/#options","text":"-u, --siteUrl <siteUrl> URL of the site collection where the app catalog should be added -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Important To use this command you have to have permissions to access the tenant admin site.","title":"Options"},{"location":"cmd/spo/site/site-appcatalog-add/#examples","text":"Add a site collection app catalog to the specified site m365 spo site appcatalog add --siteUrl https://contoso.sharepoint/sites/site","title":"Examples"},{"location":"cmd/spo/site/site-appcatalog-add/#more-information","text":"Use the site collection app catalog: https://docs.microsoft.com/en-us/sharepoint/dev/general-development/site-collection-app-catalog","title":"More information"},{"location":"cmd/spo/site/site-appcatalog-remove/","text":"spo site appcatalog remove \u00b6 Removes site collection app catalog from the specified site Usage \u00b6 m365 spo site appcatalog remove [ options ] Options \u00b6 -u, --siteUrl <siteUrl> URL of the site collection containing the app catalog to disable -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Important To use this command you have to have permissions to access the tenant admin site. Remarks \u00b6 While the command uses the term 'remove' , like its equivalent PowerShell cmdlet, it does not remove the special library Apps for SharePoint from the site collection. Instead, it disables the site collection app catalog in that site. Packages deployed to the app catalog are not available within the site collection. Examples \u00b6 Remove the site collection app catalog from specified site m365 spo site appcatalog remove --siteUrl https://contoso.sharepoint/sites/site More information \u00b6 Use the site collection app catalog: https://docs.microsoft.com/en-us/sharepoint/dev/general-development/site-collection-app-catalog","title":"site appcatalog remove"},{"location":"cmd/spo/site/site-appcatalog-remove/#spo-site-appcatalog-remove","text":"Removes site collection app catalog from the specified site","title":"spo site appcatalog remove"},{"location":"cmd/spo/site/site-appcatalog-remove/#usage","text":"m365 spo site appcatalog remove [ options ]","title":"Usage"},{"location":"cmd/spo/site/site-appcatalog-remove/#options","text":"-u, --siteUrl <siteUrl> URL of the site collection containing the app catalog to disable -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Important To use this command you have to have permissions to access the tenant admin site.","title":"Options"},{"location":"cmd/spo/site/site-appcatalog-remove/#remarks","text":"While the command uses the term 'remove' , like its equivalent PowerShell cmdlet, it does not remove the special library Apps for SharePoint from the site collection. Instead, it disables the site collection app catalog in that site. Packages deployed to the app catalog are not available within the site collection.","title":"Remarks"},{"location":"cmd/spo/site/site-appcatalog-remove/#examples","text":"Remove the site collection app catalog from specified site m365 spo site appcatalog remove --siteUrl https://contoso.sharepoint/sites/site","title":"Examples"},{"location":"cmd/spo/site/site-appcatalog-remove/#more-information","text":"Use the site collection app catalog: https://docs.microsoft.com/en-us/sharepoint/dev/general-development/site-collection-app-catalog","title":"More information"},{"location":"cmd/spo/site/site-apppermission-add/","text":"spo site apppermission add \u00b6 Adds a specific application permissions to the site Usage \u00b6 m365 spo site apppermission add [ options ] Options \u00b6 -u, --siteUrl <siteUrl> URL of the site collection to add the permission -p, --permission <permission> Permission to site ( read , write , manage or fullcontrol ) -i, --appId [appId] Client ID of the Azure AD app for which to grant permissions -n, --appDisplayName [appDisplayName] Display name of the Azure AD app for which to grant permissions -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 To set permissions, specify at minimum either appId or addDisplayName . For best performance specify both values to avoid extra lookup. Example \u00b6 Grants the specified app the read permission to site https://contoso.sharepoint.com/sites/project-x m365 spo site apppermission add --siteUrl https://contoso.sharepoint.com/sites/project-x --permission read --appDisplayName Foo","title":"site apppermission add"},{"location":"cmd/spo/site/site-apppermission-add/#spo-site-apppermission-add","text":"Adds a specific application permissions to the site","title":"spo site apppermission add"},{"location":"cmd/spo/site/site-apppermission-add/#usage","text":"m365 spo site apppermission add [ options ]","title":"Usage"},{"location":"cmd/spo/site/site-apppermission-add/#options","text":"-u, --siteUrl <siteUrl> URL of the site collection to add the permission -p, --permission <permission> Permission to site ( read , write , manage or fullcontrol ) -i, --appId [appId] Client ID of the Azure AD app for which to grant permissions -n, --appDisplayName [appDisplayName] Display name of the Azure AD app for which to grant permissions -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/site/site-apppermission-add/#remarks","text":"To set permissions, specify at minimum either appId or addDisplayName . For best performance specify both values to avoid extra lookup.","title":"Remarks"},{"location":"cmd/spo/site/site-apppermission-add/#example","text":"Grants the specified app the read permission to site https://contoso.sharepoint.com/sites/project-x m365 spo site apppermission add --siteUrl https://contoso.sharepoint.com/sites/project-x --permission read --appDisplayName Foo","title":"Example"},{"location":"cmd/spo/site/site-apppermission-get/","text":"spo site apppermission get \u00b6 Get a specific application permissions for the site Usage \u00b6 m365 spo site apppermission get [ options ] Options \u00b6 -u, --siteUrl <siteUrl> URL of the site collection where the permission to retrieve is located -i, --id <id> ID of the permission to retrieve -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Example \u00b6 Return a specific application permissions for the https://contoso.sharepoint.com/sites/project-x site collection with permission id aTowaS50fG1zLnNwLmV4dHw4OWVhNWM5NC03NzM2LTRlMjUtOTVhZC0zZmE5NWY2MmI2NmVAZGUzNDhiYzctMWFlYi00NDA2LThjYjMtOTdkYjAyMWNhZGI0 m365 spo site apppermission get --siteUrl https://contoso.sharepoint.com/sites/project-x --id aTowaS50fG1zLnNwLmV4dHw4OWVhNWM5NC03NzM2LTRlMjUtOTVhZC0zZmE5NWY2MmI2NmVAZGUzNDhiYzctMWFlYi00NDA2LThjYjMtOTdkYjAyMWNhZGI0","title":"site apppermission get"},{"location":"cmd/spo/site/site-apppermission-get/#spo-site-apppermission-get","text":"Get a specific application permissions for the site","title":"spo site apppermission get"},{"location":"cmd/spo/site/site-apppermission-get/#usage","text":"m365 spo site apppermission get [ options ]","title":"Usage"},{"location":"cmd/spo/site/site-apppermission-get/#options","text":"-u, --siteUrl <siteUrl> URL of the site collection where the permission to retrieve is located -i, --id <id> ID of the permission to retrieve -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/site/site-apppermission-get/#example","text":"Return a specific application permissions for the https://contoso.sharepoint.com/sites/project-x site collection with permission id aTowaS50fG1zLnNwLmV4dHw4OWVhNWM5NC03NzM2LTRlMjUtOTVhZC0zZmE5NWY2MmI2NmVAZGUzNDhiYzctMWFlYi00NDA2LThjYjMtOTdkYjAyMWNhZGI0 m365 spo site apppermission get --siteUrl https://contoso.sharepoint.com/sites/project-x --id aTowaS50fG1zLnNwLmV4dHw4OWVhNWM5NC03NzM2LTRlMjUtOTVhZC0zZmE5NWY2MmI2NmVAZGUzNDhiYzctMWFlYi00NDA2LThjYjMtOTdkYjAyMWNhZGI0","title":"Example"},{"location":"cmd/spo/site/site-apppermission-list/","text":"spo site apppermission list \u00b6 Lists application permissions for a site Usage \u00b6 m365 spo site apppermission list [ options ] Options \u00b6 -u, --siteUrl <siteUrl> URL of the site collection to retrieve information for -i, --appId [appId] Id of the application to filter by -n, --appDisplayName [appDisplayName] Display name of the application to filter by -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 To filter by an app, pass in either appId or appDisplayName not both Examples \u00b6 Return list of application permissions for the https://contoso.sharepoint.com/sites/project-x site collection. m365 spo site apppermission list --siteUrl https://contoso.sharepoint.com/sites/project-x Return list of application permissions for the https://contoso.sharepoint.com/sites/project-x site collection and filter by an application called Foo m365 spo site apppermission list --siteUrl https://contoso.sharepoint.com/sites/project-x --appDisplayName Foo","title":"site apppermission list"},{"location":"cmd/spo/site/site-apppermission-list/#spo-site-apppermission-list","text":"Lists application permissions for a site","title":"spo site apppermission list"},{"location":"cmd/spo/site/site-apppermission-list/#usage","text":"m365 spo site apppermission list [ options ]","title":"Usage"},{"location":"cmd/spo/site/site-apppermission-list/#options","text":"-u, --siteUrl <siteUrl> URL of the site collection to retrieve information for -i, --appId [appId] Id of the application to filter by -n, --appDisplayName [appDisplayName] Display name of the application to filter by -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/site/site-apppermission-list/#remarks","text":"To filter by an app, pass in either appId or appDisplayName not both","title":"Remarks"},{"location":"cmd/spo/site/site-apppermission-list/#examples","text":"Return list of application permissions for the https://contoso.sharepoint.com/sites/project-x site collection. m365 spo site apppermission list --siteUrl https://contoso.sharepoint.com/sites/project-x Return list of application permissions for the https://contoso.sharepoint.com/sites/project-x site collection and filter by an application called Foo m365 spo site apppermission list --siteUrl https://contoso.sharepoint.com/sites/project-x --appDisplayName Foo","title":"Examples"},{"location":"cmd/spo/site/site-apppermission-remove/","text":"spo site apppermission remove \u00b6 Removes a specific application permission from a site Usage \u00b6 m365 spo site apppermission remove [ options ] Options \u00b6 -u, --siteUrl <siteUrl> URL of the site collection where the permission to remove is located --appId [appId] App Id -n, --appDisplayName [appDisplayName] App display name -i, --id [id] ID of the permission to remove --confirm Don't prompt for confirmation -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Example \u00b6 Removes all application permissions for application with id 89ea5c94-7736-4e25-95ad-3fa95f62b66e on site https://contoso.sharepoint.com/sites/project-x m365 spo site apppermission remove --siteUrl https://contoso.sharepoint.com/sites/project-x --appId 89ea5c94-7736-4e25-95ad-3fa95f62b66e Removes all application permissions for application named Foo on site https://contoso.sharepoint.com/sites/project-x m365 spo site apppermission remove --siteUrl https://contoso.sharepoint.com/sites/project-x --appDisplayName Foo Removes the application permission with the specified ID on site https://contoso.sharepoint.com/sites/project-x m365 spo site apppermission remove --siteUrl https://contoso.sharepoint.com/sites/project-x --id aTowaS50fG1zLnNwLmV4dHw4OWVhNWM5NC03NzM2LTRlMjUtOTVhZC0zZmE5NWY2MmI2NmVAZGUzNDhiYzctMWFlYi00NDA2LThjYjMtOTdkYjAyMWNhZGI0","title":"site apppermission remove"},{"location":"cmd/spo/site/site-apppermission-remove/#spo-site-apppermission-remove","text":"Removes a specific application permission from a site","title":"spo site apppermission remove"},{"location":"cmd/spo/site/site-apppermission-remove/#usage","text":"m365 spo site apppermission remove [ options ]","title":"Usage"},{"location":"cmd/spo/site/site-apppermission-remove/#options","text":"-u, --siteUrl <siteUrl> URL of the site collection where the permission to remove is located --appId [appId] App Id -n, --appDisplayName [appDisplayName] App display name -i, --id [id] ID of the permission to remove --confirm Don't prompt for confirmation -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/site/site-apppermission-remove/#example","text":"Removes all application permissions for application with id 89ea5c94-7736-4e25-95ad-3fa95f62b66e on site https://contoso.sharepoint.com/sites/project-x m365 spo site apppermission remove --siteUrl https://contoso.sharepoint.com/sites/project-x --appId 89ea5c94-7736-4e25-95ad-3fa95f62b66e Removes all application permissions for application named Foo on site https://contoso.sharepoint.com/sites/project-x m365 spo site apppermission remove --siteUrl https://contoso.sharepoint.com/sites/project-x --appDisplayName Foo Removes the application permission with the specified ID on site https://contoso.sharepoint.com/sites/project-x m365 spo site apppermission remove --siteUrl https://contoso.sharepoint.com/sites/project-x --id aTowaS50fG1zLnNwLmV4dHw4OWVhNWM5NC03NzM2LTRlMjUtOTVhZC0zZmE5NWY2MmI2NmVAZGUzNDhiYzctMWFlYi00NDA2LThjYjMtOTdkYjAyMWNhZGI0","title":"Example"},{"location":"cmd/spo/site/site-apppermission-set/","text":"spo site apppermission set \u00b6 Updates a specific application permission for a site Usage \u00b6 m365 spo site apppermission set [ options ] Options \u00b6 -u, --siteUrl <siteUrl> URL of the site collection where the permission to retrieve is located -i, --id [id] ID of the permission to update. Specify id , appId or appDisplayName --appId [appId] Client ID of the Azure AD app for which to update permissions. Specify id , appId or appDisplayName -n, --appDisplayName [appDisplayName] Display name of the Azure AD app for which to update permissions. Specify id , appId or appDisplayName -p, --permission <permission> Permission to site ( read , write , manage or fullcontrol ) -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Updates a specific application permission to read for the https://contoso.sharepoint.com/sites/project-x site collection with permission id aTowaS50fG1zLnNwLmV4dHw4OWVhNWM5NC03NzM2LTRlMjUtOTVhZC0zZmE5NWY2MmI2NmVAZGUzNDhiYzctMWFlYi00NDA2LThjYjMtOTdkYjAyMWNhZGI0 m365 spo site apppermission set --siteUrl https://contoso.sharepoint.com/sites/project-x --id aTowaS50fG1zLnNwLmV4dHw4OWVhNWM5NC03NzM2LTRlMjUtOTVhZC0zZmE5NWY2MmI2NmVAZGUzNDhiYzctMWFlYi00NDA2LThjYjMtOTdkYjAyMWNhZGI0 --permission read Updates a specific application permission to read for the https://contoso.sharepoint.com/sites/project-x site collection with an application called Foo m365 spo site apppermission set --siteUrl https://contoso.sharepoint.com/sites/project-x --appDisplayName Foo --permission read Updates a specific application permission to read for the https://contoso.sharepoint.com/sites/project-x site collection with an application id 89ea5c94-7736-4e25-95ad-3fa95f62b66e m365 spo site apppermission set --siteUrl https://contoso.sharepoint.com/sites/project-x --appId 89ea5c94-7736-4e25-95ad-3fa95f62b66e --permission read","title":"site apppermission set"},{"location":"cmd/spo/site/site-apppermission-set/#spo-site-apppermission-set","text":"Updates a specific application permission for a site","title":"spo site apppermission set"},{"location":"cmd/spo/site/site-apppermission-set/#usage","text":"m365 spo site apppermission set [ options ]","title":"Usage"},{"location":"cmd/spo/site/site-apppermission-set/#options","text":"-u, --siteUrl <siteUrl> URL of the site collection where the permission to retrieve is located -i, --id [id] ID of the permission to update. Specify id , appId or appDisplayName --appId [appId] Client ID of the Azure AD app for which to update permissions. Specify id , appId or appDisplayName -n, --appDisplayName [appDisplayName] Display name of the Azure AD app for which to update permissions. Specify id , appId or appDisplayName -p, --permission <permission> Permission to site ( read , write , manage or fullcontrol ) -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/site/site-apppermission-set/#examples","text":"Updates a specific application permission to read for the https://contoso.sharepoint.com/sites/project-x site collection with permission id aTowaS50fG1zLnNwLmV4dHw4OWVhNWM5NC03NzM2LTRlMjUtOTVhZC0zZmE5NWY2MmI2NmVAZGUzNDhiYzctMWFlYi00NDA2LThjYjMtOTdkYjAyMWNhZGI0 m365 spo site apppermission set --siteUrl https://contoso.sharepoint.com/sites/project-x --id aTowaS50fG1zLnNwLmV4dHw4OWVhNWM5NC03NzM2LTRlMjUtOTVhZC0zZmE5NWY2MmI2NmVAZGUzNDhiYzctMWFlYi00NDA2LThjYjMtOTdkYjAyMWNhZGI0 --permission read Updates a specific application permission to read for the https://contoso.sharepoint.com/sites/project-x site collection with an application called Foo m365 spo site apppermission set --siteUrl https://contoso.sharepoint.com/sites/project-x --appDisplayName Foo --permission read Updates a specific application permission to read for the https://contoso.sharepoint.com/sites/project-x site collection with an application id 89ea5c94-7736-4e25-95ad-3fa95f62b66e m365 spo site apppermission set --siteUrl https://contoso.sharepoint.com/sites/project-x --appId 89ea5c94-7736-4e25-95ad-3fa95f62b66e --permission read","title":"Examples"},{"location":"cmd/spo/site/site-chrome-set/","text":"spo site chrome set \u00b6 Set the chrome header and footer for the specified site Usage \u00b6 m365 spo site chrome set [ options ] Options \u00b6 -u, --siteUrl <siteUrl> URL of the site collection to which you want to change the chrome header/footer --headerLayout [headerLayout] Header layout to set on the site. Options: Standard|Compact|Minimal|Extended . --headerEmphasis [headerEmphasis] Header background to set on the site. Options: Lightest|Light|Dark|Darkest . --logoAlignment [logoAlignment] Logo position when header layout set to Extended . Ignored otherwise. Options: Left|Center|Right . --footerLayout [footerLayout] Footer layout to set on the site. Options: Simple|Extended . --footerEmphasis [footerEmphasis] Footer background color to set. Options: Lightest|Light|Dark|Darkest . --disableMegaMenu [disableMegaMenu] Set to true to disable the mega menu and to false to enable it. Disabling mega menu results in using the cascading navigation (classic experience). Options: true|false . --hideTitleInHeader [hideTitleInHeader] Set to true to hide the site title in the header and to false to show it. Options: true|false . --disableFooter [disableFooter] Set to true to disable the footer on the site and to false to enable it. Options: true|false . Examples \u00b6 Show site header in compact mode m365 spo site chrome set --siteUrl https://contoso.sharepoint.com/sites/project-x --headerLayout Compact Show site header in extended mode and display the logo on the right m365 spo site chrome set --siteUrl https://contoso.sharepoint.com/sites/project-x --headerLayout Extended --logoAlignment Right Disable the footer on the site m365 spo site chrome set --siteUrl https://contoso.sharepoint.com/sites/project-x --disableFooter true","title":"site chrome set"},{"location":"cmd/spo/site/site-chrome-set/#spo-site-chrome-set","text":"Set the chrome header and footer for the specified site","title":"spo site chrome set"},{"location":"cmd/spo/site/site-chrome-set/#usage","text":"m365 spo site chrome set [ options ]","title":"Usage"},{"location":"cmd/spo/site/site-chrome-set/#options","text":"-u, --siteUrl <siteUrl> URL of the site collection to which you want to change the chrome header/footer --headerLayout [headerLayout] Header layout to set on the site. Options: Standard|Compact|Minimal|Extended . --headerEmphasis [headerEmphasis] Header background to set on the site. Options: Lightest|Light|Dark|Darkest . --logoAlignment [logoAlignment] Logo position when header layout set to Extended . Ignored otherwise. Options: Left|Center|Right . --footerLayout [footerLayout] Footer layout to set on the site. Options: Simple|Extended . --footerEmphasis [footerEmphasis] Footer background color to set. Options: Lightest|Light|Dark|Darkest . --disableMegaMenu [disableMegaMenu] Set to true to disable the mega menu and to false to enable it. Disabling mega menu results in using the cascading navigation (classic experience). Options: true|false . --hideTitleInHeader [hideTitleInHeader] Set to true to hide the site title in the header and to false to show it. Options: true|false . --disableFooter [disableFooter] Set to true to disable the footer on the site and to false to enable it. Options: true|false .","title":"Options"},{"location":"cmd/spo/site/site-chrome-set/#examples","text":"Show site header in compact mode m365 spo site chrome set --siteUrl https://contoso.sharepoint.com/sites/project-x --headerLayout Compact Show site header in extended mode and display the logo on the right m365 spo site chrome set --siteUrl https://contoso.sharepoint.com/sites/project-x --headerLayout Extended --logoAlignment Right Disable the footer on the site m365 spo site chrome set --siteUrl https://contoso.sharepoint.com/sites/project-x --disableFooter true","title":"Examples"},{"location":"cmd/spo/site/site-commsite-enable/","text":"spo site commsite enable \u00b6 Enables communication site features on the specified site Usage \u00b6 m365 spo site commsite enable [ options ] Options \u00b6 -u, --url <url> The URL of the site to enable communication site features on -i, --designPackageId [designPackageId] The ID of the site design to apply when enabling communication site features -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Important To use this command you have to have permissions to access the tenant admin site. Examples \u00b6 Enable communication site features on an existing site m365 spo site commsite enable --url https://contoso.sharepoint.com","title":"site commsite enable"},{"location":"cmd/spo/site/site-commsite-enable/#spo-site-commsite-enable","text":"Enables communication site features on the specified site","title":"spo site commsite enable"},{"location":"cmd/spo/site/site-commsite-enable/#usage","text":"m365 spo site commsite enable [ options ]","title":"Usage"},{"location":"cmd/spo/site/site-commsite-enable/#options","text":"-u, --url <url> The URL of the site to enable communication site features on -i, --designPackageId [designPackageId] The ID of the site design to apply when enabling communication site features -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Important To use this command you have to have permissions to access the tenant admin site.","title":"Options"},{"location":"cmd/spo/site/site-commsite-enable/#examples","text":"Enable communication site features on an existing site m365 spo site commsite enable --url https://contoso.sharepoint.com","title":"Examples"},{"location":"cmd/spo/site/site-ensure/","text":"spo site ensure \u00b6 Ensures that the particular site collection exists and updates its properties if necessary. The command is a combination of spo web get , spo site add and spo site set . Usage \u00b6 m365 spo site ensure [ options ] Options \u00b6 -u, --url <url> URL of the site to ensure --type [type] Expected type of the site. Allowed values TeamSite,CommunicationSite,ClassicSite . If not specified, will not check the type of the site if one exists at the specified URL. -t, --title <title> Site title -a, --alias [alias] Site alias, used in the URL and in the team site group e-mail (applies to type TeamSite ) -z, --timeZone [timeZone] Integer representing time zone to use for the site (applies to type ClassicSite ) -d, --description [description] Site description -l, --lcid [lcid] Site language in the LCID format, eg. 1033 for en-US . See SharePoint documentation for the list of supported languages --owners [owners] Comma-separated list of users to set as site owners (applies to type TeamSite, ClassicSite) --isPublic Determines if the associated group is public or not (applies to type TeamSite ) -c, --classification [classification] Site classification (applies to type TeamSite , CommunicationSite ) --siteDesign [siteDesign] Type of communication site to create. Allowed values Topic,Showcase,Blank , default Topic . Used only for creating site when one doesn't exist. --siteDesignId [siteDesignId] Id of the custom site design to use to create the site. When creating a communication site, specify either siteDesign or siteDesignId (applies to type CommunicationSite ) --shareByEmailEnabled Determines whether it's allowed to share file with guests (applies to type CommunicationSite ) -w, --webTemplate [webTemplate] Template to use for creating the site. Default STS#0 (applies to type ClassicSite ) --resourceQuota [resourceQuota] The quota for this site collection in Sandboxed Solutions units. Default 0 (applies to type ClassicSite ) --resourceQuotaWarningLevel [resourceQuotaWarningLevel] The warning level for the resource quota. Default 0 (applies to type ClassicSite ) --storageQuota [storageQuota] The storage quota for this site collection in megabytes. Default 100 (applies to type ClassicSite ) --storageQuotaWarningLevel [storageQuotaWarningLevel] The warning level for the storage quota in megabytes. Default 100 (applies to type ClassicSite ) --removeDeletedSite Set, to remove existing deleted site with the same URL from the Recycle Bin (applies to type ClassicSite ) --wait Wait for the site to be provisioned before completing the command (applies to type ClassicSite ) --disableFlows [disableFlows] Set to true to disable using Microsoft Flow in this site collection --sharingCapability [sharingCapability] The sharing capability for the site. Allowed values: Disabled , ExternalUserSharingOnly , ExternalUserAndGuestSharing , ExistingExternalUserSharingOnly . -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 This command checks if a site collection exists at the specified URL. If no site is found, this command will create one using the specified options. For more information about creating site collections and things that you should into account, see the spo site add command. If a site is found at the specified URL, this command will update its properties using the specified values. For more information about updating site collections and things that you should take into account see the spo site set command. If another site exists at the specified URL and you haven't specified the type option, this command will proceed with updating its properties. If you specified the type and it doesn't match the type of the existing site, this command will return an error. If you set the type to ClassicSite , you should also set a value of the webTemplate option. If you don't, checking the type of existing site will be skipped. If no site exists at the specified URL, creating the site will fail. Examples \u00b6 Ensure that a site exists at the specified URL. Create a modern team site if no site exists. If a site is found, don't check its type and update its title. m365 spo site ensure --url https://contoso.sharepoint.com/sites/team1 --alias team1 --title \"Team 1\" Ensure that a communication site exists at the specified URL. Create a communication site if no site exists. If a site of different type is found, return an error. m365 spo site ensure --url https://contoso.sharepoint.com/sites/comms --title Comms --type CommunicationSite Ensure that a classic site exists at the specified URL. Create a classic team site if no site exists. If a site of different type is found, return an error. m365 spo site ensure --url https://contoso.sharepoint.com/sites/classic --title Classic --type ClassicSite Ensure that a site exists at the specified URL. Create a modern team site if no site exists. If a site is found, don't check its type and update its title and properties. m365 spo site ensure --url https://contoso.sharepoint.com/sites/team1 --alias team1 --title \"Team 1\" --isPublic --shareByEmailEnabled More information \u00b6 spo site add spo site set","title":"site ensure"},{"location":"cmd/spo/site/site-ensure/#spo-site-ensure","text":"Ensures that the particular site collection exists and updates its properties if necessary. The command is a combination of spo web get , spo site add and spo site set .","title":"spo site ensure"},{"location":"cmd/spo/site/site-ensure/#usage","text":"m365 spo site ensure [ options ]","title":"Usage"},{"location":"cmd/spo/site/site-ensure/#options","text":"-u, --url <url> URL of the site to ensure --type [type] Expected type of the site. Allowed values TeamSite,CommunicationSite,ClassicSite . If not specified, will not check the type of the site if one exists at the specified URL. -t, --title <title> Site title -a, --alias [alias] Site alias, used in the URL and in the team site group e-mail (applies to type TeamSite ) -z, --timeZone [timeZone] Integer representing time zone to use for the site (applies to type ClassicSite ) -d, --description [description] Site description -l, --lcid [lcid] Site language in the LCID format, eg. 1033 for en-US . See SharePoint documentation for the list of supported languages --owners [owners] Comma-separated list of users to set as site owners (applies to type TeamSite, ClassicSite) --isPublic Determines if the associated group is public or not (applies to type TeamSite ) -c, --classification [classification] Site classification (applies to type TeamSite , CommunicationSite ) --siteDesign [siteDesign] Type of communication site to create. Allowed values Topic,Showcase,Blank , default Topic . Used only for creating site when one doesn't exist. --siteDesignId [siteDesignId] Id of the custom site design to use to create the site. When creating a communication site, specify either siteDesign or siteDesignId (applies to type CommunicationSite ) --shareByEmailEnabled Determines whether it's allowed to share file with guests (applies to type CommunicationSite ) -w, --webTemplate [webTemplate] Template to use for creating the site. Default STS#0 (applies to type ClassicSite ) --resourceQuota [resourceQuota] The quota for this site collection in Sandboxed Solutions units. Default 0 (applies to type ClassicSite ) --resourceQuotaWarningLevel [resourceQuotaWarningLevel] The warning level for the resource quota. Default 0 (applies to type ClassicSite ) --storageQuota [storageQuota] The storage quota for this site collection in megabytes. Default 100 (applies to type ClassicSite ) --storageQuotaWarningLevel [storageQuotaWarningLevel] The warning level for the storage quota in megabytes. Default 100 (applies to type ClassicSite ) --removeDeletedSite Set, to remove existing deleted site with the same URL from the Recycle Bin (applies to type ClassicSite ) --wait Wait for the site to be provisioned before completing the command (applies to type ClassicSite ) --disableFlows [disableFlows] Set to true to disable using Microsoft Flow in this site collection --sharingCapability [sharingCapability] The sharing capability for the site. Allowed values: Disabled , ExternalUserSharingOnly , ExternalUserAndGuestSharing , ExistingExternalUserSharingOnly . -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/site/site-ensure/#remarks","text":"This command checks if a site collection exists at the specified URL. If no site is found, this command will create one using the specified options. For more information about creating site collections and things that you should into account, see the spo site add command. If a site is found at the specified URL, this command will update its properties using the specified values. For more information about updating site collections and things that you should take into account see the spo site set command. If another site exists at the specified URL and you haven't specified the type option, this command will proceed with updating its properties. If you specified the type and it doesn't match the type of the existing site, this command will return an error. If you set the type to ClassicSite , you should also set a value of the webTemplate option. If you don't, checking the type of existing site will be skipped. If no site exists at the specified URL, creating the site will fail.","title":"Remarks"},{"location":"cmd/spo/site/site-ensure/#examples","text":"Ensure that a site exists at the specified URL. Create a modern team site if no site exists. If a site is found, don't check its type and update its title. m365 spo site ensure --url https://contoso.sharepoint.com/sites/team1 --alias team1 --title \"Team 1\" Ensure that a communication site exists at the specified URL. Create a communication site if no site exists. If a site of different type is found, return an error. m365 spo site ensure --url https://contoso.sharepoint.com/sites/comms --title Comms --type CommunicationSite Ensure that a classic site exists at the specified URL. Create a classic team site if no site exists. If a site of different type is found, return an error. m365 spo site ensure --url https://contoso.sharepoint.com/sites/classic --title Classic --type ClassicSite Ensure that a site exists at the specified URL. Create a modern team site if no site exists. If a site is found, don't check its type and update its title and properties. m365 spo site ensure --url https://contoso.sharepoint.com/sites/team1 --alias team1 --title \"Team 1\" --isPublic --shareByEmailEnabled","title":"Examples"},{"location":"cmd/spo/site/site-ensure/#more-information","text":"spo site add spo site set","title":"More information"},{"location":"cmd/spo/site/site-get/","text":"spo site get \u00b6 Gets information about the specific site collection Usage \u00b6 m365 spo site get [ options ] Options \u00b6 -u, --url <url> URL of the site collection to retrieve information for -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 This command can retrieve information for both classic and modern sites. Examples \u00b6 Return information about the https://contoso.sharepoint.com/sites/project-x site collection. m365 spo site get -u https://contoso.sharepoint.com/sites/project-x","title":"site get"},{"location":"cmd/spo/site/site-get/#spo-site-get","text":"Gets information about the specific site collection","title":"spo site get"},{"location":"cmd/spo/site/site-get/#usage","text":"m365 spo site get [ options ]","title":"Usage"},{"location":"cmd/spo/site/site-get/#options","text":"-u, --url <url> URL of the site collection to retrieve information for -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/site/site-get/#remarks","text":"This command can retrieve information for both classic and modern sites.","title":"Remarks"},{"location":"cmd/spo/site/site-get/#examples","text":"Return information about the https://contoso.sharepoint.com/sites/project-x site collection. m365 spo site get -u https://contoso.sharepoint.com/sites/project-x","title":"Examples"},{"location":"cmd/spo/site/site-groupify/","text":"spo site groupify \u00b6 Connects site collection to an Microsoft 365 Group Attention This command is based on a SharePoint API that is currently in preview and is subject to change once the API reached general availability. Usage \u00b6 m365 spo site groupify [ options ] Options \u00b6 -u, --url <url> URL of the site collection being connected to new Microsoft 365 Group -a, --alias <alias> The email alias for the new Microsoft 365 Group that will be created -n, --displayName <displayName> The name of the new Microsoft 365 Group that will be created -d, --description [description] The group\u2019s description -c, --classification [classification] The classification value, if classifications are set for the organization. If no value is provided, the default classification will be set, if one is configured --isPublic Determines the Microsoft 365 Group\u2019s privacy setting. If set, the group will be public, otherwise it will be private --keepOldHomepage For sites that already have a modern page set as homepage, set this option, to keep it as the homepage -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 When connecting site collection to an Microsoft 365 Group, SharePoint will create a new group using the specified information. If a group with the same name already exists, you will get a The group alias already exists. error. Examples \u00b6 Connect site collection to an Microsoft 365 Group m365 spo site groupify --url https://contoso.sharepoin.com/sites/team-a --alias team-a --displayName 'Team A' Connect site collection to an Microsoft 365 Group and make the group public m365 spo site groupify --url https://contoso.sharepoin.com/sites/team-a --alias team-a --displayName 'Team A' --isPublic Connect site collection to an Microsoft 365 Group and set the group classification m365 spo site groupify --url https://contoso.sharepoin.com/sites/team-a --alias team-a --displayName 'Team A' --classification HBI Connect site collection to an Microsoft 365 Group and keep the old home page m365 spo site groupify --url https://contoso.sharepoin.com/sites/team-a --alias team-a --displayName 'Team A' --keepOldHomepage More information \u00b6 Overview of the \"Log in to new Microsoft 365 group\" feature: https://docs.microsoft.com/en-us/sharepoint/dev/features/groupify/groupify-overview","title":"site groupify"},{"location":"cmd/spo/site/site-groupify/#spo-site-groupify","text":"Connects site collection to an Microsoft 365 Group Attention This command is based on a SharePoint API that is currently in preview and is subject to change once the API reached general availability.","title":"spo site groupify"},{"location":"cmd/spo/site/site-groupify/#usage","text":"m365 spo site groupify [ options ]","title":"Usage"},{"location":"cmd/spo/site/site-groupify/#options","text":"-u, --url <url> URL of the site collection being connected to new Microsoft 365 Group -a, --alias <alias> The email alias for the new Microsoft 365 Group that will be created -n, --displayName <displayName> The name of the new Microsoft 365 Group that will be created -d, --description [description] The group\u2019s description -c, --classification [classification] The classification value, if classifications are set for the organization. If no value is provided, the default classification will be set, if one is configured --isPublic Determines the Microsoft 365 Group\u2019s privacy setting. If set, the group will be public, otherwise it will be private --keepOldHomepage For sites that already have a modern page set as homepage, set this option, to keep it as the homepage -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/site/site-groupify/#remarks","text":"When connecting site collection to an Microsoft 365 Group, SharePoint will create a new group using the specified information. If a group with the same name already exists, you will get a The group alias already exists. error.","title":"Remarks"},{"location":"cmd/spo/site/site-groupify/#examples","text":"Connect site collection to an Microsoft 365 Group m365 spo site groupify --url https://contoso.sharepoin.com/sites/team-a --alias team-a --displayName 'Team A' Connect site collection to an Microsoft 365 Group and make the group public m365 spo site groupify --url https://contoso.sharepoin.com/sites/team-a --alias team-a --displayName 'Team A' --isPublic Connect site collection to an Microsoft 365 Group and set the group classification m365 spo site groupify --url https://contoso.sharepoin.com/sites/team-a --alias team-a --displayName 'Team A' --classification HBI Connect site collection to an Microsoft 365 Group and keep the old home page m365 spo site groupify --url https://contoso.sharepoin.com/sites/team-a --alias team-a --displayName 'Team A' --keepOldHomepage","title":"Examples"},{"location":"cmd/spo/site/site-groupify/#more-information","text":"Overview of the \"Log in to new Microsoft 365 group\" feature: https://docs.microsoft.com/en-us/sharepoint/dev/features/groupify/groupify-overview","title":"More information"},{"location":"cmd/spo/site/site-hubsite-connect/","text":"spo site hubsite connect \u00b6 Connects the specified site collection to the given hub site Usage \u00b6 m365 spo site hubsite connect [ options ] Options \u00b6 -u, --siteUrl <siteUrl> The URL of the site collection to connect to the hub site -i, --id <id> The ID of the hub site to which to connect the site collection -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 Attention This command is based on a SharePoint API that is currently in preview and is subject to change once the API reached general availability. If the specified site collection is already connected to a hub site, it will be disconnected and connected to the newly specified hub site. If the specified id doesn't point to a valid hub site, you will get a ResourceNotFoundException error. Examples \u00b6 Connect a specific site collection to a hub site m365 spo site hubsite connect --siteUrl https://contoso.sharepoint.com/sites/contoso-sales --id 255a50b2-527f-4413-8485-57f4c17a24d1 More information \u00b6 SharePoint hub sites new in Microsoft 365: https://techcommunity.microsoft.com/t5/SharePoint-Blog/SharePoint-hub-sites-new-in-Office-365/ba-p/109547","title":"site hubsite connect"},{"location":"cmd/spo/site/site-hubsite-connect/#spo-site-hubsite-connect","text":"Connects the specified site collection to the given hub site","title":"spo site hubsite connect"},{"location":"cmd/spo/site/site-hubsite-connect/#usage","text":"m365 spo site hubsite connect [ options ]","title":"Usage"},{"location":"cmd/spo/site/site-hubsite-connect/#options","text":"-u, --siteUrl <siteUrl> The URL of the site collection to connect to the hub site -i, --id <id> The ID of the hub site to which to connect the site collection -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/site/site-hubsite-connect/#remarks","text":"Attention This command is based on a SharePoint API that is currently in preview and is subject to change once the API reached general availability. If the specified site collection is already connected to a hub site, it will be disconnected and connected to the newly specified hub site. If the specified id doesn't point to a valid hub site, you will get a ResourceNotFoundException error.","title":"Remarks"},{"location":"cmd/spo/site/site-hubsite-connect/#examples","text":"Connect a specific site collection to a hub site m365 spo site hubsite connect --siteUrl https://contoso.sharepoint.com/sites/contoso-sales --id 255a50b2-527f-4413-8485-57f4c17a24d1","title":"Examples"},{"location":"cmd/spo/site/site-hubsite-connect/#more-information","text":"SharePoint hub sites new in Microsoft 365: https://techcommunity.microsoft.com/t5/SharePoint-Blog/SharePoint-hub-sites-new-in-Office-365/ba-p/109547","title":"More information"},{"location":"cmd/spo/site/site-hubsite-disconnect/","text":"spo site hubsite disconnect \u00b6 Disconnects the specified site collection from its hub site Usage \u00b6 m365 spo site hubsite disconnect [ options ] Options \u00b6 -u, --siteUrl <siteUrl> URL of the site collection to disconnect from its hub site --confirm Don't prompt for confirmation -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 Attention This command is based on a SharePoint API that is currently in preview and is subject to change once the API reached general availability. Examples \u00b6 Disconnect a specific site collection from its hub site. Will prompt for confirmation before disconnecting from the hub site. m365 spo site hubsite disconnect --siteUrl https://contoso.sharepoint.com/sites/sales Disconnect a specific site collection from its hub site without prompting for confirmation. m365 spo site hubsite disconnect --siteUrl https://contoso.sharepoint.com/sites/sales --confirm More information \u00b6 SharePoint hub sites new in Microsoft 365: https://techcommunity.microsoft.com/t5/SharePoint-Blog/SharePoint-hub-sites-new-in-Office-365/ba-p/109547","title":"site hubsite disconnect"},{"location":"cmd/spo/site/site-hubsite-disconnect/#spo-site-hubsite-disconnect","text":"Disconnects the specified site collection from its hub site","title":"spo site hubsite disconnect"},{"location":"cmd/spo/site/site-hubsite-disconnect/#usage","text":"m365 spo site hubsite disconnect [ options ]","title":"Usage"},{"location":"cmd/spo/site/site-hubsite-disconnect/#options","text":"-u, --siteUrl <siteUrl> URL of the site collection to disconnect from its hub site --confirm Don't prompt for confirmation -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/site/site-hubsite-disconnect/#remarks","text":"Attention This command is based on a SharePoint API that is currently in preview and is subject to change once the API reached general availability.","title":"Remarks"},{"location":"cmd/spo/site/site-hubsite-disconnect/#examples","text":"Disconnect a specific site collection from its hub site. Will prompt for confirmation before disconnecting from the hub site. m365 spo site hubsite disconnect --siteUrl https://contoso.sharepoint.com/sites/sales Disconnect a specific site collection from its hub site without prompting for confirmation. m365 spo site hubsite disconnect --siteUrl https://contoso.sharepoint.com/sites/sales --confirm","title":"Examples"},{"location":"cmd/spo/site/site-hubsite-disconnect/#more-information","text":"SharePoint hub sites new in Microsoft 365: https://techcommunity.microsoft.com/t5/SharePoint-Blog/SharePoint-hub-sites-new-in-Office-365/ba-p/109547","title":"More information"},{"location":"cmd/spo/site/site-hubsite-theme-sync/","text":"spo site hubsite theme sync \u00b6 Applies any theme updates from the hub site the site is connected to. Usage \u00b6 m365 spo site hubsite theme sync [ options ] Options \u00b6 -u, --webUrl <webUrl> URL of the site to apply theme updates from the hub site to. -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 Attention This command is based on a SharePoint API that is currently in preview and is subject to change once the API reached general availability. Examples \u00b6 Applies any theme updates from the hub site to a specific site m365 spo site hubsite theme sync --webUrl https://contoso.sharepoint.com/sites/project-x More information \u00b6 SharePoint hub sites new in Microsoft 365: https://techcommunity.microsoft.com/t5/SharePoint-Blog/SharePoint-hub-sites-new-in-Office-365/ba-p/109547","title":"site hubsite theme sync"},{"location":"cmd/spo/site/site-hubsite-theme-sync/#spo-site-hubsite-theme-sync","text":"Applies any theme updates from the hub site the site is connected to.","title":"spo site hubsite theme sync"},{"location":"cmd/spo/site/site-hubsite-theme-sync/#usage","text":"m365 spo site hubsite theme sync [ options ]","title":"Usage"},{"location":"cmd/spo/site/site-hubsite-theme-sync/#options","text":"-u, --webUrl <webUrl> URL of the site to apply theme updates from the hub site to. -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/site/site-hubsite-theme-sync/#remarks","text":"Attention This command is based on a SharePoint API that is currently in preview and is subject to change once the API reached general availability.","title":"Remarks"},{"location":"cmd/spo/site/site-hubsite-theme-sync/#examples","text":"Applies any theme updates from the hub site to a specific site m365 spo site hubsite theme sync --webUrl https://contoso.sharepoint.com/sites/project-x","title":"Examples"},{"location":"cmd/spo/site/site-hubsite-theme-sync/#more-information","text":"SharePoint hub sites new in Microsoft 365: https://techcommunity.microsoft.com/t5/SharePoint-Blog/SharePoint-hub-sites-new-in-Office-365/ba-p/109547","title":"More information"},{"location":"cmd/spo/site/site-inplacerecordsmanagement-set/","text":"spo site inplacerecordsmanagement set \u00b6 Activates or deactivates in-place records management for a site collection Usage \u00b6 m365 spo site inplacerecordsmanagement set [ options ] Options \u00b6 -u, --siteUrl <siteUrl> The URL of the site on which to activate or deactivate in-place records management --enabled <enabled> Set to true to activate in-place records management and to false to deactivate it -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Activates in-place records management for site https://contoso.sharepoint.com/sites/team-a m365 spo site inplacerecordsmanagement set --siteUrl https://contoso.sharepoint.com/sites/team-a --enabled true Deactivates in-place records management for site https://contoso.sharepoint.com/sites/team-a m365 spo site inplacerecordsmanagement set --siteUrl https://contoso.sharepoint.com/sites/team-a --enabled false","title":"site inplacerecordsmanagement set"},{"location":"cmd/spo/site/site-inplacerecordsmanagement-set/#spo-site-inplacerecordsmanagement-set","text":"Activates or deactivates in-place records management for a site collection","title":"spo site inplacerecordsmanagement set"},{"location":"cmd/spo/site/site-inplacerecordsmanagement-set/#usage","text":"m365 spo site inplacerecordsmanagement set [ options ]","title":"Usage"},{"location":"cmd/spo/site/site-inplacerecordsmanagement-set/#options","text":"-u, --siteUrl <siteUrl> The URL of the site on which to activate or deactivate in-place records management --enabled <enabled> Set to true to activate in-place records management and to false to deactivate it -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/site/site-inplacerecordsmanagement-set/#examples","text":"Activates in-place records management for site https://contoso.sharepoint.com/sites/team-a m365 spo site inplacerecordsmanagement set --siteUrl https://contoso.sharepoint.com/sites/team-a --enabled true Deactivates in-place records management for site https://contoso.sharepoint.com/sites/team-a m365 spo site inplacerecordsmanagement set --siteUrl https://contoso.sharepoint.com/sites/team-a --enabled false","title":"Examples"},{"location":"cmd/spo/site/site-list/","text":"spo site list \u00b6 Lists modern sites of the given type Usage \u00b6 m365 spo site list [ options ] Options \u00b6 -t, --type [type] convenience option for type of sites to list. Allowed values are TeamSite,CommunicationSite . --webTemplate [webTemplate] type of sites to list. To be used with values like GROUP#0 and SITEPAGEPUBLISHING#0 . Specify either type or webTemplate , but not both. -f, --filter [filter] filter to apply when retrieving sites --includeOneDriveSites use this switch to include OneDrive sites in the result when retrieving sites. Do not specify the type or webTemplate options when using this. --deleted use this switch to only return deleted sites -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Important To use this command you have to have permissions to access the tenant admin site. Remarks \u00b6 Using the -f, --filter option you can specify which sites you want to retrieve. For example, to get sites with project in their URL, use Url -like 'project' as the filter. When using the text output type, the command lists only the values of the Title , and Url properties of the site. When setting the output type to JSON, all available properties are included in the command output. Examples \u00b6 List all sites in the currently connected tenant m365 spo site list List all group connected team sites in the currently connected tenant m365 spo site list --type TeamSite List all communication sites in the currently connected tenant m365 spo site list --type CommunicationSite List all group connected team sites that contain project in the URL m365 spo site list --type TeamSite --filter \"Url -like 'project'\" List all sites in the currently connected tenant including OneDrive sites m365 spo site list --includeOneDriveSites List all deleted sites in the tenant you're logged in to m365 spo site list --deleted","title":"site list"},{"location":"cmd/spo/site/site-list/#spo-site-list","text":"Lists modern sites of the given type","title":"spo site list"},{"location":"cmd/spo/site/site-list/#usage","text":"m365 spo site list [ options ]","title":"Usage"},{"location":"cmd/spo/site/site-list/#options","text":"-t, --type [type] convenience option for type of sites to list. Allowed values are TeamSite,CommunicationSite . --webTemplate [webTemplate] type of sites to list. To be used with values like GROUP#0 and SITEPAGEPUBLISHING#0 . Specify either type or webTemplate , but not both. -f, --filter [filter] filter to apply when retrieving sites --includeOneDriveSites use this switch to include OneDrive sites in the result when retrieving sites. Do not specify the type or webTemplate options when using this. --deleted use this switch to only return deleted sites -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Important To use this command you have to have permissions to access the tenant admin site.","title":"Options"},{"location":"cmd/spo/site/site-list/#remarks","text":"Using the -f, --filter option you can specify which sites you want to retrieve. For example, to get sites with project in their URL, use Url -like 'project' as the filter. When using the text output type, the command lists only the values of the Title , and Url properties of the site. When setting the output type to JSON, all available properties are included in the command output.","title":"Remarks"},{"location":"cmd/spo/site/site-list/#examples","text":"List all sites in the currently connected tenant m365 spo site list List all group connected team sites in the currently connected tenant m365 spo site list --type TeamSite List all communication sites in the currently connected tenant m365 spo site list --type CommunicationSite List all group connected team sites that contain project in the URL m365 spo site list --type TeamSite --filter \"Url -like 'project'\" List all sites in the currently connected tenant including OneDrive sites m365 spo site list --includeOneDriveSites List all deleted sites in the tenant you're logged in to m365 spo site list --deleted","title":"Examples"},{"location":"cmd/spo/site/site-recyclebinitem-list/","text":"spo site recyclebinitem list \u00b6 Lists items from recycle bin Usage \u00b6 m365 spo site recyclebinitem list [ options ] Options \u00b6 -u, --siteUrl <siteUrl> URL of the site for which to retrieve the recycle bin items --type [type] Type of items which should be retrieved (listItems, folders, files) --secondary Use this switch to retrieve items from secondary recycle bin -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 When type is not specified then the command will return all items in the recycle bin Examples \u00b6 Lists all files, items and folders from recycle bin for site https://contoso.sharepoint.com/site m365 spo site recyclebinitem list --siteUrl https://contoso.sharepoint.com/site Lists only files from recycle bin for site https://contoso.sharepoint.com/site m365 spo site recyclebinitem list --siteUrl https://contoso.sharepoint.com/site --type files","title":"site recyclebinitem list"},{"location":"cmd/spo/site/site-recyclebinitem-list/#spo-site-recyclebinitem-list","text":"Lists items from recycle bin","title":"spo site recyclebinitem list"},{"location":"cmd/spo/site/site-recyclebinitem-list/#usage","text":"m365 spo site recyclebinitem list [ options ]","title":"Usage"},{"location":"cmd/spo/site/site-recyclebinitem-list/#options","text":"-u, --siteUrl <siteUrl> URL of the site for which to retrieve the recycle bin items --type [type] Type of items which should be retrieved (listItems, folders, files) --secondary Use this switch to retrieve items from secondary recycle bin -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/site/site-recyclebinitem-list/#remarks","text":"When type is not specified then the command will return all items in the recycle bin","title":"Remarks"},{"location":"cmd/spo/site/site-recyclebinitem-list/#examples","text":"Lists all files, items and folders from recycle bin for site https://contoso.sharepoint.com/site m365 spo site recyclebinitem list --siteUrl https://contoso.sharepoint.com/site Lists only files from recycle bin for site https://contoso.sharepoint.com/site m365 spo site recyclebinitem list --siteUrl https://contoso.sharepoint.com/site --type files","title":"Examples"},{"location":"cmd/spo/site/site-recyclebinitem-restore/","text":"spo site recyclebinitem restore \u00b6 Restores given items from the site recycle bin Usage \u00b6 m365 spo site recyclebinitem restore [ options ] Options \u00b6 -u, --siteUrl <siteUrl> URL of the site for which to restore the recycle bin items -i, --ids <ids> List of ids of items which will be restored from the site recycle bin -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Restore specific items by given ids from recycle bin for site https://contoso.sharepoint.com/site m365 spo site recyclebinitem restore --siteUrl https://contoso.sharepoint.com/site --ids \"ae6f97a7-280e-48d6-b481-0ea986c323da,aadbf916-1f71-42ee-abf2-8ee4802ae291\"","title":"site recyclebinitem restore"},{"location":"cmd/spo/site/site-recyclebinitem-restore/#spo-site-recyclebinitem-restore","text":"Restores given items from the site recycle bin","title":"spo site recyclebinitem restore"},{"location":"cmd/spo/site/site-recyclebinitem-restore/#usage","text":"m365 spo site recyclebinitem restore [ options ]","title":"Usage"},{"location":"cmd/spo/site/site-recyclebinitem-restore/#options","text":"-u, --siteUrl <siteUrl> URL of the site for which to restore the recycle bin items -i, --ids <ids> List of ids of items which will be restored from the site recycle bin -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/site/site-recyclebinitem-restore/#examples","text":"Restore specific items by given ids from recycle bin for site https://contoso.sharepoint.com/site m365 spo site recyclebinitem restore --siteUrl https://contoso.sharepoint.com/site --ids \"ae6f97a7-280e-48d6-b481-0ea986c323da,aadbf916-1f71-42ee-abf2-8ee4802ae291\"","title":"Examples"},{"location":"cmd/spo/site/site-remove/","text":"spo site remove \u00b6 Removes the specified site Usage \u00b6 m365 spo site remove [ options ] Options \u00b6 -u, --url <url> URL of the site to remove --skipRecycleBin Set to directly remove the site without moving it to the Recycle Bin --fromRecycleBin Set to remove the site from the Recycle Bin --wait Wait for the site to be removed before completing the command --confirm Don't prompt for confirming removing the site -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Important To use this command you have to have permissions to access the tenant admin site. Remarks \u00b6 Deleting a site collection is by default asynchronous and depending on the current state of Microsoft 365, might take up to few minutes. If you're building a script with steps that require the site to be fully deleted, you should use the --wait flag. When using this flag, the spo site remove command will keep running until it received confirmation from Microsoft 365 that the site has been fully deleted. If the site which you have selected to remove is groupified (Modern Team Site) and group exists, flags --skipRecycleBin and --wait will not be applicable. If the linked group still exists in the deleted groups, the site won't be removed. If the linked group is permanently deleted, the site will be removed like any classic site (except that flag --wait only will still not be applicable). If the argument --fromRecycleBin is passed, the selected site will be permanently removed even if it's a groupified one. Examples \u00b6 Remove the specified site and place it in the Recycle Bin m365 spo site remove --url https://contoso.sharepoint.com/sites/demosite Remove the site without moving it to the Recycle Bin m365 spo site remove --url https://contoso.sharepoint.com/sites/demosite --skipRecycleBin Remove the previously deleted site from the Recycle Bin m365 spo site remove --url https://contoso.sharepoint.com/sites/demosite --fromRecycleBin Remove the site without moving it to the Recycle Bin and wait for completion m365 spo site remove --url https://contoso.sharepoint.com/sites/demosite --wait --skipRecycleBin","title":"site remove"},{"location":"cmd/spo/site/site-remove/#spo-site-remove","text":"Removes the specified site","title":"spo site remove"},{"location":"cmd/spo/site/site-remove/#usage","text":"m365 spo site remove [ options ]","title":"Usage"},{"location":"cmd/spo/site/site-remove/#options","text":"-u, --url <url> URL of the site to remove --skipRecycleBin Set to directly remove the site without moving it to the Recycle Bin --fromRecycleBin Set to remove the site from the Recycle Bin --wait Wait for the site to be removed before completing the command --confirm Don't prompt for confirming removing the site -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Important To use this command you have to have permissions to access the tenant admin site.","title":"Options"},{"location":"cmd/spo/site/site-remove/#remarks","text":"Deleting a site collection is by default asynchronous and depending on the current state of Microsoft 365, might take up to few minutes. If you're building a script with steps that require the site to be fully deleted, you should use the --wait flag. When using this flag, the spo site remove command will keep running until it received confirmation from Microsoft 365 that the site has been fully deleted. If the site which you have selected to remove is groupified (Modern Team Site) and group exists, flags --skipRecycleBin and --wait will not be applicable. If the linked group still exists in the deleted groups, the site won't be removed. If the linked group is permanently deleted, the site will be removed like any classic site (except that flag --wait only will still not be applicable). If the argument --fromRecycleBin is passed, the selected site will be permanently removed even if it's a groupified one.","title":"Remarks"},{"location":"cmd/spo/site/site-remove/#examples","text":"Remove the specified site and place it in the Recycle Bin m365 spo site remove --url https://contoso.sharepoint.com/sites/demosite Remove the site without moving it to the Recycle Bin m365 spo site remove --url https://contoso.sharepoint.com/sites/demosite --skipRecycleBin Remove the previously deleted site from the Recycle Bin m365 spo site remove --url https://contoso.sharepoint.com/sites/demosite --fromRecycleBin Remove the site without moving it to the Recycle Bin and wait for completion m365 spo site remove --url https://contoso.sharepoint.com/sites/demosite --wait --skipRecycleBin","title":"Examples"},{"location":"cmd/spo/site/site-rename/","text":"spo site rename \u00b6 Renames the URL and title of a site collection Usage \u00b6 m365 spo site rename [ options ] Options \u00b6 -u, --url <url> The URL of the site to rename --newUrl <newUrl> New URL for the site collection --newTitle [newTitle] New title for the site --suppressMarketplaceAppCheck Suppress marketplace app check --suppressWorkflow2013Check Suppress 2013 workflow check --wait Wait for the job to complete -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Important To use this command you must have permissions to access the tenant admin site. Remarks \u00b6 Renaming site collections is by default asynchronous and depending on the current state of Microsoft 365, might take up to few minutes. If you're building a script with steps that require the operation to complete fully, you should use the --wait flag. When using this flag, the spo site rename command will keep running until it receives confirmation from Microsoft 365 that the site rename operation has completed. Examples \u00b6 Starts the rename of the site collection with name \"samplesite\" to \"renamed\" without modifying the title m365 spo site rename --url http://contoso.sharepoint.com/samplesite --newUrl http://contoso.sharepoint.com/renamed Starts the rename of the site collection with name \"samplesite\" to \"renamed\" modifying the title of the site to \"New Title\" m365 spo site rename --url http://contoso.sharepoint.com/samplesite --newUrl http://contoso.sharepoint.com/renamed --newTitle \"New Title\" Renames the specified site collection and waits for the operation to complete m365 spo site rename --url http://contoso.sharepoint.com/samplesite --newUrl http://contoso.sharepoint.com/renamed --newTitle \"New Title\" --wait","title":"site rename"},{"location":"cmd/spo/site/site-rename/#spo-site-rename","text":"Renames the URL and title of a site collection","title":"spo site rename"},{"location":"cmd/spo/site/site-rename/#usage","text":"m365 spo site rename [ options ]","title":"Usage"},{"location":"cmd/spo/site/site-rename/#options","text":"-u, --url <url> The URL of the site to rename --newUrl <newUrl> New URL for the site collection --newTitle [newTitle] New title for the site --suppressMarketplaceAppCheck Suppress marketplace app check --suppressWorkflow2013Check Suppress 2013 workflow check --wait Wait for the job to complete -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Important To use this command you must have permissions to access the tenant admin site.","title":"Options"},{"location":"cmd/spo/site/site-rename/#remarks","text":"Renaming site collections is by default asynchronous and depending on the current state of Microsoft 365, might take up to few minutes. If you're building a script with steps that require the operation to complete fully, you should use the --wait flag. When using this flag, the spo site rename command will keep running until it receives confirmation from Microsoft 365 that the site rename operation has completed.","title":"Remarks"},{"location":"cmd/spo/site/site-rename/#examples","text":"Starts the rename of the site collection with name \"samplesite\" to \"renamed\" without modifying the title m365 spo site rename --url http://contoso.sharepoint.com/samplesite --newUrl http://contoso.sharepoint.com/renamed Starts the rename of the site collection with name \"samplesite\" to \"renamed\" modifying the title of the site to \"New Title\" m365 spo site rename --url http://contoso.sharepoint.com/samplesite --newUrl http://contoso.sharepoint.com/renamed --newTitle \"New Title\" Renames the specified site collection and waits for the operation to complete m365 spo site rename --url http://contoso.sharepoint.com/samplesite --newUrl http://contoso.sharepoint.com/renamed --newTitle \"New Title\" --wait","title":"Examples"},{"location":"cmd/spo/site/site-set/","text":"spo site set \u00b6 Updates properties of the specified site Usage \u00b6 m365 spo site set [ options ] Options \u00b6 -u, --url <url> The URL of the site collection to update -t, --title [title] The new title for the site collection -d, --description [description] The site description --classification [classification] The new classification for the site collection --disableFlows [disableFlows] Set to true to disable using Microsoft Flow in this site collection --isPublic [isPublic] Set to true to make the group linked to the site public or to false to make it private --owners [owners] Comma-separated list of users to add as site collection administrators --shareByEmailEnabled [shareByEmailEnabled] Set to true to allow to share files with guests and to false to disallow it --siteDesignId [siteDesignId] Id of the custom site design to apply to the site --sharingCapability [sharingCapability] The sharing capability for the site. Allowed values: Disabled , ExternalUserSharingOnly , ExternalUserAndGuestSharing , ExistingExternalUserSharingOnly . --siteLogoUrl [siteLogoUrl] Set the logo for the site collection. This can be an absolute or relative URL to a file on the current site collection. --resourceQuota [resourceQuota] The quota for this site collection in Sandboxed Solutions units --resourceQuotaWarningLevel [resourceQuotaWarningLevel] The warning level for the resource quota --storageQuota [storageQuota] The storage quota for this site collection in megabytes --storageQuotaWarningLevel [storageQuotaWarningLevel] The warning level for the storage quota in megabytes --allowSelfServiceUpgrade [allowSelfServiceUpgrade] Set to allow tenant administrators to upgrade the site collection --lockState [lockState] Sets site's lock state. Allowed values Unlock,NoAdditions,ReadOnly,NoAccess --noScriptSite [noScriptSite] Specifies if the site allows custom script or not --wait Wait for the settings to be applied before completing the command -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Important To use this command you have to have permissions to access the tenant admin site. Remarks \u00b6 If the specified url doesn't refer to an existing site collection, you will get a 404 - \"404 FILE NOT FOUND\" error. The isPublic property can be set only on groupified site collections. If you try to set it on a site collection without a group, you will get an error. When setting owners, the specified owners will be added to the already configured owners. Existing owners will not be removed. The value of the --resourceQuota option must not exceed the company's aggregate available Sandboxed Solutions quota. For more information, see Resource Usage Limits on Sandboxed Solutions in SharePoint 2010: http://msdn.microsoft.com/en-us/library/gg615462.aspx . The value of the --resourceQuotaWarningLevel option must not exceed the value of the --resourceQuota option or the current value of the UserCodeMaximumLevel property. The value of the --storageQuota option must not exceed the company's available quota. The value of the --storageQuotaWarningLevel option must not exceed the the value of the --storageQuota option or the current value of the StorageMaximumLevel property. For more information on locking sites see https://technet.microsoft.com/en-us/library/cc263238.aspx . For more information on configuring no script sites see https://support.office.com/en-us/article/Turn-scripting-capabilities-on-or-off-1f2c515f-5d7e-448a-9fd7-835da935584f . Setting site properties is by default asynchronous and depending on the current state of Microsoft 365, might take up to few minutes. If you're building a script with steps that require the site to be fully configured, you should use the --wait flag. When using this flag, the spo site set command will keep running until it received confirmation from Microsoft 365 that the site has been fully configured. Examples \u00b6 Update site collection's classification m365 spo site set --url https://contoso.sharepoint.com/sites/sales --classification MBI Reset site collection's classification. m365 spo site set --url https://contoso.sharepoint.com/sites/sales --classification Disable using Microsoft Flow on the site collection m365 spo site set --url https://contoso.sharepoint.com/sites/sales --disableFlows true Update the visibility of the Microsoft 365 group behind the specified groupified site collection to public m365 spo site set --url https://contoso.sharepoint.com/sites/sales --isPublic true Update site collection's owners m365 spo site set --url https://contoso.sharepoint.com/sites/sales --owners \"john@contoso.onmicrosoft.com,steve@contoso.onmicrosoft.com\" Allow sharing files in the site collection with guests m365 spo site set --url https://contoso.sharepoint.com/sites/sales --shareByEmailEnabled true Apply the specified site ID to the site collection m365 spo site set --url https://contoso.sharepoint.com/sites/sales --siteDesignId \"eb2f31da-9461-4fbf-9ea1-9959b134b89e\" Update site collection's title m365 spo site set --url https://contoso.sharepoint.com/sites/sales --title \"My new site\" Update site collection's description m365 spo site set --url https://contoso.sharepoint.com/sites/sales --description \"my description\" Restrict external sharing to already available external users only m365 spo site set --url https://contoso.sharepoint.com/sites/sales --sharingCapability ExistingExternalUserSharingOnly Set the logo on the site m365 spo site set --url https://estruyfdev2.sharepoint.com/sites/sales --siteLogoUrl \"/sites/sales/SiteAssets/parker-ms-1200.png\" Unset the logo on the site m365 spo site set --url https://estruyfdev2.sharepoint.com/sites/sales --siteLogoUrl \"\" Lock the site preventing users from accessing it. Wait for the configuration to complete m365 spo site set --url https://contoso.sharepoint.com/sites/team --LockState NoAccess --wait","title":"site set"},{"location":"cmd/spo/site/site-set/#spo-site-set","text":"Updates properties of the specified site","title":"spo site set"},{"location":"cmd/spo/site/site-set/#usage","text":"m365 spo site set [ options ]","title":"Usage"},{"location":"cmd/spo/site/site-set/#options","text":"-u, --url <url> The URL of the site collection to update -t, --title [title] The new title for the site collection -d, --description [description] The site description --classification [classification] The new classification for the site collection --disableFlows [disableFlows] Set to true to disable using Microsoft Flow in this site collection --isPublic [isPublic] Set to true to make the group linked to the site public or to false to make it private --owners [owners] Comma-separated list of users to add as site collection administrators --shareByEmailEnabled [shareByEmailEnabled] Set to true to allow to share files with guests and to false to disallow it --siteDesignId [siteDesignId] Id of the custom site design to apply to the site --sharingCapability [sharingCapability] The sharing capability for the site. Allowed values: Disabled , ExternalUserSharingOnly , ExternalUserAndGuestSharing , ExistingExternalUserSharingOnly . --siteLogoUrl [siteLogoUrl] Set the logo for the site collection. This can be an absolute or relative URL to a file on the current site collection. --resourceQuota [resourceQuota] The quota for this site collection in Sandboxed Solutions units --resourceQuotaWarningLevel [resourceQuotaWarningLevel] The warning level for the resource quota --storageQuota [storageQuota] The storage quota for this site collection in megabytes --storageQuotaWarningLevel [storageQuotaWarningLevel] The warning level for the storage quota in megabytes --allowSelfServiceUpgrade [allowSelfServiceUpgrade] Set to allow tenant administrators to upgrade the site collection --lockState [lockState] Sets site's lock state. Allowed values Unlock,NoAdditions,ReadOnly,NoAccess --noScriptSite [noScriptSite] Specifies if the site allows custom script or not --wait Wait for the settings to be applied before completing the command -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Important To use this command you have to have permissions to access the tenant admin site.","title":"Options"},{"location":"cmd/spo/site/site-set/#remarks","text":"If the specified url doesn't refer to an existing site collection, you will get a 404 - \"404 FILE NOT FOUND\" error. The isPublic property can be set only on groupified site collections. If you try to set it on a site collection without a group, you will get an error. When setting owners, the specified owners will be added to the already configured owners. Existing owners will not be removed. The value of the --resourceQuota option must not exceed the company's aggregate available Sandboxed Solutions quota. For more information, see Resource Usage Limits on Sandboxed Solutions in SharePoint 2010: http://msdn.microsoft.com/en-us/library/gg615462.aspx . The value of the --resourceQuotaWarningLevel option must not exceed the value of the --resourceQuota option or the current value of the UserCodeMaximumLevel property. The value of the --storageQuota option must not exceed the company's available quota. The value of the --storageQuotaWarningLevel option must not exceed the the value of the --storageQuota option or the current value of the StorageMaximumLevel property. For more information on locking sites see https://technet.microsoft.com/en-us/library/cc263238.aspx . For more information on configuring no script sites see https://support.office.com/en-us/article/Turn-scripting-capabilities-on-or-off-1f2c515f-5d7e-448a-9fd7-835da935584f . Setting site properties is by default asynchronous and depending on the current state of Microsoft 365, might take up to few minutes. If you're building a script with steps that require the site to be fully configured, you should use the --wait flag. When using this flag, the spo site set command will keep running until it received confirmation from Microsoft 365 that the site has been fully configured.","title":"Remarks"},{"location":"cmd/spo/site/site-set/#examples","text":"Update site collection's classification m365 spo site set --url https://contoso.sharepoint.com/sites/sales --classification MBI Reset site collection's classification. m365 spo site set --url https://contoso.sharepoint.com/sites/sales --classification Disable using Microsoft Flow on the site collection m365 spo site set --url https://contoso.sharepoint.com/sites/sales --disableFlows true Update the visibility of the Microsoft 365 group behind the specified groupified site collection to public m365 spo site set --url https://contoso.sharepoint.com/sites/sales --isPublic true Update site collection's owners m365 spo site set --url https://contoso.sharepoint.com/sites/sales --owners \"john@contoso.onmicrosoft.com,steve@contoso.onmicrosoft.com\" Allow sharing files in the site collection with guests m365 spo site set --url https://contoso.sharepoint.com/sites/sales --shareByEmailEnabled true Apply the specified site ID to the site collection m365 spo site set --url https://contoso.sharepoint.com/sites/sales --siteDesignId \"eb2f31da-9461-4fbf-9ea1-9959b134b89e\" Update site collection's title m365 spo site set --url https://contoso.sharepoint.com/sites/sales --title \"My new site\" Update site collection's description m365 spo site set --url https://contoso.sharepoint.com/sites/sales --description \"my description\" Restrict external sharing to already available external users only m365 spo site set --url https://contoso.sharepoint.com/sites/sales --sharingCapability ExistingExternalUserSharingOnly Set the logo on the site m365 spo site set --url https://estruyfdev2.sharepoint.com/sites/sales --siteLogoUrl \"/sites/sales/SiteAssets/parker-ms-1200.png\" Unset the logo on the site m365 spo site set --url https://estruyfdev2.sharepoint.com/sites/sales --siteLogoUrl \"\" Lock the site preventing users from accessing it. Wait for the configuration to complete m365 spo site set --url https://contoso.sharepoint.com/sites/team --LockState NoAccess --wait","title":"Examples"},{"location":"cmd/spo/sitedesign/sitedesign-add/","text":"spo sitedesign add \u00b6 Adds site design for creating modern sites Usage \u00b6 m365 spo sitedesign add [ options ] Options \u00b6 -t, --title <title> The display name of the site design -w, --webTemplate <webTemplate> Identifies which base template to add the design to. Allowed values TeamSite,CommunicationSite -s, --siteScripts <siteScripts> Comma-separated list of site script IDs. The scripts will run in the order listed -d, --description [description] The display description of site design -m, --previewImageUrl [previewImageUrl] The URL of a preview image. If none is specified SharePoint will use a generic image -a, --previewImageAltText [previewImageAltText] The alt text description of the image for accessibility --isDefault Set if the site design is applied as the default site design -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 Each time you execute the spo sitedesign add command, it will create a new site design with a unique ID. Before creating a site design, be sure that another design with the same name doesn't already exist. When specifying IDs of site scripts to use with your site design, ensure that the IDs refer to existing site scripts or provisioning sites using the design will lead to unexpected results. Examples \u00b6 Create new site design for provisioning modern team sites m365 spo sitedesign add --title \"Contoso team site\" --webTemplate TeamSite --siteScripts \"19b0e1b2-e3d1-473f-9394-f08c198ef43e,b2307a39-e878-458b-bc90-03bc578531d6\" Create new default site design for provisioning modern communication sites m365 spo sitedesign add --title \"Contoso communication site\" --webTemplate CommunicationSite --siteScripts \"19b0e1b2-e3d1-473f-9394-f08c198ef43e\" --isDefault More information \u00b6 SharePoint site design and site script overview: https://docs.microsoft.com/en-us/sharepoint/dev/declarative-customization/site-design-overview Customize a default site design: https://docs.microsoft.com/en-us/sharepoint/dev/declarative-customization/customize-default-site-design Site design JSON schema: https://docs.microsoft.com/en-us/sharepoint/dev/declarative-customization/site-design-json-schema","title":"sitedesign add"},{"location":"cmd/spo/sitedesign/sitedesign-add/#spo-sitedesign-add","text":"Adds site design for creating modern sites","title":"spo sitedesign add"},{"location":"cmd/spo/sitedesign/sitedesign-add/#usage","text":"m365 spo sitedesign add [ options ]","title":"Usage"},{"location":"cmd/spo/sitedesign/sitedesign-add/#options","text":"-t, --title <title> The display name of the site design -w, --webTemplate <webTemplate> Identifies which base template to add the design to. Allowed values TeamSite,CommunicationSite -s, --siteScripts <siteScripts> Comma-separated list of site script IDs. The scripts will run in the order listed -d, --description [description] The display description of site design -m, --previewImageUrl [previewImageUrl] The URL of a preview image. If none is specified SharePoint will use a generic image -a, --previewImageAltText [previewImageAltText] The alt text description of the image for accessibility --isDefault Set if the site design is applied as the default site design -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/sitedesign/sitedesign-add/#remarks","text":"Each time you execute the spo sitedesign add command, it will create a new site design with a unique ID. Before creating a site design, be sure that another design with the same name doesn't already exist. When specifying IDs of site scripts to use with your site design, ensure that the IDs refer to existing site scripts or provisioning sites using the design will lead to unexpected results.","title":"Remarks"},{"location":"cmd/spo/sitedesign/sitedesign-add/#examples","text":"Create new site design for provisioning modern team sites m365 spo sitedesign add --title \"Contoso team site\" --webTemplate TeamSite --siteScripts \"19b0e1b2-e3d1-473f-9394-f08c198ef43e,b2307a39-e878-458b-bc90-03bc578531d6\" Create new default site design for provisioning modern communication sites m365 spo sitedesign add --title \"Contoso communication site\" --webTemplate CommunicationSite --siteScripts \"19b0e1b2-e3d1-473f-9394-f08c198ef43e\" --isDefault","title":"Examples"},{"location":"cmd/spo/sitedesign/sitedesign-add/#more-information","text":"SharePoint site design and site script overview: https://docs.microsoft.com/en-us/sharepoint/dev/declarative-customization/site-design-overview Customize a default site design: https://docs.microsoft.com/en-us/sharepoint/dev/declarative-customization/customize-default-site-design Site design JSON schema: https://docs.microsoft.com/en-us/sharepoint/dev/declarative-customization/site-design-json-schema","title":"More information"},{"location":"cmd/spo/sitedesign/sitedesign-apply/","text":"spo sitedesign apply \u00b6 Applies a site design to an existing site collection Usage \u00b6 m365 spo sitedesign apply [ options ] Options \u00b6 -i, --id <id> The ID of the site design to apply -u, --webUrl <webUrl> The URL of the site to apply the site design to --asTask Apply site design as task. Required for large site designs -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Apply the site design with ID 9b142c22-037f-4a7f-9017-e9d8c0e34b98 to the site collection https://contoso.sharepoint.com/sites/project-x m365 spo sitedesign apply --id 9b142c22-037f-4a7f-9017-e9d8c0e34b98 --webUrl https://contoso.sharepoint.com/sites/project-x Apply large site design to the specified site m365 spo sitedesign apply --id 9b142c22-037f-4a7f-9017-e9d8c0e34b98 --webUrl https://contoso.sharepoint.com/sites/project-x --asTask More information \u00b6 SharePoint site design and site script overview: https://docs.microsoft.com/en-us/sharepoint/dev/declarative-customization/site-design-overview","title":"sitedesign apply"},{"location":"cmd/spo/sitedesign/sitedesign-apply/#spo-sitedesign-apply","text":"Applies a site design to an existing site collection","title":"spo sitedesign apply"},{"location":"cmd/spo/sitedesign/sitedesign-apply/#usage","text":"m365 spo sitedesign apply [ options ]","title":"Usage"},{"location":"cmd/spo/sitedesign/sitedesign-apply/#options","text":"-i, --id <id> The ID of the site design to apply -u, --webUrl <webUrl> The URL of the site to apply the site design to --asTask Apply site design as task. Required for large site designs -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/sitedesign/sitedesign-apply/#examples","text":"Apply the site design with ID 9b142c22-037f-4a7f-9017-e9d8c0e34b98 to the site collection https://contoso.sharepoint.com/sites/project-x m365 spo sitedesign apply --id 9b142c22-037f-4a7f-9017-e9d8c0e34b98 --webUrl https://contoso.sharepoint.com/sites/project-x Apply large site design to the specified site m365 spo sitedesign apply --id 9b142c22-037f-4a7f-9017-e9d8c0e34b98 --webUrl https://contoso.sharepoint.com/sites/project-x --asTask","title":"Examples"},{"location":"cmd/spo/sitedesign/sitedesign-apply/#more-information","text":"SharePoint site design and site script overview: https://docs.microsoft.com/en-us/sharepoint/dev/declarative-customization/site-design-overview","title":"More information"},{"location":"cmd/spo/sitedesign/sitedesign-get/","text":"spo sitedesign get \u00b6 Gets information about the specified site design Usage \u00b6 m365 spo sitedesign get [ options ] Options \u00b6 -i, --id [id] Site design ID. Specify either id or title but not both --title [title] Site design title. Specify either id or title but not both -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 If the specified id or title doesn't refer to an existing site design, you will get a File not found error. Examples \u00b6 Get information about the site design with ID 2c1ba4c4-cd9b-4417-832f-92a34bc34b2a m365 spo sitedesign get --id 2c1ba4c4-cd9b-4417-832f-92a34bc34b2a Get information about the site design with title Contoso Site Design m365 spo sitedesign get --title \"Contoso Site Design\" More information \u00b6 SharePoint site design and site script overview: https://docs.microsoft.com/en-us/sharepoint/dev/declarative-customization/site-design-overview","title":"sitedesign get"},{"location":"cmd/spo/sitedesign/sitedesign-get/#spo-sitedesign-get","text":"Gets information about the specified site design","title":"spo sitedesign get"},{"location":"cmd/spo/sitedesign/sitedesign-get/#usage","text":"m365 spo sitedesign get [ options ]","title":"Usage"},{"location":"cmd/spo/sitedesign/sitedesign-get/#options","text":"-i, --id [id] Site design ID. Specify either id or title but not both --title [title] Site design title. Specify either id or title but not both -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/sitedesign/sitedesign-get/#remarks","text":"If the specified id or title doesn't refer to an existing site design, you will get a File not found error.","title":"Remarks"},{"location":"cmd/spo/sitedesign/sitedesign-get/#examples","text":"Get information about the site design with ID 2c1ba4c4-cd9b-4417-832f-92a34bc34b2a m365 spo sitedesign get --id 2c1ba4c4-cd9b-4417-832f-92a34bc34b2a Get information about the site design with title Contoso Site Design m365 spo sitedesign get --title \"Contoso Site Design\"","title":"Examples"},{"location":"cmd/spo/sitedesign/sitedesign-get/#more-information","text":"SharePoint site design and site script overview: https://docs.microsoft.com/en-us/sharepoint/dev/declarative-customization/site-design-overview","title":"More information"},{"location":"cmd/spo/sitedesign/sitedesign-list/","text":"spo sitedesign list \u00b6 Lists available site designs for creating modern sites Usage \u00b6 m365 spo sitedesign list [ options ] Options \u00b6 -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 List available site designs m365 spo sitedesign list More information \u00b6 SharePoint site design and site script overview: https://docs.microsoft.com/en-us/sharepoint/dev/declarative-customization/site-design-overview","title":"sitedesign list"},{"location":"cmd/spo/sitedesign/sitedesign-list/#spo-sitedesign-list","text":"Lists available site designs for creating modern sites","title":"spo sitedesign list"},{"location":"cmd/spo/sitedesign/sitedesign-list/#usage","text":"m365 spo sitedesign list [ options ]","title":"Usage"},{"location":"cmd/spo/sitedesign/sitedesign-list/#options","text":"-h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/sitedesign/sitedesign-list/#examples","text":"List available site designs m365 spo sitedesign list","title":"Examples"},{"location":"cmd/spo/sitedesign/sitedesign-list/#more-information","text":"SharePoint site design and site script overview: https://docs.microsoft.com/en-us/sharepoint/dev/declarative-customization/site-design-overview","title":"More information"},{"location":"cmd/spo/sitedesign/sitedesign-remove/","text":"spo sitedesign remove \u00b6 Removes the specified site design Usage \u00b6 m365 spo sitedesign remove [ options ] Options \u00b6 -i, --id <id> Site design ID --confirm Don't prompt for confirming removing the site design -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 If the specified id doesn't refer to an existing site design, you will get a File not found error. Examples \u00b6 Remove site design with ID 2c1ba4c4-cd9b-4417-832f-92a34bc34b2a . Will prompt for confirmation before removing the design m365 spo sitedesign remove --id 2c1ba4c4-cd9b-4417-832f-92a34bc34b2a Remove site design with ID 2c1ba4c4-cd9b-4417-832f-92a34bc34b2a without prompting for confirmation m365 spo sitedesign remove --id 2c1ba4c4-cd9b-4417-832f-92a34bc34b2a --confirm More information \u00b6 SharePoint site design and site script overview: https://docs.microsoft.com/en-us/sharepoint/dev/declarative-customization/site-design-overview","title":"sitedesign remove"},{"location":"cmd/spo/sitedesign/sitedesign-remove/#spo-sitedesign-remove","text":"Removes the specified site design","title":"spo sitedesign remove"},{"location":"cmd/spo/sitedesign/sitedesign-remove/#usage","text":"m365 spo sitedesign remove [ options ]","title":"Usage"},{"location":"cmd/spo/sitedesign/sitedesign-remove/#options","text":"-i, --id <id> Site design ID --confirm Don't prompt for confirming removing the site design -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/sitedesign/sitedesign-remove/#remarks","text":"If the specified id doesn't refer to an existing site design, you will get a File not found error.","title":"Remarks"},{"location":"cmd/spo/sitedesign/sitedesign-remove/#examples","text":"Remove site design with ID 2c1ba4c4-cd9b-4417-832f-92a34bc34b2a . Will prompt for confirmation before removing the design m365 spo sitedesign remove --id 2c1ba4c4-cd9b-4417-832f-92a34bc34b2a Remove site design with ID 2c1ba4c4-cd9b-4417-832f-92a34bc34b2a without prompting for confirmation m365 spo sitedesign remove --id 2c1ba4c4-cd9b-4417-832f-92a34bc34b2a --confirm","title":"Examples"},{"location":"cmd/spo/sitedesign/sitedesign-remove/#more-information","text":"SharePoint site design and site script overview: https://docs.microsoft.com/en-us/sharepoint/dev/declarative-customization/site-design-overview","title":"More information"},{"location":"cmd/spo/sitedesign/sitedesign-rights-grant/","text":"spo sitedesign rights grant \u00b6 Grants access to a site design for one or more principals Usage \u00b6 m365 spo sitedesign rights grant [ options ] Options \u00b6 -i, --siteDesignId <siteDesignId> The ID of the site design to grant rights on -p, --principals <principals> Comma-separated list of principals to grant view rights. Principals can be users or mail-enabled security groups in the form of alias or alias@<domain name>.com -r, --rights <rights> Rights to grant to principals. Available values View -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Grant user with alias PattiF view permission to the specified site design m365 spo sitedesign rights grant --siteDesignId 9b142c22-037f-4a7f-9017-e9d8c0e34b98 --principals PattiF --rights View Grant users with aliases PattiF and AdeleV view permission to the specified site design m365 spo sitedesign rights grant --siteDesignId 9b142c22-037f-4a7f-9017-e9d8c0e34b98 --principals \"PattiF,AdeleV\" --rights View Grant user with email PattiF@contoso.com view permission to the specified site design m365 spo sitedesign rights grant --siteDesignId 9b142c22-037f-4a7f-9017-e9d8c0e34b98 --principals PattiF@contoso.com --rights View More information \u00b6 SharePoint site design and site script overview: https://docs.microsoft.com/en-us/sharepoint/dev/declarative-customization/site-design-overview","title":"sitedesign rights grant"},{"location":"cmd/spo/sitedesign/sitedesign-rights-grant/#spo-sitedesign-rights-grant","text":"Grants access to a site design for one or more principals","title":"spo sitedesign rights grant"},{"location":"cmd/spo/sitedesign/sitedesign-rights-grant/#usage","text":"m365 spo sitedesign rights grant [ options ]","title":"Usage"},{"location":"cmd/spo/sitedesign/sitedesign-rights-grant/#options","text":"-i, --siteDesignId <siteDesignId> The ID of the site design to grant rights on -p, --principals <principals> Comma-separated list of principals to grant view rights. Principals can be users or mail-enabled security groups in the form of alias or alias@<domain name>.com -r, --rights <rights> Rights to grant to principals. Available values View -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/sitedesign/sitedesign-rights-grant/#examples","text":"Grant user with alias PattiF view permission to the specified site design m365 spo sitedesign rights grant --siteDesignId 9b142c22-037f-4a7f-9017-e9d8c0e34b98 --principals PattiF --rights View Grant users with aliases PattiF and AdeleV view permission to the specified site design m365 spo sitedesign rights grant --siteDesignId 9b142c22-037f-4a7f-9017-e9d8c0e34b98 --principals \"PattiF,AdeleV\" --rights View Grant user with email PattiF@contoso.com view permission to the specified site design m365 spo sitedesign rights grant --siteDesignId 9b142c22-037f-4a7f-9017-e9d8c0e34b98 --principals PattiF@contoso.com --rights View","title":"Examples"},{"location":"cmd/spo/sitedesign/sitedesign-rights-grant/#more-information","text":"SharePoint site design and site script overview: https://docs.microsoft.com/en-us/sharepoint/dev/declarative-customization/site-design-overview","title":"More information"},{"location":"cmd/spo/sitedesign/sitedesign-rights-list/","text":"spo sitedesign rights list \u00b6 Gets a list of principals that have access to a site design Usage \u00b6 m365 spo sitedesign rights list [ options ] Options \u00b6 -i, --siteDesignId <siteDesignId> The ID of the site design to get rights information from -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 If the specified siteDesignId doesn't refer to an existing site script, you will get a File not found error. If no permissions are listed, it means that the particular site design is visible to everyone. Examples \u00b6 Get information about rights granted for the site design with ID 2c1ba4c4-cd9b-4417-832f-92a34bc34b2a m365 spo sitedesign rights list --siteDesignId 2c1ba4c4-cd9b-4417-832f-92a34bc34b2a More information \u00b6 SharePoint site design and site script overview: https://docs.microsoft.com/en-us/sharepoint/dev/declarative-customization/site-design-overview","title":"sitedesign rights list"},{"location":"cmd/spo/sitedesign/sitedesign-rights-list/#spo-sitedesign-rights-list","text":"Gets a list of principals that have access to a site design","title":"spo sitedesign rights list"},{"location":"cmd/spo/sitedesign/sitedesign-rights-list/#usage","text":"m365 spo sitedesign rights list [ options ]","title":"Usage"},{"location":"cmd/spo/sitedesign/sitedesign-rights-list/#options","text":"-i, --siteDesignId <siteDesignId> The ID of the site design to get rights information from -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/sitedesign/sitedesign-rights-list/#remarks","text":"If the specified siteDesignId doesn't refer to an existing site script, you will get a File not found error. If no permissions are listed, it means that the particular site design is visible to everyone.","title":"Remarks"},{"location":"cmd/spo/sitedesign/sitedesign-rights-list/#examples","text":"Get information about rights granted for the site design with ID 2c1ba4c4-cd9b-4417-832f-92a34bc34b2a m365 spo sitedesign rights list --siteDesignId 2c1ba4c4-cd9b-4417-832f-92a34bc34b2a","title":"Examples"},{"location":"cmd/spo/sitedesign/sitedesign-rights-list/#more-information","text":"SharePoint site design and site script overview: https://docs.microsoft.com/en-us/sharepoint/dev/declarative-customization/site-design-overview","title":"More information"},{"location":"cmd/spo/sitedesign/sitedesign-rights-revoke/","text":"spo sitedesign rights revoke \u00b6 Revokes access from a site design for one or more principals Usage \u00b6 m365 spo sitedesign rights revoke [ options ] Options \u00b6 -i, --siteDesignId <siteDesignId> The ID of the site design to revoke rights from -p, --principals <principals> Comma-separated list of principals to revoke view rights from. Principals can be users or mail-enabled security groups in the form of alias or alias@<domain name>.com --confirm Don't prompt for confirming removing the site design -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 If the specified id doesn't refer to an existing site design, you will get a File not found error. If all principals have rights revoked on the site design, the site design becomes viewable to everyone. If you try to revoke access for a user that doesn't have access granted to the specified site design you will get a The specified user or domain group was not found error . Examples \u00b6 Revoke access to the site design with ID 2c1ba4c4-cd9b-4417-832f-92a34bc34b2a from user with alias PattiF . Will prompt for confirmation before revoking the access m365 spo sitedesign rights revoke --siteDesignId 2c1ba4c4-cd9b-4417-832f-92a34bc34b2a --principals PattiF Revoke access to the site design with ID 2c1ba4c4-cd9b-4417-832f-92a34bc34b2a from users with aliases PattiF and AdeleV without prompting for confirmation m365 spo sitedesign rights revoke --siteDesignId 2c1ba4c4-cd9b-4417-832f-92a34bc34b2a --principals \"PattiF,AdeleV\" --confirm More information \u00b6 SharePoint site design and site script overview: https://docs.microsoft.com/en-us/sharepoint/dev/declarative-customization/site-design-overview","title":"sitedesign rights revoke"},{"location":"cmd/spo/sitedesign/sitedesign-rights-revoke/#spo-sitedesign-rights-revoke","text":"Revokes access from a site design for one or more principals","title":"spo sitedesign rights revoke"},{"location":"cmd/spo/sitedesign/sitedesign-rights-revoke/#usage","text":"m365 spo sitedesign rights revoke [ options ]","title":"Usage"},{"location":"cmd/spo/sitedesign/sitedesign-rights-revoke/#options","text":"-i, --siteDesignId <siteDesignId> The ID of the site design to revoke rights from -p, --principals <principals> Comma-separated list of principals to revoke view rights from. Principals can be users or mail-enabled security groups in the form of alias or alias@<domain name>.com --confirm Don't prompt for confirming removing the site design -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/sitedesign/sitedesign-rights-revoke/#remarks","text":"If the specified id doesn't refer to an existing site design, you will get a File not found error. If all principals have rights revoked on the site design, the site design becomes viewable to everyone. If you try to revoke access for a user that doesn't have access granted to the specified site design you will get a The specified user or domain group was not found error .","title":"Remarks"},{"location":"cmd/spo/sitedesign/sitedesign-rights-revoke/#examples","text":"Revoke access to the site design with ID 2c1ba4c4-cd9b-4417-832f-92a34bc34b2a from user with alias PattiF . Will prompt for confirmation before revoking the access m365 spo sitedesign rights revoke --siteDesignId 2c1ba4c4-cd9b-4417-832f-92a34bc34b2a --principals PattiF Revoke access to the site design with ID 2c1ba4c4-cd9b-4417-832f-92a34bc34b2a from users with aliases PattiF and AdeleV without prompting for confirmation m365 spo sitedesign rights revoke --siteDesignId 2c1ba4c4-cd9b-4417-832f-92a34bc34b2a --principals \"PattiF,AdeleV\" --confirm","title":"Examples"},{"location":"cmd/spo/sitedesign/sitedesign-rights-revoke/#more-information","text":"SharePoint site design and site script overview: https://docs.microsoft.com/en-us/sharepoint/dev/declarative-customization/site-design-overview","title":"More information"},{"location":"cmd/spo/sitedesign/sitedesign-run-list/","text":"spo sitedesign run list \u00b6 Lists information about site designs applied to the specified site Usage \u00b6 m365 spo sitedesign run list [ options ] Options \u00b6 -u, --webUrl <webUrl> The URL of the site for which to list applied site designs -i, --siteDesignId [siteDesignId] The ID of the site design for which to display information -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 List site designs applied to the specified site m365 spo sitedesign run list --webUrl https://contoso.sharepoint.com/sites/team-a List information about the specified site design applied to the specified site m365 spo sitedesign run list --webUrl https://contoso.sharepoint.com/sites/team-a --siteDesignId 6ec3ca5b-d04b-4381-b169-61378556d76e More information \u00b6 SharePoint site design and site script overview: https://docs.microsoft.com/en-us/sharepoint/dev/declarative-customization/site-design-overview","title":"sitedesign run list"},{"location":"cmd/spo/sitedesign/sitedesign-run-list/#spo-sitedesign-run-list","text":"Lists information about site designs applied to the specified site","title":"spo sitedesign run list"},{"location":"cmd/spo/sitedesign/sitedesign-run-list/#usage","text":"m365 spo sitedesign run list [ options ]","title":"Usage"},{"location":"cmd/spo/sitedesign/sitedesign-run-list/#options","text":"-u, --webUrl <webUrl> The URL of the site for which to list applied site designs -i, --siteDesignId [siteDesignId] The ID of the site design for which to display information -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/sitedesign/sitedesign-run-list/#examples","text":"List site designs applied to the specified site m365 spo sitedesign run list --webUrl https://contoso.sharepoint.com/sites/team-a List information about the specified site design applied to the specified site m365 spo sitedesign run list --webUrl https://contoso.sharepoint.com/sites/team-a --siteDesignId 6ec3ca5b-d04b-4381-b169-61378556d76e","title":"Examples"},{"location":"cmd/spo/sitedesign/sitedesign-run-list/#more-information","text":"SharePoint site design and site script overview: https://docs.microsoft.com/en-us/sharepoint/dev/declarative-customization/site-design-overview","title":"More information"},{"location":"cmd/spo/sitedesign/sitedesign-run-status-get/","text":"spo sitedesign run status get \u00b6 Gets information about the site scripts executed for the specified site design Usage \u00b6 m365 spo sitedesign run status get [ options ] Options \u00b6 -u, --webUrl <webUrl> The URL of the site for which to get the information -i, --runId <runId> ID of the site design applied to the site as retrieved using spo sitedesign run list -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 For text output mode, displays the name of the action, site script and the outcome of the action. For JSON output mode, displays all available information. Examples \u00b6 List information about site scripts executed for the specified site design m365 spo sitedesign run status get --webUrl https://contoso.sharepoint.com/sites/team-a --runId b4411557-308b-4545-a3c4-55297d5cd8c8 More information \u00b6 SharePoint site design and site script overview: https://docs.microsoft.com/en-us/sharepoint/dev/declarative-customization/site-design-overview","title":"sitedesign run status get"},{"location":"cmd/spo/sitedesign/sitedesign-run-status-get/#spo-sitedesign-run-status-get","text":"Gets information about the site scripts executed for the specified site design","title":"spo sitedesign run status get"},{"location":"cmd/spo/sitedesign/sitedesign-run-status-get/#usage","text":"m365 spo sitedesign run status get [ options ]","title":"Usage"},{"location":"cmd/spo/sitedesign/sitedesign-run-status-get/#options","text":"-u, --webUrl <webUrl> The URL of the site for which to get the information -i, --runId <runId> ID of the site design applied to the site as retrieved using spo sitedesign run list -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/sitedesign/sitedesign-run-status-get/#remarks","text":"For text output mode, displays the name of the action, site script and the outcome of the action. For JSON output mode, displays all available information.","title":"Remarks"},{"location":"cmd/spo/sitedesign/sitedesign-run-status-get/#examples","text":"List information about site scripts executed for the specified site design m365 spo sitedesign run status get --webUrl https://contoso.sharepoint.com/sites/team-a --runId b4411557-308b-4545-a3c4-55297d5cd8c8","title":"Examples"},{"location":"cmd/spo/sitedesign/sitedesign-run-status-get/#more-information","text":"SharePoint site design and site script overview: https://docs.microsoft.com/en-us/sharepoint/dev/declarative-customization/site-design-overview","title":"More information"},{"location":"cmd/spo/sitedesign/sitedesign-set/","text":"spo sitedesign set \u00b6 Updates a site design with new values Usage \u00b6 m365 spo sitedesign set [ options ] Options \u00b6 -i, --id <id> The ID of the site design to update -t, --title [title] The new display name of the updated site design -w, --webTemplate [webTemplate] The new template to add the site design to. Allowed values TeamSite,CommunicationSite -s, --siteScripts [siteScripts] Comma-separated list of new site script IDs. The scripts will run in the order listed -d, --description [description] The new display description of updated site design -m, --previewImageUrl [previewImageUrl] The new URL of a preview image. If none is specified SharePoint will use a generic image -a, --previewImageAltText [previewImageAltText] The new alt text description of the image for accessibility --thumbnailUrl [thumbnailUrl] The new URL of a thumbnail image. If none is specified SharePoint will use a generic image -v, --version [version] The new version number for the site design --isDefault [isDefault] Set to true if the site design is applied as the default site design -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 If you had previously set the isDefault option to true , and wish for it to remain true , you must pass in this option again or it will be reset to false . When specifying IDs of site scripts to use with your site design, ensure that the IDs refer to existing site scripts or provisioning sites using the design will lead to unexpected results. Examples \u00b6 Update the site design title and version m365 spo sitedesign set --id 9b142c22-037f-4a7f-9017-e9d8c0e34b98 --title \"Contoso site design\" --version 2 Update the site design to be the default design for provisioning modern communication sites m365 spo sitedesign set --id 9b142c22-037f-4a7f-9017-e9d8c0e34b98 --webTemplate CommunicationSite --isDefault true Update the site design to be the default design for provisioning modern communication sites, with specific scripts m365 spo sitedesign set --id 9b142c22-037f-4a7f-9017-e9d8c0e34b98 --webTemplate CommunicationSite --isDefault true --siteScripts \"19b0e1b2-e3d1-473f-9394-f08c198ef43e,b2307a39-e878-458b-bc90-03bc578531d6\" More information \u00b6 SharePoint site design and site script overview: https://docs.microsoft.com/en-us/sharepoint/dev/declarative-customization/site-design-overview Customize a default site design: https://docs.microsoft.com/en-us/sharepoint/dev/declarative-customization/customize-default-site-design Site design JSON schema: https://docs.microsoft.com/en-us/sharepoint/dev/declarative-customization/site-design-json-schema","title":"sitedesign set"},{"location":"cmd/spo/sitedesign/sitedesign-set/#spo-sitedesign-set","text":"Updates a site design with new values","title":"spo sitedesign set"},{"location":"cmd/spo/sitedesign/sitedesign-set/#usage","text":"m365 spo sitedesign set [ options ]","title":"Usage"},{"location":"cmd/spo/sitedesign/sitedesign-set/#options","text":"-i, --id <id> The ID of the site design to update -t, --title [title] The new display name of the updated site design -w, --webTemplate [webTemplate] The new template to add the site design to. Allowed values TeamSite,CommunicationSite -s, --siteScripts [siteScripts] Comma-separated list of new site script IDs. The scripts will run in the order listed -d, --description [description] The new display description of updated site design -m, --previewImageUrl [previewImageUrl] The new URL of a preview image. If none is specified SharePoint will use a generic image -a, --previewImageAltText [previewImageAltText] The new alt text description of the image for accessibility --thumbnailUrl [thumbnailUrl] The new URL of a thumbnail image. If none is specified SharePoint will use a generic image -v, --version [version] The new version number for the site design --isDefault [isDefault] Set to true if the site design is applied as the default site design -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/sitedesign/sitedesign-set/#remarks","text":"If you had previously set the isDefault option to true , and wish for it to remain true , you must pass in this option again or it will be reset to false . When specifying IDs of site scripts to use with your site design, ensure that the IDs refer to existing site scripts or provisioning sites using the design will lead to unexpected results.","title":"Remarks"},{"location":"cmd/spo/sitedesign/sitedesign-set/#examples","text":"Update the site design title and version m365 spo sitedesign set --id 9b142c22-037f-4a7f-9017-e9d8c0e34b98 --title \"Contoso site design\" --version 2 Update the site design to be the default design for provisioning modern communication sites m365 spo sitedesign set --id 9b142c22-037f-4a7f-9017-e9d8c0e34b98 --webTemplate CommunicationSite --isDefault true Update the site design to be the default design for provisioning modern communication sites, with specific scripts m365 spo sitedesign set --id 9b142c22-037f-4a7f-9017-e9d8c0e34b98 --webTemplate CommunicationSite --isDefault true --siteScripts \"19b0e1b2-e3d1-473f-9394-f08c198ef43e,b2307a39-e878-458b-bc90-03bc578531d6\"","title":"Examples"},{"location":"cmd/spo/sitedesign/sitedesign-set/#more-information","text":"SharePoint site design and site script overview: https://docs.microsoft.com/en-us/sharepoint/dev/declarative-customization/site-design-overview Customize a default site design: https://docs.microsoft.com/en-us/sharepoint/dev/declarative-customization/customize-default-site-design Site design JSON schema: https://docs.microsoft.com/en-us/sharepoint/dev/declarative-customization/site-design-json-schema","title":"More information"},{"location":"cmd/spo/sitedesign/sitedesign-task-get/","text":"spo sitedesign task get \u00b6 Gets information about the specified site design scheduled for execution Usage \u00b6 m365 spo sitedesign task get [ options ] Options \u00b6 -i, --id <id> The ID of the site design task to get information for -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Get information about the specified site design scheduled for execution m365 spo sitedesign task get --id 6ec3ca5b-d04b-4381-b169-61378556d76e More information \u00b6 SharePoint site design and site script overview: https://docs.microsoft.com/en-us/sharepoint/dev/declarative-customization/site-design-overview","title":"sitedesign task get"},{"location":"cmd/spo/sitedesign/sitedesign-task-get/#spo-sitedesign-task-get","text":"Gets information about the specified site design scheduled for execution","title":"spo sitedesign task get"},{"location":"cmd/spo/sitedesign/sitedesign-task-get/#usage","text":"m365 spo sitedesign task get [ options ]","title":"Usage"},{"location":"cmd/spo/sitedesign/sitedesign-task-get/#options","text":"-i, --id <id> The ID of the site design task to get information for -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/sitedesign/sitedesign-task-get/#examples","text":"Get information about the specified site design scheduled for execution m365 spo sitedesign task get --id 6ec3ca5b-d04b-4381-b169-61378556d76e","title":"Examples"},{"location":"cmd/spo/sitedesign/sitedesign-task-get/#more-information","text":"SharePoint site design and site script overview: https://docs.microsoft.com/en-us/sharepoint/dev/declarative-customization/site-design-overview","title":"More information"},{"location":"cmd/spo/sitedesign/sitedesign-task-list/","text":"spo sitedesign task list \u00b6 Lists site designs scheduled for execution on the specified site Usage \u00b6 m365 spo sitedesign task list [ options ] Options \u00b6 -u, --webUrl <webUrl> The URL of the site for which to list site designs scheduled for execution -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 List site designs scheduled for execution on the specified site m365 spo sitedesign task list --webUrl https://contoso.sharepoint.com/sites/team-a More information \u00b6 SharePoint site design and site script overview: https://docs.microsoft.com/en-us/sharepoint/dev/declarative-customization/site-design-overview","title":"sitedesign task list"},{"location":"cmd/spo/sitedesign/sitedesign-task-list/#spo-sitedesign-task-list","text":"Lists site designs scheduled for execution on the specified site","title":"spo sitedesign task list"},{"location":"cmd/spo/sitedesign/sitedesign-task-list/#usage","text":"m365 spo sitedesign task list [ options ]","title":"Usage"},{"location":"cmd/spo/sitedesign/sitedesign-task-list/#options","text":"-u, --webUrl <webUrl> The URL of the site for which to list site designs scheduled for execution -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/sitedesign/sitedesign-task-list/#examples","text":"List site designs scheduled for execution on the specified site m365 spo sitedesign task list --webUrl https://contoso.sharepoint.com/sites/team-a","title":"Examples"},{"location":"cmd/spo/sitedesign/sitedesign-task-list/#more-information","text":"SharePoint site design and site script overview: https://docs.microsoft.com/en-us/sharepoint/dev/declarative-customization/site-design-overview","title":"More information"},{"location":"cmd/spo/sitedesign/sitedesign-task-remove/","text":"spo sitedesign task remove \u00b6 Removes the specified site design scheduled for execution Usage \u00b6 m365 spo sitedesign task remove [ options ] Options \u00b6 -i, --id <id> The ID of the site design task to remove --confirm Don't prompt for confirming removing the site design task -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Removes the specified site design task with id 6ec3ca5b-d04b-4381-b169-61378556d76e scheduled for execution without prompting confirmation m365 spo sitedesign task remove --id 6ec3ca5b-d04b-4381-b169-61378556d76e --confirm Removes the specified site design task with id 6ec3ca5b-d04b-4381-b169-61378556d76e scheduled for execution with prompt for confirmation before removing m365 spo sitedesign task remove --id 6ec3ca5b-d04b-4381-b169-61378556d76e More information \u00b6 SharePoint site design and site script overview: https://docs.microsoft.com/en-us/sharepoint/dev/declarative-customization/site-design-overview","title":"sitedesign task remove"},{"location":"cmd/spo/sitedesign/sitedesign-task-remove/#spo-sitedesign-task-remove","text":"Removes the specified site design scheduled for execution","title":"spo sitedesign task remove"},{"location":"cmd/spo/sitedesign/sitedesign-task-remove/#usage","text":"m365 spo sitedesign task remove [ options ]","title":"Usage"},{"location":"cmd/spo/sitedesign/sitedesign-task-remove/#options","text":"-i, --id <id> The ID of the site design task to remove --confirm Don't prompt for confirming removing the site design task -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/sitedesign/sitedesign-task-remove/#examples","text":"Removes the specified site design task with id 6ec3ca5b-d04b-4381-b169-61378556d76e scheduled for execution without prompting confirmation m365 spo sitedesign task remove --id 6ec3ca5b-d04b-4381-b169-61378556d76e --confirm Removes the specified site design task with id 6ec3ca5b-d04b-4381-b169-61378556d76e scheduled for execution with prompt for confirmation before removing m365 spo sitedesign task remove --id 6ec3ca5b-d04b-4381-b169-61378556d76e","title":"Examples"},{"location":"cmd/spo/sitedesign/sitedesign-task-remove/#more-information","text":"SharePoint site design and site script overview: https://docs.microsoft.com/en-us/sharepoint/dev/declarative-customization/site-design-overview","title":"More information"},{"location":"cmd/spo/sitescript/sitescript-add/","text":"spo sitescript add \u00b6 Adds site script for use with site designs Usage \u00b6 m365 spo sitescript add [ options ] Options \u00b6 -t, --title <title> Site script title -c, --content <content> JSON string containing the site script -d, --description [description] Site script description -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 Each time you execute the spo sitescript add command, it will create a new site script with a unique ID. Before creating a site script, be sure that another script with the same name doesn't already exist. Examples \u00b6 Create new site script for use with site designs. Script contents are stored in the $script variable m365 spo sitescript add --title \"Contoso\" --description \"Contoso theme script\" --content $script More information \u00b6 SharePoint site design and site script overview: https://docs.microsoft.com/en-us/sharepoint/dev/declarative-customization/site-design-overview","title":"sitescript add"},{"location":"cmd/spo/sitescript/sitescript-add/#spo-sitescript-add","text":"Adds site script for use with site designs","title":"spo sitescript add"},{"location":"cmd/spo/sitescript/sitescript-add/#usage","text":"m365 spo sitescript add [ options ]","title":"Usage"},{"location":"cmd/spo/sitescript/sitescript-add/#options","text":"-t, --title <title> Site script title -c, --content <content> JSON string containing the site script -d, --description [description] Site script description -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/sitescript/sitescript-add/#remarks","text":"Each time you execute the spo sitescript add command, it will create a new site script with a unique ID. Before creating a site script, be sure that another script with the same name doesn't already exist.","title":"Remarks"},{"location":"cmd/spo/sitescript/sitescript-add/#examples","text":"Create new site script for use with site designs. Script contents are stored in the $script variable m365 spo sitescript add --title \"Contoso\" --description \"Contoso theme script\" --content $script","title":"Examples"},{"location":"cmd/spo/sitescript/sitescript-add/#more-information","text":"SharePoint site design and site script overview: https://docs.microsoft.com/en-us/sharepoint/dev/declarative-customization/site-design-overview","title":"More information"},{"location":"cmd/spo/sitescript/sitescript-get/","text":"spo sitescript get \u00b6 Gets information about the specified site script Usage \u00b6 m365 spo sitescript get [ options ] Options \u00b6 -i, --id <id> Site script ID -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 If the specified id doesn't refer to an existing site script, you will get a File not found error. Examples \u00b6 Get information about the site script with ID 2c1ba4c4-cd9b-4417-832f-92a34bc34b2a m365 spo sitescript get --id 2c1ba4c4-cd9b-4417-832f-92a34bc34b2a More information \u00b6 SharePoint site design and site script overview: https://docs.microsoft.com/en-us/sharepoint/dev/declarative-customization/site-design-overview","title":"sitescript get"},{"location":"cmd/spo/sitescript/sitescript-get/#spo-sitescript-get","text":"Gets information about the specified site script","title":"spo sitescript get"},{"location":"cmd/spo/sitescript/sitescript-get/#usage","text":"m365 spo sitescript get [ options ]","title":"Usage"},{"location":"cmd/spo/sitescript/sitescript-get/#options","text":"-i, --id <id> Site script ID -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/sitescript/sitescript-get/#remarks","text":"If the specified id doesn't refer to an existing site script, you will get a File not found error.","title":"Remarks"},{"location":"cmd/spo/sitescript/sitescript-get/#examples","text":"Get information about the site script with ID 2c1ba4c4-cd9b-4417-832f-92a34bc34b2a m365 spo sitescript get --id 2c1ba4c4-cd9b-4417-832f-92a34bc34b2a","title":"Examples"},{"location":"cmd/spo/sitescript/sitescript-get/#more-information","text":"SharePoint site design and site script overview: https://docs.microsoft.com/en-us/sharepoint/dev/declarative-customization/site-design-overview","title":"More information"},{"location":"cmd/spo/sitescript/sitescript-list/","text":"spo sitescript list \u00b6 Lists site script available for use with site designs Usage \u00b6 m365 spo sitescript list [ options ] Options \u00b6 -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 List all site scripts available for use with site designs m365 spo sitescript list More information \u00b6 SharePoint site design and site script overview: https://docs.microsoft.com/en-us/sharepoint/dev/declarative-customization/site-design-overview","title":"sitescript list"},{"location":"cmd/spo/sitescript/sitescript-list/#spo-sitescript-list","text":"Lists site script available for use with site designs","title":"spo sitescript list"},{"location":"cmd/spo/sitescript/sitescript-list/#usage","text":"m365 spo sitescript list [ options ]","title":"Usage"},{"location":"cmd/spo/sitescript/sitescript-list/#options","text":"-h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/sitescript/sitescript-list/#examples","text":"List all site scripts available for use with site designs m365 spo sitescript list","title":"Examples"},{"location":"cmd/spo/sitescript/sitescript-list/#more-information","text":"SharePoint site design and site script overview: https://docs.microsoft.com/en-us/sharepoint/dev/declarative-customization/site-design-overview","title":"More information"},{"location":"cmd/spo/sitescript/sitescript-remove/","text":"spo sitescript remove \u00b6 Removes the specified site script Usage \u00b6 m365 spo sitescript remove [ options ] Options \u00b6 -i, --id <id> Site script ID --confirm Don't prompt for confirming removing the site script -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 If the specified id doesn't refer to an existing site script, you will get a File not found error. Examples \u00b6 Remove site script with ID 2c1ba4c4-cd9b-4417-832f-92a34bc34b2a . Will prompt for confirmation before removing the script m365 spo sitescript remove --id 2c1ba4c4-cd9b-4417-832f-92a34bc34b2a Remove site script with ID 2c1ba4c4-cd9b-4417-832f-92a34bc34b2a without prompting for confirmation m365 spo sitescript remove --id 2c1ba4c4-cd9b-4417-832f-92a34bc34b2a --confirm More information \u00b6 SharePoint site design and site script overview: https://docs.microsoft.com/en-us/sharepoint/dev/declarative-customization/site-design-overview","title":"sitescript remove"},{"location":"cmd/spo/sitescript/sitescript-remove/#spo-sitescript-remove","text":"Removes the specified site script","title":"spo sitescript remove"},{"location":"cmd/spo/sitescript/sitescript-remove/#usage","text":"m365 spo sitescript remove [ options ]","title":"Usage"},{"location":"cmd/spo/sitescript/sitescript-remove/#options","text":"-i, --id <id> Site script ID --confirm Don't prompt for confirming removing the site script -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/sitescript/sitescript-remove/#remarks","text":"If the specified id doesn't refer to an existing site script, you will get a File not found error.","title":"Remarks"},{"location":"cmd/spo/sitescript/sitescript-remove/#examples","text":"Remove site script with ID 2c1ba4c4-cd9b-4417-832f-92a34bc34b2a . Will prompt for confirmation before removing the script m365 spo sitescript remove --id 2c1ba4c4-cd9b-4417-832f-92a34bc34b2a Remove site script with ID 2c1ba4c4-cd9b-4417-832f-92a34bc34b2a without prompting for confirmation m365 spo sitescript remove --id 2c1ba4c4-cd9b-4417-832f-92a34bc34b2a --confirm","title":"Examples"},{"location":"cmd/spo/sitescript/sitescript-remove/#more-information","text":"SharePoint site design and site script overview: https://docs.microsoft.com/en-us/sharepoint/dev/declarative-customization/site-design-overview","title":"More information"},{"location":"cmd/spo/sitescript/sitescript-set/","text":"spo sitescript set \u00b6 Updates existing site script Usage \u00b6 m365 spo sitescript set [ options ] Options \u00b6 -i, --id <id> Site script ID -t, --title [title] Site script title -d, --description [description] Site script description -v, --version [version] Site script version -c, --content [content] JSON string containing the site script -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 If the specified id doesn't refer to an existing site script, you will get a File not found error. Examples \u00b6 Update title of the existing site script with ID 2c1ba4c4-cd9b-4417-832f-92a34bc34b2a m365 spo sitescript set --id 2c1ba4c4-cd9b-4417-832f-92a34bc34b2a --title \"Contoso\" More information \u00b6 SharePoint site design and site script overview: https://docs.microsoft.com/en-us/sharepoint/dev/declarative-customization/site-design-overview","title":"sitescript set"},{"location":"cmd/spo/sitescript/sitescript-set/#spo-sitescript-set","text":"Updates existing site script","title":"spo sitescript set"},{"location":"cmd/spo/sitescript/sitescript-set/#usage","text":"m365 spo sitescript set [ options ]","title":"Usage"},{"location":"cmd/spo/sitescript/sitescript-set/#options","text":"-i, --id <id> Site script ID -t, --title [title] Site script title -d, --description [description] Site script description -v, --version [version] Site script version -c, --content [content] JSON string containing the site script -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/sitescript/sitescript-set/#remarks","text":"If the specified id doesn't refer to an existing site script, you will get a File not found error.","title":"Remarks"},{"location":"cmd/spo/sitescript/sitescript-set/#examples","text":"Update title of the existing site script with ID 2c1ba4c4-cd9b-4417-832f-92a34bc34b2a m365 spo sitescript set --id 2c1ba4c4-cd9b-4417-832f-92a34bc34b2a --title \"Contoso\"","title":"Examples"},{"location":"cmd/spo/sitescript/sitescript-set/#more-information","text":"SharePoint site design and site script overview: https://docs.microsoft.com/en-us/sharepoint/dev/declarative-customization/site-design-overview","title":"More information"},{"location":"cmd/spo/storageentity/storageentity-get/","text":"spo storageentity get \u00b6 Get details for the specified tenant property Usage \u00b6 m365 spo storageentity get [ options ] Options \u00b6 -k, --key <key> Name of the tenant property to retrieve -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 Tenant properties are stored in the app catalog site associated with the site to which you are currently connected. When retrieving the specified tenant property, SharePoint will automatically find the associated app catalog and try to retrieve the property from it. Examples \u00b6 Show the value, description and comment of the AnalyticsId tenant property m365 spo storageentity get -k AnalyticsId More information \u00b6 SharePoint Framework Tenant Properties: https://docs.microsoft.com/en-us/sharepoint/dev/spfx/tenant-properties","title":"storageentity get"},{"location":"cmd/spo/storageentity/storageentity-get/#spo-storageentity-get","text":"Get details for the specified tenant property","title":"spo storageentity get"},{"location":"cmd/spo/storageentity/storageentity-get/#usage","text":"m365 spo storageentity get [ options ]","title":"Usage"},{"location":"cmd/spo/storageentity/storageentity-get/#options","text":"-k, --key <key> Name of the tenant property to retrieve -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/storageentity/storageentity-get/#remarks","text":"Tenant properties are stored in the app catalog site associated with the site to which you are currently connected. When retrieving the specified tenant property, SharePoint will automatically find the associated app catalog and try to retrieve the property from it.","title":"Remarks"},{"location":"cmd/spo/storageentity/storageentity-get/#examples","text":"Show the value, description and comment of the AnalyticsId tenant property m365 spo storageentity get -k AnalyticsId","title":"Examples"},{"location":"cmd/spo/storageentity/storageentity-get/#more-information","text":"SharePoint Framework Tenant Properties: https://docs.microsoft.com/en-us/sharepoint/dev/spfx/tenant-properties","title":"More information"},{"location":"cmd/spo/storageentity/storageentity-list/","text":"spo storageentity list \u00b6 Lists tenant properties stored on the specified SharePoint Online app catalog Usage \u00b6 m365 spo storageentity list [ options ] Options \u00b6 -u, --appCatalogUrl <appCatalogUrl> URL of the app catalog site -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 Tenant properties are stored in the app catalog site. To list all tenant properties, you have to specify the absolute URL of the app catalog site. If you specify an incorrect URL, or the site at the given URL is not an app catalog site, no properties will be retrieved. Examples \u00b6 List all tenant properties stored in the https://contoso.sharepoint.com/sites/appcatalog app catalog site m365 spo storageentity list -u https://contoso.sharepoint.com/sites/appcatalog More information \u00b6 SharePoint Framework Tenant Properties: https://docs.microsoft.com/en-us/sharepoint/dev/spfx/tenant-properties","title":"storageentity list"},{"location":"cmd/spo/storageentity/storageentity-list/#spo-storageentity-list","text":"Lists tenant properties stored on the specified SharePoint Online app catalog","title":"spo storageentity list"},{"location":"cmd/spo/storageentity/storageentity-list/#usage","text":"m365 spo storageentity list [ options ]","title":"Usage"},{"location":"cmd/spo/storageentity/storageentity-list/#options","text":"-u, --appCatalogUrl <appCatalogUrl> URL of the app catalog site -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/storageentity/storageentity-list/#remarks","text":"Tenant properties are stored in the app catalog site. To list all tenant properties, you have to specify the absolute URL of the app catalog site. If you specify an incorrect URL, or the site at the given URL is not an app catalog site, no properties will be retrieved.","title":"Remarks"},{"location":"cmd/spo/storageentity/storageentity-list/#examples","text":"List all tenant properties stored in the https://contoso.sharepoint.com/sites/appcatalog app catalog site m365 spo storageentity list -u https://contoso.sharepoint.com/sites/appcatalog","title":"Examples"},{"location":"cmd/spo/storageentity/storageentity-list/#more-information","text":"SharePoint Framework Tenant Properties: https://docs.microsoft.com/en-us/sharepoint/dev/spfx/tenant-properties","title":"More information"},{"location":"cmd/spo/storageentity/storageentity-remove/","text":"spo storageentity remove \u00b6 Removes tenant property stored on the specified SharePoint Online app catalog Usage \u00b6 m365 spo storageentity remove [ options ] Options \u00b6 -u, --appCatalogUrl <appCatalogUrl> URL of the app catalog site -k, --key <key> Name of the tenant property to retrieve --confirm Don't prompt for confirming removal of a tenant property -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Important To use this command you have to have permissions to access the tenant admin site. Remarks \u00b6 Tenant properties are stored in the app catalog site associated with that tenant. To remove a property, you have to specify the absolute URL of the app catalog site. If you specify the URL of a site different than the app catalog, you will get an access denied error. Examples \u00b6 Remove the AnalyticsId tenant property. Yields a confirmation prompt before actually removing the property m365 spo storageentity remove -k AnalyticsId -u https://contoso.sharepoint.com/sites/appcatalog Remove the AnalyticsId tenant property. Suppresses the confirmation prompt m365 spo storageentity remove -k AnalyticsId --confirm -u https://contoso.sharepoint.com/sites/appcatalog More information \u00b6 SharePoint Framework Tenant Properties: https://docs.microsoft.com/en-us/sharepoint/dev/spfx/tenant-properties","title":"storageentity remove"},{"location":"cmd/spo/storageentity/storageentity-remove/#spo-storageentity-remove","text":"Removes tenant property stored on the specified SharePoint Online app catalog","title":"spo storageentity remove"},{"location":"cmd/spo/storageentity/storageentity-remove/#usage","text":"m365 spo storageentity remove [ options ]","title":"Usage"},{"location":"cmd/spo/storageentity/storageentity-remove/#options","text":"-u, --appCatalogUrl <appCatalogUrl> URL of the app catalog site -k, --key <key> Name of the tenant property to retrieve --confirm Don't prompt for confirming removal of a tenant property -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Important To use this command you have to have permissions to access the tenant admin site.","title":"Options"},{"location":"cmd/spo/storageentity/storageentity-remove/#remarks","text":"Tenant properties are stored in the app catalog site associated with that tenant. To remove a property, you have to specify the absolute URL of the app catalog site. If you specify the URL of a site different than the app catalog, you will get an access denied error.","title":"Remarks"},{"location":"cmd/spo/storageentity/storageentity-remove/#examples","text":"Remove the AnalyticsId tenant property. Yields a confirmation prompt before actually removing the property m365 spo storageentity remove -k AnalyticsId -u https://contoso.sharepoint.com/sites/appcatalog Remove the AnalyticsId tenant property. Suppresses the confirmation prompt m365 spo storageentity remove -k AnalyticsId --confirm -u https://contoso.sharepoint.com/sites/appcatalog","title":"Examples"},{"location":"cmd/spo/storageentity/storageentity-remove/#more-information","text":"SharePoint Framework Tenant Properties: https://docs.microsoft.com/en-us/sharepoint/dev/spfx/tenant-properties","title":"More information"},{"location":"cmd/spo/storageentity/storageentity-set/","text":"spo storageentity set \u00b6 Sets tenant property on the specified SharePoint Online app catalog Usage \u00b6 m365 spo storageentity set [ options ] Options \u00b6 -u, --appCatalogUrl <appCatalogUrl> URL of the app catalog site -k, --key <key> Name of the tenant property to retrieve -v, --value <value> Value to set for the property -d, --description [description] Description to set for the property (optional) -c, --comment [comment] Comment to set for the property (optional) -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Important To use this command you have to have permissions to access the tenant admin site. Remarks \u00b6 Tenant properties are stored in the app catalog site associated with that tenant. To set a property, you have to specify the absolute URL of the app catalog site without a trailing slash. If you specify the URL with trailing slash you get the error The managed path sites/apps is not a managed path in this tenant. If you specify the URL of a site different than the app catalog, you will get an access denied error. Examples \u00b6 Set 123 as the value of the AnalyticsId tenant property. Also include a description and a comment for additional clarification of the usage of the property. m365 spo storageentity set -k AnalyticsId -v 123 -d 'Web analytics ID' -c 'Use on all sites' -u https://contoso.sharepoint.com/sites/appcatalog More information \u00b6 SharePoint Framework Tenant Properties: https://docs.microsoft.com/en-us/sharepoint/dev/spfx/tenant-properties","title":"storageentity set"},{"location":"cmd/spo/storageentity/storageentity-set/#spo-storageentity-set","text":"Sets tenant property on the specified SharePoint Online app catalog","title":"spo storageentity set"},{"location":"cmd/spo/storageentity/storageentity-set/#usage","text":"m365 spo storageentity set [ options ]","title":"Usage"},{"location":"cmd/spo/storageentity/storageentity-set/#options","text":"-u, --appCatalogUrl <appCatalogUrl> URL of the app catalog site -k, --key <key> Name of the tenant property to retrieve -v, --value <value> Value to set for the property -d, --description [description] Description to set for the property (optional) -c, --comment [comment] Comment to set for the property (optional) -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Important To use this command you have to have permissions to access the tenant admin site.","title":"Options"},{"location":"cmd/spo/storageentity/storageentity-set/#remarks","text":"Tenant properties are stored in the app catalog site associated with that tenant. To set a property, you have to specify the absolute URL of the app catalog site without a trailing slash. If you specify the URL with trailing slash you get the error The managed path sites/apps is not a managed path in this tenant. If you specify the URL of a site different than the app catalog, you will get an access denied error.","title":"Remarks"},{"location":"cmd/spo/storageentity/storageentity-set/#examples","text":"Set 123 as the value of the AnalyticsId tenant property. Also include a description and a comment for additional clarification of the usage of the property. m365 spo storageentity set -k AnalyticsId -v 123 -d 'Web analytics ID' -c 'Use on all sites' -u https://contoso.sharepoint.com/sites/appcatalog","title":"Examples"},{"location":"cmd/spo/storageentity/storageentity-set/#more-information","text":"SharePoint Framework Tenant Properties: https://docs.microsoft.com/en-us/sharepoint/dev/spfx/tenant-properties","title":"More information"},{"location":"cmd/spo/tenant/tenant-appcatalog-add/","text":"spo tenant appcatalog add \u00b6 Creates new tenant app catalog site Usage \u00b6 m365 spo tenant appcatalog add [ options ] Options \u00b6 -u, --url <url> The absolute site url --owner <owner> The account name of the site owner -z, --timeZone <timeZone> Integer representing time zone to use for the site --wait Wait for the site to be provisioned before completing the command --force Force creating a new app catalog site if one already exists -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Important To use this command you have to have permissions to access the tenant admin site. Remarks \u00b6 If there is an app catalog registered in your tenant, creating a new app catalog using this command will fail, unless you use the force option. If you use the force option, and either the app catalog or the site at the specified URL exists (or both), this command will delete both sites bypassing the recycle bin. Creating an app catalog site might take a while. If you need to wait for the site to be created before continuing, use the wait option. Examples \u00b6 Creates new app catalog. Will fail if another app catalog or site at the specified URL exists m365 spo tenant appcatalog add --url https://contoso.sharepoint.com/sites/apps --owner admin@contoso.com --timeZone 4 Creates new app catalog and waits for completion. Will fail if another app catalog or site at the specified URL exists m365 spo tenant appcatalog add --url https://contoso.sharepoint.com/sites/apps --owner admin@contoso.com --timeZone 4 --wait Creates new app catalog and deletes existing app catalog and existing site at the specified URL m365 spo tenant appcatalog add --url https://contoso.sharepoint.com/sites/apps --owner admin@contoso.com --timeZone 4 --force","title":"tenant appcatalog add"},{"location":"cmd/spo/tenant/tenant-appcatalog-add/#spo-tenant-appcatalog-add","text":"Creates new tenant app catalog site","title":"spo tenant appcatalog add"},{"location":"cmd/spo/tenant/tenant-appcatalog-add/#usage","text":"m365 spo tenant appcatalog add [ options ]","title":"Usage"},{"location":"cmd/spo/tenant/tenant-appcatalog-add/#options","text":"-u, --url <url> The absolute site url --owner <owner> The account name of the site owner -z, --timeZone <timeZone> Integer representing time zone to use for the site --wait Wait for the site to be provisioned before completing the command --force Force creating a new app catalog site if one already exists -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Important To use this command you have to have permissions to access the tenant admin site.","title":"Options"},{"location":"cmd/spo/tenant/tenant-appcatalog-add/#remarks","text":"If there is an app catalog registered in your tenant, creating a new app catalog using this command will fail, unless you use the force option. If you use the force option, and either the app catalog or the site at the specified URL exists (or both), this command will delete both sites bypassing the recycle bin. Creating an app catalog site might take a while. If you need to wait for the site to be created before continuing, use the wait option.","title":"Remarks"},{"location":"cmd/spo/tenant/tenant-appcatalog-add/#examples","text":"Creates new app catalog. Will fail if another app catalog or site at the specified URL exists m365 spo tenant appcatalog add --url https://contoso.sharepoint.com/sites/apps --owner admin@contoso.com --timeZone 4 Creates new app catalog and waits for completion. Will fail if another app catalog or site at the specified URL exists m365 spo tenant appcatalog add --url https://contoso.sharepoint.com/sites/apps --owner admin@contoso.com --timeZone 4 --wait Creates new app catalog and deletes existing app catalog and existing site at the specified URL m365 spo tenant appcatalog add --url https://contoso.sharepoint.com/sites/apps --owner admin@contoso.com --timeZone 4 --force","title":"Examples"},{"location":"cmd/spo/tenant/tenant-appcatalogurl-get/","text":"spo tenant appcatalogurl get \u00b6 Gets the URL of the tenant app catalog Usage \u00b6 m365 spo tenant appcatalogurl get [ options ] Options \u00b6 -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Important To use this command you have to have permissions to access the tenant admin site. Examples \u00b6 Get the URL of the tenant app catalog m365 spo tenant appcatalogurl get","title":"tenant appcatalogurl get"},{"location":"cmd/spo/tenant/tenant-appcatalogurl-get/#spo-tenant-appcatalogurl-get","text":"Gets the URL of the tenant app catalog","title":"spo tenant appcatalogurl get"},{"location":"cmd/spo/tenant/tenant-appcatalogurl-get/#usage","text":"m365 spo tenant appcatalogurl get [ options ]","title":"Usage"},{"location":"cmd/spo/tenant/tenant-appcatalogurl-get/#options","text":"-h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Important To use this command you have to have permissions to access the tenant admin site.","title":"Options"},{"location":"cmd/spo/tenant/tenant-appcatalogurl-get/#examples","text":"Get the URL of the tenant app catalog m365 spo tenant appcatalogurl get","title":"Examples"},{"location":"cmd/spo/tenant/tenant-recyclebinitem-list/","text":"spo tenant recyclebinitem list \u00b6 Returns all modern and classic site collections in the tenant scoped recycle bin Usage \u00b6 m365 spo tenant recyclebinitem list [ options ] Options \u00b6 -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Important To use this command you have to have permissions to access the tenant admin site. Examples \u00b6 Returns all modern and classic site collections in the tenant scoped recycle bin m365 spo tenant recyclebinitem list","title":"tenant recyclebinitem list"},{"location":"cmd/spo/tenant/tenant-recyclebinitem-list/#spo-tenant-recyclebinitem-list","text":"Returns all modern and classic site collections in the tenant scoped recycle bin","title":"spo tenant recyclebinitem list"},{"location":"cmd/spo/tenant/tenant-recyclebinitem-list/#usage","text":"m365 spo tenant recyclebinitem list [ options ]","title":"Usage"},{"location":"cmd/spo/tenant/tenant-recyclebinitem-list/#options","text":"-h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Important To use this command you have to have permissions to access the tenant admin site.","title":"Options"},{"location":"cmd/spo/tenant/tenant-recyclebinitem-list/#examples","text":"Returns all modern and classic site collections in the tenant scoped recycle bin m365 spo tenant recyclebinitem list","title":"Examples"},{"location":"cmd/spo/tenant/tenant-recyclebinitem-remove/","text":"spo tenant recyclebinitem remove \u00b6 Removes the specified deleted Site Collection from Tenant Recycle Bin Usage \u00b6 m365 spo tenant recyclebinitem remove [ options ] Options \u00b6 -u, --siteUrl <siteUrl> URL of the site to remove --wait Wait for the site collection to be removed before completing the command --confirm Don't prompt for confirming removing the deleted site collection -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Important To use this command you have to have permissions to access the tenant admin site. Remarks \u00b6 Removing a site collection is by default asynchronous and depending on the current state of Microsoft 365, might take up to few minutes. If you're building a script with steps that require the site to be fully removed, you should use the --wait flag. When using this flag, the m365 spo tenant recyclebinitem remove command will keep running until it received confirmation from Microsoft 365 that the site has been fully removed. Examples \u00b6 Removes the specified deleted site collection from tenant recycle bin m365 spo tenant recyclebinitem remove --siteUrl https://contoso.sharepoint.com/sites/team Removes the specified deleted site collection from tenant recycle bin and wait for the removing process to complete m365 spo tenant recyclebinitem remove --siteUrl https://contoso.sharepoint.com/sites/team --wait","title":"tenant recyclebinitem remove"},{"location":"cmd/spo/tenant/tenant-recyclebinitem-remove/#spo-tenant-recyclebinitem-remove","text":"Removes the specified deleted Site Collection from Tenant Recycle Bin","title":"spo tenant recyclebinitem remove"},{"location":"cmd/spo/tenant/tenant-recyclebinitem-remove/#usage","text":"m365 spo tenant recyclebinitem remove [ options ]","title":"Usage"},{"location":"cmd/spo/tenant/tenant-recyclebinitem-remove/#options","text":"-u, --siteUrl <siteUrl> URL of the site to remove --wait Wait for the site collection to be removed before completing the command --confirm Don't prompt for confirming removing the deleted site collection -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Important To use this command you have to have permissions to access the tenant admin site.","title":"Options"},{"location":"cmd/spo/tenant/tenant-recyclebinitem-remove/#remarks","text":"Removing a site collection is by default asynchronous and depending on the current state of Microsoft 365, might take up to few minutes. If you're building a script with steps that require the site to be fully removed, you should use the --wait flag. When using this flag, the m365 spo tenant recyclebinitem remove command will keep running until it received confirmation from Microsoft 365 that the site has been fully removed.","title":"Remarks"},{"location":"cmd/spo/tenant/tenant-recyclebinitem-remove/#examples","text":"Removes the specified deleted site collection from tenant recycle bin m365 spo tenant recyclebinitem remove --siteUrl https://contoso.sharepoint.com/sites/team Removes the specified deleted site collection from tenant recycle bin and wait for the removing process to complete m365 spo tenant recyclebinitem remove --siteUrl https://contoso.sharepoint.com/sites/team --wait","title":"Examples"},{"location":"cmd/spo/tenant/tenant-recyclebinitem-restore/","text":"spo tenant recyclebinitem restore \u00b6 Restores the specified deleted Site Collection from Tenant Recycle Bin Usage \u00b6 m365 spo tenant recyclebinitem restore [ options ] Options \u00b6 -u, --siteUrl <siteUrl> URL of the site to restore --wait Wait for the site collection to be restored before completing the command -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Important To use this command you have to have permissions to access the tenant admin site. Remarks \u00b6 Restoring deleted site collections is by default asynchronous and depending on the current state of Microsoft 365, might take up to few minutes. If you're building a script with steps that require the site to be fully restored, you should use the --wait flag. When using this flag, the spo tenant recyclebinitem restore command will keep running until it received confirmation from Microsoft 365 that the site has been fully restored. Examples \u00b6 Restore a deleted site collection from tenant recycle bin m365 spo tenant recyclebinitem restore --siteUrl https://contoso.sharepoint.com/sites/team Restore a deleted site collection from tenant recycle bin and wait for completion m365 spo tenant recyclebinitem restore --siteUrl https://contoso.sharepoint.com/sites/team --wait","title":"tenant recyclebinitem restore"},{"location":"cmd/spo/tenant/tenant-recyclebinitem-restore/#spo-tenant-recyclebinitem-restore","text":"Restores the specified deleted Site Collection from Tenant Recycle Bin","title":"spo tenant recyclebinitem restore"},{"location":"cmd/spo/tenant/tenant-recyclebinitem-restore/#usage","text":"m365 spo tenant recyclebinitem restore [ options ]","title":"Usage"},{"location":"cmd/spo/tenant/tenant-recyclebinitem-restore/#options","text":"-u, --siteUrl <siteUrl> URL of the site to restore --wait Wait for the site collection to be restored before completing the command -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Important To use this command you have to have permissions to access the tenant admin site.","title":"Options"},{"location":"cmd/spo/tenant/tenant-recyclebinitem-restore/#remarks","text":"Restoring deleted site collections is by default asynchronous and depending on the current state of Microsoft 365, might take up to few minutes. If you're building a script with steps that require the site to be fully restored, you should use the --wait flag. When using this flag, the spo tenant recyclebinitem restore command will keep running until it received confirmation from Microsoft 365 that the site has been fully restored.","title":"Remarks"},{"location":"cmd/spo/tenant/tenant-recyclebinitem-restore/#examples","text":"Restore a deleted site collection from tenant recycle bin m365 spo tenant recyclebinitem restore --siteUrl https://contoso.sharepoint.com/sites/team Restore a deleted site collection from tenant recycle bin and wait for completion m365 spo tenant recyclebinitem restore --siteUrl https://contoso.sharepoint.com/sites/team --wait","title":"Examples"},{"location":"cmd/spo/tenant/tenant-settings-list/","text":"spo tenant settings list \u00b6 Lists the global tenant settings Usage \u00b6 m365 spo tenant settings list [ options ] Options \u00b6 -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Important To use this command you have to have permissions to access the tenant admin site. Examples \u00b6 Lists the settings of the tenant m365 spo tenant settings list","title":"tenant settings list"},{"location":"cmd/spo/tenant/tenant-settings-list/#spo-tenant-settings-list","text":"Lists the global tenant settings","title":"spo tenant settings list"},{"location":"cmd/spo/tenant/tenant-settings-list/#usage","text":"m365 spo tenant settings list [ options ]","title":"Usage"},{"location":"cmd/spo/tenant/tenant-settings-list/#options","text":"-h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Important To use this command you have to have permissions to access the tenant admin site.","title":"Options"},{"location":"cmd/spo/tenant/tenant-settings-list/#examples","text":"Lists the settings of the tenant m365 spo tenant settings list","title":"Examples"},{"location":"cmd/spo/tenant/tenant-settings-set/","text":"spo tenant settings set \u00b6 Sets tenant global settings Usage \u00b6 m365 spo tenant settings set [ options ] Options \u00b6 -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging --MinCompatibilityLevel [MinCompatibilityLevel] Specifies the lower bound on the compatibility level for new sites --MaxCompatibilityLevel [MaxCompatibilityLevel] Specifies the upper bound on the compatibility level for new sites --ExternalServicesEnabled [ExternalServicesEnabled] Enables external services for a tenant. External services are defined as services that are not in the Microsoft 365 datacenters. Allowed values true,false --NoAccessRedirectUrl [NoAccessRedirectUrl] Specifies the URL of the redirected site for those site collections which have the locked state \"NoAccess\" --SharingCapability [SharingCapability] Determines what level of sharing is available for the site. The valid values are: ExternalUserAndGuestSharing (default) - External user sharing (share by email) and guest link sharing are both enabled. Disabled - External user sharing (share by email) and guest link sharing are both disabled. ExternalUserSharingOnly - External user sharing (share by email) is enabled, but guest link sharing is disabled. Allowed values Disabled,ExternalUserSharingOnly,ExternalUserAndGuestSharing,ExistingExternalUserSharingOnly --DisplayStartASiteOption [DisplayStartASiteOption] Determines whether tenant users see the Start a Site menu option. Allowed values true,false --StartASiteFormUrl [StartASiteFormUrl] Specifies URL of the form to load in the Start a Site dialog. The valid values are: \"\" (default) - Blank by default, this will also remove or clear any value that has been set. Full URL - Example:\"https://contoso.sharepoint.com/path/to/form\" --ShowEveryoneClaim [ShowEveryoneClaim] Enables the administrator to hide the Everyone claim in the People Picker. When users share an item with Everyone, it is accessible to all authenticated users in the tenant\\'s Azure Active Directory, including any active external users who have previously accepted invitations. Note, that some SharePoint system resources such as templates and pages are required to be shared to Everyone and this type of sharing does not expose any user data or metadata. Allowed values true,false --ShowAllUsersClaim [ShowAllUsersClaim] Enables the administrator to hide the All Users claim groups in People Picker. When users share an item with \"All Users (x)\", it is accessible to all organization members in the tenant\\'s Azure Active Directory who have authenticated with via this method. When users share an item with \"All Users (x)\" it is accessible to all organization members in the tenant that used NTLM to authentication with SharePoint. Allowed values true,false --ShowEveryoneExceptExternalUsersClaim [ShowEveryoneExceptExternalUsersClaim] Enables the administrator to hide the \"Everyone except external users\" claim in the People Picker. When users share an item with \"Everyone except external users\", it is accessible to all organization members in the tenant's Azure Active Directory, but not to any users who have previously accepted invitations. Allowed values true,false --SearchResolveExactEmailOrUPN [SearchResolveExactEmailOrUPN] Removes the search capability from People Picker. Note, recently resolved names will still appear in the list until browser cache is cleared or expired. SharePoint Administrators will still be able to use starts with or partial name matching when enabled. Allowed values true,false --OfficeClientADALDisabled [OfficeClientADALDisabled] When set to true this will disable the ability to use Modern Authentication that leverages ADAL across the tenant. Allowed values true,false --LegacyAuthProtocolsEnabled [LegacyAuthProtocolsEnabled] By default this value is set to true. Setting this parameter prevents Office clients using non-modern authentication protocols from accessing SharePoint Online resources. A value of true - Enables Office clients using non-modern authentication protocols (such as, Forms-Based Authentication (FBA) or Identity Client Runtime Library (IDCRL)) to access SharePoint resources. Allowed values true,false --RequireAcceptingAccountMatchInvitedAccount [RequireAcceptingAccountMatchInvitedAccount] Ensures that an external user can only accept an external sharing invitation with an account matching the invited email address. Administrators who desire increased control over external collaborators should consider enabling this feature. Allowed values true,false --ProvisionSharedWithEveryoneFolder [ProvisionSharedWithEveryoneFolder] Creates a Shared with Everyone folder in every user\\'s new OneDrive for Business document library. The valid values are: True (default) - The Shared with Everyone folder is created. False - No folder is created when the site and OneDrive for Business document library is created. Allowed values true,false --SignInAccelerationDomain [SignInAccelerationDomain] Specifies the home realm discovery value to be sent to Azure Active Directory (AAD) during the user sign-in process. When the organization uses a third-party identity provider, this prevents the user from seeing the Azure Active Directory Home Realm Discovery web page and ensures the user only sees their company's Identity Provider's portal. This value can also be used with Azure Active Directory Premium to customize the Azure Active Directory login page. Acceleration will not occur on site collections that are shared externally. This value should be configured with the login domain that is used by your company (that is, example@contoso.com). If your company has multiple third-party identity providers, configuring the sign-in acceleration value will break sign-in for your organization. The valid values are: \"\" (default) - Blank by default, this will also remove or clear any value that has been set. Login Domain - For example: \"contoso.com\". No value assigned by default --EnableGuestSignInAcceleration [EnableGuestSignInAcceleration] Accelerates guest-enabled site collections as well as member-only site collections when the SignInAccelerationDomain parameter is set. Allowed values true,false --UsePersistentCookiesForExplorerView [UsePersistentCookiesForExplorerView] Lets SharePoint issue a special cookie that will allow this feature to work even when \"Keep Me Signed In\" is not selected. \"Open with Explorer\" requires persisted cookies to operate correctly. When the user does not select \"Keep Me Signed in\" at the time of sign -in, \"Open with Explorer\" will fail. This special cookie expires after 30 minutes and cannot be cleared by closing the browser or signing out of SharePoint Online.To clear this cookie, the user must log out of their Windows session. The valid values are: False(default) - No special cookie is generated and the normal Microsoft 365 sign -in length / timing applies. True - Generates a special cookie that will allow \"Open with Explorer\" to function if the \"Keep Me Signed In\" box is not checked at sign -in. Allowed values true,false --BccExternalSharingInvitations [BccExternalSharingInvitations] When the feature is enabled, all external sharing invitations that are sent will blind copy the e-mail messages listed in the BccExternalSharingsInvitationList. Allowed values true,false --BccExternalSharingInvitationsList [BccExternalSharingInvitationsList] Specifies a list of e-mail addresses to be BCC'd when the BCC for External Sharing feature is enabled. Multiple addresses can be specified by creating a comma separated list with no spaces --UserVoiceForFeedbackEnabled [UserVoiceForFeedbackEnabled] Enables or disables the User Voice Feedback button. Allowed values true,false --PublicCdnEnabled [PublicCdnEnabled] Enables or disables the publish CDN. Allowed values true,false --PublicCdnAllowedFileTypes [PublicCdnAllowedFileTypes] Sets public CDN allowed file types --RequireAnonymousLinksExpireInDays [RequireAnonymousLinksExpireInDays] Specifies all anonymous links that have been created (or will be created) will expire after the set number of days. To remove the expiration requirement, set the value to zero (0) --SharingAllowedDomainList [SharingAllowedDomainList] Specifies a list of email domains that is allowed for sharing with the external collaborators. Use the space character as the delimiter for entering multiple values. For example, \"contoso.com fabrikam.com\" --SharingBlockedDomainList [SharingBlockedDomainList] Specifies a list of email domains that is blocked or prohibited for sharing with the external collaborators. Use space character as the delimiter for entering multiple values. For example, \"contoso.com fabrikam.com\" --SharingDomainRestrictionMode [SharingDomainRestrictionMode] Specifies the external sharing mode for domains. Allowed values None,AllowList,BlockList --OneDriveStorageQuota [OneDriveStorageQuota] Sets a default OneDrive for Business storage quota for the tenant. It will be used for new OneDrive for Business sites created. A typical use will be to reduce the amount of storage associated with OneDrive for Business to a level below what the License entitles the users. For example, it could be used to set the quota to 10 gigabytes (GB) by default --OneDriveForGuestsEnabled [OneDriveForGuestsEnabled] Lets OneDrive for Business creation for administrator managed guest users. Administrator managed Guest users use credentials in the resource tenant to access the resources. Allowed values true,false --IPAddressEnforcement [IPAddressEnforcement] Allows access from network locations that are defined by an administrator. The values are true and false. The default value is false which means the setting is disabled. Before the iPAddressEnforcement parameter is set, make sure you add a valid IPv4 or IPv6 address to the iPAddressAllowList parameter. Allowed values true,false --IPAddressAllowList [IPAddressAllowList] Configures multiple IP addresses or IP address ranges (IPv4 or IPv6). Use commas to separate multiple IP addresses or IP address ranges. Verify there are no overlapping IP addresses and ensure IP ranges use Classless Inter-Domain Routing (CIDR) notation. For example, 172.16.0.0, 192.168.1.0/27 . No value is assigned by default --IPAddressWACTokenLifetime [IPAddressWACTokenLifetime] Sets IP Address WAC token lifetime' --UseFindPeopleInPeoplePicker [UseFindPeopleInPeoplePicker] Sets use find people in PeoplePicker to true or false. Note: When set to true, users aren\\'t able to share with security groups or SharePoint groups. Allowed values true,false --DefaultSharingLinkType [DefaultSharingLinkType] Lets administrators choose what type of link appears is selected in the \u201cGet a link\u201d sharing dialog box in OneDrive for Business and SharePoint Online. Allowed values None,Direct,Internal,AnonymousAccess --ODBMembersCanShare [ODBMembersCanShare] Lets administrators set policy on re-sharing behavior in OneDrive for Business. Allowed values Unspecified,On,Off --ODBAccessRequests [ODBAccessRequests] Lets administrators set policy on access requests and requests to share in OneDrive for Business. Allowed values Unspecified,On,Off --PreventExternalUsersFromResharing [PreventExternalUsersFromResharing] Prevents external users from resharing. Allowed values true,false --ShowPeoplePickerSuggestionsForGuestUsers [ShowPeoplePickerSuggestionsForGuestUsers] Shows people picker suggestions for guest users. Allowed values true,false --FileAnonymousLinkType [FileAnonymousLinkType] Sets the file anonymous link type to None , View or Edit --FolderAnonymousLinkType [FolderAnonymousLinkType] Sets the folder anonymous link type to None , View or Edit --NotifyOwnersWhenItemsReshared [NotifyOwnersWhenItemsReshared] When this parameter is set to true and another user re-shares a document from a user's OneDrive for Business, the OneDrive for Business owner is notified by email. For additional information about how to configure notifications for external sharing, see Configure notifications for external sharing for OneDrive for Business. Allowed values true,false --NotifyOwnersWhenInvitationsAccepted [NotifyOwnersWhenInvitationsAccepted] When this parameter is set to true and when an external user accepts an invitation to a resource in a user's OneDrive for Business, the OneDrive for Business owner is notified by email. For additional information about how to configure notifications for external sharing, see Configure notifications for external sharing for OneDrive for Business. Allowed values true,false --NotificationsInOneDriveForBusinessEnabled [NotificationsInOneDriveForBusinessEnabled] Enables or disables notifications in OneDrive for business. Allowed values true,false --NotificationsInSharePointEnabled [NotificationsInSharePointEnabled] Enables or disables notifications in SharePoint. Allowed values true,false --OwnerAnonymousNotification [OwnerAnonymousNotification] Enables or disables owner anonymous notification. Allowed values true,false --CommentsOnSitePagesDisabled [CommentsOnSitePagesDisabled] Enables or disables comments on site pages. Allowed values true,false --SocialBarOnSitePagesDisabled [SocialBarOnSitePagesDisabled] Enables or disables social bar on site pages. Allowed values true,false --OrphanedPersonalSitesRetentionPeriod [OrphanedPersonalSitesRetentionPeriod] Specifies the number of days after a user's Active Directory account is deleted that their OneDrive for Business content will be deleted. The value range is in days, between 30 and 3650. The default value is 30 --DisallowInfectedFileDownload [DisallowInfectedFileDownload] Prevents the Download button from being displayed on the Virus Found warning page. Allowed values true,false --DefaultLinkPermission [DefaultLinkPermission] Choose the dafault permission that is selected when users share. This applies to anonymous access, internal and direct links. Allowed values None,View,Edit --ConditionalAccessPolicy [ConditionalAccessPolicy] Configures conditional access policy. Allowed values AllowFullAccess,AllowLimitedAccess,BlockAccess --AllowDownloadingNonWebViewableFiles [AllowDownloadingNonWebViewableFiles] Allows downloading non web viewable files. The Allowed values true,false --AllowEditing [AllowEditing] Allows editing. Allowed values true,false --ApplyAppEnforcedRestrictionsToAdHocRecipients [ApplyAppEnforcedRestrictionsToAdHocRecipients] Applies app enforced restrictions to AdHoc recipients. Allowed values true,false --FilePickerExternalImageSearchEnabled [FilePickerExternalImageSearchEnabled] Enables file picker external image search. Allowed values true,false --EmailAttestationRequired [EmailAttestationRequired] Sets email attestation to required. Allowed values true,false --EmailAttestationReAuthDays [EmailAttestationReAuthDays] Sets email attestation re-auth days --HideDefaultThemes [HideDefaultThemes] Defines if the default themes are visible or hidden. Allowed values true,false --BlockAccessOnUnmanagedDevices [BlockAccessOnUnmanagedDevices] Blocks access on unmanaged devices. Allowed values true,false --AllowLimitedAccessOnUnmanagedDevices [AllowLimitedAccessOnUnmanagedDevices] Allows limited access on unmanaged devices blocks. Allowed values true,false --BlockDownloadOfAllFilesForGuests [BlockDownloadOfAllFilesForGuests] Blocks download of all files for guests. Allowed values true,false --BlockDownloadOfAllFilesOnUnmanagedDevices [BlockDownloadOfAllFilesOnUnmanagedDevices] Blocks download of all files on unmanaged devices. Allowed values true,false --BlockDownloadOfViewableFilesForGuests [BlockDownloadOfViewableFilesForGuests] Blocks download of viewable files for guests. Allowed values true,false --BlockDownloadOfViewableFilesOnUnmanagedDevices [BlockDownloadOfViewableFilesOnUnmanagedDevices] Blocks download of viewable files on unmanaged devices. Allowed values true,false --BlockMacSync [BlockMacSync] Blocks Mac sync. Allowed values true,false --DisableReportProblemDialog [DisableReportProblemDialog] Disables report problem dialog. Allowed values true,false --DisplayNamesOfFileViewers [DisplayNamesOfFileViewers] Displayes names of file viewers. Allowed values true,false --EnableMinimumVersionRequirement [EnableMinimumVersionRequirement] Enables minimum version requirement. Allowed values true,false --HideSyncButtonOnODB [HideSyncButtonOnODB] Hides the sync button on One Drive for Business. Allowed values true,false --IsUnmanagedSyncClientForTenantRestricted [IsUnmanagedSyncClientForTenantRestricted] Is unmanaged sync client for tenant restricted. Allowed values true,false --LimitedAccessFileType [LimitedAccessFileType] Allows users to preview only Office files in the browser. This option increases security but may be a barrier to user productivity. Allowed values OfficeOnlineFilesOnly,WebPreviewableFiles,OtherFiles --OptOutOfGrooveBlock [OptOutOfGrooveBlock] Opts out of the groove block. Allowed values true,false --OptOutOfGrooveSoftBlock [OptOutOfGrooveSoftBlock] Opts out of Groove soft block. Allowed values true,false --OrgNewsSiteUrl [OrgNewsSiteUrl] Organization news site url' --PermissiveBrowserFileHandlingOverride [PermissiveBrowserFileHandlingOverride] Permissive browser fileHandling override. Allowed values true,false --ShowNGSCDialogForSyncOnODB [ShowNGSCDialogForSyncOnODB] Show NGSC dialog for sync on OneDrive for Business. Allowed values true,false --SpecialCharactersStateInFileFolderNames [SpecialCharactersStateInFileFolderNames] Sets the special characters state in file and folder names in SharePoint and OneDrive for Business. Allowed values NoPreference,Allowed,Disallowed --SyncPrivacyProfileProperties [SyncPrivacyProfileProperties] Syncs privacy profile properties. Allowed values true,false --ExcludedFileExtensionsForSyncClient [ExcludedFileExtensionsForSyncClient] Excluded file extensions for sync client. Array of strings split by comma --AllowedDomainListForSyncClient [AllowedDomainListForSyncClient] Sets allowed domain list for sync client. Array of GUIDs split by comma. Example: c9b1909e-901a-0000-2cdb-e91c3f46320a,c9b1909e-901a-0000-2cdb-e91c3f463201 --DisabledWebPartIds [DisabledWebPartIds] Sets disabled web part Ids. Array of GUIDs split by comma. Example: c9b1909e-901a-0000-2cdb-e91c3f46320a,c9b1909e-901a-0000-2cdb-e91c3f463201 --DisableCustomAppAuthentication [DisableCustomAppAuthentication] Configure if ACS-based app-only auth should be disabled or not. Allowed values true,false --EnableAzureADB2BIntegration [EnableAzureADB2BIntegration] Enables the preview for OneDrive and SharePoint integration with Azure AD B2B. Allowed values true,false . Azure AD one-time passcode needs to be enabled for this integration to work. For more information see http://aka.ms/spo-b2b-integration . --SyncAadB2BManagementPolicy [SyncAadB2BManagementPolicy] Syncs Azure B2B Management Policies. Allowed values true,false . For more information, see SharePoint and OneDrive integration with Azure AD B2B . Important To use this command you have to have permissions to access the tenant admin site. Examples \u00b6 Sets single tenant global setting m365 spo tenant settings set --UserVoiceForFeedbackEnabled true Sets multiple tenant global settings at once m365 spo tenant settings set --UserVoiceForFeedbackEnabled true --HideSyncButtonOnODB true --AllowedDomainListForSyncClient c9b1909e-901a-0000-2cdb-e91c3f46320a,c9b1909e-901a-0000-2cdb-e91c3f463201 Enable Azure AD B2B integration for SharePoint and OneDrive and sync the Azure AD B2B management policies m365 spo tenant settings set --EnableAzureADB2BIntegration true m365 spo tenant settings set --SyncAadB2BManagementPolicy true Disable Azure AD B2B integration for SharePoint and OneDrive m365 spo tenant settings set --EnableAzureADB2BIntegration false","title":"tenant settings set"},{"location":"cmd/spo/tenant/tenant-settings-set/#spo-tenant-settings-set","text":"Sets tenant global settings","title":"spo tenant settings set"},{"location":"cmd/spo/tenant/tenant-settings-set/#usage","text":"m365 spo tenant settings set [ options ]","title":"Usage"},{"location":"cmd/spo/tenant/tenant-settings-set/#options","text":"-h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging --MinCompatibilityLevel [MinCompatibilityLevel] Specifies the lower bound on the compatibility level for new sites --MaxCompatibilityLevel [MaxCompatibilityLevel] Specifies the upper bound on the compatibility level for new sites --ExternalServicesEnabled [ExternalServicesEnabled] Enables external services for a tenant. External services are defined as services that are not in the Microsoft 365 datacenters. Allowed values true,false --NoAccessRedirectUrl [NoAccessRedirectUrl] Specifies the URL of the redirected site for those site collections which have the locked state \"NoAccess\" --SharingCapability [SharingCapability] Determines what level of sharing is available for the site. The valid values are: ExternalUserAndGuestSharing (default) - External user sharing (share by email) and guest link sharing are both enabled. Disabled - External user sharing (share by email) and guest link sharing are both disabled. ExternalUserSharingOnly - External user sharing (share by email) is enabled, but guest link sharing is disabled. Allowed values Disabled,ExternalUserSharingOnly,ExternalUserAndGuestSharing,ExistingExternalUserSharingOnly --DisplayStartASiteOption [DisplayStartASiteOption] Determines whether tenant users see the Start a Site menu option. Allowed values true,false --StartASiteFormUrl [StartASiteFormUrl] Specifies URL of the form to load in the Start a Site dialog. The valid values are: \"\" (default) - Blank by default, this will also remove or clear any value that has been set. Full URL - Example:\"https://contoso.sharepoint.com/path/to/form\" --ShowEveryoneClaim [ShowEveryoneClaim] Enables the administrator to hide the Everyone claim in the People Picker. When users share an item with Everyone, it is accessible to all authenticated users in the tenant\\'s Azure Active Directory, including any active external users who have previously accepted invitations. Note, that some SharePoint system resources such as templates and pages are required to be shared to Everyone and this type of sharing does not expose any user data or metadata. Allowed values true,false --ShowAllUsersClaim [ShowAllUsersClaim] Enables the administrator to hide the All Users claim groups in People Picker. When users share an item with \"All Users (x)\", it is accessible to all organization members in the tenant\\'s Azure Active Directory who have authenticated with via this method. When users share an item with \"All Users (x)\" it is accessible to all organization members in the tenant that used NTLM to authentication with SharePoint. Allowed values true,false --ShowEveryoneExceptExternalUsersClaim [ShowEveryoneExceptExternalUsersClaim] Enables the administrator to hide the \"Everyone except external users\" claim in the People Picker. When users share an item with \"Everyone except external users\", it is accessible to all organization members in the tenant's Azure Active Directory, but not to any users who have previously accepted invitations. Allowed values true,false --SearchResolveExactEmailOrUPN [SearchResolveExactEmailOrUPN] Removes the search capability from People Picker. Note, recently resolved names will still appear in the list until browser cache is cleared or expired. SharePoint Administrators will still be able to use starts with or partial name matching when enabled. Allowed values true,false --OfficeClientADALDisabled [OfficeClientADALDisabled] When set to true this will disable the ability to use Modern Authentication that leverages ADAL across the tenant. Allowed values true,false --LegacyAuthProtocolsEnabled [LegacyAuthProtocolsEnabled] By default this value is set to true. Setting this parameter prevents Office clients using non-modern authentication protocols from accessing SharePoint Online resources. A value of true - Enables Office clients using non-modern authentication protocols (such as, Forms-Based Authentication (FBA) or Identity Client Runtime Library (IDCRL)) to access SharePoint resources. Allowed values true,false --RequireAcceptingAccountMatchInvitedAccount [RequireAcceptingAccountMatchInvitedAccount] Ensures that an external user can only accept an external sharing invitation with an account matching the invited email address. Administrators who desire increased control over external collaborators should consider enabling this feature. Allowed values true,false --ProvisionSharedWithEveryoneFolder [ProvisionSharedWithEveryoneFolder] Creates a Shared with Everyone folder in every user\\'s new OneDrive for Business document library. The valid values are: True (default) - The Shared with Everyone folder is created. False - No folder is created when the site and OneDrive for Business document library is created. Allowed values true,false --SignInAccelerationDomain [SignInAccelerationDomain] Specifies the home realm discovery value to be sent to Azure Active Directory (AAD) during the user sign-in process. When the organization uses a third-party identity provider, this prevents the user from seeing the Azure Active Directory Home Realm Discovery web page and ensures the user only sees their company's Identity Provider's portal. This value can also be used with Azure Active Directory Premium to customize the Azure Active Directory login page. Acceleration will not occur on site collections that are shared externally. This value should be configured with the login domain that is used by your company (that is, example@contoso.com). If your company has multiple third-party identity providers, configuring the sign-in acceleration value will break sign-in for your organization. The valid values are: \"\" (default) - Blank by default, this will also remove or clear any value that has been set. Login Domain - For example: \"contoso.com\". No value assigned by default --EnableGuestSignInAcceleration [EnableGuestSignInAcceleration] Accelerates guest-enabled site collections as well as member-only site collections when the SignInAccelerationDomain parameter is set. Allowed values true,false --UsePersistentCookiesForExplorerView [UsePersistentCookiesForExplorerView] Lets SharePoint issue a special cookie that will allow this feature to work even when \"Keep Me Signed In\" is not selected. \"Open with Explorer\" requires persisted cookies to operate correctly. When the user does not select \"Keep Me Signed in\" at the time of sign -in, \"Open with Explorer\" will fail. This special cookie expires after 30 minutes and cannot be cleared by closing the browser or signing out of SharePoint Online.To clear this cookie, the user must log out of their Windows session. The valid values are: False(default) - No special cookie is generated and the normal Microsoft 365 sign -in length / timing applies. True - Generates a special cookie that will allow \"Open with Explorer\" to function if the \"Keep Me Signed In\" box is not checked at sign -in. Allowed values true,false --BccExternalSharingInvitations [BccExternalSharingInvitations] When the feature is enabled, all external sharing invitations that are sent will blind copy the e-mail messages listed in the BccExternalSharingsInvitationList. Allowed values true,false --BccExternalSharingInvitationsList [BccExternalSharingInvitationsList] Specifies a list of e-mail addresses to be BCC'd when the BCC for External Sharing feature is enabled. Multiple addresses can be specified by creating a comma separated list with no spaces --UserVoiceForFeedbackEnabled [UserVoiceForFeedbackEnabled] Enables or disables the User Voice Feedback button. Allowed values true,false --PublicCdnEnabled [PublicCdnEnabled] Enables or disables the publish CDN. Allowed values true,false --PublicCdnAllowedFileTypes [PublicCdnAllowedFileTypes] Sets public CDN allowed file types --RequireAnonymousLinksExpireInDays [RequireAnonymousLinksExpireInDays] Specifies all anonymous links that have been created (or will be created) will expire after the set number of days. To remove the expiration requirement, set the value to zero (0) --SharingAllowedDomainList [SharingAllowedDomainList] Specifies a list of email domains that is allowed for sharing with the external collaborators. Use the space character as the delimiter for entering multiple values. For example, \"contoso.com fabrikam.com\" --SharingBlockedDomainList [SharingBlockedDomainList] Specifies a list of email domains that is blocked or prohibited for sharing with the external collaborators. Use space character as the delimiter for entering multiple values. For example, \"contoso.com fabrikam.com\" --SharingDomainRestrictionMode [SharingDomainRestrictionMode] Specifies the external sharing mode for domains. Allowed values None,AllowList,BlockList --OneDriveStorageQuota [OneDriveStorageQuota] Sets a default OneDrive for Business storage quota for the tenant. It will be used for new OneDrive for Business sites created. A typical use will be to reduce the amount of storage associated with OneDrive for Business to a level below what the License entitles the users. For example, it could be used to set the quota to 10 gigabytes (GB) by default --OneDriveForGuestsEnabled [OneDriveForGuestsEnabled] Lets OneDrive for Business creation for administrator managed guest users. Administrator managed Guest users use credentials in the resource tenant to access the resources. Allowed values true,false --IPAddressEnforcement [IPAddressEnforcement] Allows access from network locations that are defined by an administrator. The values are true and false. The default value is false which means the setting is disabled. Before the iPAddressEnforcement parameter is set, make sure you add a valid IPv4 or IPv6 address to the iPAddressAllowList parameter. Allowed values true,false --IPAddressAllowList [IPAddressAllowList] Configures multiple IP addresses or IP address ranges (IPv4 or IPv6). Use commas to separate multiple IP addresses or IP address ranges. Verify there are no overlapping IP addresses and ensure IP ranges use Classless Inter-Domain Routing (CIDR) notation. For example, 172.16.0.0, 192.168.1.0/27 . No value is assigned by default --IPAddressWACTokenLifetime [IPAddressWACTokenLifetime] Sets IP Address WAC token lifetime' --UseFindPeopleInPeoplePicker [UseFindPeopleInPeoplePicker] Sets use find people in PeoplePicker to true or false. Note: When set to true, users aren\\'t able to share with security groups or SharePoint groups. Allowed values true,false --DefaultSharingLinkType [DefaultSharingLinkType] Lets administrators choose what type of link appears is selected in the \u201cGet a link\u201d sharing dialog box in OneDrive for Business and SharePoint Online. Allowed values None,Direct,Internal,AnonymousAccess --ODBMembersCanShare [ODBMembersCanShare] Lets administrators set policy on re-sharing behavior in OneDrive for Business. Allowed values Unspecified,On,Off --ODBAccessRequests [ODBAccessRequests] Lets administrators set policy on access requests and requests to share in OneDrive for Business. Allowed values Unspecified,On,Off --PreventExternalUsersFromResharing [PreventExternalUsersFromResharing] Prevents external users from resharing. Allowed values true,false --ShowPeoplePickerSuggestionsForGuestUsers [ShowPeoplePickerSuggestionsForGuestUsers] Shows people picker suggestions for guest users. Allowed values true,false --FileAnonymousLinkType [FileAnonymousLinkType] Sets the file anonymous link type to None , View or Edit --FolderAnonymousLinkType [FolderAnonymousLinkType] Sets the folder anonymous link type to None , View or Edit --NotifyOwnersWhenItemsReshared [NotifyOwnersWhenItemsReshared] When this parameter is set to true and another user re-shares a document from a user's OneDrive for Business, the OneDrive for Business owner is notified by email. For additional information about how to configure notifications for external sharing, see Configure notifications for external sharing for OneDrive for Business. Allowed values true,false --NotifyOwnersWhenInvitationsAccepted [NotifyOwnersWhenInvitationsAccepted] When this parameter is set to true and when an external user accepts an invitation to a resource in a user's OneDrive for Business, the OneDrive for Business owner is notified by email. For additional information about how to configure notifications for external sharing, see Configure notifications for external sharing for OneDrive for Business. Allowed values true,false --NotificationsInOneDriveForBusinessEnabled [NotificationsInOneDriveForBusinessEnabled] Enables or disables notifications in OneDrive for business. Allowed values true,false --NotificationsInSharePointEnabled [NotificationsInSharePointEnabled] Enables or disables notifications in SharePoint. Allowed values true,false --OwnerAnonymousNotification [OwnerAnonymousNotification] Enables or disables owner anonymous notification. Allowed values true,false --CommentsOnSitePagesDisabled [CommentsOnSitePagesDisabled] Enables or disables comments on site pages. Allowed values true,false --SocialBarOnSitePagesDisabled [SocialBarOnSitePagesDisabled] Enables or disables social bar on site pages. Allowed values true,false --OrphanedPersonalSitesRetentionPeriod [OrphanedPersonalSitesRetentionPeriod] Specifies the number of days after a user's Active Directory account is deleted that their OneDrive for Business content will be deleted. The value range is in days, between 30 and 3650. The default value is 30 --DisallowInfectedFileDownload [DisallowInfectedFileDownload] Prevents the Download button from being displayed on the Virus Found warning page. Allowed values true,false --DefaultLinkPermission [DefaultLinkPermission] Choose the dafault permission that is selected when users share. This applies to anonymous access, internal and direct links. Allowed values None,View,Edit --ConditionalAccessPolicy [ConditionalAccessPolicy] Configures conditional access policy. Allowed values AllowFullAccess,AllowLimitedAccess,BlockAccess --AllowDownloadingNonWebViewableFiles [AllowDownloadingNonWebViewableFiles] Allows downloading non web viewable files. The Allowed values true,false --AllowEditing [AllowEditing] Allows editing. Allowed values true,false --ApplyAppEnforcedRestrictionsToAdHocRecipients [ApplyAppEnforcedRestrictionsToAdHocRecipients] Applies app enforced restrictions to AdHoc recipients. Allowed values true,false --FilePickerExternalImageSearchEnabled [FilePickerExternalImageSearchEnabled] Enables file picker external image search. Allowed values true,false --EmailAttestationRequired [EmailAttestationRequired] Sets email attestation to required. Allowed values true,false --EmailAttestationReAuthDays [EmailAttestationReAuthDays] Sets email attestation re-auth days --HideDefaultThemes [HideDefaultThemes] Defines if the default themes are visible or hidden. Allowed values true,false --BlockAccessOnUnmanagedDevices [BlockAccessOnUnmanagedDevices] Blocks access on unmanaged devices. Allowed values true,false --AllowLimitedAccessOnUnmanagedDevices [AllowLimitedAccessOnUnmanagedDevices] Allows limited access on unmanaged devices blocks. Allowed values true,false --BlockDownloadOfAllFilesForGuests [BlockDownloadOfAllFilesForGuests] Blocks download of all files for guests. Allowed values true,false --BlockDownloadOfAllFilesOnUnmanagedDevices [BlockDownloadOfAllFilesOnUnmanagedDevices] Blocks download of all files on unmanaged devices. Allowed values true,false --BlockDownloadOfViewableFilesForGuests [BlockDownloadOfViewableFilesForGuests] Blocks download of viewable files for guests. Allowed values true,false --BlockDownloadOfViewableFilesOnUnmanagedDevices [BlockDownloadOfViewableFilesOnUnmanagedDevices] Blocks download of viewable files on unmanaged devices. Allowed values true,false --BlockMacSync [BlockMacSync] Blocks Mac sync. Allowed values true,false --DisableReportProblemDialog [DisableReportProblemDialog] Disables report problem dialog. Allowed values true,false --DisplayNamesOfFileViewers [DisplayNamesOfFileViewers] Displayes names of file viewers. Allowed values true,false --EnableMinimumVersionRequirement [EnableMinimumVersionRequirement] Enables minimum version requirement. Allowed values true,false --HideSyncButtonOnODB [HideSyncButtonOnODB] Hides the sync button on One Drive for Business. Allowed values true,false --IsUnmanagedSyncClientForTenantRestricted [IsUnmanagedSyncClientForTenantRestricted] Is unmanaged sync client for tenant restricted. Allowed values true,false --LimitedAccessFileType [LimitedAccessFileType] Allows users to preview only Office files in the browser. This option increases security but may be a barrier to user productivity. Allowed values OfficeOnlineFilesOnly,WebPreviewableFiles,OtherFiles --OptOutOfGrooveBlock [OptOutOfGrooveBlock] Opts out of the groove block. Allowed values true,false --OptOutOfGrooveSoftBlock [OptOutOfGrooveSoftBlock] Opts out of Groove soft block. Allowed values true,false --OrgNewsSiteUrl [OrgNewsSiteUrl] Organization news site url' --PermissiveBrowserFileHandlingOverride [PermissiveBrowserFileHandlingOverride] Permissive browser fileHandling override. Allowed values true,false --ShowNGSCDialogForSyncOnODB [ShowNGSCDialogForSyncOnODB] Show NGSC dialog for sync on OneDrive for Business. Allowed values true,false --SpecialCharactersStateInFileFolderNames [SpecialCharactersStateInFileFolderNames] Sets the special characters state in file and folder names in SharePoint and OneDrive for Business. Allowed values NoPreference,Allowed,Disallowed --SyncPrivacyProfileProperties [SyncPrivacyProfileProperties] Syncs privacy profile properties. Allowed values true,false --ExcludedFileExtensionsForSyncClient [ExcludedFileExtensionsForSyncClient] Excluded file extensions for sync client. Array of strings split by comma --AllowedDomainListForSyncClient [AllowedDomainListForSyncClient] Sets allowed domain list for sync client. Array of GUIDs split by comma. Example: c9b1909e-901a-0000-2cdb-e91c3f46320a,c9b1909e-901a-0000-2cdb-e91c3f463201 --DisabledWebPartIds [DisabledWebPartIds] Sets disabled web part Ids. Array of GUIDs split by comma. Example: c9b1909e-901a-0000-2cdb-e91c3f46320a,c9b1909e-901a-0000-2cdb-e91c3f463201 --DisableCustomAppAuthentication [DisableCustomAppAuthentication] Configure if ACS-based app-only auth should be disabled or not. Allowed values true,false --EnableAzureADB2BIntegration [EnableAzureADB2BIntegration] Enables the preview for OneDrive and SharePoint integration with Azure AD B2B. Allowed values true,false . Azure AD one-time passcode needs to be enabled for this integration to work. For more information see http://aka.ms/spo-b2b-integration . --SyncAadB2BManagementPolicy [SyncAadB2BManagementPolicy] Syncs Azure B2B Management Policies. Allowed values true,false . For more information, see SharePoint and OneDrive integration with Azure AD B2B . Important To use this command you have to have permissions to access the tenant admin site.","title":"Options"},{"location":"cmd/spo/tenant/tenant-settings-set/#examples","text":"Sets single tenant global setting m365 spo tenant settings set --UserVoiceForFeedbackEnabled true Sets multiple tenant global settings at once m365 spo tenant settings set --UserVoiceForFeedbackEnabled true --HideSyncButtonOnODB true --AllowedDomainListForSyncClient c9b1909e-901a-0000-2cdb-e91c3f46320a,c9b1909e-901a-0000-2cdb-e91c3f463201 Enable Azure AD B2B integration for SharePoint and OneDrive and sync the Azure AD B2B management policies m365 spo tenant settings set --EnableAzureADB2BIntegration true m365 spo tenant settings set --SyncAadB2BManagementPolicy true Disable Azure AD B2B integration for SharePoint and OneDrive m365 spo tenant settings set --EnableAzureADB2BIntegration false","title":"Examples"},{"location":"cmd/spo/term/term-add/","text":"spo term add \u00b6 Adds taxonomy term Usage \u00b6 m365 spo term add [ options ] Options \u00b6 -n, --name <name> Name of the term to add --termSetId [termSetId] ID of the term set in which to create the term. Specify termSetId or termSetName but not both --termSetName [termSetName] Name of the term set in which to create the term. Specify termSetId or termSetName but not both --termGroupId [termGroupId] ID of the term group to which the term set belongs. Specify termGroupId or termGroupName but not both --termGroupName [termGroupName] Name of the term group to which the term set belongs. Specify termGroupId or termGroupName but not both -i, --id [id] ID of the term to add -d, --description [description] Description of the term to add --parentTermId [parentTermId] ID of the term below which the term should be added --customProperties [customProperties] JSON string with key-value pairs representing custom properties to set on the term --localCustomProperties [localCustomProperties] JSON string with key-value pairs representing local custom properties to set on the term -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Important To use this command you have to have permissions to access the tenant admin site. Remarks \u00b6 Escaping JSON in PowerShell When using the --customProperties and/or --localCustomProperties options it's possible to enter a JSON string. In PowerShell 5 to 7.2 specific escaping rules apply due to an issue. Remember that you can also use file tokens instead. Examples \u00b6 Add taxonomy term with the specified name to the term group and term set specified by their names m365 spo term add --name IT --termSetName Department --termGroupName People Add taxonomy term with the specified name to the term group and term set specified by their IDs m365 spo term add --name IT --termSetId 8ed8c9ea-7052-4c1d-a4d7-b9c10bffea6f --termGroupId 5c928151-c140-4d48-aab9-54da901c7fef Add taxonomy term with the specified name and ID m365 spo term add --name IT --id 5c928151-c140-4d48-aab9-54da901c7fef --termSetName Department --termGroupName People Add taxonomy term with custom properties m365 spo term add --name IT --termSetName Department --termGroupName People --customProperties '{\"Property\": \"Value\"}' Add taxonomy term below the specified term m365 spo term add --name IT --parentTermId 5c928151-c140-4d48-aab9-54da901c7fef --termGroupName People","title":"term add"},{"location":"cmd/spo/term/term-add/#spo-term-add","text":"Adds taxonomy term","title":"spo term add"},{"location":"cmd/spo/term/term-add/#usage","text":"m365 spo term add [ options ]","title":"Usage"},{"location":"cmd/spo/term/term-add/#options","text":"-n, --name <name> Name of the term to add --termSetId [termSetId] ID of the term set in which to create the term. Specify termSetId or termSetName but not both --termSetName [termSetName] Name of the term set in which to create the term. Specify termSetId or termSetName but not both --termGroupId [termGroupId] ID of the term group to which the term set belongs. Specify termGroupId or termGroupName but not both --termGroupName [termGroupName] Name of the term group to which the term set belongs. Specify termGroupId or termGroupName but not both -i, --id [id] ID of the term to add -d, --description [description] Description of the term to add --parentTermId [parentTermId] ID of the term below which the term should be added --customProperties [customProperties] JSON string with key-value pairs representing custom properties to set on the term --localCustomProperties [localCustomProperties] JSON string with key-value pairs representing local custom properties to set on the term -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Important To use this command you have to have permissions to access the tenant admin site.","title":"Options"},{"location":"cmd/spo/term/term-add/#remarks","text":"Escaping JSON in PowerShell When using the --customProperties and/or --localCustomProperties options it's possible to enter a JSON string. In PowerShell 5 to 7.2 specific escaping rules apply due to an issue. Remember that you can also use file tokens instead.","title":"Remarks"},{"location":"cmd/spo/term/term-add/#examples","text":"Add taxonomy term with the specified name to the term group and term set specified by their names m365 spo term add --name IT --termSetName Department --termGroupName People Add taxonomy term with the specified name to the term group and term set specified by their IDs m365 spo term add --name IT --termSetId 8ed8c9ea-7052-4c1d-a4d7-b9c10bffea6f --termGroupId 5c928151-c140-4d48-aab9-54da901c7fef Add taxonomy term with the specified name and ID m365 spo term add --name IT --id 5c928151-c140-4d48-aab9-54da901c7fef --termSetName Department --termGroupName People Add taxonomy term with custom properties m365 spo term add --name IT --termSetName Department --termGroupName People --customProperties '{\"Property\": \"Value\"}' Add taxonomy term below the specified term m365 spo term add --name IT --parentTermId 5c928151-c140-4d48-aab9-54da901c7fef --termGroupName People","title":"Examples"},{"location":"cmd/spo/term/term-get/","text":"spo term get \u00b6 Gets information about the specified taxonomy term Usage \u00b6 m365 spo term get [ options ] Options \u00b6 -i, --id [id] ID of the term to retrieve. Specify name or id but not both -n, --name [name] Name of the term to retrieve. Specify name or id but not both --termGroupId [termGroupId] ID of the term group to which the term set belongs. Specify termGroupId or termGroupName but not both --termGroupName [termGroupName] Name of the term group to which the term set belongs. Specify termGroupId or termGroupName but not both --termSetId [termSetId] ID of the term set to which the term belongs. Specify termSetId or termSetName but not both --termSetName [termSetName] Name of the term set to which the term belongs. Specify termSetId or termSetName but not both -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Important To use this command you have to have permissions to access the tenant admin site. Remarks \u00b6 When retrieving term by its ID, it's sufficient to specify just the ID. When retrieving it by its name however, you need to specify the parent term group and term set using either their names or IDs. Examples \u00b6 Get information about a taxonomy term using its ID m365 spo term get --id 0e8f395e-ff58-4d45-9ff7-e331ab728beb Get information about a taxonomy term using its name, retrieving the parent term group and term set using their names m365 spo term get --name IT --termGroupName People --termSetName Department Get information about a taxonomy term using its name, retrieving the parent term group and term set using their IDs m365 spo term get --name IT --termGroupId 5c928151-c140-4d48-aab9-54da901c7fef --termSetId 8ed8c9ea-7052-4c1d-a4d7-b9c10bffea6f","title":"term get"},{"location":"cmd/spo/term/term-get/#spo-term-get","text":"Gets information about the specified taxonomy term","title":"spo term get"},{"location":"cmd/spo/term/term-get/#usage","text":"m365 spo term get [ options ]","title":"Usage"},{"location":"cmd/spo/term/term-get/#options","text":"-i, --id [id] ID of the term to retrieve. Specify name or id but not both -n, --name [name] Name of the term to retrieve. Specify name or id but not both --termGroupId [termGroupId] ID of the term group to which the term set belongs. Specify termGroupId or termGroupName but not both --termGroupName [termGroupName] Name of the term group to which the term set belongs. Specify termGroupId or termGroupName but not both --termSetId [termSetId] ID of the term set to which the term belongs. Specify termSetId or termSetName but not both --termSetName [termSetName] Name of the term set to which the term belongs. Specify termSetId or termSetName but not both -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Important To use this command you have to have permissions to access the tenant admin site.","title":"Options"},{"location":"cmd/spo/term/term-get/#remarks","text":"When retrieving term by its ID, it's sufficient to specify just the ID. When retrieving it by its name however, you need to specify the parent term group and term set using either their names or IDs.","title":"Remarks"},{"location":"cmd/spo/term/term-get/#examples","text":"Get information about a taxonomy term using its ID m365 spo term get --id 0e8f395e-ff58-4d45-9ff7-e331ab728beb Get information about a taxonomy term using its name, retrieving the parent term group and term set using their names m365 spo term get --name IT --termGroupName People --termSetName Department Get information about a taxonomy term using its name, retrieving the parent term group and term set using their IDs m365 spo term get --name IT --termGroupId 5c928151-c140-4d48-aab9-54da901c7fef --termSetId 8ed8c9ea-7052-4c1d-a4d7-b9c10bffea6f","title":"Examples"},{"location":"cmd/spo/term/term-group-add/","text":"spo term group add \u00b6 Adds taxonomy term group Usage \u00b6 m365 spo term group add [ options ] Options \u00b6 -n, --name <name> Name of the term group to add -i, --id [id] ID of the term group to add -d, --description [description] Description of the term group to add -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Important To use this command you have to have permissions to access the tenant admin site. Examples \u00b6 Add a new taxonomy term group with the specified name m365 spo term group add --name PnPTermSets Add a new taxonomy term group with the specified name and id m365 spo term group add --name PnPTermSets --id 0e8f395e-ff58-4d45-9ff7-e331ab728beb Add a new taxonomy term group with the specified name and description m365 spo term group add --name PnPTermSets --description 'Term sets for PnP'","title":"term group add"},{"location":"cmd/spo/term/term-group-add/#spo-term-group-add","text":"Adds taxonomy term group","title":"spo term group add"},{"location":"cmd/spo/term/term-group-add/#usage","text":"m365 spo term group add [ options ]","title":"Usage"},{"location":"cmd/spo/term/term-group-add/#options","text":"-n, --name <name> Name of the term group to add -i, --id [id] ID of the term group to add -d, --description [description] Description of the term group to add -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Important To use this command you have to have permissions to access the tenant admin site.","title":"Options"},{"location":"cmd/spo/term/term-group-add/#examples","text":"Add a new taxonomy term group with the specified name m365 spo term group add --name PnPTermSets Add a new taxonomy term group with the specified name and id m365 spo term group add --name PnPTermSets --id 0e8f395e-ff58-4d45-9ff7-e331ab728beb Add a new taxonomy term group with the specified name and description m365 spo term group add --name PnPTermSets --description 'Term sets for PnP'","title":"Examples"},{"location":"cmd/spo/term/term-group-get/","text":"spo term group get \u00b6 Gets information about the specified taxonomy term group Usage \u00b6 m365 spo term group get [ options ] Options \u00b6 -i, --id [id] ID of the term group to retrieve. Specify name or id but not both -n, --name [name] Name of the term group to retrieve. Specify name or id but not both -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Important To use this command you have to have permissions to access the tenant admin site. Examples \u00b6 Get information about a taxonomy term group using its ID m365 spo term group get --id 0e8f395e-ff58-4d45-9ff7-e331ab728beb Get information about a taxonomy term group using its name m365 spo term group get --name PnPTermSets","title":"term group get"},{"location":"cmd/spo/term/term-group-get/#spo-term-group-get","text":"Gets information about the specified taxonomy term group","title":"spo term group get"},{"location":"cmd/spo/term/term-group-get/#usage","text":"m365 spo term group get [ options ]","title":"Usage"},{"location":"cmd/spo/term/term-group-get/#options","text":"-i, --id [id] ID of the term group to retrieve. Specify name or id but not both -n, --name [name] Name of the term group to retrieve. Specify name or id but not both -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Important To use this command you have to have permissions to access the tenant admin site.","title":"Options"},{"location":"cmd/spo/term/term-group-get/#examples","text":"Get information about a taxonomy term group using its ID m365 spo term group get --id 0e8f395e-ff58-4d45-9ff7-e331ab728beb Get information about a taxonomy term group using its name m365 spo term group get --name PnPTermSets","title":"Examples"},{"location":"cmd/spo/term/term-group-list/","text":"spo term group list \u00b6 Lists taxonomy term groups Usage \u00b6 m365 spo term group list [ options ] Options \u00b6 -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Important To use this command you have to have permissions to access the tenant admin site. Examples \u00b6 List taxonomy term groups m365 spo term group list","title":"term group list"},{"location":"cmd/spo/term/term-group-list/#spo-term-group-list","text":"Lists taxonomy term groups","title":"spo term group list"},{"location":"cmd/spo/term/term-group-list/#usage","text":"m365 spo term group list [ options ]","title":"Usage"},{"location":"cmd/spo/term/term-group-list/#options","text":"-h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Important To use this command you have to have permissions to access the tenant admin site.","title":"Options"},{"location":"cmd/spo/term/term-group-list/#examples","text":"List taxonomy term groups m365 spo term group list","title":"Examples"},{"location":"cmd/spo/term/term-list/","text":"spo term list \u00b6 Lists taxonomy terms from the given term set Usage \u00b6 m365 spo term list [ options ] Options \u00b6 --termGroupId [termGroupId] ID of the term group where the term set is located. Specify termGroupId or termGroupName but not both --termGroupName [termGroupName] Name of the term group where the term set is located. Specify termGroupId or termGroupName but not both --termSetId [termSetId] ID of the term set for which to retrieve terms. Specify termSetId or termSetName but not both --termSetName [termSetName] Name of the term set for which to retrieve terms. Specify termSetId or termSetName but not both -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Important To use this command you have to have permissions to access the tenant admin site. Examples \u00b6 List taxonomy terms from the term group and term set with the given name m365 spo term list --termGroupName PnPTermSets --termSetName PnP-Organizations List taxonomy terms from the term group and term set with the given ID m365 spo term list --termGroupId 0e8f395e-ff58-4d45-9ff7-e331ab728beb --termSetId 0e8f395e-ff58-4d45-9ff7-e331ab728bec","title":"term list"},{"location":"cmd/spo/term/term-list/#spo-term-list","text":"Lists taxonomy terms from the given term set","title":"spo term list"},{"location":"cmd/spo/term/term-list/#usage","text":"m365 spo term list [ options ]","title":"Usage"},{"location":"cmd/spo/term/term-list/#options","text":"--termGroupId [termGroupId] ID of the term group where the term set is located. Specify termGroupId or termGroupName but not both --termGroupName [termGroupName] Name of the term group where the term set is located. Specify termGroupId or termGroupName but not both --termSetId [termSetId] ID of the term set for which to retrieve terms. Specify termSetId or termSetName but not both --termSetName [termSetName] Name of the term set for which to retrieve terms. Specify termSetId or termSetName but not both -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Important To use this command you have to have permissions to access the tenant admin site.","title":"Options"},{"location":"cmd/spo/term/term-list/#examples","text":"List taxonomy terms from the term group and term set with the given name m365 spo term list --termGroupName PnPTermSets --termSetName PnP-Organizations List taxonomy terms from the term group and term set with the given ID m365 spo term list --termGroupId 0e8f395e-ff58-4d45-9ff7-e331ab728beb --termSetId 0e8f395e-ff58-4d45-9ff7-e331ab728bec","title":"Examples"},{"location":"cmd/spo/term/term-set-add/","text":"spo term set add \u00b6 Adds taxonomy term set Usage \u00b6 m365 spo term set add [ options ] Options \u00b6 -n, --name <name> Name of the term set to add --termGroupId [termGroupId] ID of the term group in which to create the term set. Specify termGroupId or termGroupName but not both --termGroupName [termGroupName] Name of the term group in which to create the term set. Specify termGroupId or termGroupName but not both -i, --id [id] ID of the term set to add -d, --description [description] Description of the term set to add --customProperties [customProperties] JSON string with key-value pairs representing custom properties to set on the term set -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Important To use this command you have to have permissions to access the tenant admin site. Remarks \u00b6 Escaping JSON in PowerShell When using the --customProperties option it's possible to enter a JSON string. In PowerShell 5 to 7.2 specific escaping rules apply due to an issue. Remember that you can also use file tokens instead. Examples \u00b6 Add taxonomy term set to the term group specified by ID m365 spo term set add --name PnP-Organizations --termGroupId 0e8f395e-ff58-4d45-9ff7-e331ab728beb Add taxonomy term set to the term group specified by name. Create the term set with the specified ID m365 spo term set add --name PnP-Organizations --termGroupName PnPTermSets --id aa70ede6-83d1-466d-8d95-30d29e9bbd7c Add taxonomy term set and set its description m365 spo term set add --name PnP-Organizations --termGroupId 0e8f395e-ff58-4d45-9ff7-e331ab728beb --description 'Contains a list of organizations' Add taxonomy term set and set its custom properties m365 spo term set add --name PnP-Organizations --termGroupId 0e8f395e-ff58-4d45-9ff7-e331ab728beb --customProperties '{\"Property\":\"Value\"}'","title":"term set add"},{"location":"cmd/spo/term/term-set-add/#spo-term-set-add","text":"Adds taxonomy term set","title":"spo term set add"},{"location":"cmd/spo/term/term-set-add/#usage","text":"m365 spo term set add [ options ]","title":"Usage"},{"location":"cmd/spo/term/term-set-add/#options","text":"-n, --name <name> Name of the term set to add --termGroupId [termGroupId] ID of the term group in which to create the term set. Specify termGroupId or termGroupName but not both --termGroupName [termGroupName] Name of the term group in which to create the term set. Specify termGroupId or termGroupName but not both -i, --id [id] ID of the term set to add -d, --description [description] Description of the term set to add --customProperties [customProperties] JSON string with key-value pairs representing custom properties to set on the term set -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Important To use this command you have to have permissions to access the tenant admin site.","title":"Options"},{"location":"cmd/spo/term/term-set-add/#remarks","text":"Escaping JSON in PowerShell When using the --customProperties option it's possible to enter a JSON string. In PowerShell 5 to 7.2 specific escaping rules apply due to an issue. Remember that you can also use file tokens instead.","title":"Remarks"},{"location":"cmd/spo/term/term-set-add/#examples","text":"Add taxonomy term set to the term group specified by ID m365 spo term set add --name PnP-Organizations --termGroupId 0e8f395e-ff58-4d45-9ff7-e331ab728beb Add taxonomy term set to the term group specified by name. Create the term set with the specified ID m365 spo term set add --name PnP-Organizations --termGroupName PnPTermSets --id aa70ede6-83d1-466d-8d95-30d29e9bbd7c Add taxonomy term set and set its description m365 spo term set add --name PnP-Organizations --termGroupId 0e8f395e-ff58-4d45-9ff7-e331ab728beb --description 'Contains a list of organizations' Add taxonomy term set and set its custom properties m365 spo term set add --name PnP-Organizations --termGroupId 0e8f395e-ff58-4d45-9ff7-e331ab728beb --customProperties '{\"Property\":\"Value\"}'","title":"Examples"},{"location":"cmd/spo/term/term-set-get/","text":"spo term set get \u00b6 Gets information about the specified taxonomy term set Usage \u00b6 m365 spo term set get [ options ] Options \u00b6 -i, --id [id] ID of the term set to retrieve. Specify name or id but not both -n, --name [name] Name of the term set to retrieve. Specify name or id but not both --termGroupId [termGroupId] ID of the term group to which the term set belongs. Specify termGroupId or termGroupName but not both --termGroupName [termGroupName] Name of the term group to which the term set belongs. Specify termGroupId or termGroupName but not both -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Important To use this command you have to have permissions to access the tenant admin site. Examples \u00b6 Get information about a taxonomy term set using its ID m365 spo term set get --id 0e8f395e-ff58-4d45-9ff7-e331ab728beb --termGroupName PnPTermSets Get information about a taxonomy term set using its name m365 spo term set get --name PnPTermSets --termGroupId 0e8f395e-ff58-4d45-9ff7-e331ab728beb","title":"term set get"},{"location":"cmd/spo/term/term-set-get/#spo-term-set-get","text":"Gets information about the specified taxonomy term set","title":"spo term set get"},{"location":"cmd/spo/term/term-set-get/#usage","text":"m365 spo term set get [ options ]","title":"Usage"},{"location":"cmd/spo/term/term-set-get/#options","text":"-i, --id [id] ID of the term set to retrieve. Specify name or id but not both -n, --name [name] Name of the term set to retrieve. Specify name or id but not both --termGroupId [termGroupId] ID of the term group to which the term set belongs. Specify termGroupId or termGroupName but not both --termGroupName [termGroupName] Name of the term group to which the term set belongs. Specify termGroupId or termGroupName but not both -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Important To use this command you have to have permissions to access the tenant admin site.","title":"Options"},{"location":"cmd/spo/term/term-set-get/#examples","text":"Get information about a taxonomy term set using its ID m365 spo term set get --id 0e8f395e-ff58-4d45-9ff7-e331ab728beb --termGroupName PnPTermSets Get information about a taxonomy term set using its name m365 spo term set get --name PnPTermSets --termGroupId 0e8f395e-ff58-4d45-9ff7-e331ab728beb","title":"Examples"},{"location":"cmd/spo/term/term-set-list/","text":"spo term set list \u00b6 Lists taxonomy term sets from the given term group Usage \u00b6 m365 spo term set list [ options ] Options \u00b6 --termGroupId [termGroupId] ID of the term group from which to retrieve term sets. Specify termGroupName or termGroupId but not both --termGroupName [termGroupName] Name of the term group from which to retrieve term sets. Specify termGroupName or termGroupId but not both -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Important To use this command you have to have permissions to access the tenant admin site. Examples \u00b6 List taxonomy term sets from the term group with the given name m365 spo term set list --termGroupName PnPTermSets List taxonomy term sets from the term group with the given ID m365 spo term set list --termGroupId 0e8f395e-ff58-4d45-9ff7-e331ab728beb","title":"term set list"},{"location":"cmd/spo/term/term-set-list/#spo-term-set-list","text":"Lists taxonomy term sets from the given term group","title":"spo term set list"},{"location":"cmd/spo/term/term-set-list/#usage","text":"m365 spo term set list [ options ]","title":"Usage"},{"location":"cmd/spo/term/term-set-list/#options","text":"--termGroupId [termGroupId] ID of the term group from which to retrieve term sets. Specify termGroupName or termGroupId but not both --termGroupName [termGroupName] Name of the term group from which to retrieve term sets. Specify termGroupName or termGroupId but not both -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Important To use this command you have to have permissions to access the tenant admin site.","title":"Options"},{"location":"cmd/spo/term/term-set-list/#examples","text":"List taxonomy term sets from the term group with the given name m365 spo term set list --termGroupName PnPTermSets List taxonomy term sets from the term group with the given ID m365 spo term set list --termGroupId 0e8f395e-ff58-4d45-9ff7-e331ab728beb","title":"Examples"},{"location":"cmd/spo/theme/theme-apply/","text":"spo theme apply \u00b6 Applies theme to the specified site Usage \u00b6 m365 spo theme apply [ options ] Options \u00b6 -n, --name <name> Name of the theme to apply -u, --webUrl <webUrl> URL of the site to which the theme should be applied --sharePointTheme Set to specify if the supplied theme name is a standard SharePoint theme -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Important To use this command you have to have permissions to access the tenant admin site. Remarks \u00b6 Following standard SharePoint themes are supported by the CLI for Microsoft 365: Blue, Orange, Red, Purple, Green, Gray, Dark Yellow and Dark Blue. Examples \u00b6 Apply theme to the specified site m365 spo theme apply --name Contoso-Blue --webUrl https://contoso.sharepoint.com/sites/project-x Apply a standard SharePoint theme to the specified site m365 spo theme apply --name Blue --webUrl https://contoso.sharepoint.com/sites/project-x --sharePointTheme More information \u00b6 SharePoint site theming: https://docs.microsoft.com/en-us/sharepoint/dev/declarative-customization/site-theming/sharepoint-site-theming-overview Theme Generator: https://aka.ms/themedesigner","title":"theme apply"},{"location":"cmd/spo/theme/theme-apply/#spo-theme-apply","text":"Applies theme to the specified site","title":"spo theme apply"},{"location":"cmd/spo/theme/theme-apply/#usage","text":"m365 spo theme apply [ options ]","title":"Usage"},{"location":"cmd/spo/theme/theme-apply/#options","text":"-n, --name <name> Name of the theme to apply -u, --webUrl <webUrl> URL of the site to which the theme should be applied --sharePointTheme Set to specify if the supplied theme name is a standard SharePoint theme -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Important To use this command you have to have permissions to access the tenant admin site.","title":"Options"},{"location":"cmd/spo/theme/theme-apply/#remarks","text":"Following standard SharePoint themes are supported by the CLI for Microsoft 365: Blue, Orange, Red, Purple, Green, Gray, Dark Yellow and Dark Blue.","title":"Remarks"},{"location":"cmd/spo/theme/theme-apply/#examples","text":"Apply theme to the specified site m365 spo theme apply --name Contoso-Blue --webUrl https://contoso.sharepoint.com/sites/project-x Apply a standard SharePoint theme to the specified site m365 spo theme apply --name Blue --webUrl https://contoso.sharepoint.com/sites/project-x --sharePointTheme","title":"Examples"},{"location":"cmd/spo/theme/theme-apply/#more-information","text":"SharePoint site theming: https://docs.microsoft.com/en-us/sharepoint/dev/declarative-customization/site-theming/sharepoint-site-theming-overview Theme Generator: https://aka.ms/themedesigner","title":"More information"},{"location":"cmd/spo/theme/theme-get/","text":"spo theme get \u00b6 Gets custom theme information Usage \u00b6 m365 spo theme get [ options ] Options \u00b6 -n, --name <name> The name of the theme to retrieve -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Important To use this command you have to have permissions to access the tenant admin site. Examples \u00b6 Get information about a theme m365 spo theme get --name Contoso-Blue More information \u00b6 SharePoint site theming: https://docs.microsoft.com/en-us/sharepoint/dev/declarative-customization/site-theming/sharepoint-site-theming-overview","title":"theme get"},{"location":"cmd/spo/theme/theme-get/#spo-theme-get","text":"Gets custom theme information","title":"spo theme get"},{"location":"cmd/spo/theme/theme-get/#usage","text":"m365 spo theme get [ options ]","title":"Usage"},{"location":"cmd/spo/theme/theme-get/#options","text":"-n, --name <name> The name of the theme to retrieve -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Important To use this command you have to have permissions to access the tenant admin site.","title":"Options"},{"location":"cmd/spo/theme/theme-get/#examples","text":"Get information about a theme m365 spo theme get --name Contoso-Blue","title":"Examples"},{"location":"cmd/spo/theme/theme-get/#more-information","text":"SharePoint site theming: https://docs.microsoft.com/en-us/sharepoint/dev/declarative-customization/site-theming/sharepoint-site-theming-overview","title":"More information"},{"location":"cmd/spo/theme/theme-list/","text":"spo theme list \u00b6 Retrieves the list of custom themes Usage \u00b6 m365 spo theme list [ options ] Options \u00b6 -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Important To use this command you have to have permissions to access the tenant admin site. Examples \u00b6 List available themes m365 spo theme list More information \u00b6 SharePoint site theming: https://docs.microsoft.com/en-us/sharepoint/dev/declarative-customization/site-theming/sharepoint-site-theming-overview","title":"theme list"},{"location":"cmd/spo/theme/theme-list/#spo-theme-list","text":"Retrieves the list of custom themes","title":"spo theme list"},{"location":"cmd/spo/theme/theme-list/#usage","text":"m365 spo theme list [ options ]","title":"Usage"},{"location":"cmd/spo/theme/theme-list/#options","text":"-h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Important To use this command you have to have permissions to access the tenant admin site.","title":"Options"},{"location":"cmd/spo/theme/theme-list/#examples","text":"List available themes m365 spo theme list","title":"Examples"},{"location":"cmd/spo/theme/theme-list/#more-information","text":"SharePoint site theming: https://docs.microsoft.com/en-us/sharepoint/dev/declarative-customization/site-theming/sharepoint-site-theming-overview","title":"More information"},{"location":"cmd/spo/theme/theme-remove/","text":"spo theme remove \u00b6 Removes existing theme Usage \u00b6 m365 spo theme remove [ options ] Options \u00b6 -n, --name <name> Name of the theme to remove --confirm Do not prompt for confirmation before removing theme -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Important To use this command you have to have permissions to access the tenant admin site. Examples \u00b6 Remove theme. Will prompt for confirmation before removing the theme m365 spo theme remove --name Contoso-Blue Remove theme without prompting for confirmation m365 spo theme remove --name Contoso-Blue --confirm More information \u00b6 SharePoint site theming: https://docs.microsoft.com/en-us/sharepoint/dev/declarative-customization/site-theming/sharepoint-site-theming-overview","title":"theme remove"},{"location":"cmd/spo/theme/theme-remove/#spo-theme-remove","text":"Removes existing theme","title":"spo theme remove"},{"location":"cmd/spo/theme/theme-remove/#usage","text":"m365 spo theme remove [ options ]","title":"Usage"},{"location":"cmd/spo/theme/theme-remove/#options","text":"-n, --name <name> Name of the theme to remove --confirm Do not prompt for confirmation before removing theme -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Important To use this command you have to have permissions to access the tenant admin site.","title":"Options"},{"location":"cmd/spo/theme/theme-remove/#examples","text":"Remove theme. Will prompt for confirmation before removing the theme m365 spo theme remove --name Contoso-Blue Remove theme without prompting for confirmation m365 spo theme remove --name Contoso-Blue --confirm","title":"Examples"},{"location":"cmd/spo/theme/theme-remove/#more-information","text":"SharePoint site theming: https://docs.microsoft.com/en-us/sharepoint/dev/declarative-customization/site-theming/sharepoint-site-theming-overview","title":"More information"},{"location":"cmd/spo/theme/theme-set/","text":"spo theme set \u00b6 Add or update a theme Usage \u00b6 m365 spo theme set [ options ] Options \u00b6 -n, --name <name> Name of the theme to add or update -t, --theme <theme> Theme JSON contents --isInverted Set to specify that the theme is inverted -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Important To use this command you have to have permissions to access the tenant admin site. Remarks \u00b6 To prevent the accidental creation of invalid themes the CLI for Microsoft 365 implements a set of checks. These checks are executed against the provided json file. A valid theme JSON file is as follows: { \"themePrimary\" : \"#d81e05\" , \"themeLighterAlt\" : \"#fdf5f4\" , \"themeLighter\" : \"#f9d6d2\" , \"themeLight\" : \"#f4b4ac\" , \"themeTertiary\" : \"#e87060\" , \"themeSecondary\" : \"#dd351e\" , \"themeDarkAlt\" : \"#c31a04\" , \"themeDark\" : \"#a51603\" , \"themeDarker\" : \"#791002\" , \"neutralLighterAlt\" : \"#eeeeee\" , \"neutralLighter\" : \"#f5f5f5\" , \"neutralLight\" : \"#e1e1e1\" , \"neutralQuaternaryAlt\" : \"#d1d1d1\" , \"neutralQuaternary\" : \"#c8c8c8\" , \"neutralTertiaryAlt\" : \"#c0c0c0\" , \"neutralTertiary\" : \"#c2c2c2\" , \"neutralSecondary\" : \"#858585\" , \"neutralPrimaryAlt\" : \"#4b4b4b\" , \"neutralPrimary\" : \"#333333\" , \"neutralDark\" : \"#272727\" , \"black\" : \"#1d1d1d\" , \"white\" : \"#f5f5f5\" } When executing the m365 spo theme set command the following checks are executed: Validate if the provided theme is a valid JSON string. Validate if the provided theme, once deserialized, contains all properties of the sample above. Validate if the provided theme, once deserialized, contains only the properties of the sample above. Validate if each of the properties contains a valid hex color value prefixed with a # . If any of these checks fails you are presented with a The specified theme is not valid error. Examples \u00b6 Add or update a theme from a theme JSON file m365 spo theme set --name Contoso-Blue --theme @/Users/rjesh/themes/contoso-blue.json Add or update an inverted theme from a theme JSON file m365 spo theme set --name Contoso-Blue --theme @/Users/rjesh/themes/contoso-blue.json --isInverted More information \u00b6 SharePoint site theming: https://docs.microsoft.com/sharepoint/dev/declarative-customization/site-theming/sharepoint-site-theming-overview Theme Generator: https://aka.ms/themedesigner","title":"theme set"},{"location":"cmd/spo/theme/theme-set/#spo-theme-set","text":"Add or update a theme","title":"spo theme set"},{"location":"cmd/spo/theme/theme-set/#usage","text":"m365 spo theme set [ options ]","title":"Usage"},{"location":"cmd/spo/theme/theme-set/#options","text":"-n, --name <name> Name of the theme to add or update -t, --theme <theme> Theme JSON contents --isInverted Set to specify that the theme is inverted -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Important To use this command you have to have permissions to access the tenant admin site.","title":"Options"},{"location":"cmd/spo/theme/theme-set/#remarks","text":"To prevent the accidental creation of invalid themes the CLI for Microsoft 365 implements a set of checks. These checks are executed against the provided json file. A valid theme JSON file is as follows: { \"themePrimary\" : \"#d81e05\" , \"themeLighterAlt\" : \"#fdf5f4\" , \"themeLighter\" : \"#f9d6d2\" , \"themeLight\" : \"#f4b4ac\" , \"themeTertiary\" : \"#e87060\" , \"themeSecondary\" : \"#dd351e\" , \"themeDarkAlt\" : \"#c31a04\" , \"themeDark\" : \"#a51603\" , \"themeDarker\" : \"#791002\" , \"neutralLighterAlt\" : \"#eeeeee\" , \"neutralLighter\" : \"#f5f5f5\" , \"neutralLight\" : \"#e1e1e1\" , \"neutralQuaternaryAlt\" : \"#d1d1d1\" , \"neutralQuaternary\" : \"#c8c8c8\" , \"neutralTertiaryAlt\" : \"#c0c0c0\" , \"neutralTertiary\" : \"#c2c2c2\" , \"neutralSecondary\" : \"#858585\" , \"neutralPrimaryAlt\" : \"#4b4b4b\" , \"neutralPrimary\" : \"#333333\" , \"neutralDark\" : \"#272727\" , \"black\" : \"#1d1d1d\" , \"white\" : \"#f5f5f5\" } When executing the m365 spo theme set command the following checks are executed: Validate if the provided theme is a valid JSON string. Validate if the provided theme, once deserialized, contains all properties of the sample above. Validate if the provided theme, once deserialized, contains only the properties of the sample above. Validate if each of the properties contains a valid hex color value prefixed with a # . If any of these checks fails you are presented with a The specified theme is not valid error.","title":"Remarks"},{"location":"cmd/spo/theme/theme-set/#examples","text":"Add or update a theme from a theme JSON file m365 spo theme set --name Contoso-Blue --theme @/Users/rjesh/themes/contoso-blue.json Add or update an inverted theme from a theme JSON file m365 spo theme set --name Contoso-Blue --theme @/Users/rjesh/themes/contoso-blue.json --isInverted","title":"Examples"},{"location":"cmd/spo/theme/theme-set/#more-information","text":"SharePoint site theming: https://docs.microsoft.com/sharepoint/dev/declarative-customization/site-theming/sharepoint-site-theming-overview Theme Generator: https://aka.ms/themedesigner","title":"More information"},{"location":"cmd/spo/user/user-get/","text":"spo user get \u00b6 Gets a site user within specific web Usage \u00b6 m365 spo user get [ options ] Options \u00b6 -u, --webUrl <webUrl> URL of the web to get the user within -i, --id [id] ID of the user to retrieve information for. Use either email , id or loginName , but not all. --email [email] Email of the user to retrieve information for. Use either email , id or loginName , but not all. --loginName [loginName] Login name of the user to retrieve information for. Use either email , id or loginName , but not all. -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Get user with email john.doe@mytenant.onmicrosoft.com for web https://contoso.sharepoint.com/sites/project-x m365 spo user get --webUrl https://contoso.sharepoint.com/sites/project-x --email john.doe@mytenant.onmicrosoft.com Get user with ID 6 for web https://contoso.sharepoint.com/sites/project-x m365 spo user get --webUrl https://contoso.sharepoint.com/sites/project-x --id 6 Get user with login name 'i:0#.f membership|john.doe@mytenant.onmicrosoft.com' for web https://contoso.sharepoint.com/sites/project-x m365 spo user get --webUrl https://contoso.sharepoint.com/sites/project-x --loginName \"i:0#.f|membership|john.doe@mytenant.onmicrosoft.com\"","title":"user get"},{"location":"cmd/spo/user/user-get/#spo-user-get","text":"Gets a site user within specific web","title":"spo user get"},{"location":"cmd/spo/user/user-get/#usage","text":"m365 spo user get [ options ]","title":"Usage"},{"location":"cmd/spo/user/user-get/#options","text":"-u, --webUrl <webUrl> URL of the web to get the user within -i, --id [id] ID of the user to retrieve information for. Use either email , id or loginName , but not all. --email [email] Email of the user to retrieve information for. Use either email , id or loginName , but not all. --loginName [loginName] Login name of the user to retrieve information for. Use either email , id or loginName , but not all. -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/user/user-get/#examples","text":"Get user with email john.doe@mytenant.onmicrosoft.com for web https://contoso.sharepoint.com/sites/project-x m365 spo user get --webUrl https://contoso.sharepoint.com/sites/project-x --email john.doe@mytenant.onmicrosoft.com Get user with ID 6 for web https://contoso.sharepoint.com/sites/project-x m365 spo user get --webUrl https://contoso.sharepoint.com/sites/project-x --id 6 Get user with login name 'i:0#.f membership|john.doe@mytenant.onmicrosoft.com' for web https://contoso.sharepoint.com/sites/project-x m365 spo user get --webUrl https://contoso.sharepoint.com/sites/project-x --loginName \"i:0#.f|membership|john.doe@mytenant.onmicrosoft.com\"","title":"Examples"},{"location":"cmd/spo/user/user-list/","text":"spo user list \u00b6 Lists all the users within specific web Usage \u00b6 m365 spo user list [ options ] Options \u00b6 -u, --webUrl <webUrl> URL of the web to list the users from -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Get list of users in web https://contoso.sharepoint.com/sites/project-x m365 spo user list --webUrl https://contoso.sharepoint.com/sites/project-x","title":"user list"},{"location":"cmd/spo/user/user-list/#spo-user-list","text":"Lists all the users within specific web","title":"spo user list"},{"location":"cmd/spo/user/user-list/#usage","text":"m365 spo user list [ options ]","title":"Usage"},{"location":"cmd/spo/user/user-list/#options","text":"-u, --webUrl <webUrl> URL of the web to list the users from -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/user/user-list/#examples","text":"Get list of users in web https://contoso.sharepoint.com/sites/project-x m365 spo user list --webUrl https://contoso.sharepoint.com/sites/project-x","title":"Examples"},{"location":"cmd/spo/user/user-remove/","text":"spo user remove \u00b6 Removes user from specific web Usage \u00b6 m365 spo user remove [ options ] Options \u00b6 -u, --webUrl <webUrl> URL of the web to remove user --id [id] ID of the user to remove from web --loginName [loginName] Login name of the site user to remove --confirm Do not prompt for confirmation before removing user from web -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 Use either id or loginName , but not both Examples \u00b6 Removes user with id 10 from web https://contoso.sharepoint.com/sites/HR without prompting for confirmation m365 spo user remove --webUrl \"https://contoso.sharepoint.com/sites/HR\" --id 10 --confirm Removes user with login name i:0#.f|membership|john.doe@mytenant.onmicrosoft.com from web https://contoso.sharepoint.com/sites/HR m365 spo user remove --webUrl \"https://contoso.sharepoint.com/sites/HR\" --loginName \"i:0#.f|membership|john.doe@mytenant.onmicrosoft.com\" More information \u00b6 Remove-PnPUser - https://docs.microsoft.com/en-us/powershell/module/sharepoint-pnp/remove-pnpuser?view=sharepoint-ps","title":"user remove"},{"location":"cmd/spo/user/user-remove/#spo-user-remove","text":"Removes user from specific web","title":"spo user remove"},{"location":"cmd/spo/user/user-remove/#usage","text":"m365 spo user remove [ options ]","title":"Usage"},{"location":"cmd/spo/user/user-remove/#options","text":"-u, --webUrl <webUrl> URL of the web to remove user --id [id] ID of the user to remove from web --loginName [loginName] Login name of the site user to remove --confirm Do not prompt for confirmation before removing user from web -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/user/user-remove/#remarks","text":"Use either id or loginName , but not both","title":"Remarks"},{"location":"cmd/spo/user/user-remove/#examples","text":"Removes user with id 10 from web https://contoso.sharepoint.com/sites/HR without prompting for confirmation m365 spo user remove --webUrl \"https://contoso.sharepoint.com/sites/HR\" --id 10 --confirm Removes user with login name i:0#.f|membership|john.doe@mytenant.onmicrosoft.com from web https://contoso.sharepoint.com/sites/HR m365 spo user remove --webUrl \"https://contoso.sharepoint.com/sites/HR\" --loginName \"i:0#.f|membership|john.doe@mytenant.onmicrosoft.com\"","title":"Examples"},{"location":"cmd/spo/user/user-remove/#more-information","text":"Remove-PnPUser - https://docs.microsoft.com/en-us/powershell/module/sharepoint-pnp/remove-pnpuser?view=sharepoint-ps","title":"More information"},{"location":"cmd/spo/userprofile/userprofile-get/","text":"spo userprofile get \u00b6 Get SharePoint user profile properties for the specified user Usage \u00b6 spo userprofile get [ options ] Options \u00b6 -u, --userName <userName> Account name of the user -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 You have to have tenant admin permissions in order to use this command to get profile properties of other users. Examples \u00b6 Get SharePoint user profile for the specified user m365 spo userprofile get --userName 'john.doe@mytenant.onmicrosoft.com'","title":"userprofile get"},{"location":"cmd/spo/userprofile/userprofile-get/#spo-userprofile-get","text":"Get SharePoint user profile properties for the specified user","title":"spo userprofile get"},{"location":"cmd/spo/userprofile/userprofile-get/#usage","text":"spo userprofile get [ options ]","title":"Usage"},{"location":"cmd/spo/userprofile/userprofile-get/#options","text":"-u, --userName <userName> Account name of the user -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/userprofile/userprofile-get/#remarks","text":"You have to have tenant admin permissions in order to use this command to get profile properties of other users.","title":"Remarks"},{"location":"cmd/spo/userprofile/userprofile-get/#examples","text":"Get SharePoint user profile for the specified user m365 spo userprofile get --userName 'john.doe@mytenant.onmicrosoft.com'","title":"Examples"},{"location":"cmd/spo/userprofile/userprofile-set/","text":"spo userprofile set \u00b6 Sets user profile property for a SharePoint user Usage \u00b6 m365 spo userprofile set [ options ] Options \u00b6 -u, --userName <userName> Account name of the user -n, --propertyName <propertyName> The name of the property to be set -v, --propertyValue <propertyValue> The value of the property to be set -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 You have to have tenant admin permissions in order to use this command to update profile properties of other users. Examples \u00b6 Updates the single-value AboutMe property m365 spo userprofile set --userName 'john.doe@mytenant.onmicrosoft.com' --propertyName 'AboutMe' --propertyValue 'Working as a Microsoft 365 developer' Updates the multi-value SPS-Skills property m365 spo userprofile set --userName 'john.doe@mytenant.onmicrosoft.com' --propertyName 'SPS-Skills' --propertyValue 'CSS, HTML'","title":"userprofile set"},{"location":"cmd/spo/userprofile/userprofile-set/#spo-userprofile-set","text":"Sets user profile property for a SharePoint user","title":"spo userprofile set"},{"location":"cmd/spo/userprofile/userprofile-set/#usage","text":"m365 spo userprofile set [ options ]","title":"Usage"},{"location":"cmd/spo/userprofile/userprofile-set/#options","text":"-u, --userName <userName> Account name of the user -n, --propertyName <propertyName> The name of the property to be set -v, --propertyValue <propertyValue> The value of the property to be set -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/userprofile/userprofile-set/#remarks","text":"You have to have tenant admin permissions in order to use this command to update profile properties of other users.","title":"Remarks"},{"location":"cmd/spo/userprofile/userprofile-set/#examples","text":"Updates the single-value AboutMe property m365 spo userprofile set --userName 'john.doe@mytenant.onmicrosoft.com' --propertyName 'AboutMe' --propertyValue 'Working as a Microsoft 365 developer' Updates the multi-value SPS-Skills property m365 spo userprofile set --userName 'john.doe@mytenant.onmicrosoft.com' --propertyName 'SPS-Skills' --propertyValue 'CSS, HTML'","title":"Examples"},{"location":"cmd/spo/web/web-add/","text":"spo web add \u00b6 Create new subsite Usage \u00b6 m365 spo web add [ options ] Options \u00b6 -t, --title <title> Subsite title -d, --description [description] Subsite description -u, --url <url> Subsite relative url -w, --webTemplate <webTemplate> Subsite template, eg. STS#0 (Classic team site) -p, --parentWebUrl <parentWebUrl> URL of the parent site under which to create the subsite -l, --locale [locale] Subsite locale LCID, eg. 1033 for en-US. Default 1033 --breakInheritance Set to not inherit permissions from the parent site --inheritNavigation Set to inherit the navigation from the parent site -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Create subsite using the Team site template in the en-US locale m365 spo web add --title Subsite --description Subsite --url subsite --webTemplate STS#0 --parentWebUrl https://contoso.sharepoint.com --locale 1033 Create subsite with unique permissions using the default en-US locale m365 spo web add --title Subsite --url subsite --webTemplate STS#0 --parentWebUrl https://contoso.sharepoint.com --breakInheritance Create subsite with the same navigation as the parent site m365 spo web add --title Subsite --url subsite --webTemplate STS#0 --parentWebUrl https://contoso.sharepoint.com --inheritNavigation","title":"web add"},{"location":"cmd/spo/web/web-add/#spo-web-add","text":"Create new subsite","title":"spo web add"},{"location":"cmd/spo/web/web-add/#usage","text":"m365 spo web add [ options ]","title":"Usage"},{"location":"cmd/spo/web/web-add/#options","text":"-t, --title <title> Subsite title -d, --description [description] Subsite description -u, --url <url> Subsite relative url -w, --webTemplate <webTemplate> Subsite template, eg. STS#0 (Classic team site) -p, --parentWebUrl <parentWebUrl> URL of the parent site under which to create the subsite -l, --locale [locale] Subsite locale LCID, eg. 1033 for en-US. Default 1033 --breakInheritance Set to not inherit permissions from the parent site --inheritNavigation Set to inherit the navigation from the parent site -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/web/web-add/#examples","text":"Create subsite using the Team site template in the en-US locale m365 spo web add --title Subsite --description Subsite --url subsite --webTemplate STS#0 --parentWebUrl https://contoso.sharepoint.com --locale 1033 Create subsite with unique permissions using the default en-US locale m365 spo web add --title Subsite --url subsite --webTemplate STS#0 --parentWebUrl https://contoso.sharepoint.com --breakInheritance Create subsite with the same navigation as the parent site m365 spo web add --title Subsite --url subsite --webTemplate STS#0 --parentWebUrl https://contoso.sharepoint.com --inheritNavigation","title":"Examples"},{"location":"cmd/spo/web/web-clientsidewebpart-list/","text":"spo web clientsidewebpart list \u00b6 Lists available client-side web parts Usage \u00b6 m365 spo web clientsidewebpart list [ options ] Options \u00b6 -u, --webUrl <webUrl> URL of the site for which to retrieve the information -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Lists all the available client-side web parts for the specified site m365 spo web clientsidewebpart list --webUrl https://contoso.sharepoint.com","title":"web clientsidewebpart list"},{"location":"cmd/spo/web/web-clientsidewebpart-list/#spo-web-clientsidewebpart-list","text":"Lists available client-side web parts","title":"spo web clientsidewebpart list"},{"location":"cmd/spo/web/web-clientsidewebpart-list/#usage","text":"m365 spo web clientsidewebpart list [ options ]","title":"Usage"},{"location":"cmd/spo/web/web-clientsidewebpart-list/#options","text":"-u, --webUrl <webUrl> URL of the site for which to retrieve the information -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/web/web-clientsidewebpart-list/#examples","text":"Lists all the available client-side web parts for the specified site m365 spo web clientsidewebpart list --webUrl https://contoso.sharepoint.com","title":"Examples"},{"location":"cmd/spo/web/web-get/","text":"spo web get \u00b6 Retrieve information about the specified site Usage \u00b6 m365 spo web get [ options ] Options \u00b6 -u, --url <url> URL of the site for which to retrieve the information --withGroups Set if you want to return associated groups (associatedOwnerGroup, associatedMemberGroup and associatedVisitorGroup) along with other properties -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Retrieve information about the site https://contoso.sharepoint.com/subsite m365 spo web get --url https://contoso.sharepoint.com/subsite Retrieve information about the site https://contoso.sharepoint.com/subsite along with associated groups for the web m365 spo web get --url https://contoso.sharepoint.com/subsite --withGroups","title":"web get"},{"location":"cmd/spo/web/web-get/#spo-web-get","text":"Retrieve information about the specified site","title":"spo web get"},{"location":"cmd/spo/web/web-get/#usage","text":"m365 spo web get [ options ]","title":"Usage"},{"location":"cmd/spo/web/web-get/#options","text":"-u, --url <url> URL of the site for which to retrieve the information --withGroups Set if you want to return associated groups (associatedOwnerGroup, associatedMemberGroup and associatedVisitorGroup) along with other properties -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/web/web-get/#examples","text":"Retrieve information about the site https://contoso.sharepoint.com/subsite m365 spo web get --url https://contoso.sharepoint.com/subsite Retrieve information about the site https://contoso.sharepoint.com/subsite along with associated groups for the web m365 spo web get --url https://contoso.sharepoint.com/subsite --withGroups","title":"Examples"},{"location":"cmd/spo/web/web-installedlanguage-list/","text":"spo web installedlanguage list \u00b6 Lists all installed languages on site Usage \u00b6 m365 spo web installedlanguage list [ options ] Options \u00b6 -u, --webUrl <webUrl> URL of the site for which to retrieve the list of installed languages -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Return all installed languages from site https://contoso.sharepoint.com/ m365 spo web installedlanguage list --webUrl https://contoso.sharepoint.com","title":"web installedlanguage list"},{"location":"cmd/spo/web/web-installedlanguage-list/#spo-web-installedlanguage-list","text":"Lists all installed languages on site","title":"spo web installedlanguage list"},{"location":"cmd/spo/web/web-installedlanguage-list/#usage","text":"m365 spo web installedlanguage list [ options ]","title":"Usage"},{"location":"cmd/spo/web/web-installedlanguage-list/#options","text":"-u, --webUrl <webUrl> URL of the site for which to retrieve the list of installed languages -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/web/web-installedlanguage-list/#examples","text":"Return all installed languages from site https://contoso.sharepoint.com/ m365 spo web installedlanguage list --webUrl https://contoso.sharepoint.com","title":"Examples"},{"location":"cmd/spo/web/web-list/","text":"spo web list \u00b6 Lists subsites of the specified site Usage \u00b6 m365 spo web list [ options ] Options \u00b6 -u, --url <url> URL of the parent site for which to retrieve the list of subsites -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Return all subsites from site https://contoso.sharepoint.com/ m365 spo web list --url https://contoso.sharepoint.com","title":"web list"},{"location":"cmd/spo/web/web-list/#spo-web-list","text":"Lists subsites of the specified site","title":"spo web list"},{"location":"cmd/spo/web/web-list/#usage","text":"m365 spo web list [ options ]","title":"Usage"},{"location":"cmd/spo/web/web-list/#options","text":"-u, --url <url> URL of the parent site for which to retrieve the list of subsites -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/web/web-list/#examples","text":"Return all subsites from site https://contoso.sharepoint.com/ m365 spo web list --url https://contoso.sharepoint.com","title":"Examples"},{"location":"cmd/spo/web/web-reindex/","text":"spo web reindex \u00b6 Requests reindexing the specified subsite Usage \u00b6 m365 spo web reindex [ options ] Options \u00b6 -u, --url <url> URL of the subsite to reindex -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 If the subsite to be reindexed is a no-script site, the command will request reindexing all lists from the subsite that haven't been excluded from the search index. Examples \u00b6 Request reindexing the subsite https://contoso.sharepoint.com/subsite m365 spo web reindex --url https://contoso.sharepoint.com/subsite","title":"web reindex"},{"location":"cmd/spo/web/web-reindex/#spo-web-reindex","text":"Requests reindexing the specified subsite","title":"spo web reindex"},{"location":"cmd/spo/web/web-reindex/#usage","text":"m365 spo web reindex [ options ]","title":"Usage"},{"location":"cmd/spo/web/web-reindex/#options","text":"-u, --url <url> URL of the subsite to reindex -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/web/web-reindex/#remarks","text":"If the subsite to be reindexed is a no-script site, the command will request reindexing all lists from the subsite that haven't been excluded from the search index.","title":"Remarks"},{"location":"cmd/spo/web/web-reindex/#examples","text":"Request reindexing the subsite https://contoso.sharepoint.com/subsite m365 spo web reindex --url https://contoso.sharepoint.com/subsite","title":"Examples"},{"location":"cmd/spo/web/web-remove/","text":"spo web remove \u00b6 Delete specified subsite Usage \u00b6 m365 spo web remove [ options ] Options \u00b6 -u, --url <url> URL of the subsite to remove --confirm Do not prompt for confirmation before deleting the subsite -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Delete subsite without prompting for confirmation m365 spo web remove --url https://contoso.sharepoint.com/subsite --confirm","title":"web remove"},{"location":"cmd/spo/web/web-remove/#spo-web-remove","text":"Delete specified subsite","title":"spo web remove"},{"location":"cmd/spo/web/web-remove/#usage","text":"m365 spo web remove [ options ]","title":"Usage"},{"location":"cmd/spo/web/web-remove/#options","text":"-u, --url <url> URL of the subsite to remove --confirm Do not prompt for confirmation before deleting the subsite -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/web/web-remove/#examples","text":"Delete subsite without prompting for confirmation m365 spo web remove --url https://contoso.sharepoint.com/subsite --confirm","title":"Examples"},{"location":"cmd/spo/web/web-roleassignment-add/","text":"spo web roleassignment add \u00b6 Adds a role assignment to web permissions. Usage \u00b6 m365 spo web roleassignment add [ options ] Options \u00b6 -u, --webUrl <webUrl> URL of the site --principalId [principalId] SharePoint ID of principal it may be either user id or group id we want to add permissions to. Specify principalId only when upn or groupName are not used. --upn [upn] upn/email of user to assign role to. Specify either upn or principalId --groupName [groupName] enter group name of Azure AD or SharePoint group.. Specify either groupName or principalId --roleDefinitionId [roleDefinitionId] ID of role definition. Specify either roleDefinitionId or roleDefinitionName but not both --roleDefinitionName [roleDefinitionName] enter the name of a role definition, like 'Contribute', 'Read', etc. Specify either roleDefinitionId or roleDefinitionName but not both -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 add role assignment to site https://contoso.sharepoint.com/sites/project-x_for principal id _11 and role definition id 1073741829 m365 spo web roleassignment add --webUrl \"https://contoso.sharepoint.com/sites/project-x\" --principalId 11 --roleDefinitionId 1073741829 add role assignment to site https://contoso.sharepoint.com/sites/project-x_for upn _someaccount@tenant.onmicrosoft.com and role definition id 1073741829 m365 spo web roleassignment add --webUrl \"https://contoso.sharepoint.com/sites/project-x\" --upn \"someaccount@tenant.onmicrosoft.com\" --roleDefinitionId 1073741829 add role assignment to site https://contoso.sharepoint.com/sites/project-x_for group _someGroup and role definition id 1073741829 m365 spo web roleassignment add --webUrl \"https://contoso.sharepoint.com/sites/project-x\" --groupName \"someGroup\" --roleDefinitionId 1073741829 add role assignment to site https://contoso.sharepoint.com/sites/project-x_for principal id _11 and role definition name Full Control m365 spo web roleassignment add --webUrl \"https://contoso.sharepoint.com/sites/project-x\" --principalId 11 --roleDefinitionName \"Full Control\"","title":"web roleassignment add"},{"location":"cmd/spo/web/web-roleassignment-add/#spo-web-roleassignment-add","text":"Adds a role assignment to web permissions.","title":"spo web roleassignment add"},{"location":"cmd/spo/web/web-roleassignment-add/#usage","text":"m365 spo web roleassignment add [ options ]","title":"Usage"},{"location":"cmd/spo/web/web-roleassignment-add/#options","text":"-u, --webUrl <webUrl> URL of the site --principalId [principalId] SharePoint ID of principal it may be either user id or group id we want to add permissions to. Specify principalId only when upn or groupName are not used. --upn [upn] upn/email of user to assign role to. Specify either upn or principalId --groupName [groupName] enter group name of Azure AD or SharePoint group.. Specify either groupName or principalId --roleDefinitionId [roleDefinitionId] ID of role definition. Specify either roleDefinitionId or roleDefinitionName but not both --roleDefinitionName [roleDefinitionName] enter the name of a role definition, like 'Contribute', 'Read', etc. Specify either roleDefinitionId or roleDefinitionName but not both -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/web/web-roleassignment-add/#examples","text":"add role assignment to site https://contoso.sharepoint.com/sites/project-x_for principal id _11 and role definition id 1073741829 m365 spo web roleassignment add --webUrl \"https://contoso.sharepoint.com/sites/project-x\" --principalId 11 --roleDefinitionId 1073741829 add role assignment to site https://contoso.sharepoint.com/sites/project-x_for upn _someaccount@tenant.onmicrosoft.com and role definition id 1073741829 m365 spo web roleassignment add --webUrl \"https://contoso.sharepoint.com/sites/project-x\" --upn \"someaccount@tenant.onmicrosoft.com\" --roleDefinitionId 1073741829 add role assignment to site https://contoso.sharepoint.com/sites/project-x_for group _someGroup and role definition id 1073741829 m365 spo web roleassignment add --webUrl \"https://contoso.sharepoint.com/sites/project-x\" --groupName \"someGroup\" --roleDefinitionId 1073741829 add role assignment to site https://contoso.sharepoint.com/sites/project-x_for principal id _11 and role definition name Full Control m365 spo web roleassignment add --webUrl \"https://contoso.sharepoint.com/sites/project-x\" --principalId 11 --roleDefinitionName \"Full Control\"","title":"Examples"},{"location":"cmd/spo/web/web-roleassignment-remove/","text":"spo web roleassignment remove \u00b6 Removes a role assignment from web permissions. Usage \u00b6 m365 spo web roleassignment remove [ options ] Options \u00b6 -u, --webUrl <webUrl> URL of the site --principalId [principalId] SharePoint ID of principal it may be either user id or group id we want to add permissions to. Specify principalId only when upn or groupName are not used. --upn [upn] Upn/email of user to assign role to. Specify upn only when principalId or groupName are not used. --groupName [groupName] Enter group name of Azure AD or SharePoint group. Specify groupName only when principalId or upn are not used. --confirm [confirm] Don't prompt for confirming removing the roleassignment. -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Remove roleassignment from web based on group name m365 spo web roleassignment remove --webUrl \"https://contoso.sharepoint.com/sites/contoso-sales\" --groupName \"saleGroup\" Remove roleassignment from web based on principal Id m365 spo web roleassignment remove --webUrl \"https://contoso.sharepoint.com/sites/contoso-sales\" --principalId 2 Remove roleassignment from web based on upn m365 spo web roleassignment remove --webUrl \"https://contoso.sharepoint.com/sites/contoso-sales\" --upn \"someaccount@tenant.onmicrosoft.com\" Remove roleassignment from web based on principal Id without prompting for confirmation m365 spo web roleassignment remove --webUrl \"https://contoso.sharepoint.com/sites/contoso-sales\" --principalId 2 --confirm","title":"web roleassignment remove"},{"location":"cmd/spo/web/web-roleassignment-remove/#spo-web-roleassignment-remove","text":"Removes a role assignment from web permissions.","title":"spo web roleassignment remove"},{"location":"cmd/spo/web/web-roleassignment-remove/#usage","text":"m365 spo web roleassignment remove [ options ]","title":"Usage"},{"location":"cmd/spo/web/web-roleassignment-remove/#options","text":"-u, --webUrl <webUrl> URL of the site --principalId [principalId] SharePoint ID of principal it may be either user id or group id we want to add permissions to. Specify principalId only when upn or groupName are not used. --upn [upn] Upn/email of user to assign role to. Specify upn only when principalId or groupName are not used. --groupName [groupName] Enter group name of Azure AD or SharePoint group. Specify groupName only when principalId or upn are not used. --confirm [confirm] Don't prompt for confirming removing the roleassignment. -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/web/web-roleassignment-remove/#examples","text":"Remove roleassignment from web based on group name m365 spo web roleassignment remove --webUrl \"https://contoso.sharepoint.com/sites/contoso-sales\" --groupName \"saleGroup\" Remove roleassignment from web based on principal Id m365 spo web roleassignment remove --webUrl \"https://contoso.sharepoint.com/sites/contoso-sales\" --principalId 2 Remove roleassignment from web based on upn m365 spo web roleassignment remove --webUrl \"https://contoso.sharepoint.com/sites/contoso-sales\" --upn \"someaccount@tenant.onmicrosoft.com\" Remove roleassignment from web based on principal Id without prompting for confirmation m365 spo web roleassignment remove --webUrl \"https://contoso.sharepoint.com/sites/contoso-sales\" --principalId 2 --confirm","title":"Examples"},{"location":"cmd/spo/web/web-roleinheritance-break/","text":"spo web roleinheritance break \u00b6 Break role inheritance of subsite Usage \u00b6 m365 spo web roleinheritance break [ options ] Options \u00b6 -u, --webUrl <webUrl> URL of the site. -c, --clearExistingPermissions Clears all existing permissions from the web. --confirm Don't prompt for confirmation. -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 By default, when breaking permissions inheritance, the web will retain existing permissions. To remove existing permissions, use the --clearExistingPermissions option. Examples \u00b6 Break role inheritance of a web and keep the existing permissions m365 spo web roleinheritance break --webUrl https://contoso.sharepoint.com/sites/project-x Break role inheritance of a web and clear the existing permissions m365 spo web roleinheritance break --webUrl https://contoso.sharepoint.com/sites/project-x --clearExistingPermissions Response \u00b6 The command won't return a response on success.","title":"web roleinheritance break"},{"location":"cmd/spo/web/web-roleinheritance-break/#spo-web-roleinheritance-break","text":"Break role inheritance of subsite","title":"spo web roleinheritance break"},{"location":"cmd/spo/web/web-roleinheritance-break/#usage","text":"m365 spo web roleinheritance break [ options ]","title":"Usage"},{"location":"cmd/spo/web/web-roleinheritance-break/#options","text":"-u, --webUrl <webUrl> URL of the site. -c, --clearExistingPermissions Clears all existing permissions from the web. --confirm Don't prompt for confirmation. -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/web/web-roleinheritance-break/#remarks","text":"By default, when breaking permissions inheritance, the web will retain existing permissions. To remove existing permissions, use the --clearExistingPermissions option.","title":"Remarks"},{"location":"cmd/spo/web/web-roleinheritance-break/#examples","text":"Break role inheritance of a web and keep the existing permissions m365 spo web roleinheritance break --webUrl https://contoso.sharepoint.com/sites/project-x Break role inheritance of a web and clear the existing permissions m365 spo web roleinheritance break --webUrl https://contoso.sharepoint.com/sites/project-x --clearExistingPermissions","title":"Examples"},{"location":"cmd/spo/web/web-roleinheritance-break/#response","text":"The command won't return a response on success.","title":"Response"},{"location":"cmd/spo/web/web-roleinheritance-reset/","text":"spo web roleinheritance reset \u00b6 Restores role inheritance of subsite. Usage \u00b6 m365 spo web roleinheritance reset [ options ] Options \u00b6 -u, --webUrl <webUrl> URL of the site --confirm Do not prompt for confirmation before resetting role inheritance. -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Restore role inheritance of subsite https://contoso.sharepoint.com/sites/project-x m365 spo web roleinheritance reset --webUrl https://contoso.sharepoint.com/sites/project-x Restore role inheritance of subsite https://contoso.sharepoint.com/sites/project-x without prompting for confirmation m365 spo web roleinheritance reset --webUrl https://contoso.sharepoint.com/sites/project-x --confirm","title":"web roleinheritance reset"},{"location":"cmd/spo/web/web-roleinheritance-reset/#spo-web-roleinheritance-reset","text":"Restores role inheritance of subsite.","title":"spo web roleinheritance reset"},{"location":"cmd/spo/web/web-roleinheritance-reset/#usage","text":"m365 spo web roleinheritance reset [ options ]","title":"Usage"},{"location":"cmd/spo/web/web-roleinheritance-reset/#options","text":"-u, --webUrl <webUrl> URL of the site --confirm Do not prompt for confirmation before resetting role inheritance. -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/web/web-roleinheritance-reset/#examples","text":"Restore role inheritance of subsite https://contoso.sharepoint.com/sites/project-x m365 spo web roleinheritance reset --webUrl https://contoso.sharepoint.com/sites/project-x Restore role inheritance of subsite https://contoso.sharepoint.com/sites/project-x without prompting for confirmation m365 spo web roleinheritance reset --webUrl https://contoso.sharepoint.com/sites/project-x --confirm","title":"Examples"},{"location":"cmd/spo/web/web-set/","text":"spo web set \u00b6 Updates subsite properties Usage \u00b6 m365 spo web set [ options ] Options \u00b6 -u, --url <url> URL of the subsite to update -t, --title [title] New title for the subsite -d, --description [description] New description for the subsite --siteLogoUrl [siteLogoUrl] New site logo URL for the subsite. Set to empty string to reset to default. --quickLaunchEnabled [quickLaunchEnabled] Set to true to enable quick launch and to false to disable it --headerLayout [headerLayout] Configures the site header. Allowed values standard,compact --headerEmphasis [headerEmphasis] Configures the site header background. Allowed values 0,1,2,3 --megaMenuEnabled [megaMenuEnabled] Set to true to change the menu style to megamenu. Set to false to use the cascading menu style --footerEnabled [footerEnabled] Set to true to enable footer and to false to disable it --searchScope [searchScope] Search scope to set in the site. Allowed values DefaultScope,Tenant,Hub,Site --welcomePage [welcomePage] Site-relative URL of the welcome page for the site -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 Next to updating web properties corresponding to the options of this command, you can update the value of any other web property using its CSOM name, eg. --AllowAutomaticASPXPageIndexing . At this moment, the CLI supports properties of types Boolean , String and Int32 . Examples \u00b6 Update subsite title m365 spo web set --url https://contoso.sharepoint.com/sites/team-a --title Team-a Hide quick launch on the subsite m365 spo web set --url https://contoso.sharepoint.com/sites/team-a --quickLaunchEnabled false Set site header layout to compact m365 spo web set --url https://contoso.sharepoint.com/sites/team-a --headerLayout compact Set site header color to primary theme background color m365 spo web set --url https://contoso.sharepoint.com/sites/team-a --headerEmphasis 0 Enable megamenu in the site m365 spo web set --url https://contoso.sharepoint.com/sites/team-a --megaMenuEnabled true Hide footer in the site m365 spo web set --url https://contoso.sharepoint.com/sites/team-a --footerEnabled false Set search scope to tenant scope m365 spo web set --url https://contoso.sharepoint.com/sites/team-a --searchScope tenant Set welcome page for the web m365 spo web set --url https://contoso.sharepoint.com/sites/team-a --welcomePage \"SitePages/new-home.aspx\" More information \u00b6 Web properties: https://docs.microsoft.com/en-us/previous-versions/office/sharepoint-server/ee545886(v=office.15)","title":"web set"},{"location":"cmd/spo/web/web-set/#spo-web-set","text":"Updates subsite properties","title":"spo web set"},{"location":"cmd/spo/web/web-set/#usage","text":"m365 spo web set [ options ]","title":"Usage"},{"location":"cmd/spo/web/web-set/#options","text":"-u, --url <url> URL of the subsite to update -t, --title [title] New title for the subsite -d, --description [description] New description for the subsite --siteLogoUrl [siteLogoUrl] New site logo URL for the subsite. Set to empty string to reset to default. --quickLaunchEnabled [quickLaunchEnabled] Set to true to enable quick launch and to false to disable it --headerLayout [headerLayout] Configures the site header. Allowed values standard,compact --headerEmphasis [headerEmphasis] Configures the site header background. Allowed values 0,1,2,3 --megaMenuEnabled [megaMenuEnabled] Set to true to change the menu style to megamenu. Set to false to use the cascading menu style --footerEnabled [footerEnabled] Set to true to enable footer and to false to disable it --searchScope [searchScope] Search scope to set in the site. Allowed values DefaultScope,Tenant,Hub,Site --welcomePage [welcomePage] Site-relative URL of the welcome page for the site -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/spo/web/web-set/#remarks","text":"Next to updating web properties corresponding to the options of this command, you can update the value of any other web property using its CSOM name, eg. --AllowAutomaticASPXPageIndexing . At this moment, the CLI supports properties of types Boolean , String and Int32 .","title":"Remarks"},{"location":"cmd/spo/web/web-set/#examples","text":"Update subsite title m365 spo web set --url https://contoso.sharepoint.com/sites/team-a --title Team-a Hide quick launch on the subsite m365 spo web set --url https://contoso.sharepoint.com/sites/team-a --quickLaunchEnabled false Set site header layout to compact m365 spo web set --url https://contoso.sharepoint.com/sites/team-a --headerLayout compact Set site header color to primary theme background color m365 spo web set --url https://contoso.sharepoint.com/sites/team-a --headerEmphasis 0 Enable megamenu in the site m365 spo web set --url https://contoso.sharepoint.com/sites/team-a --megaMenuEnabled true Hide footer in the site m365 spo web set --url https://contoso.sharepoint.com/sites/team-a --footerEnabled false Set search scope to tenant scope m365 spo web set --url https://contoso.sharepoint.com/sites/team-a --searchScope tenant Set welcome page for the web m365 spo web set --url https://contoso.sharepoint.com/sites/team-a --welcomePage \"SitePages/new-home.aspx\"","title":"Examples"},{"location":"cmd/spo/web/web-set/#more-information","text":"Web properties: https://docs.microsoft.com/en-us/previous-versions/office/sharepoint-server/ee545886(v=office.15)","title":"More information"},{"location":"cmd/teams/app/app-install/","text":"teams app install \u00b6 Installs a Microsoft Teams team app from the catalog in the specified team or for the specified user Usage \u00b6 m365 teams app install [ options ] Options \u00b6 --id <id> The ID of the app to install --teamId [teamId] The ID of the Microsoft Teams team to which to install the app --userId [userId] The ID of the user for who to install the app. Specify either userId or userName to install a personal app for a user. --userName [userName] The UPN of the user for who to install the app. Specify either userId or userName to install a personal app for a user. -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 The id has to be the ID of the app from the Microsoft Teams App Catalog. Do not use the ID from the manifest of the zip app package. Use the teams app list command to get this ID instead. Examples \u00b6 Install an app from the catalog in a Microsoft Teams team m365 teams app install --id 4440558e-8c73-4597-abc7-3644a64c4bce --teamId 2609af39-7775-4f94-a3dc-0dd67657e900 Install a personal app for the user specified using their user name m365 teams app install --id 4440558e-8c73-4597-abc7-3644a64c4bce --userName steve@contoso.com Install a personal app for the user specified using their ID m365 teams app install --id 4440558e-8c73-4597-abc7-3644a64c4bce --userId 2609af39-7775-4f94-a3dc-0dd67657e900","title":"app install"},{"location":"cmd/teams/app/app-install/#teams-app-install","text":"Installs a Microsoft Teams team app from the catalog in the specified team or for the specified user","title":"teams app install"},{"location":"cmd/teams/app/app-install/#usage","text":"m365 teams app install [ options ]","title":"Usage"},{"location":"cmd/teams/app/app-install/#options","text":"--id <id> The ID of the app to install --teamId [teamId] The ID of the Microsoft Teams team to which to install the app --userId [userId] The ID of the user for who to install the app. Specify either userId or userName to install a personal app for a user. --userName [userName] The UPN of the user for who to install the app. Specify either userId or userName to install a personal app for a user. -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/teams/app/app-install/#remarks","text":"The id has to be the ID of the app from the Microsoft Teams App Catalog. Do not use the ID from the manifest of the zip app package. Use the teams app list command to get this ID instead.","title":"Remarks"},{"location":"cmd/teams/app/app-install/#examples","text":"Install an app from the catalog in a Microsoft Teams team m365 teams app install --id 4440558e-8c73-4597-abc7-3644a64c4bce --teamId 2609af39-7775-4f94-a3dc-0dd67657e900 Install a personal app for the user specified using their user name m365 teams app install --id 4440558e-8c73-4597-abc7-3644a64c4bce --userName steve@contoso.com Install a personal app for the user specified using their ID m365 teams app install --id 4440558e-8c73-4597-abc7-3644a64c4bce --userId 2609af39-7775-4f94-a3dc-0dd67657e900","title":"Examples"},{"location":"cmd/teams/app/app-list/","text":"teams app list \u00b6 Lists apps from the Microsoft Teams app catalog or apps installed in the specified team Usage \u00b6 m365 teams app list [ options ] Options \u00b6 -a, --all Specify, to get apps from your organization only -i, --teamId [teamId] The ID of the team for which to list installed apps. Specify either teamId or teamName but not both -t, --teamName [teamName] The display name of the team for which to list installed apps. Specify either teamId or teamName but not both -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 To list apps installed in the specified Microsoft Teams team, specify that team's ID using the teamId option. If the teamId option is not specified, the command will list apps available in the Teams app catalog. Examples \u00b6 List all Microsoft Teams apps from your organization's app catalog only m365 teams app list List all apps from the Microsoft Teams app catalog and the Microsoft Teams store m365 teams app list --all List your organization's apps installed in the specified Microsoft Teams team with id 6f6fd3f7-9ba5-4488-bbe6-a789004d0d55 m365 teams app list --teamId 6f6fd3f7-9ba5-4488-bbe6-a789004d0d55 List your organization's apps installed in the specified Microsoft Teams team with name Team Name m365 teams app list --teamName \"Team Name\"","title":"app list"},{"location":"cmd/teams/app/app-list/#teams-app-list","text":"Lists apps from the Microsoft Teams app catalog or apps installed in the specified team","title":"teams app list"},{"location":"cmd/teams/app/app-list/#usage","text":"m365 teams app list [ options ]","title":"Usage"},{"location":"cmd/teams/app/app-list/#options","text":"-a, --all Specify, to get apps from your organization only -i, --teamId [teamId] The ID of the team for which to list installed apps. Specify either teamId or teamName but not both -t, --teamName [teamName] The display name of the team for which to list installed apps. Specify either teamId or teamName but not both -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/teams/app/app-list/#remarks","text":"To list apps installed in the specified Microsoft Teams team, specify that team's ID using the teamId option. If the teamId option is not specified, the command will list apps available in the Teams app catalog.","title":"Remarks"},{"location":"cmd/teams/app/app-list/#examples","text":"List all Microsoft Teams apps from your organization's app catalog only m365 teams app list List all apps from the Microsoft Teams app catalog and the Microsoft Teams store m365 teams app list --all List your organization's apps installed in the specified Microsoft Teams team with id 6f6fd3f7-9ba5-4488-bbe6-a789004d0d55 m365 teams app list --teamId 6f6fd3f7-9ba5-4488-bbe6-a789004d0d55 List your organization's apps installed in the specified Microsoft Teams team with name Team Name m365 teams app list --teamName \"Team Name\"","title":"Examples"},{"location":"cmd/teams/app/app-publish/","text":"teams app publish \u00b6 Publishes Teams app to the organization's app catalog Usage \u00b6 m365 teams app publish [ options ] Options \u00b6 -p, --filePath <filePath> Absolute or relative path to the Teams manifest zip file to add to the app catalog -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 You can only publish a Teams app as a global administrator. Examples \u00b6 Add the teams-manifest.zip file to the organization's app catalog m365 teams app publish --filePath ./teams-manifest.zip","title":"app publish"},{"location":"cmd/teams/app/app-publish/#teams-app-publish","text":"Publishes Teams app to the organization's app catalog","title":"teams app publish"},{"location":"cmd/teams/app/app-publish/#usage","text":"m365 teams app publish [ options ]","title":"Usage"},{"location":"cmd/teams/app/app-publish/#options","text":"-p, --filePath <filePath> Absolute or relative path to the Teams manifest zip file to add to the app catalog -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/teams/app/app-publish/#remarks","text":"You can only publish a Teams app as a global administrator.","title":"Remarks"},{"location":"cmd/teams/app/app-publish/#examples","text":"Add the teams-manifest.zip file to the organization's app catalog m365 teams app publish --filePath ./teams-manifest.zip","title":"Examples"},{"location":"cmd/teams/app/app-remove/","text":"teams app remove \u00b6 Removes a Teams app from the organization's app catalog Usage \u00b6 m365 teams app remove [ options ] Options \u00b6 -i, --id <id> ID of the Teams app to remove. Needs to be available in your organization\\'s app catalog. --confirm Don't prompt for confirming removing the app -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 You can only remove a Teams app as a global administrator. Examples \u00b6 Remove the Teams app with ID 83cece1e-938d-44a1-8b86-918cf6151957 from the organization's app catalog. Will prompt for confirmation before actually removing the app. m365 teams app remove --id 83cece1e-938d-44a1-8b86-918cf6151957 Remove the Teams app with ID 83cece1e-938d-44a1-8b86-918cf6151957 from the organization's app catalog. Don't prompt for confirmation. m365 teams app remove --id 83cece1e-938d-44a1-8b86-918cf6151957 --confirm","title":"app remove"},{"location":"cmd/teams/app/app-remove/#teams-app-remove","text":"Removes a Teams app from the organization's app catalog","title":"teams app remove"},{"location":"cmd/teams/app/app-remove/#usage","text":"m365 teams app remove [ options ]","title":"Usage"},{"location":"cmd/teams/app/app-remove/#options","text":"-i, --id <id> ID of the Teams app to remove. Needs to be available in your organization\\'s app catalog. --confirm Don't prompt for confirming removing the app -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/teams/app/app-remove/#remarks","text":"You can only remove a Teams app as a global administrator.","title":"Remarks"},{"location":"cmd/teams/app/app-remove/#examples","text":"Remove the Teams app with ID 83cece1e-938d-44a1-8b86-918cf6151957 from the organization's app catalog. Will prompt for confirmation before actually removing the app. m365 teams app remove --id 83cece1e-938d-44a1-8b86-918cf6151957 Remove the Teams app with ID 83cece1e-938d-44a1-8b86-918cf6151957 from the organization's app catalog. Don't prompt for confirmation. m365 teams app remove --id 83cece1e-938d-44a1-8b86-918cf6151957 --confirm","title":"Examples"},{"location":"cmd/teams/app/app-uninstall/","text":"teams app uninstall \u00b6 Uninstalls an app from a Microsoft Team team Usage \u00b6 m365 teams app uninstall [ options ] Options \u00b6 --id <id> The unique id of the app instance installed in the Microsoft Teams team --teamId <teamId> The ID of the Microsoft Teams team from which to uninstall the app --confirm Don't prompt for confirmation when uninstalling the app -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 The id has to be the id the app instance installed in the Microsoft Teams team. Do not use the ID from the manifest of the zip app package or the id from the Microsoft Teams App Catalog. Examples \u00b6 Uninstall an app from a Microsoft Teams team m365 teams app uninstall --id YzUyN2E0NzAtYTg4Mi00ODFjLTk4MWMtZWU2ZWZhYmE4NWM3IyM0ZDFlYTA0Ny1mMTk2LTQ1MGQtYjJlOS0wZDI4NTViYTA1YTY = --teamId 2609af39-7775-4f94-a3dc-0dd67657e900","title":"app uninstall"},{"location":"cmd/teams/app/app-uninstall/#teams-app-uninstall","text":"Uninstalls an app from a Microsoft Team team","title":"teams app uninstall"},{"location":"cmd/teams/app/app-uninstall/#usage","text":"m365 teams app uninstall [ options ]","title":"Usage"},{"location":"cmd/teams/app/app-uninstall/#options","text":"--id <id> The unique id of the app instance installed in the Microsoft Teams team --teamId <teamId> The ID of the Microsoft Teams team from which to uninstall the app --confirm Don't prompt for confirmation when uninstalling the app -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/teams/app/app-uninstall/#remarks","text":"The id has to be the id the app instance installed in the Microsoft Teams team. Do not use the ID from the manifest of the zip app package or the id from the Microsoft Teams App Catalog.","title":"Remarks"},{"location":"cmd/teams/app/app-uninstall/#examples","text":"Uninstall an app from a Microsoft Teams team m365 teams app uninstall --id YzUyN2E0NzAtYTg4Mi00ODFjLTk4MWMtZWU2ZWZhYmE4NWM3IyM0ZDFlYTA0Ny1mMTk2LTQ1MGQtYjJlOS0wZDI4NTViYTA1YTY = --teamId 2609af39-7775-4f94-a3dc-0dd67657e900","title":"Examples"},{"location":"cmd/teams/app/app-update/","text":"teams app update \u00b6 Updates Teams app in the organization's app catalog Usage \u00b6 m365 teams app update [ options ] Options \u00b6 -i, --id [id] ID of the app to update. Specify either id or name, but not both -n, --name [name] The display name of the app to update. Specify either id or name, but not both -p, --filePath <filePath> Absolute or relative path to the Teams manifest zip file to update in the app catalog -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 You can only update a Teams app as a global administrator. Examples \u00b6 Update the Teams app with ID 83cece1e-938d-44a1-8b86-918cf6151957 from file teams-manifest.zip m365 teams app update --id 83cece1e-938d-44a1-8b86-918cf6151957 --filePath ./teams-manifest.zip Update the Teams app with name Test app from file teams-manifest.zip m365 teams app update --name \"Test app\" --filePath ./teams-manifest.zip","title":"app update"},{"location":"cmd/teams/app/app-update/#teams-app-update","text":"Updates Teams app in the organization's app catalog","title":"teams app update"},{"location":"cmd/teams/app/app-update/#usage","text":"m365 teams app update [ options ]","title":"Usage"},{"location":"cmd/teams/app/app-update/#options","text":"-i, --id [id] ID of the app to update. Specify either id or name, but not both -n, --name [name] The display name of the app to update. Specify either id or name, but not both -p, --filePath <filePath> Absolute or relative path to the Teams manifest zip file to update in the app catalog -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/teams/app/app-update/#remarks","text":"You can only update a Teams app as a global administrator.","title":"Remarks"},{"location":"cmd/teams/app/app-update/#examples","text":"Update the Teams app with ID 83cece1e-938d-44a1-8b86-918cf6151957 from file teams-manifest.zip m365 teams app update --id 83cece1e-938d-44a1-8b86-918cf6151957 --filePath ./teams-manifest.zip Update the Teams app with name Test app from file teams-manifest.zip m365 teams app update --name \"Test app\" --filePath ./teams-manifest.zip","title":"Examples"},{"location":"cmd/teams/cache/cache-remove/","text":"teams cache remove \u00b6 Removes the Microsoft Teams client cache Usage \u00b6 m365 teams cache remove [ options ] Options \u00b6 --confirm Don't prompt for confirmation -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 This command will execute the following steps. Stop the Microsoft Teams client. This will kill all the running Teams.exe tasks. Clear the Microsoft Teams cached files. For Windows it will delete all files and folders in the %appdata%\\Microsoft\\Teams directory. For macOS it will delete all files and folders in the ~/Library/Application Support/Microsoft/Teams directory. Important You won't lose any user data by clearing the cache. Restarting Teams after you clear the cache might take longer than usual because the Teams cache files have to be rebuilt. If you run the command in the CLI Docker container, you will get the following error message: Because you're running CLI for Microsoft 365 in a Docker container, we can't clear the cache on your host. Instead run this command on your host using 'npx ...'. The command works only on Windows and macOS. If you run it on a different operating system, you will get the 'abc' platform is unsupported for this command error. Examples \u00b6 Removes the Microsoft Teams client cache m365 teams cache remove More information \u00b6 Clear the Teams client cache guidance","title":"cache remove"},{"location":"cmd/teams/cache/cache-remove/#teams-cache-remove","text":"Removes the Microsoft Teams client cache","title":"teams cache remove"},{"location":"cmd/teams/cache/cache-remove/#usage","text":"m365 teams cache remove [ options ]","title":"Usage"},{"location":"cmd/teams/cache/cache-remove/#options","text":"--confirm Don't prompt for confirmation -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/teams/cache/cache-remove/#remarks","text":"This command will execute the following steps. Stop the Microsoft Teams client. This will kill all the running Teams.exe tasks. Clear the Microsoft Teams cached files. For Windows it will delete all files and folders in the %appdata%\\Microsoft\\Teams directory. For macOS it will delete all files and folders in the ~/Library/Application Support/Microsoft/Teams directory. Important You won't lose any user data by clearing the cache. Restarting Teams after you clear the cache might take longer than usual because the Teams cache files have to be rebuilt. If you run the command in the CLI Docker container, you will get the following error message: Because you're running CLI for Microsoft 365 in a Docker container, we can't clear the cache on your host. Instead run this command on your host using 'npx ...'. The command works only on Windows and macOS. If you run it on a different operating system, you will get the 'abc' platform is unsupported for this command error.","title":"Remarks"},{"location":"cmd/teams/cache/cache-remove/#examples","text":"Removes the Microsoft Teams client cache m365 teams cache remove","title":"Examples"},{"location":"cmd/teams/cache/cache-remove/#more-information","text":"Clear the Teams client cache guidance","title":"More information"},{"location":"cmd/teams/channel/channel-add/","text":"teams channel add \u00b6 Adds a channel to the specified Microsoft Teams team Usage \u00b6 m365 teams channel add [ options ] Options \u00b6 -i, --teamId [teamId] The ID of the team to add the channel to. Specify either teamId or teamName but not both --teamName [teamName] The display name of the team to add the channel to. Specify either teamId or teamName but not both -n, --name <name> The name of the channel to add -d, --description [description] The description of the channel to add --type [type] Type of channel to create: standard , private , shared . Default standard . --owner [owner] User with this ID or UPN will be added as owner of the channel. This option is required when type is private or shared . -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 You can only add a channel to the Microsoft Teams team you are a member of. Examples \u00b6 Add channel to the specified Microsoft Teams team with id 6703ac8a-c49b-4fd4-8223-28f0ac3a6402 m365 teams channel add --teamId 6703ac8a-c49b-4fd4-8223-28f0ac3a6402 --name climicrosoft365 --description development Add channel to the specified Microsoft Teams team with name Team Name m365 teams channel add --teamName \"Team Name\" --name climicrosoft365 --description development Add private channel to the specified Microsoft Teams team with owner UPN m365 teams channel add --teamName \"Team Name\" --name climicrosoft365 --type private --owner john.doe@contoso.com Add shared channel to the specified Microsoft Teams team with owner ID m365 teams channel add --teamId 6703ac8a-c49b-4fd4-8223-28f0ac3a6402 --name climicrosoft365 --type shared --owner cc693a7d-4833-4911-a89a-f0fe6e49bf69","title":"channel add"},{"location":"cmd/teams/channel/channel-add/#teams-channel-add","text":"Adds a channel to the specified Microsoft Teams team","title":"teams channel add"},{"location":"cmd/teams/channel/channel-add/#usage","text":"m365 teams channel add [ options ]","title":"Usage"},{"location":"cmd/teams/channel/channel-add/#options","text":"-i, --teamId [teamId] The ID of the team to add the channel to. Specify either teamId or teamName but not both --teamName [teamName] The display name of the team to add the channel to. Specify either teamId or teamName but not both -n, --name <name> The name of the channel to add -d, --description [description] The description of the channel to add --type [type] Type of channel to create: standard , private , shared . Default standard . --owner [owner] User with this ID or UPN will be added as owner of the channel. This option is required when type is private or shared . -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/teams/channel/channel-add/#remarks","text":"You can only add a channel to the Microsoft Teams team you are a member of.","title":"Remarks"},{"location":"cmd/teams/channel/channel-add/#examples","text":"Add channel to the specified Microsoft Teams team with id 6703ac8a-c49b-4fd4-8223-28f0ac3a6402 m365 teams channel add --teamId 6703ac8a-c49b-4fd4-8223-28f0ac3a6402 --name climicrosoft365 --description development Add channel to the specified Microsoft Teams team with name Team Name m365 teams channel add --teamName \"Team Name\" --name climicrosoft365 --description development Add private channel to the specified Microsoft Teams team with owner UPN m365 teams channel add --teamName \"Team Name\" --name climicrosoft365 --type private --owner john.doe@contoso.com Add shared channel to the specified Microsoft Teams team with owner ID m365 teams channel add --teamId 6703ac8a-c49b-4fd4-8223-28f0ac3a6402 --name climicrosoft365 --type shared --owner cc693a7d-4833-4911-a89a-f0fe6e49bf69","title":"Examples"},{"location":"cmd/teams/channel/channel-get/","text":"teams channel get \u00b6 Gets information about the specific Microsoft Teams team channel Usage \u00b6 m365 teams channel get [ options ] Options \u00b6 -i, --teamId [teamId] The ID of the team to which the channel belongs to. Specify either teamId or teamName but not both --teamName [teamName] The display name of the team to which the channel belongs to. Specify either teamId or teamName but not both -c, --id [id] The ID of the channel for which to retrieve more information. Specify either id or name but not both --name [name] The display name of the channel for which to retrieve more information. Specify either id or name but not both --primary Gets the default channel, General, of a team. If specified, id or name are not needed -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Get information about Microsoft Teams team channel with id 19:493665404ebd4a18adb8a980a31b4986@thread.skype m365 teams channel get --teamId 00000000 -0000-0000-0000-000000000000 --id '19:493665404ebd4a18adb8a980a31b4986@thread.skype' Get information about Microsoft Teams team channel with name Channel Name m365 teams channel get --teamName \"Team Name\" --name \"Channel Name\" Get information about Microsoft Teams team primary channel , i.e. General m365 teams channel get --teamName \"Team Name\" --primary","title":"channel get"},{"location":"cmd/teams/channel/channel-get/#teams-channel-get","text":"Gets information about the specific Microsoft Teams team channel","title":"teams channel get"},{"location":"cmd/teams/channel/channel-get/#usage","text":"m365 teams channel get [ options ]","title":"Usage"},{"location":"cmd/teams/channel/channel-get/#options","text":"-i, --teamId [teamId] The ID of the team to which the channel belongs to. Specify either teamId or teamName but not both --teamName [teamName] The display name of the team to which the channel belongs to. Specify either teamId or teamName but not both -c, --id [id] The ID of the channel for which to retrieve more information. Specify either id or name but not both --name [name] The display name of the channel for which to retrieve more information. Specify either id or name but not both --primary Gets the default channel, General, of a team. If specified, id or name are not needed -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/teams/channel/channel-get/#examples","text":"Get information about Microsoft Teams team channel with id 19:493665404ebd4a18adb8a980a31b4986@thread.skype m365 teams channel get --teamId 00000000 -0000-0000-0000-000000000000 --id '19:493665404ebd4a18adb8a980a31b4986@thread.skype' Get information about Microsoft Teams team channel with name Channel Name m365 teams channel get --teamName \"Team Name\" --name \"Channel Name\" Get information about Microsoft Teams team primary channel , i.e. General m365 teams channel get --teamName \"Team Name\" --primary","title":"Examples"},{"location":"cmd/teams/channel/channel-list/","text":"teams channel list \u00b6 Lists channels in the specified Microsoft Teams team Usage \u00b6 m365 teams channel list [ options ] Options \u00b6 -i, --teamId [teamId] The ID of the team to list the channels of. Specify either teamId or teamName but not both --teamName [teamName] The display name of the team to list the channels of. Specify either teamId or teamName but not both --type [type] Filter the results to only channels of a given type: standard , private , shared . By default all channels are listed. -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 List all channels in a specified Microsoft Teams team with id 00000000-0000-0000-0000-000000000000 m365 teams channel list --teamId 00000000 -0000-0000-0000-000000000000 List all channels in a specified Microsoft Teams team with name Team Name m365 teams channel list --teamName \"Team Name\" List private channels in a specified Microsoft Teams team with id 00000000-0000-0000-0000-000000000000 m365 teams channel list --teamId 00000000 -0000-0000-0000-000000000000 --type private","title":"channel list"},{"location":"cmd/teams/channel/channel-list/#teams-channel-list","text":"Lists channels in the specified Microsoft Teams team","title":"teams channel list"},{"location":"cmd/teams/channel/channel-list/#usage","text":"m365 teams channel list [ options ]","title":"Usage"},{"location":"cmd/teams/channel/channel-list/#options","text":"-i, --teamId [teamId] The ID of the team to list the channels of. Specify either teamId or teamName but not both --teamName [teamName] The display name of the team to list the channels of. Specify either teamId or teamName but not both --type [type] Filter the results to only channels of a given type: standard , private , shared . By default all channels are listed. -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/teams/channel/channel-list/#examples","text":"List all channels in a specified Microsoft Teams team with id 00000000-0000-0000-0000-000000000000 m365 teams channel list --teamId 00000000 -0000-0000-0000-000000000000 List all channels in a specified Microsoft Teams team with name Team Name m365 teams channel list --teamName \"Team Name\" List private channels in a specified Microsoft Teams team with id 00000000-0000-0000-0000-000000000000 m365 teams channel list --teamId 00000000 -0000-0000-0000-000000000000 --type private","title":"Examples"},{"location":"cmd/teams/channel/channel-member-add/","text":"teams channel member add \u00b6 Adds a specified member in the specified Microsoft Teams private or shared team channel Usage \u00b6 m365 teams channel member add [ options ] Options \u00b6 -i, --teamId [teamId] The ID of the team where the channel is located. Specify either teamId or teamName , but not both. --teamName [teamName] The name of the team where the channel is located. Specify either teamId or teamName , but not both. -c, --channelId [channelId] The Id of the Microsoft Teams team channel. Specify either channelId or channelName , but not both. --channelName [channelName] The display name of the Microsoft Teams team channel. Specify either channelId or channelName , but not both. --userId [userId] The user's ID or principal name. You can also pass a comma separated list of userIds. --userDisplayName [userDisplayName] The display name of a user. You can also pass a comma separated list of display names. --owner Assign the user the owner role. Defaults to member permissions. -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 At least one owner must be assigned to a private or shared channel. You can only add members and owners of a team to a private channel. Examples \u00b6 Add members to a channel based on their id or user principal name m365 teams channel member add --teamId 47d6625d-a540-4b59-a4ab-19b787e40593 --channelId 19 :586a8b9e36c4479bbbd378e439a96df2@thread.skype --userId \"85a50aa1-e5b8-48ac-b8ce-8e338033c366,john.doe@contoso.com\" Add owners to a channel based on their display names m365 teams channel member add --teamName \"Human Resources\" --channelName \"Private Channel\" --userDisplayName \"Anne Matthews,John Doe\" --owner","title":"channel member add"},{"location":"cmd/teams/channel/channel-member-add/#teams-channel-member-add","text":"Adds a specified member in the specified Microsoft Teams private or shared team channel","title":"teams channel member add"},{"location":"cmd/teams/channel/channel-member-add/#usage","text":"m365 teams channel member add [ options ]","title":"Usage"},{"location":"cmd/teams/channel/channel-member-add/#options","text":"-i, --teamId [teamId] The ID of the team where the channel is located. Specify either teamId or teamName , but not both. --teamName [teamName] The name of the team where the channel is located. Specify either teamId or teamName , but not both. -c, --channelId [channelId] The Id of the Microsoft Teams team channel. Specify either channelId or channelName , but not both. --channelName [channelName] The display name of the Microsoft Teams team channel. Specify either channelId or channelName , but not both. --userId [userId] The user's ID or principal name. You can also pass a comma separated list of userIds. --userDisplayName [userDisplayName] The display name of a user. You can also pass a comma separated list of display names. --owner Assign the user the owner role. Defaults to member permissions. -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/teams/channel/channel-member-add/#remarks","text":"At least one owner must be assigned to a private or shared channel. You can only add members and owners of a team to a private channel.","title":"Remarks"},{"location":"cmd/teams/channel/channel-member-add/#examples","text":"Add members to a channel based on their id or user principal name m365 teams channel member add --teamId 47d6625d-a540-4b59-a4ab-19b787e40593 --channelId 19 :586a8b9e36c4479bbbd378e439a96df2@thread.skype --userId \"85a50aa1-e5b8-48ac-b8ce-8e338033c366,john.doe@contoso.com\" Add owners to a channel based on their display names m365 teams channel member add --teamName \"Human Resources\" --channelName \"Private Channel\" --userDisplayName \"Anne Matthews,John Doe\" --owner","title":"Examples"},{"location":"cmd/teams/channel/channel-member-list/","text":"teams channel member list \u00b6 Lists members of the specified Microsoft Teams team channel Usage \u00b6 m365 teams channel member list [ options ] Options \u00b6 -i, --teamId [teamId] The Id of the Microsoft Teams team. Specify either teamId or teamName but not both --teamName [teamName] The display name of the Microsoft Teams team. Specify either teamId or teamName but not both -c, --channelId [channelId] The Id of the Microsoft Teams team channel. Specify either channelId or channelName but not both --channelName [channelName] The display name of the Microsoft Teams team channel. Specify either channelId or channelName but not both -r, --role [role] Filter the results to only users with the given role: owner, member, guest -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 List the members of a specified Microsoft Teams team with id 00000000-0000-0000-0000-000000000000 and channel id 19:00000000000000000000000000000000@thread.skype m365 teams channel member list --teamId 00000000 -0000-0000-0000-000000000000 --channelId 19 :00000000000000000000000000000000@thread.skype List the members of a specified Microsoft Teams team with name Team Name and channel with name Channel Name m365 teams channel member list --teamName \"Team Name\" --channelName \"Channel Name\" List all owners of the specified Microsoft Teams team with id 00000000-0000-0000-0000-000000000000 and channel id 19:00000000000000000000000000000000@thread.skype m365 teams channel member list --teamId 00000000 -0000-0000-0000-000000000000 --channelId 19 :00000000000000000000000000000000@thread.skype --role owner","title":"channel member list"},{"location":"cmd/teams/channel/channel-member-list/#teams-channel-member-list","text":"Lists members of the specified Microsoft Teams team channel","title":"teams channel member list"},{"location":"cmd/teams/channel/channel-member-list/#usage","text":"m365 teams channel member list [ options ]","title":"Usage"},{"location":"cmd/teams/channel/channel-member-list/#options","text":"-i, --teamId [teamId] The Id of the Microsoft Teams team. Specify either teamId or teamName but not both --teamName [teamName] The display name of the Microsoft Teams team. Specify either teamId or teamName but not both -c, --channelId [channelId] The Id of the Microsoft Teams team channel. Specify either channelId or channelName but not both --channelName [channelName] The display name of the Microsoft Teams team channel. Specify either channelId or channelName but not both -r, --role [role] Filter the results to only users with the given role: owner, member, guest -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/teams/channel/channel-member-list/#examples","text":"List the members of a specified Microsoft Teams team with id 00000000-0000-0000-0000-000000000000 and channel id 19:00000000000000000000000000000000@thread.skype m365 teams channel member list --teamId 00000000 -0000-0000-0000-000000000000 --channelId 19 :00000000000000000000000000000000@thread.skype List the members of a specified Microsoft Teams team with name Team Name and channel with name Channel Name m365 teams channel member list --teamName \"Team Name\" --channelName \"Channel Name\" List all owners of the specified Microsoft Teams team with id 00000000-0000-0000-0000-000000000000 and channel id 19:00000000000000000000000000000000@thread.skype m365 teams channel member list --teamId 00000000 -0000-0000-0000-000000000000 --channelId 19 :00000000000000000000000000000000@thread.skype --role owner","title":"Examples"},{"location":"cmd/teams/channel/channel-member-remove/","text":"teams channel member remove \u00b6 Remove the specified member from the specified Microsoft Teams private or shared team channel Usage \u00b6 m365 teams channel member remove [ options ] Options \u00b6 --teamId [teamId] The Id of the Microsoft Teams team. Specify either teamId or teamName but not both --teamName [teamName] The display name of the Microsoft Teams team. Specify either teamId or teamName but not both --channelId [channelId] The Id of the Microsoft Teams team channel. Specify either channelId or channelName but not both --channelName [channelName] The display name of the Microsoft Teams team channel. Specify either channelId or channelName but not both --userName [userName] User's UPN (user principal name, e.g. johndoe@example.com). Specify either userName, userId or id but not multiple. --userId [userId] User's Azure AD Id. Specify either userName, userId or id but not multiple. --id [id] Channel member Id of a user. Specify either userName, userId or id but not multiple. --confirm Don't prompt for confirmation -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Remove the user johndoe@example.com from the Microsoft Teams team with id 00000000-0000-0000-0000-000000000000 and channel id 19:00000000000000000000000000000000@thread.skype m365 teams channel member remove --teamId 00000000 -0000-0000-0000-000000000000 --channelId 19 :00000000000000000000000000000000@thread.skype --userName \"johndoe@example.com\" Remove the user with id 00000000-0000-0000-0000-000000000000 from the Microsoft Teams team with name Team Name and channel with name Channel Name m365 teams channel member remove --teamName \"Team Name\" --channelName \"Channel Name\" --userId 00000000 -0000-0000-0000-000000000000","title":"channel member remove"},{"location":"cmd/teams/channel/channel-member-remove/#teams-channel-member-remove","text":"Remove the specified member from the specified Microsoft Teams private or shared team channel","title":"teams channel member remove"},{"location":"cmd/teams/channel/channel-member-remove/#usage","text":"m365 teams channel member remove [ options ]","title":"Usage"},{"location":"cmd/teams/channel/channel-member-remove/#options","text":"--teamId [teamId] The Id of the Microsoft Teams team. Specify either teamId or teamName but not both --teamName [teamName] The display name of the Microsoft Teams team. Specify either teamId or teamName but not both --channelId [channelId] The Id of the Microsoft Teams team channel. Specify either channelId or channelName but not both --channelName [channelName] The display name of the Microsoft Teams team channel. Specify either channelId or channelName but not both --userName [userName] User's UPN (user principal name, e.g. johndoe@example.com). Specify either userName, userId or id but not multiple. --userId [userId] User's Azure AD Id. Specify either userName, userId or id but not multiple. --id [id] Channel member Id of a user. Specify either userName, userId or id but not multiple. --confirm Don't prompt for confirmation -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/teams/channel/channel-member-remove/#examples","text":"Remove the user johndoe@example.com from the Microsoft Teams team with id 00000000-0000-0000-0000-000000000000 and channel id 19:00000000000000000000000000000000@thread.skype m365 teams channel member remove --teamId 00000000 -0000-0000-0000-000000000000 --channelId 19 :00000000000000000000000000000000@thread.skype --userName \"johndoe@example.com\" Remove the user with id 00000000-0000-0000-0000-000000000000 from the Microsoft Teams team with name Team Name and channel with name Channel Name m365 teams channel member remove --teamName \"Team Name\" --channelName \"Channel Name\" --userId 00000000 -0000-0000-0000-000000000000","title":"Examples"},{"location":"cmd/teams/channel/channel-member-set/","text":"teams channel member set \u00b6 Updates the role of the specified member in the specified Microsoft Teams private or shared team channel Usage \u00b6 m365 teams channel member set [ options ] Options \u00b6 --teamId [teamId] The Id of the Microsoft Teams team. Specify either teamId or teamName but not both --teamName [teamName] The display name of the Microsoft Teams team. Specify either teamId or teamName but not both --channelId [channelId] The Id of the Microsoft Teams team channel. Specify either channelId or channelName but not both --channelName [channelName] The display name of the Microsoft Teams team channel. Specify either channelId or channelName but not both --userName [userName] User's UPN (user principal name, e.g. johndoe@example.com). Specify either userName, userId or id but not multiple. --userId [userId] User's Azure AD Id. Specify either userName, userId or id but not multiple. --id [id] Channel member Id of a user. Specify either userName, userId or id but not multiple. -r, --role <role> The role to be assigned to the user: owner, member. -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Updates the role of the user johndoe@example.com to owner in the Microsoft Teams team with id 00000000-0000-0000-0000-000000000000 and channel id 19:00000000000000000000000000000000@thread.skype m365 teams channel member set --teamId 00000000 -0000-0000-0000-000000000000 --channelId 19 :00000000000000000000000000000000@thread.skype --userName \"johndoe@example.com\" --role owner Updates the role of the user with id 00000000-0000-0000-0000-000000000000 to member in the Microsoft Teams team with name Team Name and channel with name Channel Name m365 teams channel member set --teamName \"Team Name\" --channelName \"Channel Name\" --userId 00000000 -0000-0000-0000-000000000000 --role member","title":"channel member set"},{"location":"cmd/teams/channel/channel-member-set/#teams-channel-member-set","text":"Updates the role of the specified member in the specified Microsoft Teams private or shared team channel","title":"teams channel member set"},{"location":"cmd/teams/channel/channel-member-set/#usage","text":"m365 teams channel member set [ options ]","title":"Usage"},{"location":"cmd/teams/channel/channel-member-set/#options","text":"--teamId [teamId] The Id of the Microsoft Teams team. Specify either teamId or teamName but not both --teamName [teamName] The display name of the Microsoft Teams team. Specify either teamId or teamName but not both --channelId [channelId] The Id of the Microsoft Teams team channel. Specify either channelId or channelName but not both --channelName [channelName] The display name of the Microsoft Teams team channel. Specify either channelId or channelName but not both --userName [userName] User's UPN (user principal name, e.g. johndoe@example.com). Specify either userName, userId or id but not multiple. --userId [userId] User's Azure AD Id. Specify either userName, userId or id but not multiple. --id [id] Channel member Id of a user. Specify either userName, userId or id but not multiple. -r, --role <role> The role to be assigned to the user: owner, member. -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/teams/channel/channel-member-set/#examples","text":"Updates the role of the user johndoe@example.com to owner in the Microsoft Teams team with id 00000000-0000-0000-0000-000000000000 and channel id 19:00000000000000000000000000000000@thread.skype m365 teams channel member set --teamId 00000000 -0000-0000-0000-000000000000 --channelId 19 :00000000000000000000000000000000@thread.skype --userName \"johndoe@example.com\" --role owner Updates the role of the user with id 00000000-0000-0000-0000-000000000000 to member in the Microsoft Teams team with name Team Name and channel with name Channel Name m365 teams channel member set --teamName \"Team Name\" --channelName \"Channel Name\" --userId 00000000 -0000-0000-0000-000000000000 --role member","title":"Examples"},{"location":"cmd/teams/channel/channel-remove/","text":"teams channel remove \u00b6 Removes the specified channel in the Microsoft Teams team Usage \u00b6 m365 teams channel remove [ options ] Options \u00b6 -c, --id [id] The ID of the channel to remove -n, --name [name] The name of the channel to remove. Specify id or name but not both -i, --teamId <teamId> The ID of the team to which the channel to remove belongs --confirm Don't prompt for confirmation -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 When deleted, Microsoft Teams channels are moved to a recycle bin and can be restored within 30 days. After that time, they are permanently deleted. Examples \u00b6 Remove the specified Microsoft Teams channel by Id m365 teams channel remove --id 19 :f3dcbb1674574677abcae89cb626f1e6@thread.skype --teamId d66b8110-fcad-49e8-8159-0d488ddb7656 Remove the specified Microsoft Teams channel by Id without confirmation m365 teams channel remove --id 19 :f3dcbb1674574677abcae89cb626f1e6@thread.skype --teamId d66b8110-fcad-49e8-8159-0d488ddb7656 --confirm Remove the specified Microsoft Teams channel by Name m365 teams channel remove --name 'name' --teamId d66b8110-fcad-49e8-8159-0d488ddb7656 Remove the specified Microsoft Teams channel by Name without confirmation m365 teams channel remove --name 'name' --teamId d66b8110-fcad-49e8-8159-0d488ddb7656 --confirm More information \u00b6 directory resource type (deleted items): https://docs.microsoft.com/en-us/graph/api/resources/directory?view=graph-rest-1.0","title":"channel remove"},{"location":"cmd/teams/channel/channel-remove/#teams-channel-remove","text":"Removes the specified channel in the Microsoft Teams team","title":"teams channel remove"},{"location":"cmd/teams/channel/channel-remove/#usage","text":"m365 teams channel remove [ options ]","title":"Usage"},{"location":"cmd/teams/channel/channel-remove/#options","text":"-c, --id [id] The ID of the channel to remove -n, --name [name] The name of the channel to remove. Specify id or name but not both -i, --teamId <teamId> The ID of the team to which the channel to remove belongs --confirm Don't prompt for confirmation -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/teams/channel/channel-remove/#remarks","text":"When deleted, Microsoft Teams channels are moved to a recycle bin and can be restored within 30 days. After that time, they are permanently deleted.","title":"Remarks"},{"location":"cmd/teams/channel/channel-remove/#examples","text":"Remove the specified Microsoft Teams channel by Id m365 teams channel remove --id 19 :f3dcbb1674574677abcae89cb626f1e6@thread.skype --teamId d66b8110-fcad-49e8-8159-0d488ddb7656 Remove the specified Microsoft Teams channel by Id without confirmation m365 teams channel remove --id 19 :f3dcbb1674574677abcae89cb626f1e6@thread.skype --teamId d66b8110-fcad-49e8-8159-0d488ddb7656 --confirm Remove the specified Microsoft Teams channel by Name m365 teams channel remove --name 'name' --teamId d66b8110-fcad-49e8-8159-0d488ddb7656 Remove the specified Microsoft Teams channel by Name without confirmation m365 teams channel remove --name 'name' --teamId d66b8110-fcad-49e8-8159-0d488ddb7656 --confirm","title":"Examples"},{"location":"cmd/teams/channel/channel-remove/#more-information","text":"directory resource type (deleted items): https://docs.microsoft.com/en-us/graph/api/resources/directory?view=graph-rest-1.0","title":"More information"},{"location":"cmd/teams/channel/channel-set/","text":"teams channel set \u00b6 Updates properties of the specified channel in the given Microsoft Teams team Usage \u00b6 m365 teams channel set [ options ] Options \u00b6 -i, --teamId <teamId> The ID of the team where the channel to update is located --name <name> The name of the channel to update --newName [newName] The new name of the channel --description [description] The description of the channel -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Set new description and display name for the specified channel in the given Microsoft Teams team m365 teams channel set --teamId \"00000000-0000-0000-0000-000000000000\" --name Reviews --newName Projects --description \"Channel for new projects\" Set new display name for the specified channel in the given Microsoft Teams team m365 teams channel set --teamId \"00000000-0000-0000-0000-000000000000\" --name Reviews --newName Projects","title":"channel set"},{"location":"cmd/teams/channel/channel-set/#teams-channel-set","text":"Updates properties of the specified channel in the given Microsoft Teams team","title":"teams channel set"},{"location":"cmd/teams/channel/channel-set/#usage","text":"m365 teams channel set [ options ]","title":"Usage"},{"location":"cmd/teams/channel/channel-set/#options","text":"-i, --teamId <teamId> The ID of the team where the channel to update is located --name <name> The name of the channel to update --newName [newName] The new name of the channel --description [description] The description of the channel -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/teams/channel/channel-set/#examples","text":"Set new description and display name for the specified channel in the given Microsoft Teams team m365 teams channel set --teamId \"00000000-0000-0000-0000-000000000000\" --name Reviews --newName Projects --description \"Channel for new projects\" Set new display name for the specified channel in the given Microsoft Teams team m365 teams channel set --teamId \"00000000-0000-0000-0000-000000000000\" --name Reviews --newName Projects","title":"Examples"},{"location":"cmd/teams/chat/chat-get/","text":"teams chat get \u00b6 Get a Microsoft Teams chat conversation by id, participants or chat name. Usage \u00b6 m365 teams chat get [ options ] Options \u00b6 -i, --id [id] The ID of the chat conversation. Specify either id , name or participants , but not multiple. -n, --name [name] The display name of the chat conversation. Specify either id , name or participants , but not multiple. -p, --participants [participants] A comma-separated list of one or more e-mail addresses. Specify either id , name or participants , but not multiple. -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 The output will not include the chat conversation members or messages. It will just retrieve the conversation details. When using the participants option, the signed-in user will automatically be included as a participant. There's no need to add it to the list manually. Examples \u00b6 Get a Microsoft Teams chat conversation by id m365 teams chat get --id 19 :2da4c29f6d7041eca70b638b43d45437@thread.v2 Get a Microsoft Teams one on one chat conversation, finding it by participant. m365 teams chat get --participants alexw@contoso.com Get a Microsoft Teams group chat conversation, finding it by participants. m365 teams chat get --participants alexw@contoso.com,meganb@contoso.com Get a Microsoft Teams chat conversation, finding it by display name m365 teams chat get --name \"Just a conversation\"","title":"chat get"},{"location":"cmd/teams/chat/chat-get/#teams-chat-get","text":"Get a Microsoft Teams chat conversation by id, participants or chat name.","title":"teams chat get"},{"location":"cmd/teams/chat/chat-get/#usage","text":"m365 teams chat get [ options ]","title":"Usage"},{"location":"cmd/teams/chat/chat-get/#options","text":"-i, --id [id] The ID of the chat conversation. Specify either id , name or participants , but not multiple. -n, --name [name] The display name of the chat conversation. Specify either id , name or participants , but not multiple. -p, --participants [participants] A comma-separated list of one or more e-mail addresses. Specify either id , name or participants , but not multiple. -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/teams/chat/chat-get/#remarks","text":"The output will not include the chat conversation members or messages. It will just retrieve the conversation details. When using the participants option, the signed-in user will automatically be included as a participant. There's no need to add it to the list manually.","title":"Remarks"},{"location":"cmd/teams/chat/chat-get/#examples","text":"Get a Microsoft Teams chat conversation by id m365 teams chat get --id 19 :2da4c29f6d7041eca70b638b43d45437@thread.v2 Get a Microsoft Teams one on one chat conversation, finding it by participant. m365 teams chat get --participants alexw@contoso.com Get a Microsoft Teams group chat conversation, finding it by participants. m365 teams chat get --participants alexw@contoso.com,meganb@contoso.com Get a Microsoft Teams chat conversation, finding it by display name m365 teams chat get --name \"Just a conversation\"","title":"Examples"},{"location":"cmd/teams/chat/chat-list/","text":"teams chat list \u00b6 Lists all Microsoft Teams chat conversations for the current user. Usage \u00b6 m365 teams chat list [ options ] Options \u00b6 -t, --type [chatType] The chat type to optionally filter chat conversations by type. The value can be oneOnOne , group or meeting . -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 List all the Microsoft Teams chat conversations of the current user. m365 teams chat list List only the one on one Microsoft Teams chat conversations. m365 teams chat list --type oneOnOne","title":"chat list"},{"location":"cmd/teams/chat/chat-list/#teams-chat-list","text":"Lists all Microsoft Teams chat conversations for the current user.","title":"teams chat list"},{"location":"cmd/teams/chat/chat-list/#usage","text":"m365 teams chat list [ options ]","title":"Usage"},{"location":"cmd/teams/chat/chat-list/#options","text":"-t, --type [chatType] The chat type to optionally filter chat conversations by type. The value can be oneOnOne , group or meeting . -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/teams/chat/chat-list/#examples","text":"List all the Microsoft Teams chat conversations of the current user. m365 teams chat list List only the one on one Microsoft Teams chat conversations. m365 teams chat list --type oneOnOne","title":"Examples"},{"location":"cmd/teams/chat/chat-member-list/","text":"teams chat member list \u00b6 Lists all members from a Microsoft Teams chat conversation. Usage \u00b6 m365 teams chat member list [ options ] Options \u00b6 -i, --chatId <chatId> The ID of the chat conversation -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 List the members from a Microsoft Teams chat conversation m365 teams chat member list --chatId 19 :8b081ef6-4792-4def-b2c9-c363a1bf41d5_5031bb31-22c0-4f6f-9f73-91d34ab2b32d@unq.gbl.spaces","title":"chat member list"},{"location":"cmd/teams/chat/chat-member-list/#teams-chat-member-list","text":"Lists all members from a Microsoft Teams chat conversation.","title":"teams chat member list"},{"location":"cmd/teams/chat/chat-member-list/#usage","text":"m365 teams chat member list [ options ]","title":"Usage"},{"location":"cmd/teams/chat/chat-member-list/#options","text":"-i, --chatId <chatId> The ID of the chat conversation -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/teams/chat/chat-member-list/#examples","text":"List the members from a Microsoft Teams chat conversation m365 teams chat member list --chatId 19 :8b081ef6-4792-4def-b2c9-c363a1bf41d5_5031bb31-22c0-4f6f-9f73-91d34ab2b32d@unq.gbl.spaces","title":"Examples"},{"location":"cmd/teams/chat/chat-message-list/","text":"teams chat message list \u00b6 Lists all messages from a Microsoft Teams chat conversation. Usage \u00b6 m365 teams chat message list [ options ] Options \u00b6 -i, --chatId <chatId> The ID of the chat conversation -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 List the messages from a Microsoft Teams chat conversation m365 teams chat message list --chatId 19 :2da4c29f6d7041eca70b638b43d45437@thread.v2","title":"chat message list"},{"location":"cmd/teams/chat/chat-message-list/#teams-chat-message-list","text":"Lists all messages from a Microsoft Teams chat conversation.","title":"teams chat message list"},{"location":"cmd/teams/chat/chat-message-list/#usage","text":"m365 teams chat message list [ options ]","title":"Usage"},{"location":"cmd/teams/chat/chat-message-list/#options","text":"-i, --chatId <chatId> The ID of the chat conversation -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/teams/chat/chat-message-list/#examples","text":"List the messages from a Microsoft Teams chat conversation m365 teams chat message list --chatId 19 :2da4c29f6d7041eca70b638b43d45437@thread.v2","title":"Examples"},{"location":"cmd/teams/chat/chat-message-send/","text":"teams chat message send \u00b6 Sends a chat message to a Microsoft Teams chat conversation. Usage \u00b6 m365 teams chat message send [ options ] Options \u00b6 --chatId [chatId] The ID of the chat conversation. Specify either chatId , chatName or userEmails , but not multiple. --chatName [chatName] The display name of the chat conversation. Specify either chatId , chatName or userEmails , but not multiple. -e, --userEmails [userEmails] A comma-separated list of one or more e-mail addresses. Specify either chatId , chatName or userEmails , but not multiple. -m, --message <message> The message to send -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 A new chat conversation will be created if no existing conversation with the participants specified with emails is found. Examples \u00b6 Send a message to a Microsoft Teams chat conversation by id m365 teams chat message send --chatId 19 :2da4c29f6d7041eca70b638b43d45437@thread.v2 --message \"Welcome to Teams\" Send a message to a single person m365 teams chat message send --userEmails alexw@contoso.com --message \"Welcome to Teams\" Send a message to a group of people m365 teams chat message send --userEmails alexw@contoso.com,meganb@contoso.com --message \"Welcome to Teams\" Send a message to a chat conversation finding it by display name m365 teams chat message send --chatName \"Just a conversation\" --message \"Welcome to Teams\"","title":"chat message send"},{"location":"cmd/teams/chat/chat-message-send/#teams-chat-message-send","text":"Sends a chat message to a Microsoft Teams chat conversation.","title":"teams chat message send"},{"location":"cmd/teams/chat/chat-message-send/#usage","text":"m365 teams chat message send [ options ]","title":"Usage"},{"location":"cmd/teams/chat/chat-message-send/#options","text":"--chatId [chatId] The ID of the chat conversation. Specify either chatId , chatName or userEmails , but not multiple. --chatName [chatName] The display name of the chat conversation. Specify either chatId , chatName or userEmails , but not multiple. -e, --userEmails [userEmails] A comma-separated list of one or more e-mail addresses. Specify either chatId , chatName or userEmails , but not multiple. -m, --message <message> The message to send -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/teams/chat/chat-message-send/#remarks","text":"A new chat conversation will be created if no existing conversation with the participants specified with emails is found.","title":"Remarks"},{"location":"cmd/teams/chat/chat-message-send/#examples","text":"Send a message to a Microsoft Teams chat conversation by id m365 teams chat message send --chatId 19 :2da4c29f6d7041eca70b638b43d45437@thread.v2 --message \"Welcome to Teams\" Send a message to a single person m365 teams chat message send --userEmails alexw@contoso.com --message \"Welcome to Teams\" Send a message to a group of people m365 teams chat message send --userEmails alexw@contoso.com,meganb@contoso.com --message \"Welcome to Teams\" Send a message to a chat conversation finding it by display name m365 teams chat message send --chatName \"Just a conversation\" --message \"Welcome to Teams\"","title":"Examples"},{"location":"cmd/teams/funsettings/funsettings-list/","text":"teams funsettings list \u00b6 Lists fun settings for the specified Microsoft Teams team Usage \u00b6 m365 teams funsettings list [ options ] Options \u00b6 -i, --teamId <teamId> The ID of the team for which to list fun settings -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 List fun settings of a Microsoft Teams team m365 teams funsettings list --teamId 83cece1e-938d-44a1-8b86-918cf6151957","title":"funsettings list"},{"location":"cmd/teams/funsettings/funsettings-list/#teams-funsettings-list","text":"Lists fun settings for the specified Microsoft Teams team","title":"teams funsettings list"},{"location":"cmd/teams/funsettings/funsettings-list/#usage","text":"m365 teams funsettings list [ options ]","title":"Usage"},{"location":"cmd/teams/funsettings/funsettings-list/#options","text":"-i, --teamId <teamId> The ID of the team for which to list fun settings -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/teams/funsettings/funsettings-list/#examples","text":"List fun settings of a Microsoft Teams team m365 teams funsettings list --teamId 83cece1e-938d-44a1-8b86-918cf6151957","title":"Examples"},{"location":"cmd/teams/funsettings/funsettings-set/","text":"teams funsettings set \u00b6 Updates fun settings of a Microsoft Teams team Usage \u00b6 m365 teams funsettings set [ options ] Options \u00b6 -i, --teamId <teamId> The ID of the Teams team for which to update settings --allowGiphy [allowGiphy] Set to true to allow giphy and to false to disable it --giphyContentRating [giphyContentRating] Settings to set content rating for giphy. Allowed values Strict,Moderate --allowStickersAndMemes [allowStickersAndMemes] Set to true to allow stickers and memes and to false to disable them --allowCustomMemes [allowCustomMemes] Set to true to allow custom memes and to false to disable them -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Allow giphy usage within a given Microsoft Teams team, setting the content rating for giphy to Moderate m365 teams funsettings set --teamId 83cece1e-938d-44a1-8b86-918cf6151957 --allowGiphy true --giphyContentRating Moderate Disable usage of giphy within a given Microsoft Teams team m365 teams funsettings set --teamId 83cece1e-938d-44a1-8b86-918cf6151957 --allowGiphy false Allow usage of stickers and memes within a given Microsoft Teams team m365 teams funsettings set --teamId 83cece1e-938d-44a1-8b86-918cf6151957 --allowStickersAndMemes true Disable usage custom memes within a given Microsoft Teams team m365 teams funsettings set --teamId 83cece1e-938d-44a1-8b86-918cf6151957 --allowCustomMemes false","title":"funsettings set"},{"location":"cmd/teams/funsettings/funsettings-set/#teams-funsettings-set","text":"Updates fun settings of a Microsoft Teams team","title":"teams funsettings set"},{"location":"cmd/teams/funsettings/funsettings-set/#usage","text":"m365 teams funsettings set [ options ]","title":"Usage"},{"location":"cmd/teams/funsettings/funsettings-set/#options","text":"-i, --teamId <teamId> The ID of the Teams team for which to update settings --allowGiphy [allowGiphy] Set to true to allow giphy and to false to disable it --giphyContentRating [giphyContentRating] Settings to set content rating for giphy. Allowed values Strict,Moderate --allowStickersAndMemes [allowStickersAndMemes] Set to true to allow stickers and memes and to false to disable them --allowCustomMemes [allowCustomMemes] Set to true to allow custom memes and to false to disable them -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/teams/funsettings/funsettings-set/#examples","text":"Allow giphy usage within a given Microsoft Teams team, setting the content rating for giphy to Moderate m365 teams funsettings set --teamId 83cece1e-938d-44a1-8b86-918cf6151957 --allowGiphy true --giphyContentRating Moderate Disable usage of giphy within a given Microsoft Teams team m365 teams funsettings set --teamId 83cece1e-938d-44a1-8b86-918cf6151957 --allowGiphy false Allow usage of stickers and memes within a given Microsoft Teams team m365 teams funsettings set --teamId 83cece1e-938d-44a1-8b86-918cf6151957 --allowStickersAndMemes true Disable usage custom memes within a given Microsoft Teams team m365 teams funsettings set --teamId 83cece1e-938d-44a1-8b86-918cf6151957 --allowCustomMemes false","title":"Examples"},{"location":"cmd/teams/guestsettings/guestsettings-list/","text":"teams guestsettings list \u00b6 Lists guest settings for a Microsoft Teams team Usage \u00b6 m365 teams guestsettings list [ options ] Options \u00b6 -i, --teamId The ID of the team for which to get the guest settings -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Get guest settings for a Microsoft Teams team m365 teams guestsettings list --teamId 2609af39-7775-4f94-a3dc-0dd67657e900","title":"guestsettings list"},{"location":"cmd/teams/guestsettings/guestsettings-list/#teams-guestsettings-list","text":"Lists guest settings for a Microsoft Teams team","title":"teams guestsettings list"},{"location":"cmd/teams/guestsettings/guestsettings-list/#usage","text":"m365 teams guestsettings list [ options ]","title":"Usage"},{"location":"cmd/teams/guestsettings/guestsettings-list/#options","text":"-i, --teamId The ID of the team for which to get the guest settings -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/teams/guestsettings/guestsettings-list/#examples","text":"Get guest settings for a Microsoft Teams team m365 teams guestsettings list --teamId 2609af39-7775-4f94-a3dc-0dd67657e900","title":"Examples"},{"location":"cmd/teams/guestsettings/guestsettings-set/","text":"teams guestsettings set \u00b6 Updates guest settings of a Microsoft Teams team Usage \u00b6 m365 teams guestsettings set [ options ] Options \u00b6 -i, --teamId <teamId> The ID of the Teams team for which to update settings --allowCreateUpdateChannels [allowCreateUpdateChannels] Set to true to allow guests to create and update channels and to false to disallow it --allowDeleteChannels [allowDeleteChannels] Set to true to allow guests to create and update channels and to false to disallow it -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Allow guests to create and edit channels m365 teams guestsettings set --teamId '00000000-0000-0000-0000-000000000000' --allowCreateUpdateChannels true Disallow guests to delete channels m365 teams guestsettings set --teamId '00000000-0000-0000-0000-000000000000' --allowDeleteChannels false","title":"guestsettings set"},{"location":"cmd/teams/guestsettings/guestsettings-set/#teams-guestsettings-set","text":"Updates guest settings of a Microsoft Teams team","title":"teams guestsettings set"},{"location":"cmd/teams/guestsettings/guestsettings-set/#usage","text":"m365 teams guestsettings set [ options ]","title":"Usage"},{"location":"cmd/teams/guestsettings/guestsettings-set/#options","text":"-i, --teamId <teamId> The ID of the Teams team for which to update settings --allowCreateUpdateChannels [allowCreateUpdateChannels] Set to true to allow guests to create and update channels and to false to disallow it --allowDeleteChannels [allowDeleteChannels] Set to true to allow guests to create and update channels and to false to disallow it -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/teams/guestsettings/guestsettings-set/#examples","text":"Allow guests to create and edit channels m365 teams guestsettings set --teamId '00000000-0000-0000-0000-000000000000' --allowCreateUpdateChannels true Disallow guests to delete channels m365 teams guestsettings set --teamId '00000000-0000-0000-0000-000000000000' --allowDeleteChannels false","title":"Examples"},{"location":"cmd/teams/membersettings/membersettings-list/","text":"teams membersettings list \u00b6 Lists member settings for a Microsoft Teams team Usage \u00b6 m365 teams membersettings list [ options ] Options \u00b6 -i, --teamId The ID of the team for which to get the member settings -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Get member settings for a Microsoft Teams team m365 teams membersettings list --teamId 2609af39-7775-4f94-a3dc-0dd67657e900","title":"membersettings list"},{"location":"cmd/teams/membersettings/membersettings-list/#teams-membersettings-list","text":"Lists member settings for a Microsoft Teams team","title":"teams membersettings list"},{"location":"cmd/teams/membersettings/membersettings-list/#usage","text":"m365 teams membersettings list [ options ]","title":"Usage"},{"location":"cmd/teams/membersettings/membersettings-list/#options","text":"-i, --teamId The ID of the team for which to get the member settings -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/teams/membersettings/membersettings-list/#examples","text":"Get member settings for a Microsoft Teams team m365 teams membersettings list --teamId 2609af39-7775-4f94-a3dc-0dd67657e900","title":"Examples"},{"location":"cmd/teams/membersettings/membersettings-set/","text":"teams membersettings set \u00b6 Updates member settings of a Microsoft Teams team Usage \u00b6 m365 teams membersettings set [ options ] Options \u00b6 -i, --teamId <teamId> The ID of the Teams team for which to update settings --allowAddRemoveApps [allowAddRemoveApps] Set to true to allow members to add and remove apps and to false to disallow it --allowCreateUpdateChannels [allowCreateUpdateChannels] Set to true to allow members to create and update channels and to false to disallow it --allowCreateUpdateRemoveConnectors [allowCreateUpdateRemoveConnectors] Set to true to allow members to create, update and remove connectors and to false to disallow it --allowCreateUpdateRemoveTabs [allowCreateUpdateRemoveTabs] Set to true to allow members to create, update and remove tabs and to false to disallow it --allowDeleteChannels [allowDeleteChannels] Set to true to allow members to create and update channels and to false to disallow it -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Allow members to create and edit channels m365 teams membersettings set --teamId '00000000-0000-0000-0000-000000000000' --allowCreateUpdateChannels true Disallow members to add and remove apps m365 teams membersettings set --teamId '00000000-0000-0000-0000-000000000000' --allowAddRemoveApps false","title":"membersettings set"},{"location":"cmd/teams/membersettings/membersettings-set/#teams-membersettings-set","text":"Updates member settings of a Microsoft Teams team","title":"teams membersettings set"},{"location":"cmd/teams/membersettings/membersettings-set/#usage","text":"m365 teams membersettings set [ options ]","title":"Usage"},{"location":"cmd/teams/membersettings/membersettings-set/#options","text":"-i, --teamId <teamId> The ID of the Teams team for which to update settings --allowAddRemoveApps [allowAddRemoveApps] Set to true to allow members to add and remove apps and to false to disallow it --allowCreateUpdateChannels [allowCreateUpdateChannels] Set to true to allow members to create and update channels and to false to disallow it --allowCreateUpdateRemoveConnectors [allowCreateUpdateRemoveConnectors] Set to true to allow members to create, update and remove connectors and to false to disallow it --allowCreateUpdateRemoveTabs [allowCreateUpdateRemoveTabs] Set to true to allow members to create, update and remove tabs and to false to disallow it --allowDeleteChannels [allowDeleteChannels] Set to true to allow members to create and update channels and to false to disallow it -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/teams/membersettings/membersettings-set/#examples","text":"Allow members to create and edit channels m365 teams membersettings set --teamId '00000000-0000-0000-0000-000000000000' --allowCreateUpdateChannels true Disallow members to add and remove apps m365 teams membersettings set --teamId '00000000-0000-0000-0000-000000000000' --allowAddRemoveApps false","title":"Examples"},{"location":"cmd/teams/message/message-get/","text":"teams message get \u00b6 Retrieves a message from a channel in a Microsoft Teams team Usage \u00b6 m365 teams message get [ options ] Options \u00b6 -t, --teamId <teamId> The ID of the team where the channel is located -c, --channelId <channelId> The ID of the channel that contains the message -i, --id <id> The ID of the message to retrieve -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 You can only retrieve a message from a Microsoft Teams team if you are a member of that team. Examples \u00b6 Retrieve the specified message from a channel of the Microsoft Teams team m365 teams message get --teamId 5f5d7b71-1161-44d8-bcc1-3da710eb4171 --channelId 19 :88f7e66a8dfe42be92db19505ae912a8@thread.skype --id 1540747442203","title":"message get"},{"location":"cmd/teams/message/message-get/#teams-message-get","text":"Retrieves a message from a channel in a Microsoft Teams team","title":"teams message get"},{"location":"cmd/teams/message/message-get/#usage","text":"m365 teams message get [ options ]","title":"Usage"},{"location":"cmd/teams/message/message-get/#options","text":"-t, --teamId <teamId> The ID of the team where the channel is located -c, --channelId <channelId> The ID of the channel that contains the message -i, --id <id> The ID of the message to retrieve -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/teams/message/message-get/#remarks","text":"You can only retrieve a message from a Microsoft Teams team if you are a member of that team.","title":"Remarks"},{"location":"cmd/teams/message/message-get/#examples","text":"Retrieve the specified message from a channel of the Microsoft Teams team m365 teams message get --teamId 5f5d7b71-1161-44d8-bcc1-3da710eb4171 --channelId 19 :88f7e66a8dfe42be92db19505ae912a8@thread.skype --id 1540747442203","title":"Examples"},{"location":"cmd/teams/message/message-list/","text":"teams message list \u00b6 Lists all messages from a channel in a Microsoft Teams team Usage \u00b6 m365 teams message list [ options ] Options \u00b6 -i, --teamId <teamId> The ID of the team where the channel is located -c, --channelId <channelId> The ID of the channel for which to list messages -s, --since [since] Date (ISO standard, dash separator) to get delta of messages from (in last 8 months) -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 You can only retrieve a message from a Microsoft Teams team if you are a member of that team. Examples \u00b6 List the messages from a channel of the Microsoft Teams team m365 teams message list --teamId fce9e580-8bba-4638-ab5c-ab40016651e3 --channelId 19 :eb30973b42a847a2a1df92d91e37c76a@thread.skype List the messages from a channel of the Microsoft Teams team that have been created or modified since the date specified by the --since parameter (WARNING: only captures the last 8 months of data) m365 teams message list --teamId fce9e580-8bba-4638-ab5c-ab40016651e3 --channelId 19 :eb30973b42a847a2a1df92d91e37c76a@thread.skype --since 2019 -12-31T14:00:00Z","title":"message list"},{"location":"cmd/teams/message/message-list/#teams-message-list","text":"Lists all messages from a channel in a Microsoft Teams team","title":"teams message list"},{"location":"cmd/teams/message/message-list/#usage","text":"m365 teams message list [ options ]","title":"Usage"},{"location":"cmd/teams/message/message-list/#options","text":"-i, --teamId <teamId> The ID of the team where the channel is located -c, --channelId <channelId> The ID of the channel for which to list messages -s, --since [since] Date (ISO standard, dash separator) to get delta of messages from (in last 8 months) -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/teams/message/message-list/#remarks","text":"You can only retrieve a message from a Microsoft Teams team if you are a member of that team.","title":"Remarks"},{"location":"cmd/teams/message/message-list/#examples","text":"List the messages from a channel of the Microsoft Teams team m365 teams message list --teamId fce9e580-8bba-4638-ab5c-ab40016651e3 --channelId 19 :eb30973b42a847a2a1df92d91e37c76a@thread.skype List the messages from a channel of the Microsoft Teams team that have been created or modified since the date specified by the --since parameter (WARNING: only captures the last 8 months of data) m365 teams message list --teamId fce9e580-8bba-4638-ab5c-ab40016651e3 --channelId 19 :eb30973b42a847a2a1df92d91e37c76a@thread.skype --since 2019 -12-31T14:00:00Z","title":"Examples"},{"location":"cmd/teams/message/message-reply-list/","text":"teams message reply list \u00b6 Retrieves replies to a message from a channel in a Microsoft Teams team Usage \u00b6 m365 teams message reply list [ options ] Options \u00b6 -i, --teamId <teamId> The ID of the team where the channel is located -c, --channelId <channelId> The ID of the channel that contains the message -m, --messageId <messageId> The ID of the message to retrieve replies for -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 You can only retrieve replies to a message from a Microsoft Teams team if you are a member of that team. Examples \u00b6 Retrieve the replies from a specified message from a channel of the Microsoft Teams team m365 teams message reply list --teamId 5f5d7b71-1161-44d8-bcc1-3da710eb4171 --channelId 19 :88f7e66a8dfe42be92db19505ae912a8@thread.skype --messageId 1540747442203","title":"message reply list"},{"location":"cmd/teams/message/message-reply-list/#teams-message-reply-list","text":"Retrieves replies to a message from a channel in a Microsoft Teams team","title":"teams message reply list"},{"location":"cmd/teams/message/message-reply-list/#usage","text":"m365 teams message reply list [ options ]","title":"Usage"},{"location":"cmd/teams/message/message-reply-list/#options","text":"-i, --teamId <teamId> The ID of the team where the channel is located -c, --channelId <channelId> The ID of the channel that contains the message -m, --messageId <messageId> The ID of the message to retrieve replies for -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/teams/message/message-reply-list/#remarks","text":"You can only retrieve replies to a message from a Microsoft Teams team if you are a member of that team.","title":"Remarks"},{"location":"cmd/teams/message/message-reply-list/#examples","text":"Retrieve the replies from a specified message from a channel of the Microsoft Teams team m365 teams message reply list --teamId 5f5d7b71-1161-44d8-bcc1-3da710eb4171 --channelId 19 :88f7e66a8dfe42be92db19505ae912a8@thread.skype --messageId 1540747442203","title":"Examples"},{"location":"cmd/teams/messagingsettings/messagingsettings-list/","text":"teams messagingsettings list \u00b6 Lists messaging settings for a Microsoft Teams team Usage \u00b6 m365 teams messagingsettings list [ options ] Options \u00b6 -i, --teamId The ID of the team for which to get the messaging settings -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Get messaging settings for a Microsoft Teams team m365 teams messagingsettings list --teamId 2609af39-7775-4f94-a3dc-0dd67657e900","title":"messagingsettings list"},{"location":"cmd/teams/messagingsettings/messagingsettings-list/#teams-messagingsettings-list","text":"Lists messaging settings for a Microsoft Teams team","title":"teams messagingsettings list"},{"location":"cmd/teams/messagingsettings/messagingsettings-list/#usage","text":"m365 teams messagingsettings list [ options ]","title":"Usage"},{"location":"cmd/teams/messagingsettings/messagingsettings-list/#options","text":"-i, --teamId The ID of the team for which to get the messaging settings -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/teams/messagingsettings/messagingsettings-list/#examples","text":"Get messaging settings for a Microsoft Teams team m365 teams messagingsettings list --teamId 2609af39-7775-4f94-a3dc-0dd67657e900","title":"Examples"},{"location":"cmd/teams/messagingsettings/messagingsettings-set/","text":"teams messagingsettings set \u00b6 Updates messaging settings of a Microsoft Teams team Usage \u00b6 m365 teams messagingsettings set [ options ] Options \u00b6 -i, --teamId <teamId> The ID of the Microsoft Teams team for which to update messaging settings --allowUserEditMessages [allowUserEditMessages] Set to true to allow users to edit messages and to false to disallow it --allowUserDeleteMessages [allowUserDeleteMessages] Set to true to allow users to delete messages and to false to disallow it --allowOwnerDeleteMessages [allowOwnerDeleteMessages] Set to true to allow owner to delete messages and to false to disallow it --allowTeamMentions [allowTeamMentions] Set to true to allow @team or @[team name] mentions and to false to disallow it --allowChannelMentions [allowChannelMentions] Set to true to allow @channel or @[channel name] mentions and to false to disallow it -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Allow users to edit messages in channels m365 teams messagingsettings set --teamId '00000000-0000-0000-0000-000000000000' --allowUserEditMessages true Disallow users to delete messages in channels m365 teams messagingsettings set --teamId '00000000-0000-0000-0000-000000000000' --allowUserDeleteMessages false","title":"messagingsettings set"},{"location":"cmd/teams/messagingsettings/messagingsettings-set/#teams-messagingsettings-set","text":"Updates messaging settings of a Microsoft Teams team","title":"teams messagingsettings set"},{"location":"cmd/teams/messagingsettings/messagingsettings-set/#usage","text":"m365 teams messagingsettings set [ options ]","title":"Usage"},{"location":"cmd/teams/messagingsettings/messagingsettings-set/#options","text":"-i, --teamId <teamId> The ID of the Microsoft Teams team for which to update messaging settings --allowUserEditMessages [allowUserEditMessages] Set to true to allow users to edit messages and to false to disallow it --allowUserDeleteMessages [allowUserDeleteMessages] Set to true to allow users to delete messages and to false to disallow it --allowOwnerDeleteMessages [allowOwnerDeleteMessages] Set to true to allow owner to delete messages and to false to disallow it --allowTeamMentions [allowTeamMentions] Set to true to allow @team or @[team name] mentions and to false to disallow it --allowChannelMentions [allowChannelMentions] Set to true to allow @channel or @[channel name] mentions and to false to disallow it -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/teams/messagingsettings/messagingsettings-set/#examples","text":"Allow users to edit messages in channels m365 teams messagingsettings set --teamId '00000000-0000-0000-0000-000000000000' --allowUserEditMessages true Disallow users to delete messages in channels m365 teams messagingsettings set --teamId '00000000-0000-0000-0000-000000000000' --allowUserDeleteMessages false","title":"Examples"},{"location":"cmd/teams/report/report-deviceusagedistributionusercounts/","text":"teams report deviceusagedistributionusercounts \u00b6 Get the number of Microsoft Teams unique users by device type. Usage \u00b6 m365 teams report deviceusagedistributionusercounts [ options ] Options \u00b6 -p, --period <period> The length of time over which the report is aggregated. Supported values D7,D30,D90,D180 -f, --outputFile [outputFile] Path to the file where the Microsoft Teams unique users by device type report should be stored in -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Gets the number of Microsoft Teams unique users by device type for the last week m365 teams report deviceusagedistributionusercounts --period D7 Gets the number of Microsoft Teams unique users by device type for the last week and exports the report data in the specified path in text format m365 teams report deviceusagedistributionusercounts --period D7 --output text > \"deviceusagedistributionusercounts.txt\" Gets the number of Microsoft Teams unique users by device type for the last week and exports the report data in the specified path in json format m365 teams report deviceusagedistributionusercounts --period D7 --output json > \"deviceusagedistributionusercounts.json\"","title":"report deviceusagedistributionusercounts"},{"location":"cmd/teams/report/report-deviceusagedistributionusercounts/#teams-report-deviceusagedistributionusercounts","text":"Get the number of Microsoft Teams unique users by device type.","title":"teams report deviceusagedistributionusercounts"},{"location":"cmd/teams/report/report-deviceusagedistributionusercounts/#usage","text":"m365 teams report deviceusagedistributionusercounts [ options ]","title":"Usage"},{"location":"cmd/teams/report/report-deviceusagedistributionusercounts/#options","text":"-p, --period <period> The length of time over which the report is aggregated. Supported values D7,D30,D90,D180 -f, --outputFile [outputFile] Path to the file where the Microsoft Teams unique users by device type report should be stored in -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/teams/report/report-deviceusagedistributionusercounts/#examples","text":"Gets the number of Microsoft Teams unique users by device type for the last week m365 teams report deviceusagedistributionusercounts --period D7 Gets the number of Microsoft Teams unique users by device type for the last week and exports the report data in the specified path in text format m365 teams report deviceusagedistributionusercounts --period D7 --output text > \"deviceusagedistributionusercounts.txt\" Gets the number of Microsoft Teams unique users by device type for the last week and exports the report data in the specified path in json format m365 teams report deviceusagedistributionusercounts --period D7 --output json > \"deviceusagedistributionusercounts.json\"","title":"Examples"},{"location":"cmd/teams/report/report-deviceusageusercounts/","text":"teams report deviceusageusercounts \u00b6 Get the number of Microsoft Teams daily unique users by device type. Usage \u00b6 m365 teams report deviceusageusercounts [ options ] Options \u00b6 -p, --period <period> The length of time over which the report is aggregated. Supported values D7,D30,D90,D180 -f, --outputFile [outputFile] Path to the file where the Microsoft Teams daily unique users by device type report should be stored in -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Gets the number of Microsoft Teams daily unique users by device type for the last week m365 teams report deviceusageusercounts --period D7 Gets the number of Microsoft Teams daily unique users by device type for the last week and exports the report data in the specified path in text format m365 teams report deviceusageusercounts --period D7 --output text > \"deviceusageusercounts.txt\" Gets the number of Microsoft Teams daily unique users by device type for the last week and exports the report data in the specified path in json format m365 teams report deviceusageusercounts --period D7 --output json > \"deviceusageusercounts.json\"","title":"report deviceusageusercounts"},{"location":"cmd/teams/report/report-deviceusageusercounts/#teams-report-deviceusageusercounts","text":"Get the number of Microsoft Teams daily unique users by device type.","title":"teams report deviceusageusercounts"},{"location":"cmd/teams/report/report-deviceusageusercounts/#usage","text":"m365 teams report deviceusageusercounts [ options ]","title":"Usage"},{"location":"cmd/teams/report/report-deviceusageusercounts/#options","text":"-p, --period <period> The length of time over which the report is aggregated. Supported values D7,D30,D90,D180 -f, --outputFile [outputFile] Path to the file where the Microsoft Teams daily unique users by device type report should be stored in -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/teams/report/report-deviceusageusercounts/#examples","text":"Gets the number of Microsoft Teams daily unique users by device type for the last week m365 teams report deviceusageusercounts --period D7 Gets the number of Microsoft Teams daily unique users by device type for the last week and exports the report data in the specified path in text format m365 teams report deviceusageusercounts --period D7 --output text > \"deviceusageusercounts.txt\" Gets the number of Microsoft Teams daily unique users by device type for the last week and exports the report data in the specified path in json format m365 teams report deviceusageusercounts --period D7 --output json > \"deviceusageusercounts.json\"","title":"Examples"},{"location":"cmd/teams/report/report-deviceusageuserdetail/","text":"teams report deviceusageuserdetail \u00b6 Gets detail about Microsoft Teams device usage by user. Usage \u00b6 m365 teams report deviceusageuserdetail [ options ] Options \u00b6 -p, --period [period] The length of time over which the report is aggregated. Supported values D7,D30,D90,D180 -d, --date [date] The date for which you would like to view the users who performed any activity. Supported date format is YYYY-MM-DD . -f, --outputFile [outputFile] Path to the file where the Microsoft Teams device usage by user report should be stored in -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 As this report is only available for the past 28 days, date parameter value should be a date from that range. Examples \u00b6 Gets information about Microsoft Teams device usage by user for the last week m365 teams report deviceusageuserdetail --period D7 Gets information about Microsoft Teams device usage by user for July 1, 2019 m365 teams report deviceusageuserdetail --date 2019 -07-01 Gets information about Microsoft Teams device usage by user for the last week and exports the report data in the specified path in text format m365 teams report deviceusageuserdetail --period D7 --output text > \"deviceusageuserdetail.txt\" Gets information about Microsoft Teams device usage by user for the last week and exports the report data in the specified path in json format m365 teams report deviceusageuserdetail --period D7 --output json > \"deviceusageuserdetail.json\"","title":"report deviceusageuserdetail"},{"location":"cmd/teams/report/report-deviceusageuserdetail/#teams-report-deviceusageuserdetail","text":"Gets detail about Microsoft Teams device usage by user.","title":"teams report deviceusageuserdetail"},{"location":"cmd/teams/report/report-deviceusageuserdetail/#usage","text":"m365 teams report deviceusageuserdetail [ options ]","title":"Usage"},{"location":"cmd/teams/report/report-deviceusageuserdetail/#options","text":"-p, --period [period] The length of time over which the report is aggregated. Supported values D7,D30,D90,D180 -d, --date [date] The date for which you would like to view the users who performed any activity. Supported date format is YYYY-MM-DD . -f, --outputFile [outputFile] Path to the file where the Microsoft Teams device usage by user report should be stored in -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/teams/report/report-deviceusageuserdetail/#remarks","text":"As this report is only available for the past 28 days, date parameter value should be a date from that range.","title":"Remarks"},{"location":"cmd/teams/report/report-deviceusageuserdetail/#examples","text":"Gets information about Microsoft Teams device usage by user for the last week m365 teams report deviceusageuserdetail --period D7 Gets information about Microsoft Teams device usage by user for July 1, 2019 m365 teams report deviceusageuserdetail --date 2019 -07-01 Gets information about Microsoft Teams device usage by user for the last week and exports the report data in the specified path in text format m365 teams report deviceusageuserdetail --period D7 --output text > \"deviceusageuserdetail.txt\" Gets information about Microsoft Teams device usage by user for the last week and exports the report data in the specified path in json format m365 teams report deviceusageuserdetail --period D7 --output json > \"deviceusageuserdetail.json\"","title":"Examples"},{"location":"cmd/teams/report/report-directroutingcalls/","text":"teams report directroutingcalls \u00b6 Get details about direct routing calls made within a given time period Usage \u00b6 m365 teams report directroutingcalls [ options ] Options \u00b6 --fromDateTime <fromDateTime> The start of time range to query. UTC, inclusive --toDateTime [toDateTime] The end time range to query. UTC, inclusive. Defaults to today if omitted -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 This command only works with app-only permissions. You will need to create your own Azure AD app with CallRecords.Read.All permission assigned. Instructions on how to create your own Azure AD app can be found at Using your own Azure AD identity The difference between fromDateTime and toDateTime cannot exceed a period of 90 days Examples \u00b6 Get details about direct routing calls made between 2020-10-31 and today m365 teams report directroutingcalls --fromDateTime 2020 -10-31 Get details about direct routing calls made between 2020-10-31 and 2020-12-31 and exports the report data in the specified path in text format m365 teams report directroutingcalls --fromDateTime 2020 -10-31 --toDateTime 2020 -12-31 --output text > \"directroutingcalls.txt\" Get details about direct routing calls made between 2020-10-31 and 2020-12-31 and exports the report data in the specified path in json format m365 teams report directroutingcalls --fromDateTime 2020 -10-31 --toDateTime 2020 -12-31 --output json > \"directroutingcalls.json\"","title":"report directroutingcalls"},{"location":"cmd/teams/report/report-directroutingcalls/#teams-report-directroutingcalls","text":"Get details about direct routing calls made within a given time period","title":"teams report directroutingcalls"},{"location":"cmd/teams/report/report-directroutingcalls/#usage","text":"m365 teams report directroutingcalls [ options ]","title":"Usage"},{"location":"cmd/teams/report/report-directroutingcalls/#options","text":"--fromDateTime <fromDateTime> The start of time range to query. UTC, inclusive --toDateTime [toDateTime] The end time range to query. UTC, inclusive. Defaults to today if omitted -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/teams/report/report-directroutingcalls/#remarks","text":"This command only works with app-only permissions. You will need to create your own Azure AD app with CallRecords.Read.All permission assigned. Instructions on how to create your own Azure AD app can be found at Using your own Azure AD identity The difference between fromDateTime and toDateTime cannot exceed a period of 90 days","title":"Remarks"},{"location":"cmd/teams/report/report-directroutingcalls/#examples","text":"Get details about direct routing calls made between 2020-10-31 and today m365 teams report directroutingcalls --fromDateTime 2020 -10-31 Get details about direct routing calls made between 2020-10-31 and 2020-12-31 and exports the report data in the specified path in text format m365 teams report directroutingcalls --fromDateTime 2020 -10-31 --toDateTime 2020 -12-31 --output text > \"directroutingcalls.txt\" Get details about direct routing calls made between 2020-10-31 and 2020-12-31 and exports the report data in the specified path in json format m365 teams report directroutingcalls --fromDateTime 2020 -10-31 --toDateTime 2020 -12-31 --output json > \"directroutingcalls.json\"","title":"Examples"},{"location":"cmd/teams/report/report-pstncalls/","text":"teams report pstncalls \u00b6 Get details about PSTN calls made within a given time period Usage \u00b6 m365 teams report pstncalls [ options ] Options \u00b6 --fromDateTime <fromDateTime> The start of time range to query. UTC, inclusive --toDateTime [toDateTime] The end time range to query. UTC, inclusive. Defaults to today if omitted -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 This command only works with app-only permissions. You will need to create your own Azure AD app with CallRecords.Read.All permission assigned. Instructions on how to create your own Azure AD app can be found at Using your own Azure AD identity The difference between fromDateTime and toDateTime cannot exceed a period of 90 days Examples \u00b6 Get details about PSTN calls made between 2020-10-31 and today m365 teams report pstncalls --fromDateTime 2020 -10-31 Get details about PSTN calls made between 2020-10-31 and 2020-12-31 and exports the report data in the specified path in text format m365 teams report pstncalls --fromDateTime 2020 -10-31 --toDateTime 2020 -12-31 --output text > \"pstncalls.txt\" Get details about PSTN calls made between 2020-10-31 and 2020-12-31 and exports the report data in the specified path in json format m365 teams report pstncalls --fromDateTime 2020 -10-31 --toDateTime 2020 -12-31 --output json > \"pstncalls.json\" More information \u00b6 List PSTN calls: https://docs.microsoft.com/en-us/graph/api/callrecords-callrecord-getpstncalls?view=graph-rest-1.0","title":"report pstncalls"},{"location":"cmd/teams/report/report-pstncalls/#teams-report-pstncalls","text":"Get details about PSTN calls made within a given time period","title":"teams report pstncalls"},{"location":"cmd/teams/report/report-pstncalls/#usage","text":"m365 teams report pstncalls [ options ]","title":"Usage"},{"location":"cmd/teams/report/report-pstncalls/#options","text":"--fromDateTime <fromDateTime> The start of time range to query. UTC, inclusive --toDateTime [toDateTime] The end time range to query. UTC, inclusive. Defaults to today if omitted -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/teams/report/report-pstncalls/#remarks","text":"This command only works with app-only permissions. You will need to create your own Azure AD app with CallRecords.Read.All permission assigned. Instructions on how to create your own Azure AD app can be found at Using your own Azure AD identity The difference between fromDateTime and toDateTime cannot exceed a period of 90 days","title":"Remarks"},{"location":"cmd/teams/report/report-pstncalls/#examples","text":"Get details about PSTN calls made between 2020-10-31 and today m365 teams report pstncalls --fromDateTime 2020 -10-31 Get details about PSTN calls made between 2020-10-31 and 2020-12-31 and exports the report data in the specified path in text format m365 teams report pstncalls --fromDateTime 2020 -10-31 --toDateTime 2020 -12-31 --output text > \"pstncalls.txt\" Get details about PSTN calls made between 2020-10-31 and 2020-12-31 and exports the report data in the specified path in json format m365 teams report pstncalls --fromDateTime 2020 -10-31 --toDateTime 2020 -12-31 --output json > \"pstncalls.json\"","title":"Examples"},{"location":"cmd/teams/report/report-pstncalls/#more-information","text":"List PSTN calls: https://docs.microsoft.com/en-us/graph/api/callrecords-callrecord-getpstncalls?view=graph-rest-1.0","title":"More information"},{"location":"cmd/teams/report/report-useractivitycounts/","text":"teams report useractivitycounts \u00b6 Get the number of Microsoft Teams activities by activity type. The activity types are team chat messages, private chat messages, calls, and meetings. Usage \u00b6 m365 teams report useractivitycounts [ options ] Options \u00b6 -p, --period <period> The length of time over which the report is aggregated. Supported values D7,D30,D90,D180 -f, --outputFile [outputFile] Path to the file where the Microsoft Teams activities by activity type report should be stored in -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Gets the number of Microsoft Teams activities by activity type for the last week m365 teams report useractivitycounts --period D7 Gets the number of Microsoft Teams activities by activity type for the last week and exports the report data in the specified path in text format m365 teams report useractivitycounts --period D7 --output text > \"useractivitycounts.txt\" Gets the number of Microsoft Teams activities by activity type for the last week and exports the report data in the specified path in json format m365 teams report useractivitycounts --period D7 --output json > \"useractivitycounts.json\"","title":"report useractivitycounts"},{"location":"cmd/teams/report/report-useractivitycounts/#teams-report-useractivitycounts","text":"Get the number of Microsoft Teams activities by activity type. The activity types are team chat messages, private chat messages, calls, and meetings.","title":"teams report useractivitycounts"},{"location":"cmd/teams/report/report-useractivitycounts/#usage","text":"m365 teams report useractivitycounts [ options ]","title":"Usage"},{"location":"cmd/teams/report/report-useractivitycounts/#options","text":"-p, --period <period> The length of time over which the report is aggregated. Supported values D7,D30,D90,D180 -f, --outputFile [outputFile] Path to the file where the Microsoft Teams activities by activity type report should be stored in -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/teams/report/report-useractivitycounts/#examples","text":"Gets the number of Microsoft Teams activities by activity type for the last week m365 teams report useractivitycounts --period D7 Gets the number of Microsoft Teams activities by activity type for the last week and exports the report data in the specified path in text format m365 teams report useractivitycounts --period D7 --output text > \"useractivitycounts.txt\" Gets the number of Microsoft Teams activities by activity type for the last week and exports the report data in the specified path in json format m365 teams report useractivitycounts --period D7 --output json > \"useractivitycounts.json\"","title":"Examples"},{"location":"cmd/teams/report/report-useractivityusercounts/","text":"teams report useractivityusercounts \u00b6 Get the number of Microsoft Teams users by activity type. The activity types are number of teams chat messages, private chat messages, calls, or meetings. Usage \u00b6 m365 teams report useractivityusercounts [ options ] Options \u00b6 -p, --period <period> The length of time over which the report is aggregated. Supported values D7,D30,D90,D180 -f, --outputFile [outputFile] Path to the file where the Microsoft Teams users by activity type report should be stored in -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Gets the number of Microsoft Teams users by activity type for the last week m365 teams report useractivityusercounts --period D7 Gets the number of Microsoft Teams users by activity type for the last week and exports the report data in the specified path in text format m365 teams report useractivityusercounts --period D7 --output text > \"useractivityusercounts.txt\" Gets the number of Microsoft Teams users by activity type for the last week and exports the report data in the specified path in json format m365 teams report useractivityusercounts --period D7 --output json > \"useractivityusercounts.json\"","title":"report useractivityusercounts"},{"location":"cmd/teams/report/report-useractivityusercounts/#teams-report-useractivityusercounts","text":"Get the number of Microsoft Teams users by activity type. The activity types are number of teams chat messages, private chat messages, calls, or meetings.","title":"teams report useractivityusercounts"},{"location":"cmd/teams/report/report-useractivityusercounts/#usage","text":"m365 teams report useractivityusercounts [ options ]","title":"Usage"},{"location":"cmd/teams/report/report-useractivityusercounts/#options","text":"-p, --period <period> The length of time over which the report is aggregated. Supported values D7,D30,D90,D180 -f, --outputFile [outputFile] Path to the file where the Microsoft Teams users by activity type report should be stored in -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/teams/report/report-useractivityusercounts/#examples","text":"Gets the number of Microsoft Teams users by activity type for the last week m365 teams report useractivityusercounts --period D7 Gets the number of Microsoft Teams users by activity type for the last week and exports the report data in the specified path in text format m365 teams report useractivityusercounts --period D7 --output text > \"useractivityusercounts.txt\" Gets the number of Microsoft Teams users by activity type for the last week and exports the report data in the specified path in json format m365 teams report useractivityusercounts --period D7 --output json > \"useractivityusercounts.json\"","title":"Examples"},{"location":"cmd/teams/report/report-useractivityuserdetail/","text":"teams report useractivityuserdetail \u00b6 Get details about Microsoft Teams user activity by user. Usage \u00b6 m365 teams report useractivityuserdetail [ options ] Options \u00b6 -p, --period [period] The length of time over which the report is aggregated. Supported values D7,D30,D90,D180 . Specify the period or date , but not both. -d, --date [date] The date for which you would like to view the users who performed any activity. Supported date format is YYYY-MM-DD . Specify the date or period , but not both. -f, --outputFile [outputFile] Path to the file where the Microsoft Teams user activity by user report should be stored in -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Gets details about Microsoft Teams user activity by user for the last week m365 teams report useractivityuserdetail --period D7 Gets details about Microsoft Teams user activity by user for July 13, 2019 m365 teams report useractivityuserdetail --date 2019 -07-13 Gets details about Microsoft Teams user activity by user for the last week and exports the report data in the specified path in text format m365 teams report useractivityuserdetail --period D7 --output text > \"useractivityuserdetail.txt\" Gets details about Microsoft Teams user activity by user for the last week and exports the report data in the specified path in json format m365 teams report useractivityuserdetail --period D7 --output json > \"useractivityuserdetail.json\"","title":"report useractivityuserdetail"},{"location":"cmd/teams/report/report-useractivityuserdetail/#teams-report-useractivityuserdetail","text":"Get details about Microsoft Teams user activity by user.","title":"teams report useractivityuserdetail"},{"location":"cmd/teams/report/report-useractivityuserdetail/#usage","text":"m365 teams report useractivityuserdetail [ options ]","title":"Usage"},{"location":"cmd/teams/report/report-useractivityuserdetail/#options","text":"-p, --period [period] The length of time over which the report is aggregated. Supported values D7,D30,D90,D180 . Specify the period or date , but not both. -d, --date [date] The date for which you would like to view the users who performed any activity. Supported date format is YYYY-MM-DD . Specify the date or period , but not both. -f, --outputFile [outputFile] Path to the file where the Microsoft Teams user activity by user report should be stored in -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/teams/report/report-useractivityuserdetail/#examples","text":"Gets details about Microsoft Teams user activity by user for the last week m365 teams report useractivityuserdetail --period D7 Gets details about Microsoft Teams user activity by user for July 13, 2019 m365 teams report useractivityuserdetail --date 2019 -07-13 Gets details about Microsoft Teams user activity by user for the last week and exports the report data in the specified path in text format m365 teams report useractivityuserdetail --period D7 --output text > \"useractivityuserdetail.txt\" Gets details about Microsoft Teams user activity by user for the last week and exports the report data in the specified path in json format m365 teams report useractivityuserdetail --period D7 --output json > \"useractivityuserdetail.json\"","title":"Examples"},{"location":"cmd/teams/tab/tab-add/","text":"teams tab add \u00b6 Add a tab to the specified channel Usage \u00b6 m365 teams tab add [ options ] Options \u00b6 -i, --teamId <teamId> The ID of the team to where the channel exists -c, --channelId <channelId> The ID of the channel to add a tab to --appId <appId> The ID of the Teams app that contains the Tab --appName <appName> The name of the Teams app that contains the Tab --contentUrl <contentUrl> The URL used for rendering Tab contents --entityId [entityId] A unique identifier for the Tab --removeUrl [removeUrl] The URL displayed when a Tab is removed --websiteUrl [websiteUrl] The URL for showing tab contents outside of Teams -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 The corresponding app must already be installed in the team. Examples \u00b6 Add teams tab for website m365 teams tab add --teamId 00000000 -0000-0000-0000-000000000000 --channelId 19 :00000000000000000000000000000000@thread.skype --appId 06805b9e-77e3-4b93-ac81-525eb87513b8 --appName 'My Contoso Tab' --contentUrl 'https://www.contoso.com/Orders/2DCA2E6C7A10415CAF6B8AB6661B3154/tabView' Add teams tab for website with additional configuration which is unknown m365 teams tab add --teamId 00000000 -0000-0000-0000-000000000000 --channelId 19 :00000000000000000000000000000000@thread.skype --appId 06805b9e-77e3-4b93-ac81-525eb87513b8 --appName 'My Contoso Tab' --contentUrl 'https://www.contoso.com/Orders/2DCA2E6C7A10415CAF6B8AB6661B3154/tabView' --test1 'value for test1'","title":"tab add"},{"location":"cmd/teams/tab/tab-add/#teams-tab-add","text":"Add a tab to the specified channel","title":"teams tab add"},{"location":"cmd/teams/tab/tab-add/#usage","text":"m365 teams tab add [ options ]","title":"Usage"},{"location":"cmd/teams/tab/tab-add/#options","text":"-i, --teamId <teamId> The ID of the team to where the channel exists -c, --channelId <channelId> The ID of the channel to add a tab to --appId <appId> The ID of the Teams app that contains the Tab --appName <appName> The name of the Teams app that contains the Tab --contentUrl <contentUrl> The URL used for rendering Tab contents --entityId [entityId] A unique identifier for the Tab --removeUrl [removeUrl] The URL displayed when a Tab is removed --websiteUrl [websiteUrl] The URL for showing tab contents outside of Teams -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/teams/tab/tab-add/#remarks","text":"The corresponding app must already be installed in the team.","title":"Remarks"},{"location":"cmd/teams/tab/tab-add/#examples","text":"Add teams tab for website m365 teams tab add --teamId 00000000 -0000-0000-0000-000000000000 --channelId 19 :00000000000000000000000000000000@thread.skype --appId 06805b9e-77e3-4b93-ac81-525eb87513b8 --appName 'My Contoso Tab' --contentUrl 'https://www.contoso.com/Orders/2DCA2E6C7A10415CAF6B8AB6661B3154/tabView' Add teams tab for website with additional configuration which is unknown m365 teams tab add --teamId 00000000 -0000-0000-0000-000000000000 --channelId 19 :00000000000000000000000000000000@thread.skype --appId 06805b9e-77e3-4b93-ac81-525eb87513b8 --appName 'My Contoso Tab' --contentUrl 'https://www.contoso.com/Orders/2DCA2E6C7A10415CAF6B8AB6661B3154/tabView' --test1 'value for test1'","title":"Examples"},{"location":"cmd/teams/tab/tab-get/","text":"teams tab get \u00b6 Gets information about the specified Microsoft Teams tab Usage \u00b6 m365 teams tab get [ options ] Options \u00b6 --teamId [teamId] The ID of the Microsoft Teams team where the tab is located. Specify either teamId or teamName but not both --teamName [teamName] The display name of the Microsoft Teams team where the tab is located. Specify either teamId or teamName but not both --channelId [channelId] The ID of the Microsoft Teams channel where the tab is located. Specify either channelId or channelName but not both --channelName [channelName] The display name of the Microsoft Teams channel where the tab is located. Specify either channelId or channelName but not both -i, --id [id] The ID of the Microsoft Teams tab. Specify either id or name but not both -n, --name [name] The display name of the Microsoft Teams tab. Specify either id or name but not both -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 You can only retrieve tabs for teams of which you are a member. Examples \u00b6 Get a Microsoft Teams Tab with ID 1432c9da-8b9c-4602-9248-e0800f3e3f07 m365 teams tab get --teamId 00000000 -0000-0000-0000-000000000000 --channelId 19 :00000000000000000000000000000000@thread.skype --id 1432c9da-8b9c-4602-9248-e0800f3e3f07 Get a Microsoft Teams Tab with name Tab Name m365 teams tab get --teamName \"Team Name\" --channelName \"Channel Name\" --name \"Tab Name\"","title":"tab get"},{"location":"cmd/teams/tab/tab-get/#teams-tab-get","text":"Gets information about the specified Microsoft Teams tab","title":"teams tab get"},{"location":"cmd/teams/tab/tab-get/#usage","text":"m365 teams tab get [ options ]","title":"Usage"},{"location":"cmd/teams/tab/tab-get/#options","text":"--teamId [teamId] The ID of the Microsoft Teams team where the tab is located. Specify either teamId or teamName but not both --teamName [teamName] The display name of the Microsoft Teams team where the tab is located. Specify either teamId or teamName but not both --channelId [channelId] The ID of the Microsoft Teams channel where the tab is located. Specify either channelId or channelName but not both --channelName [channelName] The display name of the Microsoft Teams channel where the tab is located. Specify either channelId or channelName but not both -i, --id [id] The ID of the Microsoft Teams tab. Specify either id or name but not both -n, --name [name] The display name of the Microsoft Teams tab. Specify either id or name but not both -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/teams/tab/tab-get/#remarks","text":"You can only retrieve tabs for teams of which you are a member.","title":"Remarks"},{"location":"cmd/teams/tab/tab-get/#examples","text":"Get a Microsoft Teams Tab with ID 1432c9da-8b9c-4602-9248-e0800f3e3f07 m365 teams tab get --teamId 00000000 -0000-0000-0000-000000000000 --channelId 19 :00000000000000000000000000000000@thread.skype --id 1432c9da-8b9c-4602-9248-e0800f3e3f07 Get a Microsoft Teams Tab with name Tab Name m365 teams tab get --teamName \"Team Name\" --channelName \"Channel Name\" --name \"Tab Name\"","title":"Examples"},{"location":"cmd/teams/tab/tab-list/","text":"teams tab list \u00b6 Lists tabs in the specified Microsoft Teams channel Usage \u00b6 m365 teams tab list [ options ] Options \u00b6 -i, --teamId <teamId> The ID of the Microsoft Teams team where the channel is located -c, --channelId <channelId> The ID of the channel for which to list tabs -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 You can only retrieve tabs for teams of which you are a member. Tabs Conversations and Files are present in every team and therefore not included in the list of available tabs. Examples \u00b6 List all tabs in a Microsoft Teams channel m365 teams tab list --teamId 00000000 -0000-0000-0000-000000000000 --channelId 19 :00000000000000000000000000000000@thread.skype Include all the values from the tab configuration and associated teams app m365 teams tab list --teamId 00000000 -0000-0000-0000-000000000000 --channelId 19 :00000000000000000000000000000000@thread.skype --output json","title":"tab list"},{"location":"cmd/teams/tab/tab-list/#teams-tab-list","text":"Lists tabs in the specified Microsoft Teams channel","title":"teams tab list"},{"location":"cmd/teams/tab/tab-list/#usage","text":"m365 teams tab list [ options ]","title":"Usage"},{"location":"cmd/teams/tab/tab-list/#options","text":"-i, --teamId <teamId> The ID of the Microsoft Teams team where the channel is located -c, --channelId <channelId> The ID of the channel for which to list tabs -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/teams/tab/tab-list/#remarks","text":"You can only retrieve tabs for teams of which you are a member. Tabs Conversations and Files are present in every team and therefore not included in the list of available tabs.","title":"Remarks"},{"location":"cmd/teams/tab/tab-list/#examples","text":"List all tabs in a Microsoft Teams channel m365 teams tab list --teamId 00000000 -0000-0000-0000-000000000000 --channelId 19 :00000000000000000000000000000000@thread.skype Include all the values from the tab configuration and associated teams app m365 teams tab list --teamId 00000000 -0000-0000-0000-000000000000 --channelId 19 :00000000000000000000000000000000@thread.skype --output json","title":"Examples"},{"location":"cmd/teams/tab/tab-remove/","text":"teams tab remove \u00b6 Removes a tab from the specified channel Usage \u00b6 m365 teams tab remove [ options ] Options \u00b6 -t, --teamId <teamId> The ID of the team where the tab exists -c, --channelId <channelId> The ID of the channel to remove the tab from -i, --id <id> The ID of the tab to remove --confirm Don't prompt for confirmation -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Removes a tab from the specified channel. Will prompt for confirmation m365 teams tab remove --teamId 00000000 -0000-0000-0000-000000000000 --channelId 19 :00000000000000000000000000000000@thread.skype --id 06805b9e-77e3-4b93-ac81-525eb87513b8 Removes a tab from the specified channel without prompting for confirmation m365 teams tab remove --teamId 00000000 -0000-0000-0000-000000000000 --channelId 19 :00000000000000000000000000000000@thread.skype --id 06805b9e-77e3-4b93-ac81-525eb87513b8 --confirm Additional information \u00b6 Delete tab from channel: https://docs.microsoft.com/en-us/graph/api/teamstab-delete?view=graph-rest-1.0","title":"tab remove"},{"location":"cmd/teams/tab/tab-remove/#teams-tab-remove","text":"Removes a tab from the specified channel","title":"teams tab remove"},{"location":"cmd/teams/tab/tab-remove/#usage","text":"m365 teams tab remove [ options ]","title":"Usage"},{"location":"cmd/teams/tab/tab-remove/#options","text":"-t, --teamId <teamId> The ID of the team where the tab exists -c, --channelId <channelId> The ID of the channel to remove the tab from -i, --id <id> The ID of the tab to remove --confirm Don't prompt for confirmation -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/teams/tab/tab-remove/#examples","text":"Removes a tab from the specified channel. Will prompt for confirmation m365 teams tab remove --teamId 00000000 -0000-0000-0000-000000000000 --channelId 19 :00000000000000000000000000000000@thread.skype --id 06805b9e-77e3-4b93-ac81-525eb87513b8 Removes a tab from the specified channel without prompting for confirmation m365 teams tab remove --teamId 00000000 -0000-0000-0000-000000000000 --channelId 19 :00000000000000000000000000000000@thread.skype --id 06805b9e-77e3-4b93-ac81-525eb87513b8 --confirm","title":"Examples"},{"location":"cmd/teams/tab/tab-remove/#additional-information","text":"Delete tab from channel: https://docs.microsoft.com/en-us/graph/api/teamstab-delete?view=graph-rest-1.0","title":"Additional information"},{"location":"cmd/teams/team/team-add/","text":"teams team add \u00b6 Adds a new Microsoft Teams team Usage \u00b6 m365 teams team add [ options ] Options \u00b6 -n, --name [name] Display name for the Microsoft Teams team. Required if template not supplied -d, --description [description] Description for the Microsoft Teams team. Required if template not supplied --template [template] Template to use to create the team. If name or description are supplied, these take precedence over the template values --wait Wait for the team to be provisioned before completing the command -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 If you want to add a Team to an existing Microsoft 365 Group use the aad o365group teamify command instead. This command will return different responses based on the presence of the --wait option. If present, the command will return a group resource in the response. If not present, the command will return a teamsAsyncOperation resource in the response. Examples \u00b6 Add a new Microsoft Teams team m365 teams team add --name \"Architecture\" --description \"Architecture Discussion\" Add a new Microsoft Teams team using a template from a file m365 teams team add --name \"Architecture\" --description \"Architecture Discussion\" --template @template.json Add a new Microsoft Teams team using a template and wait for the team to be provisioned m365 teams team add --name \"Architecture\" --description \"Architecture Discussion\" --template @template.json --wait More information \u00b6 Get started with Teams templates: https://docs.microsoft.com/MicrosoftTeams/get-started-with-teams-templates group resource type: https://docs.microsoft.com/graph/api/resources/group?view=graph-rest-1.0 teamsAsyncOperation resource type: https://docs.microsoft.com/graph/api/resources/teamsasyncoperation?view=graph-rest-1.0","title":"team add"},{"location":"cmd/teams/team/team-add/#teams-team-add","text":"Adds a new Microsoft Teams team","title":"teams team add"},{"location":"cmd/teams/team/team-add/#usage","text":"m365 teams team add [ options ]","title":"Usage"},{"location":"cmd/teams/team/team-add/#options","text":"-n, --name [name] Display name for the Microsoft Teams team. Required if template not supplied -d, --description [description] Description for the Microsoft Teams team. Required if template not supplied --template [template] Template to use to create the team. If name or description are supplied, these take precedence over the template values --wait Wait for the team to be provisioned before completing the command -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/teams/team/team-add/#remarks","text":"If you want to add a Team to an existing Microsoft 365 Group use the aad o365group teamify command instead. This command will return different responses based on the presence of the --wait option. If present, the command will return a group resource in the response. If not present, the command will return a teamsAsyncOperation resource in the response.","title":"Remarks"},{"location":"cmd/teams/team/team-add/#examples","text":"Add a new Microsoft Teams team m365 teams team add --name \"Architecture\" --description \"Architecture Discussion\" Add a new Microsoft Teams team using a template from a file m365 teams team add --name \"Architecture\" --description \"Architecture Discussion\" --template @template.json Add a new Microsoft Teams team using a template and wait for the team to be provisioned m365 teams team add --name \"Architecture\" --description \"Architecture Discussion\" --template @template.json --wait","title":"Examples"},{"location":"cmd/teams/team/team-add/#more-information","text":"Get started with Teams templates: https://docs.microsoft.com/MicrosoftTeams/get-started-with-teams-templates group resource type: https://docs.microsoft.com/graph/api/resources/group?view=graph-rest-1.0 teamsAsyncOperation resource type: https://docs.microsoft.com/graph/api/resources/teamsasyncoperation?view=graph-rest-1.0","title":"More information"},{"location":"cmd/teams/team/team-archive/","text":"teams team archive \u00b6 Archives specified Microsoft Teams team Usage \u00b6 m365 teams team archive [ options ] Options \u00b6 -i, --id [id] The ID of the Microsoft Teams team to archive. Specify either id or name but not both -n, --name [name] The display name of the Microsoft Teams team to archive. Specify either id or name but not both --shouldSetSpoSiteReadOnlyForMembers Sets the permissions for team members to read-only on the SharePoint Online site associated with the team -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 Using this command, global admins and Microsoft Teams service admins can access teams that they are not a member of. If the command finds multiple Microsoft Teams teams with the specified name, it will prompt you to disambiguate which team it should use, listing the discovered team IDs. When a team is archived, users can no longer send or like messages on any channel in the team, edit the team's name, description, or other settings, or in general make most changes to the team. Membership changes to the team continue to be allowed. Examples \u00b6 Archive the specified Microsoft Teams team with id 6f6fd3f7-9ba5-4488-bbe6-a789004d0d55 m365 teams team archive --id 6f6fd3f7-9ba5-4488-bbe6-a789004d0d55 Archive the specified Microsoft Teams team with name Team Name m365 teams team archive --name \"Team Name\" Archive the specified Microsoft Teams team and set permissions for team members to read-only on the SharePoint Online site associated with the team m365 teams team archive --id 6f6fd3f7-9ba5-4488-bbe6-a789004d0d55 --shouldSetSpoSiteReadOnlyForMembers","title":"team archive"},{"location":"cmd/teams/team/team-archive/#teams-team-archive","text":"Archives specified Microsoft Teams team","title":"teams team archive"},{"location":"cmd/teams/team/team-archive/#usage","text":"m365 teams team archive [ options ]","title":"Usage"},{"location":"cmd/teams/team/team-archive/#options","text":"-i, --id [id] The ID of the Microsoft Teams team to archive. Specify either id or name but not both -n, --name [name] The display name of the Microsoft Teams team to archive. Specify either id or name but not both --shouldSetSpoSiteReadOnlyForMembers Sets the permissions for team members to read-only on the SharePoint Online site associated with the team -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/teams/team/team-archive/#remarks","text":"Using this command, global admins and Microsoft Teams service admins can access teams that they are not a member of. If the command finds multiple Microsoft Teams teams with the specified name, it will prompt you to disambiguate which team it should use, listing the discovered team IDs. When a team is archived, users can no longer send or like messages on any channel in the team, edit the team's name, description, or other settings, or in general make most changes to the team. Membership changes to the team continue to be allowed.","title":"Remarks"},{"location":"cmd/teams/team/team-archive/#examples","text":"Archive the specified Microsoft Teams team with id 6f6fd3f7-9ba5-4488-bbe6-a789004d0d55 m365 teams team archive --id 6f6fd3f7-9ba5-4488-bbe6-a789004d0d55 Archive the specified Microsoft Teams team with name Team Name m365 teams team archive --name \"Team Name\" Archive the specified Microsoft Teams team and set permissions for team members to read-only on the SharePoint Online site associated with the team m365 teams team archive --id 6f6fd3f7-9ba5-4488-bbe6-a789004d0d55 --shouldSetSpoSiteReadOnlyForMembers","title":"Examples"},{"location":"cmd/teams/team/team-clone/","text":"teams team clone \u00b6 Creates a clone of a Microsoft Teams team Usage \u00b6 m365 teams team clone [ options ] Options \u00b6 -i, --id [id] The ID of the Microsoft Teams team to clone -n, --name [name] The display name for the new Microsoft Teams Team to clone -p, --partsToClone <partsToClone> A comma-separated list of the parts to clone. Allowed values are apps,channels,members,settings,tabs -d, --description [description] The description for the new Microsoft Teams Team -c, --classification [classification] The classification for the new Microsoft Teams Team. If not specified, will be copied from the original Microsoft Teams Team -v, --visibility [visibility] Specify the visibility of the new Microsoft Teams Team. Allowed values are Private,Public . -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 Using this command, global admins and Microsoft Teams service admins can access teams that they are not a member of. When tabs are cloned, they are put into an unconfigured state. The first time you open them, you'll go through the configuration screen. If the person opening the tab does not have permission to configure apps, they will see a message explaining that the tab hasn't been configured. Examples \u00b6 Creates a clone of a Microsoft Teams team with mandatory parameters m365 teams team clone --id 15d7a78e-fd77-4599-97a5-dbb6372846c5 --name \"Library Assist\" --partsToClone \"apps,tabs,settings,channels,members\" Creates a clone of a Microsoft Teams team with mandatory and optional parameters m365 teams team clone --id 15d7a78e-fd77-4599-97a5-dbb6372846c5 --name \"Library Assist\" --partsToClone \"apps,tabs,settings,channels,members\" --description \"Self help community for library\" --classification \"Library\" --visibility \"public\"","title":"team clone"},{"location":"cmd/teams/team/team-clone/#teams-team-clone","text":"Creates a clone of a Microsoft Teams team","title":"teams team clone"},{"location":"cmd/teams/team/team-clone/#usage","text":"m365 teams team clone [ options ]","title":"Usage"},{"location":"cmd/teams/team/team-clone/#options","text":"-i, --id [id] The ID of the Microsoft Teams team to clone -n, --name [name] The display name for the new Microsoft Teams Team to clone -p, --partsToClone <partsToClone> A comma-separated list of the parts to clone. Allowed values are apps,channels,members,settings,tabs -d, --description [description] The description for the new Microsoft Teams Team -c, --classification [classification] The classification for the new Microsoft Teams Team. If not specified, will be copied from the original Microsoft Teams Team -v, --visibility [visibility] Specify the visibility of the new Microsoft Teams Team. Allowed values are Private,Public . -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/teams/team/team-clone/#remarks","text":"Using this command, global admins and Microsoft Teams service admins can access teams that they are not a member of. When tabs are cloned, they are put into an unconfigured state. The first time you open them, you'll go through the configuration screen. If the person opening the tab does not have permission to configure apps, they will see a message explaining that the tab hasn't been configured.","title":"Remarks"},{"location":"cmd/teams/team/team-clone/#examples","text":"Creates a clone of a Microsoft Teams team with mandatory parameters m365 teams team clone --id 15d7a78e-fd77-4599-97a5-dbb6372846c5 --name \"Library Assist\" --partsToClone \"apps,tabs,settings,channels,members\" Creates a clone of a Microsoft Teams team with mandatory and optional parameters m365 teams team clone --id 15d7a78e-fd77-4599-97a5-dbb6372846c5 --name \"Library Assist\" --partsToClone \"apps,tabs,settings,channels,members\" --description \"Self help community for library\" --classification \"Library\" --visibility \"public\"","title":"Examples"},{"location":"cmd/teams/team/team-get/","text":"teams team get \u00b6 Gets information about the specified Microsoft Teams team Usage \u00b6 m365 teams team get Options \u00b6 -i, --id [id] The ID of the Microsoft Teams team to retrieve information for. Specify either id or name but not both -n, --name [name] The display name of the Microsoft Teams team to retrieve information for. Specify either id or name but not both -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Get information about the Microsoft Teams team with id 2eaf7dcd-7e83-4c3a-94f7-932a1299c844 m365 teams team get --id 2eaf7dcd-7e83-4c3a-94f7-932a1299c844 Get information about Microsoft Teams team with name Team Name m365 teams team get --name \"Team Name\"","title":"team get"},{"location":"cmd/teams/team/team-get/#teams-team-get","text":"Gets information about the specified Microsoft Teams team","title":"teams team get"},{"location":"cmd/teams/team/team-get/#usage","text":"m365 teams team get","title":"Usage"},{"location":"cmd/teams/team/team-get/#options","text":"-i, --id [id] The ID of the Microsoft Teams team to retrieve information for. Specify either id or name but not both -n, --name [name] The display name of the Microsoft Teams team to retrieve information for. Specify either id or name but not both -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/teams/team/team-get/#examples","text":"Get information about the Microsoft Teams team with id 2eaf7dcd-7e83-4c3a-94f7-932a1299c844 m365 teams team get --id 2eaf7dcd-7e83-4c3a-94f7-932a1299c844 Get information about Microsoft Teams team with name Team Name m365 teams team get --name \"Team Name\"","title":"Examples"},{"location":"cmd/teams/team/team-list/","text":"teams team list \u00b6 Lists Microsoft Teams teams in the current tenant Usage \u00b6 m365 teams team list [ options ] Options \u00b6 -j, --joined Show only joined teams -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 You can only see the details or archived status of the Microsoft Teams you are a member of. Examples \u00b6 List all Microsoft Teams in the tenant m365 teams team list List all Microsoft Teams in the tenant you are a member of m365 teams team list --joined","title":"team list"},{"location":"cmd/teams/team/team-list/#teams-team-list","text":"Lists Microsoft Teams teams in the current tenant","title":"teams team list"},{"location":"cmd/teams/team/team-list/#usage","text":"m365 teams team list [ options ]","title":"Usage"},{"location":"cmd/teams/team/team-list/#options","text":"-j, --joined Show only joined teams -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/teams/team/team-list/#remarks","text":"You can only see the details or archived status of the Microsoft Teams you are a member of.","title":"Remarks"},{"location":"cmd/teams/team/team-list/#examples","text":"List all Microsoft Teams in the tenant m365 teams team list List all Microsoft Teams in the tenant you are a member of m365 teams team list --joined","title":"Examples"},{"location":"cmd/teams/team/team-remove/","text":"teams team remove \u00b6 Removes the specified Microsoft Teams team Usage \u00b6 m365 teams team remove [ options ] Options \u00b6 -i, --id [id] The ID of the Microsoft Teams team to remove. Specify either id or name but not both -n, --name [name] The display name of the Microsoft Teams team to remove. Specify either id or name but not both --confirm Don't prompt for confirming removing the specified team -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 When deleted, Microsoft 365 groups are moved to a temporary container and can be restored within 30 days. After that time, they are permanently deleted. This applies only to Microsoft 365 groups. If the command finds multiple Microsoft Teams teams with the specified name, it will prompt you to disambiguate which team it should use, listing the discovered team IDs. Examples \u00b6 Removes the specified Microsoft Teams team with id 00000000-0000-0000-0000-000000000000 m365 teams team remove --id 00000000 -0000-0000-0000-000000000000 Removes the specified Microsoft Teams team with name Team Name m365 teams team remove --name \"Team Name\" Removes the specified team without confirmation m365 teams team remove --id 00000000 -0000-0000-0000-000000000000 --confirm More information \u00b6 directory resource type (deleted items): https://docs.microsoft.com/en-us/graph/api/resources/directory?view=graph-rest-1.0","title":"team remove"},{"location":"cmd/teams/team/team-remove/#teams-team-remove","text":"Removes the specified Microsoft Teams team","title":"teams team remove"},{"location":"cmd/teams/team/team-remove/#usage","text":"m365 teams team remove [ options ]","title":"Usage"},{"location":"cmd/teams/team/team-remove/#options","text":"-i, --id [id] The ID of the Microsoft Teams team to remove. Specify either id or name but not both -n, --name [name] The display name of the Microsoft Teams team to remove. Specify either id or name but not both --confirm Don't prompt for confirming removing the specified team -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/teams/team/team-remove/#remarks","text":"When deleted, Microsoft 365 groups are moved to a temporary container and can be restored within 30 days. After that time, they are permanently deleted. This applies only to Microsoft 365 groups. If the command finds multiple Microsoft Teams teams with the specified name, it will prompt you to disambiguate which team it should use, listing the discovered team IDs.","title":"Remarks"},{"location":"cmd/teams/team/team-remove/#examples","text":"Removes the specified Microsoft Teams team with id 00000000-0000-0000-0000-000000000000 m365 teams team remove --id 00000000 -0000-0000-0000-000000000000 Removes the specified Microsoft Teams team with name Team Name m365 teams team remove --name \"Team Name\" Removes the specified team without confirmation m365 teams team remove --id 00000000 -0000-0000-0000-000000000000 --confirm","title":"Examples"},{"location":"cmd/teams/team/team-remove/#more-information","text":"directory resource type (deleted items): https://docs.microsoft.com/en-us/graph/api/resources/directory?view=graph-rest-1.0","title":"More information"},{"location":"cmd/teams/team/team-set/","text":"teams team set \u00b6 Updates settings of a Microsoft Teams team Usage \u00b6 m365 teams team set [ options ] Options \u00b6 -i, --id [id] The ID of the Microsoft Teams team for which to update settings -n, --name [name] The display name for the Microsoft Teams team for which to update settings --description [description] The description for the Microsoft Teams team --mailNickName [mailNickName] The mail alias for the Microsoft Teams team --classification [classification] The classification for the Microsoft Teams team --visibility [visibility] The visibility of the Microsoft Teams team. Valid values Private,Public -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Set Microsoft Teams team visibility as Private m365 teams team set --id \"00000000-0000-0000-0000-000000000000\" --visibility Private Set Microsoft Teams team classification as MBI m365 teams team set --id \"00000000-0000-0000-0000-000000000000\" --classification MBI","title":"team set"},{"location":"cmd/teams/team/team-set/#teams-team-set","text":"Updates settings of a Microsoft Teams team","title":"teams team set"},{"location":"cmd/teams/team/team-set/#usage","text":"m365 teams team set [ options ]","title":"Usage"},{"location":"cmd/teams/team/team-set/#options","text":"-i, --id [id] The ID of the Microsoft Teams team for which to update settings -n, --name [name] The display name for the Microsoft Teams team for which to update settings --description [description] The description for the Microsoft Teams team --mailNickName [mailNickName] The mail alias for the Microsoft Teams team --classification [classification] The classification for the Microsoft Teams team --visibility [visibility] The visibility of the Microsoft Teams team. Valid values Private,Public -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/teams/team/team-set/#examples","text":"Set Microsoft Teams team visibility as Private m365 teams team set --id \"00000000-0000-0000-0000-000000000000\" --visibility Private Set Microsoft Teams team classification as MBI m365 teams team set --id \"00000000-0000-0000-0000-000000000000\" --classification MBI","title":"Examples"},{"location":"cmd/teams/team/team-unarchive/","text":"teams team unarchive \u00b6 Restores an archived Microsoft Teams team Usage \u00b6 m365 teams team unarchive [ options ] Options \u00b6 -i, --id [id] The ID of the Microsoft Teams team to restore. Specify either id or name but not both -n, --name [name] The display name of the Microsoft Teams team to restore. Specify either id or name but not both -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 This command supports admin permissions. Global admins and Microsoft Teams service admins can restore teams that they are not a member of. If the command finds multiple Microsoft Teams teams with the specified name, it will prompt you to disambiguate which team it should use, listing the discovered team IDs. This command restores users' ability to send messages and edit the team, abiding by tenant and team settings. Examples \u00b6 Restore an archived Microsoft Teams team with id 6f6fd3f7-9ba5-4488-bbe6-a789004d0d55 m365 teams team unarchive --id 6f6fd3f7-9ba5-4488-bbe6-a789004d0d55 Restore an archived Microsoft Teams team with name Team Name m365 teams team unarchive --name \"Team Name\"","title":"team unarchive"},{"location":"cmd/teams/team/team-unarchive/#teams-team-unarchive","text":"Restores an archived Microsoft Teams team","title":"teams team unarchive"},{"location":"cmd/teams/team/team-unarchive/#usage","text":"m365 teams team unarchive [ options ]","title":"Usage"},{"location":"cmd/teams/team/team-unarchive/#options","text":"-i, --id [id] The ID of the Microsoft Teams team to restore. Specify either id or name but not both -n, --name [name] The display name of the Microsoft Teams team to restore. Specify either id or name but not both -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/teams/team/team-unarchive/#remarks","text":"This command supports admin permissions. Global admins and Microsoft Teams service admins can restore teams that they are not a member of. If the command finds multiple Microsoft Teams teams with the specified name, it will prompt you to disambiguate which team it should use, listing the discovered team IDs. This command restores users' ability to send messages and edit the team, abiding by tenant and team settings.","title":"Remarks"},{"location":"cmd/teams/team/team-unarchive/#examples","text":"Restore an archived Microsoft Teams team with id 6f6fd3f7-9ba5-4488-bbe6-a789004d0d55 m365 teams team unarchive --id 6f6fd3f7-9ba5-4488-bbe6-a789004d0d55 Restore an archived Microsoft Teams team with name Team Name m365 teams team unarchive --name \"Team Name\"","title":"Examples"},{"location":"cmd/teams/user/user-app-add/","text":"teams user app add \u00b6 Install an app in the personal scope of the specified user Usage \u00b6 m365 teams user app add [ options ] Options \u00b6 --id <id> The ID of the app to install --userId <userId> The ID of the user to install the app for -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 The id has to be the ID of the app from the Microsoft Teams App Catalog. Do not use the ID from the manifest of the zip app package. Use the teams app list command to get this ID. Examples \u00b6 Install an app from the catalog for the specified user m365 teams user app add --id 4440558e-8c73-4597-abc7-3644a64c4bce --userId 2609af39-7775-4f94-a3dc-0dd67657e900","title":"user app add"},{"location":"cmd/teams/user/user-app-add/#teams-user-app-add","text":"Install an app in the personal scope of the specified user","title":"teams user app add"},{"location":"cmd/teams/user/user-app-add/#usage","text":"m365 teams user app add [ options ]","title":"Usage"},{"location":"cmd/teams/user/user-app-add/#options","text":"--id <id> The ID of the app to install --userId <userId> The ID of the user to install the app for -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/teams/user/user-app-add/#remarks","text":"The id has to be the ID of the app from the Microsoft Teams App Catalog. Do not use the ID from the manifest of the zip app package. Use the teams app list command to get this ID.","title":"Remarks"},{"location":"cmd/teams/user/user-app-add/#examples","text":"Install an app from the catalog for the specified user m365 teams user app add --id 4440558e-8c73-4597-abc7-3644a64c4bce --userId 2609af39-7775-4f94-a3dc-0dd67657e900","title":"Examples"},{"location":"cmd/teams/user/user-app-list/","text":"teams user app list \u00b6 List the apps installed in the personal scope of the specified user Usage \u00b6 m365 teams user app list [ options ] Options \u00b6 --userId [userId] The ID of the user to get the apps from. Specify userId or userName but not both. --userName [userName] The UPN of the user to get the apps from. Specify userId or userName but not both. -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 List the apps installed in the personal scope of the specified user using its ID m365 teams user app list --userId 4440558e-8c73-4597-abc7-3644a64c4bce List the apps installed in the personal scope of the specified user using its UPN m365 teams user app list --userName admin@contoso.com","title":"user app list"},{"location":"cmd/teams/user/user-app-list/#teams-user-app-list","text":"List the apps installed in the personal scope of the specified user","title":"teams user app list"},{"location":"cmd/teams/user/user-app-list/#usage","text":"m365 teams user app list [ options ]","title":"Usage"},{"location":"cmd/teams/user/user-app-list/#options","text":"--userId [userId] The ID of the user to get the apps from. Specify userId or userName but not both. --userName [userName] The UPN of the user to get the apps from. Specify userId or userName but not both. -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/teams/user/user-app-list/#examples","text":"List the apps installed in the personal scope of the specified user using its ID m365 teams user app list --userId 4440558e-8c73-4597-abc7-3644a64c4bce List the apps installed in the personal scope of the specified user using its UPN m365 teams user app list --userName admin@contoso.com","title":"Examples"},{"location":"cmd/teams/user/user-app-remove/","text":"teams user app remove \u00b6 Uninstall an app from the personal scope of the specified user Usage \u00b6 m365 teams user app remove [ options ] Options \u00b6 --id <id> The unique id of the app instance installed for the user --userId <userId> The ID of the user to uninstall the app for --confirm Confirm removal of app for user -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 The id has to be the id of the app instance installed for the user. Do not use the ID from the manifest of the zip app package or the id from the Microsoft Teams App Catalog. Examples \u00b6 Uninstall an app for the specified user m365 teams user app remove --id YzUyN2E0NzAtYTg4Mi00ODFjLTk4MWMtZWU2ZWZhYmE4NWM3IyM0ZDFlYTA0Ny1mMTk2LTQ1MGQtYjJlOS0wZDI4NTViYTA1YTY = --userId 2609af39-7775-4f94-a3dc-0dd67657e900","title":"user app remove"},{"location":"cmd/teams/user/user-app-remove/#teams-user-app-remove","text":"Uninstall an app from the personal scope of the specified user","title":"teams user app remove"},{"location":"cmd/teams/user/user-app-remove/#usage","text":"m365 teams user app remove [ options ]","title":"Usage"},{"location":"cmd/teams/user/user-app-remove/#options","text":"--id <id> The unique id of the app instance installed for the user --userId <userId> The ID of the user to uninstall the app for --confirm Confirm removal of app for user -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/teams/user/user-app-remove/#remarks","text":"The id has to be the id of the app instance installed for the user. Do not use the ID from the manifest of the zip app package or the id from the Microsoft Teams App Catalog.","title":"Remarks"},{"location":"cmd/teams/user/user-app-remove/#examples","text":"Uninstall an app for the specified user m365 teams user app remove --id YzUyN2E0NzAtYTg4Mi00ODFjLTk4MWMtZWU2ZWZhYmE4NWM3IyM0ZDFlYTA0Ny1mMTk2LTQ1MGQtYjJlOS0wZDI4NTViYTA1YTY = --userId 2609af39-7775-4f94-a3dc-0dd67657e900","title":"Examples"},{"location":"cmd/teams/user/user-list/","text":"teams user list \u00b6 Lists users for the specified Microsoft Teams team Usage \u00b6 m365 teams user list [ options ] Options \u00b6 -i, --teamId <teamId> The ID of the Microsoft Teams team for which to list users -r, --role [role] Filter the results to only users with the given role: Owner,Member,Guest -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 List all users and their role in the specified Microsoft teams team m365 teams user list --teamId '00000000-0000-0000-0000-000000000000' List all owners and their role in the specified Microsoft teams team m365 teams user list --teamId '00000000-0000-0000-0000-000000000000' --role Owner","title":"user list"},{"location":"cmd/teams/user/user-list/#teams-user-list","text":"Lists users for the specified Microsoft Teams team","title":"teams user list"},{"location":"cmd/teams/user/user-list/#usage","text":"m365 teams user list [ options ]","title":"Usage"},{"location":"cmd/teams/user/user-list/#options","text":"-i, --teamId <teamId> The ID of the Microsoft Teams team for which to list users -r, --role [role] Filter the results to only users with the given role: Owner,Member,Guest -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/teams/user/user-list/#examples","text":"List all users and their role in the specified Microsoft teams team m365 teams user list --teamId '00000000-0000-0000-0000-000000000000' List all owners and their role in the specified Microsoft teams team m365 teams user list --teamId '00000000-0000-0000-0000-000000000000' --role Owner","title":"Examples"},{"location":"cmd/tenant/id/id-get/","text":"tenant id get \u00b6 Gets Microsoft 365 tenant ID for the specified domain Usage \u00b6 m365 tenant id get [ options ] Options \u00b6 -d, --domainName [domainName] The domain name for which to retrieve the Microsoft 365 tenant ID -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 If no domain name is specified, the command will return the tenant ID of the tenant to which you are currently logged in. Examples \u00b6 Get Microsoft 365 tenant ID for the specified domain m365 tenant id get --domainName contoso.com Get Microsoft 365 tenant ID of the the tenant to which you are currently logged in m365 tenant id get Response \u00b6 JSON Text CSV \"e65b162c-6f87-4eb1-a24e-1b37d3504663\" e65b162c-6f87-4eb1-a24e-1b37d3504663 e65b162c-6f87-4eb1-a24e-1b37d3504663","title":"id get"},{"location":"cmd/tenant/id/id-get/#tenant-id-get","text":"Gets Microsoft 365 tenant ID for the specified domain","title":"tenant id get"},{"location":"cmd/tenant/id/id-get/#usage","text":"m365 tenant id get [ options ]","title":"Usage"},{"location":"cmd/tenant/id/id-get/#options","text":"-d, --domainName [domainName] The domain name for which to retrieve the Microsoft 365 tenant ID -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/tenant/id/id-get/#remarks","text":"If no domain name is specified, the command will return the tenant ID of the tenant to which you are currently logged in.","title":"Remarks"},{"location":"cmd/tenant/id/id-get/#examples","text":"Get Microsoft 365 tenant ID for the specified domain m365 tenant id get --domainName contoso.com Get Microsoft 365 tenant ID of the the tenant to which you are currently logged in m365 tenant id get","title":"Examples"},{"location":"cmd/tenant/id/id-get/#response","text":"JSON Text CSV \"e65b162c-6f87-4eb1-a24e-1b37d3504663\" e65b162c-6f87-4eb1-a24e-1b37d3504663 e65b162c-6f87-4eb1-a24e-1b37d3504663","title":"Response"},{"location":"cmd/tenant/report/report-activeusercounts/","text":"tenant report activeusercounts \u00b6 Gets the count of daily active users in the reporting period by product. Usage \u00b6 m365 tenant report activeusercounts [ options ] Options \u00b6 -p, --period <period> The length of time over which the report is aggregated. Supported values D7,D30,D90,D180 -f, --outputFile [outputFile] Path to the file where the Microsoft Teams daily unique users by device type report should be stored in -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Gets the count of daily active users in the reporting period by product for the last week m365 tenant report activeusercounts --period D7 Gets the count of daily active users in the reporting period by product for the last week and exports the report data in the specified path in text format m365 tenant report activeusercounts --period D7 --output text > \"activeusercounts.txt\" Gets the count of daily active users in the reporting period by product for the last week and exports the report data in the specified path in json format m365 tenant report activeusercounts --period D7 --output json > \"activeusercounts.json\" Response \u00b6 JSON Text CSV [ { \"Report Refresh Date\" : \"2022-10-25\" , \"Office 365\" : \"1\" , \"Exchange\" : \"5\" , \"OneDrive\" : \"4\" , \"SharePoint\" : \"3\" , \"Skype For Business\" : \"2\" , \"Yammer\" : \"3\" , \"Teams\" : \"1\" , \"Report Date\" : \"2022-10-19\" , \"Report Period\" : \"7\" } ] Report Refresh Date,Office 365,Exchange,OneDrive,SharePoint,Skype For Business,Yammer,Teams,Report Date,Report Period 2022-10-25,1,5,4,3,2,3,1,2022-10-19,7 Report Refresh Date,Office 365,Exchange,OneDrive,SharePoint,Skype For Business,Yammer,Teams,Report Date,Report Period 2022-10-25,1,5,4,3,2,3,1,2022-10-19,7","title":"report activeusercounts"},{"location":"cmd/tenant/report/report-activeusercounts/#tenant-report-activeusercounts","text":"Gets the count of daily active users in the reporting period by product.","title":"tenant report activeusercounts"},{"location":"cmd/tenant/report/report-activeusercounts/#usage","text":"m365 tenant report activeusercounts [ options ]","title":"Usage"},{"location":"cmd/tenant/report/report-activeusercounts/#options","text":"-p, --period <period> The length of time over which the report is aggregated. Supported values D7,D30,D90,D180 -f, --outputFile [outputFile] Path to the file where the Microsoft Teams daily unique users by device type report should be stored in -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/tenant/report/report-activeusercounts/#examples","text":"Gets the count of daily active users in the reporting period by product for the last week m365 tenant report activeusercounts --period D7 Gets the count of daily active users in the reporting period by product for the last week and exports the report data in the specified path in text format m365 tenant report activeusercounts --period D7 --output text > \"activeusercounts.txt\" Gets the count of daily active users in the reporting period by product for the last week and exports the report data in the specified path in json format m365 tenant report activeusercounts --period D7 --output json > \"activeusercounts.json\"","title":"Examples"},{"location":"cmd/tenant/report/report-activeusercounts/#response","text":"JSON Text CSV [ { \"Report Refresh Date\" : \"2022-10-25\" , \"Office 365\" : \"1\" , \"Exchange\" : \"5\" , \"OneDrive\" : \"4\" , \"SharePoint\" : \"3\" , \"Skype For Business\" : \"2\" , \"Yammer\" : \"3\" , \"Teams\" : \"1\" , \"Report Date\" : \"2022-10-19\" , \"Report Period\" : \"7\" } ] Report Refresh Date,Office 365,Exchange,OneDrive,SharePoint,Skype For Business,Yammer,Teams,Report Date,Report Period 2022-10-25,1,5,4,3,2,3,1,2022-10-19,7 Report Refresh Date,Office 365,Exchange,OneDrive,SharePoint,Skype For Business,Yammer,Teams,Report Date,Report Period 2022-10-25,1,5,4,3,2,3,1,2022-10-19,7","title":"Response"},{"location":"cmd/tenant/report/report-activeuserdetail/","text":"tenant report activeuserdetail \u00b6 Gets details about Microsoft 365 active users Usage \u00b6 m365 tenant report activeuserdetail [ options ] Options \u00b6 -d, --date [date] The date for which you would like to view the users who performed any activity. Supported date format is YYYY-MM-DD . Specify the date or period, but not both. -p, --period [period] The length of time over which the report is aggregated. Supported values D7,D30,D90,D180 -f, --outputFile [outputFile] Path to the file where the report should be stored in -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 As this report is only available for the past 28 days, date parameter value should be a date from that range. Examples \u00b6 Gets details about Microsoft 365 active users for the last week m365 tenant report activeuserdetail --period D7 Gets details about Microsoft 365 active users for May 1, 2019 m365 tenant report activeuserdetail --date 2019 -05-01 Gets details about Microsoft 365 active users for the last week and exports the report data in the specified path in text format m365 tenant report activeuserdetail --period D7 --output text > \"activeuserdetail.txt\" Gets details about Microsoft 365 active users for the last week and exports the report data in the specified path in json format m365 tenant report activeuserdetail --period D7 --output json > \"activeuserdetail.json\" Response \u00b6 JSON Text CSV [ { \"Report Refresh Date\" : \"2022-10-23\" , \"User Principal Name\" : \"0439A166C614C2E8C7B4075DC4752054\" , \"Display Name\" : \"2236A6E43D08F619FE695DF3B163A32F\" , \"Is Deleted\" : \"False\" , \"Deleted Date\" : \"\" , \"Has Exchange License\" : \"True\" , \"Has OneDrive License\" : \"True\" , \"Has SharePoint License\" : \"True\" , \"Has Skype For Business License\" : \"True\" , \"Has Yammer License\" : \"True\" , \"Has Teams License\" : \"True\" , \"Exchange Last Activity Date\" : \"2020-03-27\" , \"OneDrive Last Activity Date\" : \"2020-03-27\" , \"SharePoint Last Activity Date\" : \"2020-04-30\" , \"Skype For Business Last Activity Date\" : \"2020-05-10\" , \"Yammer Last Activity Date\" : \"2020-05-10\" , \"Teams Last Activity Date\" : \"2020-05-10\" , \"Exchange License Assign Date\" : \"2020-02-26\" , \"OneDrive License Assign Date\" : \"2020-02-26\" , \"SharePoint License Assign Date\" : \"2020-02-26\" , \"Skype For Business License Assign Date\" : \"2020-02-26\" , \"Yammer License Assign Date\" : \"2020-02-26\" , \"Teams License Assign Date\" : \"2020-02-26\" , \"Assigned Products\" : \"MICROSOFT 365 E5 DEVELOPER (WITHOUT WINDOWS AND AUDIO CONFERENCING)\" } ] Report Refresh Date,User Principal Name,Display Name,Is Deleted,Deleted Date,Has Exchange License,Has OneDrive License,Has SharePoint License,Has Skype For Business License,Has Yammer License,Has Teams License,Exchange Last Activity Date,OneDrive Last Activity Date,SharePoint Last Activity Date,Skype For Business Last Activity Date,Yammer Last Activity Date,Teams Last Activity Date,Exchange License Assign Date,OneDrive License Assign Date,SharePoint License Assign Date,Skype For Business License Assign Date,Yammer License Assign Date,Teams License Assign Date,Assigned Products 2022-10-23,77E5979DD60BA6EAA53E814DBEEEFA5F,4291DA7C39EE3263E97336B42734A667,False,,True,True,True,True,True,True,2020-09-12,2022-09-12,2021-10-30,2020-10-30,2019-04-21,2017-09-20,2021-01-10,2021-01-10,2021-01-10,2021-01-10,2021-01-10,2021-01-10,MICROSOFT 365 E5 DEVELOPER (WITHOUT WINDOWS AND AUDIO CONFERENCING) Report Refresh Date,User Principal Name,Display Name,Is Deleted,Deleted Date,Has Exchange License,Has OneDrive License,Has SharePoint License,Has Skype For Business License,Has Yammer License,Has Teams License,Exchange Last Activity Date,OneDrive Last Activity Date,SharePoint Last Activity Date,Skype For Business Last Activity Date,Yammer Last Activity Date,Teams Last Activity Date,Exchange License Assign Date,OneDrive License Assign Date,SharePoint License Assign Date,Skype For Business License Assign Date,Yammer License Assign Date,Teams License Assign Date,Assigned Products 2022-10-23,77E5979DD60BA6EAA53E814DBEEEFA5F,4291DA7C39EE3263E97336B42734A667,False,,True,True,True,True,True,True,,2022-09-12,2020-09-12,2022-09-12,2021-10-30,2020-10-30,2019-04-21,2017-09-20,2021-01-10,2021-01-10,2021-01-10,2021-01-10,2021-01-10,2021-01-10,MICROSOFT 365 E5 DEVELOPER (WITHOUT WINDOWS AND AUDIO CONFERENCING)","title":"report activeuserdetail"},{"location":"cmd/tenant/report/report-activeuserdetail/#tenant-report-activeuserdetail","text":"Gets details about Microsoft 365 active users","title":"tenant report activeuserdetail"},{"location":"cmd/tenant/report/report-activeuserdetail/#usage","text":"m365 tenant report activeuserdetail [ options ]","title":"Usage"},{"location":"cmd/tenant/report/report-activeuserdetail/#options","text":"-d, --date [date] The date for which you would like to view the users who performed any activity. Supported date format is YYYY-MM-DD . Specify the date or period, but not both. -p, --period [period] The length of time over which the report is aggregated. Supported values D7,D30,D90,D180 -f, --outputFile [outputFile] Path to the file where the report should be stored in -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/tenant/report/report-activeuserdetail/#remarks","text":"As this report is only available for the past 28 days, date parameter value should be a date from that range.","title":"Remarks"},{"location":"cmd/tenant/report/report-activeuserdetail/#examples","text":"Gets details about Microsoft 365 active users for the last week m365 tenant report activeuserdetail --period D7 Gets details about Microsoft 365 active users for May 1, 2019 m365 tenant report activeuserdetail --date 2019 -05-01 Gets details about Microsoft 365 active users for the last week and exports the report data in the specified path in text format m365 tenant report activeuserdetail --period D7 --output text > \"activeuserdetail.txt\" Gets details about Microsoft 365 active users for the last week and exports the report data in the specified path in json format m365 tenant report activeuserdetail --period D7 --output json > \"activeuserdetail.json\"","title":"Examples"},{"location":"cmd/tenant/report/report-activeuserdetail/#response","text":"JSON Text CSV [ { \"Report Refresh Date\" : \"2022-10-23\" , \"User Principal Name\" : \"0439A166C614C2E8C7B4075DC4752054\" , \"Display Name\" : \"2236A6E43D08F619FE695DF3B163A32F\" , \"Is Deleted\" : \"False\" , \"Deleted Date\" : \"\" , \"Has Exchange License\" : \"True\" , \"Has OneDrive License\" : \"True\" , \"Has SharePoint License\" : \"True\" , \"Has Skype For Business License\" : \"True\" , \"Has Yammer License\" : \"True\" , \"Has Teams License\" : \"True\" , \"Exchange Last Activity Date\" : \"2020-03-27\" , \"OneDrive Last Activity Date\" : \"2020-03-27\" , \"SharePoint Last Activity Date\" : \"2020-04-30\" , \"Skype For Business Last Activity Date\" : \"2020-05-10\" , \"Yammer Last Activity Date\" : \"2020-05-10\" , \"Teams Last Activity Date\" : \"2020-05-10\" , \"Exchange License Assign Date\" : \"2020-02-26\" , \"OneDrive License Assign Date\" : \"2020-02-26\" , \"SharePoint License Assign Date\" : \"2020-02-26\" , \"Skype For Business License Assign Date\" : \"2020-02-26\" , \"Yammer License Assign Date\" : \"2020-02-26\" , \"Teams License Assign Date\" : \"2020-02-26\" , \"Assigned Products\" : \"MICROSOFT 365 E5 DEVELOPER (WITHOUT WINDOWS AND AUDIO CONFERENCING)\" } ] Report Refresh Date,User Principal Name,Display Name,Is Deleted,Deleted Date,Has Exchange License,Has OneDrive License,Has SharePoint License,Has Skype For Business License,Has Yammer License,Has Teams License,Exchange Last Activity Date,OneDrive Last Activity Date,SharePoint Last Activity Date,Skype For Business Last Activity Date,Yammer Last Activity Date,Teams Last Activity Date,Exchange License Assign Date,OneDrive License Assign Date,SharePoint License Assign Date,Skype For Business License Assign Date,Yammer License Assign Date,Teams License Assign Date,Assigned Products 2022-10-23,77E5979DD60BA6EAA53E814DBEEEFA5F,4291DA7C39EE3263E97336B42734A667,False,,True,True,True,True,True,True,2020-09-12,2022-09-12,2021-10-30,2020-10-30,2019-04-21,2017-09-20,2021-01-10,2021-01-10,2021-01-10,2021-01-10,2021-01-10,2021-01-10,MICROSOFT 365 E5 DEVELOPER (WITHOUT WINDOWS AND AUDIO CONFERENCING) Report Refresh Date,User Principal Name,Display Name,Is Deleted,Deleted Date,Has Exchange License,Has OneDrive License,Has SharePoint License,Has Skype For Business License,Has Yammer License,Has Teams License,Exchange Last Activity Date,OneDrive Last Activity Date,SharePoint Last Activity Date,Skype For Business Last Activity Date,Yammer Last Activity Date,Teams Last Activity Date,Exchange License Assign Date,OneDrive License Assign Date,SharePoint License Assign Date,Skype For Business License Assign Date,Yammer License Assign Date,Teams License Assign Date,Assigned Products 2022-10-23,77E5979DD60BA6EAA53E814DBEEEFA5F,4291DA7C39EE3263E97336B42734A667,False,,True,True,True,True,True,True,,2022-09-12,2020-09-12,2022-09-12,2021-10-30,2020-10-30,2019-04-21,2017-09-20,2021-01-10,2021-01-10,2021-01-10,2021-01-10,2021-01-10,2021-01-10,MICROSOFT 365 E5 DEVELOPER (WITHOUT WINDOWS AND AUDIO CONFERENCING)","title":"Response"},{"location":"cmd/tenant/report/report-office365activationcounts/","text":"tenant report office365activationcounts \u00b6 Get the count of Microsoft 365 activations on desktops and devices Usage \u00b6 m365 tenant report office365activationcounts [ options ] Options \u00b6 -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Get the count of Microsoft 365 activations on desktops and devices m365 tenant report office365activationcounts Response \u00b6 JSON Text CSV [ { \"Report Refresh Date\" : \"2022-10-25\" , \"Product Type\" : \"MICROSOFT 365 APPS FOR ENTERPRISE\" , \"Windows\" : 5 , \"Mac\" : 0 , \"Android\" : 0 , \"iOS\" : 0 , \"Windows 10 Mobile\" : 0 } ] Report Refresh Date,Product Type,Windows,Mac,Android,iOS,Windows 10 Mobile 2022-10-25,MICROSOFT 365 APPS FOR ENTERPRISE,5,0,0,0,0 Report Refresh Date,Product Type,Windows,Mac,Android,iOS,Windows 10 Mobile 2022-10-25,MICROSOFT 365 APPS FOR ENTERPRISE,5,0,0,0,0","title":"report office365activationcounts"},{"location":"cmd/tenant/report/report-office365activationcounts/#tenant-report-office365activationcounts","text":"Get the count of Microsoft 365 activations on desktops and devices","title":"tenant report office365activationcounts"},{"location":"cmd/tenant/report/report-office365activationcounts/#usage","text":"m365 tenant report office365activationcounts [ options ]","title":"Usage"},{"location":"cmd/tenant/report/report-office365activationcounts/#options","text":"-h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/tenant/report/report-office365activationcounts/#examples","text":"Get the count of Microsoft 365 activations on desktops and devices m365 tenant report office365activationcounts","title":"Examples"},{"location":"cmd/tenant/report/report-office365activationcounts/#response","text":"JSON Text CSV [ { \"Report Refresh Date\" : \"2022-10-25\" , \"Product Type\" : \"MICROSOFT 365 APPS FOR ENTERPRISE\" , \"Windows\" : 5 , \"Mac\" : 0 , \"Android\" : 0 , \"iOS\" : 0 , \"Windows 10 Mobile\" : 0 } ] Report Refresh Date,Product Type,Windows,Mac,Android,iOS,Windows 10 Mobile 2022-10-25,MICROSOFT 365 APPS FOR ENTERPRISE,5,0,0,0,0 Report Refresh Date,Product Type,Windows,Mac,Android,iOS,Windows 10 Mobile 2022-10-25,MICROSOFT 365 APPS FOR ENTERPRISE,5,0,0,0,0","title":"Response"},{"location":"cmd/tenant/report/report-office365activationsusercounts/","text":"tenant report office365activationsusercounts \u00b6 Get the count of users that are enabled and those that have activated the Office subscription on desktop or devices or shared computers Usage \u00b6 m365 tenant report office365activationsusercounts [ options ] Options \u00b6 -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Get the count of users that are enabled and those that have activated the Office subscription on desktop or devices or shared computers m365 tenant report office365activationsusercounts Response \u00b6 JSON Text CSV [ { \"Report Refresh Date\" : \"2022-10-25\" , \"Product Type\" : \"MICROSOFT 365 APPS FOR ENTERPRISE\" , \"Assigned\" : 24 , \"Activated\" : 5 , \"Shared Computer Activation\" : 0 } ] Report Refresh Date,Product Type,Assigned,Activated,Shared Computer Activation 2022-10-25,MICROSOFT 365 APPS FOR ENTERPRISE,24,5,0 Report Refresh Date,Product Type,Assigned,Activated,Shared Computer Activation 2022-10-25,MICROSOFT 365 APPS FOR ENTERPRISE,24,5,0","title":"report office365activationsusercounts"},{"location":"cmd/tenant/report/report-office365activationsusercounts/#tenant-report-office365activationsusercounts","text":"Get the count of users that are enabled and those that have activated the Office subscription on desktop or devices or shared computers","title":"tenant report office365activationsusercounts"},{"location":"cmd/tenant/report/report-office365activationsusercounts/#usage","text":"m365 tenant report office365activationsusercounts [ options ]","title":"Usage"},{"location":"cmd/tenant/report/report-office365activationsusercounts/#options","text":"-h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/tenant/report/report-office365activationsusercounts/#examples","text":"Get the count of users that are enabled and those that have activated the Office subscription on desktop or devices or shared computers m365 tenant report office365activationsusercounts","title":"Examples"},{"location":"cmd/tenant/report/report-office365activationsusercounts/#response","text":"JSON Text CSV [ { \"Report Refresh Date\" : \"2022-10-25\" , \"Product Type\" : \"MICROSOFT 365 APPS FOR ENTERPRISE\" , \"Assigned\" : 24 , \"Activated\" : 5 , \"Shared Computer Activation\" : 0 } ] Report Refresh Date,Product Type,Assigned,Activated,Shared Computer Activation 2022-10-25,MICROSOFT 365 APPS FOR ENTERPRISE,24,5,0 Report Refresh Date,Product Type,Assigned,Activated,Shared Computer Activation 2022-10-25,MICROSOFT 365 APPS FOR ENTERPRISE,24,5,0","title":"Response"},{"location":"cmd/tenant/report/report-office365activationsuserdetail/","text":"tenant report office365activationsuserdetail \u00b6 Get details about users who have activated Microsoft 365 Usage \u00b6 m365 tenant report office365activationsuserdetail [ options ] Options \u00b6 -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Get details about users who have activated Microsoft 365 m365 tenant report office365activationsuserdetail Response \u00b6 JSON Text CSV [ { \"Report Refresh Date\" : \"2022-10-25\" , \"User Principal Name\" : \"554630B7593DDE8E04F27933A965D5B2\" , \"Display Name\" : \"2BA57CC6348F53C9EE6347528301E896\" , \"Product Type\" : \"MICROSOFT EXCEL ADVANCED ANALYTICS\" , \"Last Activated Date\" : \"2021-01-10\" , \"Windows\" : 0 , \"Mac\" : 0 , \"Windows 10 Mobile\" : 0 , \"iOS\" : 0 , \"Android\" : 0 , \"Activated On Shared Computer\" : \"False\" } ] Report Refresh Date,User Principal Name,Display Name,Product Type,Last Activated Date,Windows,Mac,Windows 10 Mobile,iOS,Android,Activated On Shared Computer 2022-10-25,77E5979DD60BA6EAA53E814DBEEEFA5F,4291DA7C39EE3263E97336B42734A667,MICROSOFT 365 APPS FOR ENTERPRISE,2021-01-10,1,0,0,0,0,False Report Refresh Date,User Principal Name,Display Name,Product Type,Last Activated Date,Windows,Mac,Windows 10 Mobile,iOS,Android,Activated On Shared Computer 2022-10-25,77E5979DD60BA6EAA53E814DBEEEFA5F,4291DA7C39EE3263E97336B42734A667,MICROSOFT 365 APPS FOR ENTERPRISE,2021-01-10,1,0,0,0,0,False","title":"report office365activationsuserdetail"},{"location":"cmd/tenant/report/report-office365activationsuserdetail/#tenant-report-office365activationsuserdetail","text":"Get details about users who have activated Microsoft 365","title":"tenant report office365activationsuserdetail"},{"location":"cmd/tenant/report/report-office365activationsuserdetail/#usage","text":"m365 tenant report office365activationsuserdetail [ options ]","title":"Usage"},{"location":"cmd/tenant/report/report-office365activationsuserdetail/#options","text":"-h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/tenant/report/report-office365activationsuserdetail/#examples","text":"Get details about users who have activated Microsoft 365 m365 tenant report office365activationsuserdetail","title":"Examples"},{"location":"cmd/tenant/report/report-office365activationsuserdetail/#response","text":"JSON Text CSV [ { \"Report Refresh Date\" : \"2022-10-25\" , \"User Principal Name\" : \"554630B7593DDE8E04F27933A965D5B2\" , \"Display Name\" : \"2BA57CC6348F53C9EE6347528301E896\" , \"Product Type\" : \"MICROSOFT EXCEL ADVANCED ANALYTICS\" , \"Last Activated Date\" : \"2021-01-10\" , \"Windows\" : 0 , \"Mac\" : 0 , \"Windows 10 Mobile\" : 0 , \"iOS\" : 0 , \"Android\" : 0 , \"Activated On Shared Computer\" : \"False\" } ] Report Refresh Date,User Principal Name,Display Name,Product Type,Last Activated Date,Windows,Mac,Windows 10 Mobile,iOS,Android,Activated On Shared Computer 2022-10-25,77E5979DD60BA6EAA53E814DBEEEFA5F,4291DA7C39EE3263E97336B42734A667,MICROSOFT 365 APPS FOR ENTERPRISE,2021-01-10,1,0,0,0,0,False Report Refresh Date,User Principal Name,Display Name,Product Type,Last Activated Date,Windows,Mac,Windows 10 Mobile,iOS,Android,Activated On Shared Computer 2022-10-25,77E5979DD60BA6EAA53E814DBEEEFA5F,4291DA7C39EE3263E97336B42734A667,MICROSOFT 365 APPS FOR ENTERPRISE,2021-01-10,1,0,0,0,0,False","title":"Response"},{"location":"cmd/tenant/report/report-servicesusercounts/","text":"tenant report servicesusercounts \u00b6 Gets the count of users by activity type and service. Usage \u00b6 m365 tenant report servicesusercounts [ options ] Options \u00b6 -p, --period <period> The length of time over which the report is aggregated. Supported values D7,D30,D90,D180 -f, --outputFile [outputFile] Path to the file where the report should be stored in -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Gets the count of users by activity type and service for the last week m365 tenant report servicesusercounts --period D7 Gets the count of users by activity type and service for the last week and exports the report data in the specified path in text format m365 tenant report servicesusercounts --period D7 --output text > \"servicesusercounts.txt\" Gets the count of users by activity type and service for the last week and exports the report data in the specified path in json format m365 tenant report servicesusercounts --period D7 --output json > \"servicesusercounts.json\" Response \u00b6 JSON Text CSV [ { \"Report Refresh Date\" : \"2022-10-23\" , \"Exchange Active\" : \"1\" , \"Exchange Inactive\" : \"23\" , \"OneDrive Active\" : \"1\" , \"OneDrive Inactive\" : \"23\" , \"SharePoint Active\" : \"1\" , \"SharePoint Inactive\" : \"23\" , \"Skype For Business Active\" : \"0\" , \"Skype For Business Inactive\" : \"24\" , \"Yammer Active\" : \"0\" , \"Yammer Inactive\" : \"24\" , \"Teams Active\" : \"1\" , \"Teams Inactive\" : \"23\" , \"Office 365 Active\" : \"2\" , \"Office 365 Inactive\" : \"22\" , \"Report Period\" : \"7\" } ] Report Refresh Date,Exchange Active,Exchange Inactive,OneDrive Active,OneDrive Inactive,SharePoint Active,SharePoint Inactive,Skype For Business Active,Skype For Business Inactive,Yammer Active,Yammer Inactive,Teams Active,Teams Inactive,Office 365 Active,Office 365 Inactive,Report Period 2022-10-23,1,23,1,23,1,23,0,24,0,24,1,23,2,22,7 Report Refresh Date,Exchange Active,Exchange Inactive,OneDrive Active,OneDrive Inactive,SharePoint Active,SharePoint Inactive,Skype For Business Active,Skype For Business Inactive,Yammer Active,Yammer Inactive,Teams Active,Teams Inactive,Office 365 Active,Office 365 Inactive,Report Period 2022-10-23,1,23,1,23,1,23,0,24,0,24,1,23,2,22,7","title":"report servicesusercounts"},{"location":"cmd/tenant/report/report-servicesusercounts/#tenant-report-servicesusercounts","text":"Gets the count of users by activity type and service.","title":"tenant report servicesusercounts"},{"location":"cmd/tenant/report/report-servicesusercounts/#usage","text":"m365 tenant report servicesusercounts [ options ]","title":"Usage"},{"location":"cmd/tenant/report/report-servicesusercounts/#options","text":"-p, --period <period> The length of time over which the report is aggregated. Supported values D7,D30,D90,D180 -f, --outputFile [outputFile] Path to the file where the report should be stored in -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/tenant/report/report-servicesusercounts/#examples","text":"Gets the count of users by activity type and service for the last week m365 tenant report servicesusercounts --period D7 Gets the count of users by activity type and service for the last week and exports the report data in the specified path in text format m365 tenant report servicesusercounts --period D7 --output text > \"servicesusercounts.txt\" Gets the count of users by activity type and service for the last week and exports the report data in the specified path in json format m365 tenant report servicesusercounts --period D7 --output json > \"servicesusercounts.json\"","title":"Examples"},{"location":"cmd/tenant/report/report-servicesusercounts/#response","text":"JSON Text CSV [ { \"Report Refresh Date\" : \"2022-10-23\" , \"Exchange Active\" : \"1\" , \"Exchange Inactive\" : \"23\" , \"OneDrive Active\" : \"1\" , \"OneDrive Inactive\" : \"23\" , \"SharePoint Active\" : \"1\" , \"SharePoint Inactive\" : \"23\" , \"Skype For Business Active\" : \"0\" , \"Skype For Business Inactive\" : \"24\" , \"Yammer Active\" : \"0\" , \"Yammer Inactive\" : \"24\" , \"Teams Active\" : \"1\" , \"Teams Inactive\" : \"23\" , \"Office 365 Active\" : \"2\" , \"Office 365 Inactive\" : \"22\" , \"Report Period\" : \"7\" } ] Report Refresh Date,Exchange Active,Exchange Inactive,OneDrive Active,OneDrive Inactive,SharePoint Active,SharePoint Inactive,Skype For Business Active,Skype For Business Inactive,Yammer Active,Yammer Inactive,Teams Active,Teams Inactive,Office 365 Active,Office 365 Inactive,Report Period 2022-10-23,1,23,1,23,1,23,0,24,0,24,1,23,2,22,7 Report Refresh Date,Exchange Active,Exchange Inactive,OneDrive Active,OneDrive Inactive,SharePoint Active,SharePoint Inactive,Skype For Business Active,Skype For Business Inactive,Yammer Active,Yammer Inactive,Teams Active,Teams Inactive,Office 365 Active,Office 365 Inactive,Report Period 2022-10-23,1,23,1,23,1,23,0,24,0,24,1,23,2,22,7","title":"Response"},{"location":"cmd/tenant/security/security-alerts-list/","text":"tenant security alerts list \u00b6 Gets the security alerts for a tenant Usage \u00b6 m365 tenant security alerts list [ options ] Options \u00b6 --vendor [vendor] The vendor to return alerts for. Possible values Azure Advanced Threat Protection , Azure Security Center , Microsoft Cloud App Security , Azure Active Directory Identity Protection , Azure Sentinel , Microsoft Defender ATP . If omitted, all alerts are returned -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Get all security alerts for a tenant m365 tenant security alerts list Get security alerts for a vendor with name Azure Sentinel m365 tenant security alerts list --vendor \"Azure Sentinel\" Response \u00b6 JSON Text CSV [ { \"id\" : \"2517536653831539999_658fa695-a5e6-4b60-ac7c-b2c1396df384\" , \"azureTenantId\" : \"b8e1599d-b418-4be9-8f39-df03c3abe27a\" , \"azureSubscriptionId\" : \"ee390228-e284-4e54-a464-d693a1d55540\" , \"riskScore\" : null , \"tags\" : [], \"activityGroupName\" : null , \"assignedTo\" : null , \"category\" : \"Storage.Blob_GeoAnomaly\" , \"closedDateTime\" : null , \"comments\" : [], \"confidence\" : null , \"createdDateTime\" : \"2022-03-30T13:19:15.8039138Z\" , \"description\" : \"Someone has accessed your Azure Storage account 'westeuropegivcekj' from an unusual location.\" , \"detectionIds\" : [], \"eventDateTime\" : \"2022-03-30T10:16:56.846Z\" , \"feedback\" : null , \"incidentIds\" : [], \"lastEventDateTime\" : null , \"lastModifiedDateTime\" : \"2022-03-30T13:19:48.5196488Z\" , \"recommendedActions\" : [ \"\u2022 Limit access to your storage account, following the 'least privilege' principle: https://go.microsoft.com/fwlink/?linkid=2187303.\u2022 Consider using identity-based authentication: https://go.microsoft.com/fwlink/?linkid=2187202.\u2022 Consider rotating the storage account access keys and ensure that your access tokens are only shared with authorized users.\u2022 Ensure that storage access tokens are stored in a secured location such as Azure Key Vault. Avoid storing or sharing storage access tokens in source code, documentation, and email.\" ], \"severity\" : \"low\" , \"sourceMaterials\" : [ \"https://portal.azure.com/#blade/Microsoft_Azure_Security_AzureDefenderForData/AlertBlade/alertId/2517536653831539999_658fa695-a5e6-4b60-ac7c-b2c1396df384/subscriptionId/bbdf91d0-d75b-430e-b738-2c525452144f/resourceGroup/managed-rg-purview-mip-poc/referencedFrom/alertDeepLink/location/westeurope\" ], \"status\" : \"newAlert\" , \"title\" : \"Access from an unusual location to a storage blob container\" , \"CustomProperties\" : \"[\\\"{\\\\\\\"Alert Id\\\\\\\":\\\\\\\"658fa695-a5e6-4b60-ac7c-b2c1396df384\\\\\\\",\\\\\\\"Azure AD user\\\\\\\":\\\\\\\"N/A (Azure AD user authentication was not used)\\\\\\\",\\\\\\\"User agent\\\\\\\":\\\\\\\"Azure-Storage/9.3.0 (.NET Core)\\\\\\\",\\\\\\\"API type\\\\\\\":\\\\\\\"Blob\\\\\\\",\\\\\\\"Client location\\\\\\\":\\\\\\\"Dublin, Ireland\\\\\\\",\\\\\\\"Authentication type\\\\\\\":\\\\\\\"Shared access signature (SAS)\\\\\\\",\\\\\\\"Investigation steps\\\\\\\":\\\\\\\"{\\\\\\\\\\\\\\\"displayValue\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"View related storage activity using Storage Analytics Logging. See how to configure Storage Analytics logging and more information\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"kind\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"Link\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"https:\\\\\\\\\\\\\\\\/\\\\\\\\\\\\\\\\/go.microsoft.com\\\\\\\\\\\\\\\\/fwlink\\\\\\\\\\\\\\\\/?linkid=2075734\\\\\\\\\\\\\\\"}\\\\\\\",\\\\\\\"Operations types\\\\\\\":\\\\\\\"GetBlob\\\\\\\",\\\\\\\"Service type\\\\\\\":\\\\\\\"Azure Blobs\\\\\\\",\\\\\\\"Container\\\\\\\":\\\\\\\"temporary\\\\\\\",\\\\\\\"Potential causes\\\\\\\":\\\\\\\"This alert indicates that this account has been accessed successfully from an IP address that is unfamiliar and unexpected compared to recent access pattern on this account.\\\\\\\\\\\\Potential causes:\\\\\\\\\\\\\u2022 An attacker has accessed your storage account.\\\\\\\\\\\\\u2022 A legitimate user has accessed your storage account from a new location.\\\\\\\",\\\\\\\"resourceType\\\\\\\":\\\\\\\"Storage\\\\\\\",\\\\\\\"ReportingSystem\\\\\\\":\\\\\\\"Azure\\\\\\\"}\\\",\\\"\\\\\\\"InitialAccess\\\\\\\"\\\"]\" , \"vendorInformation\" : { \"provider\" : \"ASC\" , \"providerVersion\" : null , \"subProvider\" : \"StorageThreatDetection\" , \"vendor\" : \"Microsoft\" }, \"alertDetections\" : [], \"cloudAppStates\" : [], \"fileStates\" : [], \"hostStates\" : [], \"historyStates\" : [], \"investigationSecurityStates\" : [], \"malwareStates\" : [], \"messageSecurityStates\" : [], \"networkConnections\" : [ { \"applicationName\" : null , \"destinationAddress\" : null , \"destinationDomain\" : null , \"destinationLocation\" : null , \"destinationPort\" : null , \"destinationUrl\" : null , \"direction\" : null , \"domainRegisteredDateTime\" : null , \"localDnsName\" : null , \"natDestinationAddress\" : null , \"natDestinationPort\" : null , \"natSourceAddress\" : null , \"natSourcePort\" : null , \"protocol\" : \"tcp\" , \"riskScore\" : null , \"sourceAddress\" : \"52.214.204.49\" , \"sourceLocation\" : \"Dublin, Dublin, IE\" , \"sourcePort\" : null , \"status\" : null , \"urlParameters\" : null } ], \"processes\" : [], \"registryKeyStates\" : [], \"securityResources\" : [ { \"resource\" : \"/subscriptions/bbdf91d0-d75b-430e-b738-2c525452144f/resourceGroups/managed-rg-purview-mip-poc/providers/Microsoft.Storage/storageAccounts/scanwesteuropegivcebj\" , \"resourceType\" : \"attacked\" } ], \"triggers\" : [], \"userStates\" : [], \"uriClickSecurityStates\" : [], \"vulnerabilityStates\" : [] } ] id title severity ------------------------------------ -------------------------- -------- 4ece2cf8-cbc0-5a42-92c3-e23f96006907 SharePoint Bulk Edit Items medium id,title,severity 4ece2cf8-cbc0-5a42-92c3-e23f96006907,SharePoint Bulk Edit Items,medium","title":"security alerts list"},{"location":"cmd/tenant/security/security-alerts-list/#tenant-security-alerts-list","text":"Gets the security alerts for a tenant","title":"tenant security alerts list"},{"location":"cmd/tenant/security/security-alerts-list/#usage","text":"m365 tenant security alerts list [ options ]","title":"Usage"},{"location":"cmd/tenant/security/security-alerts-list/#options","text":"--vendor [vendor] The vendor to return alerts for. Possible values Azure Advanced Threat Protection , Azure Security Center , Microsoft Cloud App Security , Azure Active Directory Identity Protection , Azure Sentinel , Microsoft Defender ATP . If omitted, all alerts are returned -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/tenant/security/security-alerts-list/#examples","text":"Get all security alerts for a tenant m365 tenant security alerts list Get security alerts for a vendor with name Azure Sentinel m365 tenant security alerts list --vendor \"Azure Sentinel\"","title":"Examples"},{"location":"cmd/tenant/security/security-alerts-list/#response","text":"JSON Text CSV [ { \"id\" : \"2517536653831539999_658fa695-a5e6-4b60-ac7c-b2c1396df384\" , \"azureTenantId\" : \"b8e1599d-b418-4be9-8f39-df03c3abe27a\" , \"azureSubscriptionId\" : \"ee390228-e284-4e54-a464-d693a1d55540\" , \"riskScore\" : null , \"tags\" : [], \"activityGroupName\" : null , \"assignedTo\" : null , \"category\" : \"Storage.Blob_GeoAnomaly\" , \"closedDateTime\" : null , \"comments\" : [], \"confidence\" : null , \"createdDateTime\" : \"2022-03-30T13:19:15.8039138Z\" , \"description\" : \"Someone has accessed your Azure Storage account 'westeuropegivcekj' from an unusual location.\" , \"detectionIds\" : [], \"eventDateTime\" : \"2022-03-30T10:16:56.846Z\" , \"feedback\" : null , \"incidentIds\" : [], \"lastEventDateTime\" : null , \"lastModifiedDateTime\" : \"2022-03-30T13:19:48.5196488Z\" , \"recommendedActions\" : [ \"\u2022 Limit access to your storage account, following the 'least privilege' principle: https://go.microsoft.com/fwlink/?linkid=2187303.\u2022 Consider using identity-based authentication: https://go.microsoft.com/fwlink/?linkid=2187202.\u2022 Consider rotating the storage account access keys and ensure that your access tokens are only shared with authorized users.\u2022 Ensure that storage access tokens are stored in a secured location such as Azure Key Vault. Avoid storing or sharing storage access tokens in source code, documentation, and email.\" ], \"severity\" : \"low\" , \"sourceMaterials\" : [ \"https://portal.azure.com/#blade/Microsoft_Azure_Security_AzureDefenderForData/AlertBlade/alertId/2517536653831539999_658fa695-a5e6-4b60-ac7c-b2c1396df384/subscriptionId/bbdf91d0-d75b-430e-b738-2c525452144f/resourceGroup/managed-rg-purview-mip-poc/referencedFrom/alertDeepLink/location/westeurope\" ], \"status\" : \"newAlert\" , \"title\" : \"Access from an unusual location to a storage blob container\" , \"CustomProperties\" : \"[\\\"{\\\\\\\"Alert Id\\\\\\\":\\\\\\\"658fa695-a5e6-4b60-ac7c-b2c1396df384\\\\\\\",\\\\\\\"Azure AD user\\\\\\\":\\\\\\\"N/A (Azure AD user authentication was not used)\\\\\\\",\\\\\\\"User agent\\\\\\\":\\\\\\\"Azure-Storage/9.3.0 (.NET Core)\\\\\\\",\\\\\\\"API type\\\\\\\":\\\\\\\"Blob\\\\\\\",\\\\\\\"Client location\\\\\\\":\\\\\\\"Dublin, Ireland\\\\\\\",\\\\\\\"Authentication type\\\\\\\":\\\\\\\"Shared access signature (SAS)\\\\\\\",\\\\\\\"Investigation steps\\\\\\\":\\\\\\\"{\\\\\\\\\\\\\\\"displayValue\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"View related storage activity using Storage Analytics Logging. See how to configure Storage Analytics logging and more information\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"kind\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"Link\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"https:\\\\\\\\\\\\\\\\/\\\\\\\\\\\\\\\\/go.microsoft.com\\\\\\\\\\\\\\\\/fwlink\\\\\\\\\\\\\\\\/?linkid=2075734\\\\\\\\\\\\\\\"}\\\\\\\",\\\\\\\"Operations types\\\\\\\":\\\\\\\"GetBlob\\\\\\\",\\\\\\\"Service type\\\\\\\":\\\\\\\"Azure Blobs\\\\\\\",\\\\\\\"Container\\\\\\\":\\\\\\\"temporary\\\\\\\",\\\\\\\"Potential causes\\\\\\\":\\\\\\\"This alert indicates that this account has been accessed successfully from an IP address that is unfamiliar and unexpected compared to recent access pattern on this account.\\\\\\\\\\\\Potential causes:\\\\\\\\\\\\\u2022 An attacker has accessed your storage account.\\\\\\\\\\\\\u2022 A legitimate user has accessed your storage account from a new location.\\\\\\\",\\\\\\\"resourceType\\\\\\\":\\\\\\\"Storage\\\\\\\",\\\\\\\"ReportingSystem\\\\\\\":\\\\\\\"Azure\\\\\\\"}\\\",\\\"\\\\\\\"InitialAccess\\\\\\\"\\\"]\" , \"vendorInformation\" : { \"provider\" : \"ASC\" , \"providerVersion\" : null , \"subProvider\" : \"StorageThreatDetection\" , \"vendor\" : \"Microsoft\" }, \"alertDetections\" : [], \"cloudAppStates\" : [], \"fileStates\" : [], \"hostStates\" : [], \"historyStates\" : [], \"investigationSecurityStates\" : [], \"malwareStates\" : [], \"messageSecurityStates\" : [], \"networkConnections\" : [ { \"applicationName\" : null , \"destinationAddress\" : null , \"destinationDomain\" : null , \"destinationLocation\" : null , \"destinationPort\" : null , \"destinationUrl\" : null , \"direction\" : null , \"domainRegisteredDateTime\" : null , \"localDnsName\" : null , \"natDestinationAddress\" : null , \"natDestinationPort\" : null , \"natSourceAddress\" : null , \"natSourcePort\" : null , \"protocol\" : \"tcp\" , \"riskScore\" : null , \"sourceAddress\" : \"52.214.204.49\" , \"sourceLocation\" : \"Dublin, Dublin, IE\" , \"sourcePort\" : null , \"status\" : null , \"urlParameters\" : null } ], \"processes\" : [], \"registryKeyStates\" : [], \"securityResources\" : [ { \"resource\" : \"/subscriptions/bbdf91d0-d75b-430e-b738-2c525452144f/resourceGroups/managed-rg-purview-mip-poc/providers/Microsoft.Storage/storageAccounts/scanwesteuropegivcebj\" , \"resourceType\" : \"attacked\" } ], \"triggers\" : [], \"userStates\" : [], \"uriClickSecurityStates\" : [], \"vulnerabilityStates\" : [] } ] id title severity ------------------------------------ -------------------------- -------- 4ece2cf8-cbc0-5a42-92c3-e23f96006907 SharePoint Bulk Edit Items medium id,title,severity 4ece2cf8-cbc0-5a42-92c3-e23f96006907,SharePoint Bulk Edit Items,medium","title":"Response"},{"location":"cmd/tenant/serviceannouncement/serviceannouncement-health-get/","text":"tenant serviceannouncement health get \u00b6 Get the health report of a specified service for a tenant Usage \u00b6 m365 tenant serviceannouncement health get [ options ] Options \u00b6 -s, --serviceName <serviceName> The service name to retrieve the health report for. -i, --issues Return the collection of issues that happened on the service, with detailed information for each issue. Is only returned in JSON output mode. -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Get the health report for the service Exchange Online m365 tenant serviceannouncement health get --serviceName \"Exchange Online\" Get the health report for the service Exchange Online including the issues of the service m365 tenant serviceannouncement health get --serviceName \"Exchange Online\" --issues Response \u00b6 Standard response \u00b6 JSON Text CSV { \"service\" : \"Exchange Online\" , \"status\" : \"serviceDegradation\" , \"id\" : \"Exchange\" } id : Exchange service: Exchange Online status : serviceDegradation id,status,service Exchange,serviceDegradation,Exchange Online issues response \u00b6 When we make use of the option issues the response will differ. JSON Text CSV { \"service\" : \"Exchange Online\" , \"status\" : \"serviceDegradation\" , \"id\" : \"Exchange\" , \"issues\" : [ { \"startDateTime\" : \"2022-08-17T18:27:00Z\" , \"endDateTime\" : \"2022-08-18T16:06:18Z\" , \"lastModifiedDateTime\" : \"2022-08-18T16:46:04.133Z\" , \"title\" : \"Admins\u00d4\u00c7\u00d6 downloaded CSV mailbox usage reports via Microsoft 365 admin center don\u00d4\u00c7\u00d6t contain data prior to August 1, 2022\" , \"id\" : \"EX415080\" , \"impactDescription\" : \"Admins\u00d4\u00c7\u00d6 downloaded CSV mailbox usage reports via Microsoft 365 admin center didn't contain data prior to August 1, 2022.\" , \"classification\" : \"advisory\" , \"origin\" : \"microsoft\" , \"status\" : \"serviceRestored\" , \"service\" : \"Exchange Online\" , \"feature\" : \"Windows Live sign-in issue\" , \"featureGroup\" : \"Sign-in\" , \"isResolved\" : true , \"highImpact\" : null , \"details\" : [], \"posts\" : [ { \"createdDateTime\" : \"2022-08-17T18:34:54.95Z\" , \"postType\" : \"regular\" , \"description\" : { \"contentType\" : \"html\" , \"content\" : \"Title: Admins\u00d4\u00c7\u00d6 downloaded CSV mailbox usage reports via Microsoft 365 admin center don\u00d4\u00c7\u00d6t contain data prior to August 1, 2022\\\\\\n\\nUser impact: Admins\u00d4\u00c7\u00d6 downloaded CSV mailbox usage reports via Microsoft 365 admin center don\u00d4\u00c7\u00d6t contain data prior to August 1, 2022.\\\\\\n\\nCurrent status: We're investigating a potential issue and checking for impact to your organization. We'll provide an update within 30 minutes.\" } } ] } ] } id status service ---------- ------------------ ----------------- Exchange serviceDegradation Exchange Online id,status,service Exchange,serviceDegradation,Exchange Online","title":"serviceannouncement health get"},{"location":"cmd/tenant/serviceannouncement/serviceannouncement-health-get/#tenant-serviceannouncement-health-get","text":"Get the health report of a specified service for a tenant","title":"tenant serviceannouncement health get"},{"location":"cmd/tenant/serviceannouncement/serviceannouncement-health-get/#usage","text":"m365 tenant serviceannouncement health get [ options ]","title":"Usage"},{"location":"cmd/tenant/serviceannouncement/serviceannouncement-health-get/#options","text":"-s, --serviceName <serviceName> The service name to retrieve the health report for. -i, --issues Return the collection of issues that happened on the service, with detailed information for each issue. Is only returned in JSON output mode. -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/tenant/serviceannouncement/serviceannouncement-health-get/#examples","text":"Get the health report for the service Exchange Online m365 tenant serviceannouncement health get --serviceName \"Exchange Online\" Get the health report for the service Exchange Online including the issues of the service m365 tenant serviceannouncement health get --serviceName \"Exchange Online\" --issues","title":"Examples"},{"location":"cmd/tenant/serviceannouncement/serviceannouncement-health-get/#response","text":"","title":"Response"},{"location":"cmd/tenant/serviceannouncement/serviceannouncement-health-get/#standard-response","text":"JSON Text CSV { \"service\" : \"Exchange Online\" , \"status\" : \"serviceDegradation\" , \"id\" : \"Exchange\" } id : Exchange service: Exchange Online status : serviceDegradation id,status,service Exchange,serviceDegradation,Exchange Online","title":"Standard response"},{"location":"cmd/tenant/serviceannouncement/serviceannouncement-health-get/#issues-response","text":"When we make use of the option issues the response will differ. JSON Text CSV { \"service\" : \"Exchange Online\" , \"status\" : \"serviceDegradation\" , \"id\" : \"Exchange\" , \"issues\" : [ { \"startDateTime\" : \"2022-08-17T18:27:00Z\" , \"endDateTime\" : \"2022-08-18T16:06:18Z\" , \"lastModifiedDateTime\" : \"2022-08-18T16:46:04.133Z\" , \"title\" : \"Admins\u00d4\u00c7\u00d6 downloaded CSV mailbox usage reports via Microsoft 365 admin center don\u00d4\u00c7\u00d6t contain data prior to August 1, 2022\" , \"id\" : \"EX415080\" , \"impactDescription\" : \"Admins\u00d4\u00c7\u00d6 downloaded CSV mailbox usage reports via Microsoft 365 admin center didn't contain data prior to August 1, 2022.\" , \"classification\" : \"advisory\" , \"origin\" : \"microsoft\" , \"status\" : \"serviceRestored\" , \"service\" : \"Exchange Online\" , \"feature\" : \"Windows Live sign-in issue\" , \"featureGroup\" : \"Sign-in\" , \"isResolved\" : true , \"highImpact\" : null , \"details\" : [], \"posts\" : [ { \"createdDateTime\" : \"2022-08-17T18:34:54.95Z\" , \"postType\" : \"regular\" , \"description\" : { \"contentType\" : \"html\" , \"content\" : \"Title: Admins\u00d4\u00c7\u00d6 downloaded CSV mailbox usage reports via Microsoft 365 admin center don\u00d4\u00c7\u00d6t contain data prior to August 1, 2022\\\\\\n\\nUser impact: Admins\u00d4\u00c7\u00d6 downloaded CSV mailbox usage reports via Microsoft 365 admin center don\u00d4\u00c7\u00d6t contain data prior to August 1, 2022.\\\\\\n\\nCurrent status: We're investigating a potential issue and checking for impact to your organization. We'll provide an update within 30 minutes.\" } } ] } ] } id status service ---------- ------------------ ----------------- Exchange serviceDegradation Exchange Online id,status,service Exchange,serviceDegradation,Exchange Online","title":"issues response"},{"location":"cmd/tenant/serviceannouncement/serviceannouncement-health-list/","text":"tenant serviceannouncement health list \u00b6 Gets the health report of all subscribed services for a tenant Usage \u00b6 m365 tenant serviceannouncement health list [ options ] Options \u00b6 -i, --issues Return the collection of issues that happened on the service, with detailed information for each issue. Is only returned in JSON output mode. -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Get the health report of all subscribed services for a tenant m365 tenant serviceannouncement health list Get the health report of all subscribed services for a tenant including the issues that happend on each service m365 tenant serviceannouncement health list --issues Response \u00b6 Standard response \u00b6 JSON Text CSV [ { \"service\" : \"Exchange Online\" , \"status\" : \"serviceDegradation\" , \"id\" : \"Exchange\" } ] id status service ---------- ------------------ ----------------- Exchange serviceDegradation Exchange Online id,status,service Exchange,serviceDegradation,Exchange Online issues response \u00b6 When we make use of the option issues the response will differ. JSON Text CSV [ { \"service\" : \"Microsoft Defender for Cloud Apps\" , \"status\" : \"serviceOperational\" , \"id\" : \"cloudappsecurity\" , \"issues\" : [ { \"startDateTime\" : \"2022-05-13T00:00:00Z\" , \"endDateTime\" : \"2022-05-16T13:10:00Z\" , \"lastModifiedDateTime\" : \"2022-05-17T11:00:42.2Z\" , \"title\" : \"Microsoft Defender for Cloud Apps admin panel changes not propagating to Microsoft Defender for Endpoint\" , \"id\" : \"CS381143\" , \"impactDescription\" : \"Admins may notice that Microsoft Defender for Cloud Apps admin panel changes did not propagate to Microsoft Defender for\" , \"classification\" : \"advisory\" , \"origin\" : \"microsoft\" , \"status\" : \"serviceRestored\" , \"service\" : \"Microsoft Defender for Cloud Apps\" , \"feature\" : \"Cloud App Security\" , \"featureGroup\" : \"Cloud App Security\" , \"isResolved\" : true , \"highImpact\" : null , \"details\" : [], \"posts\" : [ { \"createdDateTime\" : \"2022-05-17T08:31:31.113Z\" , \"postType\" : \"regular\" , \"description\" : { \"contentType\" : \"html\" , \"content\" : \"Title: Microsoft Defender for Cloud Apps admin panel changes not propagating to Microsoft Defender for Endpoint\\\\\\n\\nUser Impact: Admins may notice that Microsoft Defender for Cloud Apps admin panel changes do not propagate to Microsoft Defender for Endpoint.\\\\\\n\\nCurrent status: We're analyzing system logs to determine the source of the issue.\\\\\\n\\nScope of impact: Impact is specific to users who are served through the affected infrastructure.\\\\\\n\\nNext update by: Tuesday, May 17, 2022, at 10:30 AM UTC\" } } ] } ] } ] id status service ---------- ------------------ ----------------- Exchange serviceDegradation Exchange Online id,status,service Exchange,serviceDegradation,Exchange Online","title":"serviceannouncement health list"},{"location":"cmd/tenant/serviceannouncement/serviceannouncement-health-list/#tenant-serviceannouncement-health-list","text":"Gets the health report of all subscribed services for a tenant","title":"tenant serviceannouncement health list"},{"location":"cmd/tenant/serviceannouncement/serviceannouncement-health-list/#usage","text":"m365 tenant serviceannouncement health list [ options ]","title":"Usage"},{"location":"cmd/tenant/serviceannouncement/serviceannouncement-health-list/#options","text":"-i, --issues Return the collection of issues that happened on the service, with detailed information for each issue. Is only returned in JSON output mode. -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/tenant/serviceannouncement/serviceannouncement-health-list/#examples","text":"Get the health report of all subscribed services for a tenant m365 tenant serviceannouncement health list Get the health report of all subscribed services for a tenant including the issues that happend on each service m365 tenant serviceannouncement health list --issues","title":"Examples"},{"location":"cmd/tenant/serviceannouncement/serviceannouncement-health-list/#response","text":"","title":"Response"},{"location":"cmd/tenant/serviceannouncement/serviceannouncement-health-list/#standard-response","text":"JSON Text CSV [ { \"service\" : \"Exchange Online\" , \"status\" : \"serviceDegradation\" , \"id\" : \"Exchange\" } ] id status service ---------- ------------------ ----------------- Exchange serviceDegradation Exchange Online id,status,service Exchange,serviceDegradation,Exchange Online","title":"Standard response"},{"location":"cmd/tenant/serviceannouncement/serviceannouncement-health-list/#issues-response","text":"When we make use of the option issues the response will differ. JSON Text CSV [ { \"service\" : \"Microsoft Defender for Cloud Apps\" , \"status\" : \"serviceOperational\" , \"id\" : \"cloudappsecurity\" , \"issues\" : [ { \"startDateTime\" : \"2022-05-13T00:00:00Z\" , \"endDateTime\" : \"2022-05-16T13:10:00Z\" , \"lastModifiedDateTime\" : \"2022-05-17T11:00:42.2Z\" , \"title\" : \"Microsoft Defender for Cloud Apps admin panel changes not propagating to Microsoft Defender for Endpoint\" , \"id\" : \"CS381143\" , \"impactDescription\" : \"Admins may notice that Microsoft Defender for Cloud Apps admin panel changes did not propagate to Microsoft Defender for\" , \"classification\" : \"advisory\" , \"origin\" : \"microsoft\" , \"status\" : \"serviceRestored\" , \"service\" : \"Microsoft Defender for Cloud Apps\" , \"feature\" : \"Cloud App Security\" , \"featureGroup\" : \"Cloud App Security\" , \"isResolved\" : true , \"highImpact\" : null , \"details\" : [], \"posts\" : [ { \"createdDateTime\" : \"2022-05-17T08:31:31.113Z\" , \"postType\" : \"regular\" , \"description\" : { \"contentType\" : \"html\" , \"content\" : \"Title: Microsoft Defender for Cloud Apps admin panel changes not propagating to Microsoft Defender for Endpoint\\\\\\n\\nUser Impact: Admins may notice that Microsoft Defender for Cloud Apps admin panel changes do not propagate to Microsoft Defender for Endpoint.\\\\\\n\\nCurrent status: We're analyzing system logs to determine the source of the issue.\\\\\\n\\nScope of impact: Impact is specific to users who are served through the affected infrastructure.\\\\\\n\\nNext update by: Tuesday, May 17, 2022, at 10:30 AM UTC\" } } ] } ] } ] id status service ---------- ------------------ ----------------- Exchange serviceDegradation Exchange Online id,status,service Exchange,serviceDegradation,Exchange Online","title":"issues response"},{"location":"cmd/tenant/serviceannouncement/serviceannouncement-healthissue-get/","text":"tenant serviceannouncement healthissue get \u00b6 Gets a specified service health issue for tenant. Usage \u00b6 m365 tenant serviceannouncement healthissue get [ options ] Options \u00b6 -i, --id <id> The issue id to get details for -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Gets information about issue with ID MO226784 m365 tenant serviceannouncement healthissue get --id MO226784 Response \u00b6 JSON Text CSV { \"startDateTime\" : \"2022-05-24T16:00:00Z\" , \"endDateTime\" : \"2022-05-24T22:20:00Z\" , \"lastModifiedDateTime\" : \"2022-05-24T22:27:18.63Z\" , \"title\" : \"Installation delays within the Power Platform admin center\" , \"id\" : \"CR384241\" , \"impactDescription\" : \"Users may have experienced delays when installing applications within the Power Platform admin center.\" , \"classification\" : \"advisory\" , \"origin\" : \"microsoft\" , \"status\" : \"serviceRestored\" , \"service\" : \"Dynamics 365 Apps\" , \"feature\" : \"Other\" , \"featureGroup\" : \"Other\" , \"isResolved\" : true , \"highImpact\" : null , \"details\" : [], \"posts\" : [ { \"createdDateTime\" : \"2022-05-24T21:22:56.817Z\" , \"postType\" : \"regular\" , \"description\" : { \"contentType\" : \"html\" , \"content\" : \"Title: Installation delays within the Power Platform admin center\\\\\\n\\nUser Impact: Users may experience delays when installing applications within the Power Platform admin center.\\\\\\n\\nWe are aware of an emerging issue where users are experiencing delays when installing applications through the Power Platform admin center. We are investigating the issue and will provide another update within the next 30 minutes.\\\\\\n\\nThis information is preliminary and may be subject to changes, corrections, and updates.\" } } ] } classification : advisory details : [] endDateTime : 2022-05-24T22:20:00Z feature : Other featureGroup : Other highImpact : null id : CR384241 impactDescription : Users may have experienced delays when installing applications within the Power Platform admin center. isResolved : true lastModifiedDateTime: 2022-05-24T22:27:18.63Z origin : microsoft posts : [{\"createdDateTime\":\"2022-05-24T21:22:56.817Z\",\"postType\":\"regular\",\"description\":{\"contentType\":\"html\",\"content\":\"Title: Installation delays within the Power Platform admin center\\n\\nUser Impact: Users may experience delays when installing applications within the Power Platform admin center.\\n\\nWe are aware of an emerging issue where users are experiencing delays when installing applications through the Power Platform admin center. We are investigating the issue and will provide another update within the next 30 minutes.\\n\\nThis information is preliminary and may be subject to changes, corrections, and updates.\"}}] service : Dynamics 365 Apps startDateTime : 2022-05-24T16:00:00Z status : serviceRestored title : Installation delays within the Power Platform admin center startDateTime,endDateTime,lastModifiedDateTime,title,id,impactDescription,classification,origin,status,service,feature,featureGroup,isResolved,highImpact,details,posts 2022-05-24T16:00:00Z,2022-05-24T22:20:00Z,2022-05-24T22:27:18.63Z,Installation delays within the Power Platform admin center,CR384241,Users may have experienced delays when installing applications within the Power Platform admin center.,advisory,microsoft,serviceRestored,Dynamics 365 Apps,Other,Other,1,,[],\"[{\"\"createdDateTime\"\":\"\"2022-05-24T21:22:56.817Z\"\",\"\"postType\"\":\"\"regular\"\",\"\"description\"\":{\"\"contentType\"\":\"\"html\"\",\"\"content\"\":\"\"Title: Installation delays within the Power Platform admin center\\n\\nUser Impact: Users may experience delays when installing applications within the Power Platform admin center.\\n\\nWe are aware of an emerging issue where users are experiencing delays when installing applications through the Power Platform admin center. We are investigating the issue and will provide another update within the next 30 minutes.\\n\\nThis information is preliminary and may be subject to changes, corrections, and updates.\"\"}}]\"","title":"serviceannouncement healthissue get"},{"location":"cmd/tenant/serviceannouncement/serviceannouncement-healthissue-get/#tenant-serviceannouncement-healthissue-get","text":"Gets a specified service health issue for tenant.","title":"tenant serviceannouncement healthissue get"},{"location":"cmd/tenant/serviceannouncement/serviceannouncement-healthissue-get/#usage","text":"m365 tenant serviceannouncement healthissue get [ options ]","title":"Usage"},{"location":"cmd/tenant/serviceannouncement/serviceannouncement-healthissue-get/#options","text":"-i, --id <id> The issue id to get details for -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/tenant/serviceannouncement/serviceannouncement-healthissue-get/#examples","text":"Gets information about issue with ID MO226784 m365 tenant serviceannouncement healthissue get --id MO226784","title":"Examples"},{"location":"cmd/tenant/serviceannouncement/serviceannouncement-healthissue-get/#response","text":"JSON Text CSV { \"startDateTime\" : \"2022-05-24T16:00:00Z\" , \"endDateTime\" : \"2022-05-24T22:20:00Z\" , \"lastModifiedDateTime\" : \"2022-05-24T22:27:18.63Z\" , \"title\" : \"Installation delays within the Power Platform admin center\" , \"id\" : \"CR384241\" , \"impactDescription\" : \"Users may have experienced delays when installing applications within the Power Platform admin center.\" , \"classification\" : \"advisory\" , \"origin\" : \"microsoft\" , \"status\" : \"serviceRestored\" , \"service\" : \"Dynamics 365 Apps\" , \"feature\" : \"Other\" , \"featureGroup\" : \"Other\" , \"isResolved\" : true , \"highImpact\" : null , \"details\" : [], \"posts\" : [ { \"createdDateTime\" : \"2022-05-24T21:22:56.817Z\" , \"postType\" : \"regular\" , \"description\" : { \"contentType\" : \"html\" , \"content\" : \"Title: Installation delays within the Power Platform admin center\\\\\\n\\nUser Impact: Users may experience delays when installing applications within the Power Platform admin center.\\\\\\n\\nWe are aware of an emerging issue where users are experiencing delays when installing applications through the Power Platform admin center. We are investigating the issue and will provide another update within the next 30 minutes.\\\\\\n\\nThis information is preliminary and may be subject to changes, corrections, and updates.\" } } ] } classification : advisory details : [] endDateTime : 2022-05-24T22:20:00Z feature : Other featureGroup : Other highImpact : null id : CR384241 impactDescription : Users may have experienced delays when installing applications within the Power Platform admin center. isResolved : true lastModifiedDateTime: 2022-05-24T22:27:18.63Z origin : microsoft posts : [{\"createdDateTime\":\"2022-05-24T21:22:56.817Z\",\"postType\":\"regular\",\"description\":{\"contentType\":\"html\",\"content\":\"Title: Installation delays within the Power Platform admin center\\n\\nUser Impact: Users may experience delays when installing applications within the Power Platform admin center.\\n\\nWe are aware of an emerging issue where users are experiencing delays when installing applications through the Power Platform admin center. We are investigating the issue and will provide another update within the next 30 minutes.\\n\\nThis information is preliminary and may be subject to changes, corrections, and updates.\"}}] service : Dynamics 365 Apps startDateTime : 2022-05-24T16:00:00Z status : serviceRestored title : Installation delays within the Power Platform admin center startDateTime,endDateTime,lastModifiedDateTime,title,id,impactDescription,classification,origin,status,service,feature,featureGroup,isResolved,highImpact,details,posts 2022-05-24T16:00:00Z,2022-05-24T22:20:00Z,2022-05-24T22:27:18.63Z,Installation delays within the Power Platform admin center,CR384241,Users may have experienced delays when installing applications within the Power Platform admin center.,advisory,microsoft,serviceRestored,Dynamics 365 Apps,Other,Other,1,,[],\"[{\"\"createdDateTime\"\":\"\"2022-05-24T21:22:56.817Z\"\",\"\"postType\"\":\"\"regular\"\",\"\"description\"\":{\"\"contentType\"\":\"\"html\"\",\"\"content\"\":\"\"Title: Installation delays within the Power Platform admin center\\n\\nUser Impact: Users may experience delays when installing applications within the Power Platform admin center.\\n\\nWe are aware of an emerging issue where users are experiencing delays when installing applications through the Power Platform admin center. We are investigating the issue and will provide another update within the next 30 minutes.\\n\\nThis information is preliminary and may be subject to changes, corrections, and updates.\"\"}}]\"","title":"Response"},{"location":"cmd/tenant/serviceannouncement/serviceannouncement-healthissue-list/","text":"tenant serviceannouncement healthissue list \u00b6 Gets all service health issues for the tenant. Usage \u00b6 m365 tenant serviceannouncement healthissue list [ options ] Options \u00b6 -s, --service [service] Retrieve service health issues for the particular service. If not provided, retrieves health issues for all services -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Get service health issues of all services in Microsoft 365 m365 tenant serviceannouncement healthissue list Get service health issues for Microsoft Forms m365 tenant serviceannouncement healthissue list --service \"Microsoft Forms\" Response \u00b6 JSON Text CSV [ { \"startDateTime\" : \"2022-05-24T16:00:00Z\" , \"endDateTime\" : \"2022-05-24T22:20:00Z\" , \"lastModifiedDateTime\" : \"2022-05-24T22:27:18.63Z\" , \"title\" : \"Installation delays within the Power Platform admin center\" , \"id\" : \"CR384241\" , \"impactDescription\" : \"Users may have experienced delays when installing applications within the Power Platform admin center.\" , \"classification\" : \"advisory\" , \"origin\" : \"microsoft\" , \"status\" : \"serviceRestored\" , \"service\" : \"Dynamics 365 Apps\" , \"feature\" : \"Other\" , \"featureGroup\" : \"Other\" , \"isResolved\" : true , \"highImpact\" : null , \"details\" : [], \"posts\" : [ { \"createdDateTime\" : \"2022-05-24T21:22:56.817Z\" , \"postType\" : \"regular\" , \"description\" : { \"contentType\" : \"html\" , \"content\" : \"Title: Installation delays within the Power Platform admin center\\\\\\n\\nUser Impact: Users may experience delays when installing applications within the Power Platform admin center.\\\\\\n\\nWe are aware of an emerging issue where users are experiencing delays when installing applications through the Power Platform admin center. We are investigating the issue and will provide another update within the next 30 minutes.\\\\\\n\\nThis information is preliminary and may be subject to changes, corrections, and updates.\" } } ] } ] id title -------- ---------------------------------------------------------- CR384241 Installation delays within the Power Platform admin center id,title CR384241,Installation delays within the Power Platform admin center More information \u00b6 List serviceAnnouncement issues: https://docs.microsoft.com/en-us/graph/api/serviceannouncement-list-issues","title":"serviceannouncement healthissue list"},{"location":"cmd/tenant/serviceannouncement/serviceannouncement-healthissue-list/#tenant-serviceannouncement-healthissue-list","text":"Gets all service health issues for the tenant.","title":"tenant serviceannouncement healthissue list"},{"location":"cmd/tenant/serviceannouncement/serviceannouncement-healthissue-list/#usage","text":"m365 tenant serviceannouncement healthissue list [ options ]","title":"Usage"},{"location":"cmd/tenant/serviceannouncement/serviceannouncement-healthissue-list/#options","text":"-s, --service [service] Retrieve service health issues for the particular service. If not provided, retrieves health issues for all services -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/tenant/serviceannouncement/serviceannouncement-healthissue-list/#examples","text":"Get service health issues of all services in Microsoft 365 m365 tenant serviceannouncement healthissue list Get service health issues for Microsoft Forms m365 tenant serviceannouncement healthissue list --service \"Microsoft Forms\"","title":"Examples"},{"location":"cmd/tenant/serviceannouncement/serviceannouncement-healthissue-list/#response","text":"JSON Text CSV [ { \"startDateTime\" : \"2022-05-24T16:00:00Z\" , \"endDateTime\" : \"2022-05-24T22:20:00Z\" , \"lastModifiedDateTime\" : \"2022-05-24T22:27:18.63Z\" , \"title\" : \"Installation delays within the Power Platform admin center\" , \"id\" : \"CR384241\" , \"impactDescription\" : \"Users may have experienced delays when installing applications within the Power Platform admin center.\" , \"classification\" : \"advisory\" , \"origin\" : \"microsoft\" , \"status\" : \"serviceRestored\" , \"service\" : \"Dynamics 365 Apps\" , \"feature\" : \"Other\" , \"featureGroup\" : \"Other\" , \"isResolved\" : true , \"highImpact\" : null , \"details\" : [], \"posts\" : [ { \"createdDateTime\" : \"2022-05-24T21:22:56.817Z\" , \"postType\" : \"regular\" , \"description\" : { \"contentType\" : \"html\" , \"content\" : \"Title: Installation delays within the Power Platform admin center\\\\\\n\\nUser Impact: Users may experience delays when installing applications within the Power Platform admin center.\\\\\\n\\nWe are aware of an emerging issue where users are experiencing delays when installing applications through the Power Platform admin center. We are investigating the issue and will provide another update within the next 30 minutes.\\\\\\n\\nThis information is preliminary and may be subject to changes, corrections, and updates.\" } } ] } ] id title -------- ---------------------------------------------------------- CR384241 Installation delays within the Power Platform admin center id,title CR384241,Installation delays within the Power Platform admin center","title":"Response"},{"location":"cmd/tenant/serviceannouncement/serviceannouncement-healthissue-list/#more-information","text":"List serviceAnnouncement issues: https://docs.microsoft.com/en-us/graph/api/serviceannouncement-list-issues","title":"More information"},{"location":"cmd/tenant/serviceannouncement/serviceannouncement-message-get/","text":"tenant serviceannouncement message get \u00b6 Retrieves a specified service update message for the tenant Usage \u00b6 m365 tenant serviceannouncement message get [ options ] Options \u00b6 -i, --id <id> The ID of the service update message. -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Get service update message with ID MC001337 m365 tenant serviceannouncement message get --id MC001337 Response \u00b6 JSON Text CSV { \"startDateTime\" : \"2021-07-08T00:37:37Z\" , \"endDateTime\" : \"2022-12-09T07:00:00Z\" , \"lastModifiedDateTime\" : \"2022-06-07T20:21:06.713Z\" , \"title\" : \"(Updated) Microsoft Lists: Custom list templates\" , \"id\" : \"MC267581\" , \"category\" : \"planForChange\" , \"severity\" : \"normal\" , \"tags\" : [ \"Updated message\" , \"New feature\" , \"User impact\" , \"Admin impact\" ], \"isMajorChange\" : false , \"actionRequiredByDateTime\" : null , \"services\" : [ \"SharePoint Online\" ], \"expiryDateTime\" : null , \"hasAttachments\" : false , \"viewPoint\" : null , \"details\" : [], \"body\" : { \"contentType\" : \"html\" , \"content\" : \"<p>Updated June 7, 2022: We have updated the rollout timeline below. Thank you for your patience.</p><p>This new feature will support the addition of custom list templates from your organization alongside the ready-made templates Microsoft provides to make it easy to get started tracking and managing information.</p> \\\\\\n<p>[Key points]</p> \\\\\\n<ul> \\\\\\n<li>Microsoft 365 <a href=\\\"https://www.microsoft.com/microsoft-365/roadmap?filters=&amp;searchterms=70753\\\" target=\\\"_blank\\\">Roadmap ID: 70753</a></li> \\\\\\n<li>Timing:<ul><li>Targeted release (entire org): Complete</li><li>Standard release: will roll out in mid-September (previously mid-May) and be complete by early November (previously mid-June)</li></ul></li> \\\\\\n<li>Roll-out: tenant level </li> \\\\\\n<li>Control type: user control / admin control</li> \\\\\\n<li>Action: review, assess and educate</li></ul><p>[How this will affect your organization]</p><p>This feature will give organizations the ability to create their own custom list templates with custom formatting and schema. It will also empower organizations to create repeatable solutions within the same Microsoft Lists infrastructure (including list creation in SharePoint, Teams, and within the Lists app itself).</p><p>End-user impact:</p>\\\\\\n<p>Visual updates to the list creation dialog and the addition of a<i> From your organization</i> tab when creating a new list. This new tab is where your custom list templates appear alongside the ready-made templates from Microsoft.</p>\\\\\\n<p><img src=\\\"https://img-prod-cms-rt-microsoft-com.akamaized.net/cms/api/am/imageFileData/RE4P81n?ver=c93f\\\" alt=\\\"Your custom list templates along with Microsoft ready-made templates\\\" width=\\\"550\\\"><br>\\\\\\nAdmin impact:</p>\\\\\\n<p>Custom list templates can only be uploaded by a SharePoint administrator for Microsoft 365 by using PowerShell cmdlets. For consistency, the process of defining and uploading custom list templates is like the custom site templates experience.</p><p>To define and upload custom list templates, admins will use the following site template PowerShell cmdlets:</p><ul><li>Use the <a href=\\\"https://docs.microsoft.com/powershell/module/sharepoint-online/get-spositescriptfromlist?view=sharepoint-ps\\\" target=\\\"_blank\\\">Get-SPOSiteScriptFromList</a> cmdlet to extract the site script from any list</li><li>Run <a href=\\\"https://docs.microsoft.com/powershell/module/sharepoint-online/add-spositescript?view=sharepoint-ps\\\" target=\\\"_blank\\\">Add-SPOSiteScript</a> and <b style=\\\"\\\">Add-SPOListDesign</b> to add the custom list template to your organization.</li><li>Scope who sees the template by using <a href=\\\"https://docs.microsoft.com/powershell/module/sharepoint-online/grant-spositedesignrights?view=sharepoint-ps\\\" target=\\\"_blank\\\">Grant-SPOSiteDesignRights</a> (Optional).</li></ul><p>The visual updates for this feature will be seen by end-users in the updated user interface (UI) when creating a list.</p><p>The <i>From your organization</i> tab will be empty until your organization defines and publishes custom list templates.</p>\\\\\\n<p><img src=\\\"https://img-prod-cms-rt-microsoft-com.akamaized.net/cms/api/am/imageFileData/RE4P81t?ver=70be\\\" alt=\\\"Your custom list templates along with Microsoft ready-made templates\\\" width=\\\"550\\\"></p><p>[What you need to do to prepare]</p><p>You might want to notify your users about this new capability and update your training and documentation as appropriate.</p>\\\\\\n<p>Learn more:</p><ul><li><a href=\\\"https://docs.microsoft.com/sharepoint/dev/declarative-customization/site-design-overview\\\" target=\\\"_blank\\\">PowerShell Cmdlets documentation for custom list templates</a></li><li> <a href=\\\"https://docs.microsoft.com/sharepoint/lists-custom-template\\\" target=\\\"_blank\\\">Creating custom list templates</a></li></ul>\" } } actionRequiredByDateTime: null body : {\"contentType\":\"html\",\"content\":\"<p>Updated June 7, 2022: We have updated the rollout timeline below. Thank you for your patience.</p><p>This new feature will support the addition of custom list templates from your organization alongside the ready-made templates Microsoft provides to make it easy to get started tracking and managing information.</p> \\n<p>[Key points]</p> \\n<ul> \\n<li>Microsoft 365 <a href=\\\"https://www.microsoft.com/microsoft-365/roadmap?filters=&amp;searchterms=70753\\\" target=\\\"_blank\\\">Roadmap ID: 70753</a></li> \\n<li>Timing:<ul><li>Targeted release (entire org): Complete</li><li>Standard release: will roll out in mid-September (previously mid-May) and be complete by early November (previously mid-June)</li></ul></li> \\n<li>Roll-out: tenant level </li> \\n<li>Control type: user control / admin control</li> \\n<li>Action: review, assess and educate</li></ul><p>[How this will affect your organization]</p><p>This feature will give organizations the ability to create their own custom list templates with custom formatting and schema. It will also empower organizations to create repeatable solutions within the same Microsoft Lists infrastructure (including list creation in SharePoint, Teams, and within the Lists app itself).</p><p>End-user impact:</p>\\n<p>Visual updates to the list creation dialog and the addition of a<i> From your organization</i> tab when creating a new list. This new tab is where your custom list templates appear alongside the ready-made templates from Microsoft.</p>\\n<p><img src=\\\"https://img-prod-cms-rt-microsoft-com.akamaized.net/cms/api/am/imageFileData/RE4P81n?ver=c93f\\\" alt=\\\"Your custom list templates along with Microsoft ready-made templates\\\" width=\\\"550\\\"><br>\\nAdmin impact:</p>\\n<p>Custom list templates can only be uploaded by a SharePoint administrator for Microsoft 365 by using PowerShell cmdlets. For consistency, the process of defining and uploading custom list templates is like the custom site templates experience.</p><p>To define and upload custom list templates, admins will use the following site template PowerShell cmdlets:</p><ul><li>Use the <a href=\\\"https://docs.microsoft.com/powershell/module/sharepoint-online/get-spositescriptfromlist?view=sharepoint-ps\\\" target=\\\"_blank\\\">Get-SPOSiteScriptFromList</a> cmdlet to extract the site script from any list</li><li>Run <a href=\\\"https://docs.microsoft.com/powershell/module/sharepoint-online/add-spositescript?view=sharepoint-ps\\\" target=\\\"_blank\\\">Add-SPOSiteScript</a> and <b style=\\\"\\\">Add-SPOListDesign</b> to add the custom list template to your organization.</li><li>Scope who sees the template by using <a href=\\\"https://docs.microsoft.com/powershell/module/sharepoint-online/grant-spositedesignrights?view=sharepoint-ps\\\" target=\\\"_blank\\\">Grant-SPOSiteDesignRights</a> (Optional).</li></ul><p>The visual updates for this feature will be seen by end-users in the updated user interface (UI) when creating a list.</p><p>The <i>From your organization</i> tab will be empty until your organization defines and publishes custom list templates.</p>\\n<p><img src=\\\"https://img-prod-cms-rt-microsoft-com.akamaized.net/cms/api/am/imageFileData/RE4P81t?ver=70be\\\" alt=\\\"Your custom list templates along with Microsoft ready-made templates\\\" width=\\\"550\\\"></p><p>[What you need to do to prepare]</p><p>You might want to notify your users about this new capability and update your training and documentation as appropriate.</p>\\n<p>Learn more:</p><ul><li><a href=\\\"https://docs.microsoft.com/sharepoint/dev/declarative-customization/site-design-overview\\\" target=\\\"_blank\\\">PowerShell Cmdlets documentation for custom list templates</a></li><li> <a href=\\\"https://docs.microsoft.com/sharepoint/lists-custom-template\\\" target=\\\"_blank\\\">Creating custom list templates</a></li></ul>\"} category : planForChange details : [] endDateTime : 2022-12-09T07:00:00Z expiryDateTime : null hasAttachments : false id : MC267581 isMajorChange : false lastModifiedDateTime : 2022-06-07T20:21:06.713Z services : [\"SharePoint Online\"] severity : normal startDateTime : 2021-07-08T00:37:37Z tags : [\"Updated message\",\"New feature\",\"User impact\",\"Admin impact\"] title : (Updated) Microsoft Lists: Custom list templates viewPoint : null startDateTime,endDateTime,lastModifiedDateTime,title,id,category,severity,tags,isMajorChange,actionRequiredByDateTime,services,expiryDateTime,hasAttachments,viewPoint,details,body 2021-07-08T00:37:37Z,2022-12-09T07:00:00Z,2022-06-07T20:21:06.713Z,(Updated) Microsoft Lists: Custom list templates,MC267581,planForChange,normal,\"[\"\"Updated message\"\",\"\"New feature\"\",\"\"User impact\"\",\"\"Admin impact\"\"]\",,,\"[\"\"SharePoint Online\"\"]\",,,,[],\"{\"\"contentType\"\":\"\"html\"\",\"\"content\"\":\"\"<p>Updated June 7, 2022: We have updated the rollout timeline below. Thank you for your patience.</p><p>This new feature will support the addition of custom list templates from your organization alongside the ready-made templates Microsoft provides to make it easy to get started tracking and managing information.</p> \\n<p>[Key points]</p> \\n<ul> \\n<li>Microsoft 365 <a href=\\\"\"https://www.microsoft.com/microsoft-365/roadmap?filters=&amp;searchterms=70753\\\"\" target=\\\"\"_blank\\\"\">Roadmap ID: 70753</a></li> \\n<li>Timing:<ul><li>Targeted release (entire org): Complete</li><li>Standard release: will roll out in mid-September (previously mid-May) and be complete by early November (previously mid-June)</li></ul></li> \\n<li>Roll-out: tenant level </li> \\n<li>Control type: user control / admin control</li> \\n<li>Action: review, assess and educate</li></ul><p>[How this will affect your organization]</p><p>This feature will give organizations the ability to create their own custom list templates with custom formatting and schema. It will also empower organizations to create repeatable solutions within the same Microsoft Lists infrastructure (including list creation in SharePoint, Teams, and within the Lists app itself).</p><p>End-user impact:</p>\\n<p>Visual updates to the list creation dialog and the addition of a<i> From your organization</i> tab when creating a new list. This new tab is where your custom list templates appear alongside the ready-made templates from Microsoft.</p>\\n<p><img src=\\\"\"https://img-prod-cms-rt-microsoft-com.akamaized.net/cms/api/am/imageFileData/RE4P81n?ver=c93f\\\"\" alt=\\\"\"Your custom list templates along with Microsoft ready-made templates\\\"\" width=\\\"\"550\\\"\"><br>\\nAdmin impact:</p>\\n<p>Custom list templates can only be uploaded by a SharePoint administrator for Microsoft 365 by using PowerShell cmdlets. For consistency, the process of defining and uploading custom list templates is like the custom site templates experience.</p><p>To define and upload custom list templates, admins will use the following site template PowerShell cmdlets:</p><ul><li>Use the <a href=\\\"\"https://docs.microsoft.com/powershell/module/sharepoint-online/get-spositescriptfromlist?view=sharepoint-ps\\\"\" target=\\\"\"_blank\\\"\">Get-SPOSiteScriptFromList</a> cmdlet to extract the site script from any list</li><li>Run <a href=\\\"\"https://docs.microsoft.com/powershell/module/sharepoint-online/add-spositescript?view=sharepoint-ps\\\"\" target=\\\"\"_blank\\\"\">Add-SPOSiteScript</a> and <b style=\\\"\"\\\"\">Add-SPOListDesign</b> to add the custom list template to your organization.</li><li>Scope who sees the template by using <a href=\\\"\"https://docs.microsoft.com/powershell/module/sharepoint-online/grant-spositedesignrights?view=sharepoint-ps\\\"\" target=\\\"\"_blank\\\"\">Grant-SPOSiteDesignRights</a> (Optional).</li></ul><p>The visual updates for this feature will be seen by end-users in the updated user interface (UI) when creating a list.</p><p>The <i>From your organization</i> tab will be empty until your organization defines and publishes custom list templates.</p>\\n<p><img src=\\\"\"https://img-prod-cms-rt-microsoft-com.akamaized.net/cms/api/am/imageFileData/RE4P81t?ver=70be\\\"\" alt=\\\"\"Your custom list templates along with Microsoft ready-made templates\\\"\" width=\\\"\"550\\\"\"></p><p>[What you need to do to prepare]</p><p>You might want to notify your users about this new capability and update your training and documentation as appropriate.</p>\\n<p>Learn more:</p><ul><li><a href=\\\"\"https://docs.microsoft.com/sharepoint/dev/declarative-customization/site-design-overview\\\"\" target=\\\"\"_blank\\\"\">PowerShell Cmdlets documentation for custom list templates</a></li><li> <a href=\\\"\"https://docs.microsoft.com/sharepoint/lists-custom-template\\\"\" target=\\\"\"_blank\\\"\">Creating custom list templates</a></li></ul>\"\"}\" More information \u00b6 Microsoft Graph REST API reference: https://docs.microsoft.com/en-us/graph/api/serviceupdatemessage-get","title":"serviceannouncement message get"},{"location":"cmd/tenant/serviceannouncement/serviceannouncement-message-get/#tenant-serviceannouncement-message-get","text":"Retrieves a specified service update message for the tenant","title":"tenant serviceannouncement message get"},{"location":"cmd/tenant/serviceannouncement/serviceannouncement-message-get/#usage","text":"m365 tenant serviceannouncement message get [ options ]","title":"Usage"},{"location":"cmd/tenant/serviceannouncement/serviceannouncement-message-get/#options","text":"-i, --id <id> The ID of the service update message. -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/tenant/serviceannouncement/serviceannouncement-message-get/#examples","text":"Get service update message with ID MC001337 m365 tenant serviceannouncement message get --id MC001337","title":"Examples"},{"location":"cmd/tenant/serviceannouncement/serviceannouncement-message-get/#response","text":"JSON Text CSV { \"startDateTime\" : \"2021-07-08T00:37:37Z\" , \"endDateTime\" : \"2022-12-09T07:00:00Z\" , \"lastModifiedDateTime\" : \"2022-06-07T20:21:06.713Z\" , \"title\" : \"(Updated) Microsoft Lists: Custom list templates\" , \"id\" : \"MC267581\" , \"category\" : \"planForChange\" , \"severity\" : \"normal\" , \"tags\" : [ \"Updated message\" , \"New feature\" , \"User impact\" , \"Admin impact\" ], \"isMajorChange\" : false , \"actionRequiredByDateTime\" : null , \"services\" : [ \"SharePoint Online\" ], \"expiryDateTime\" : null , \"hasAttachments\" : false , \"viewPoint\" : null , \"details\" : [], \"body\" : { \"contentType\" : \"html\" , \"content\" : \"<p>Updated June 7, 2022: We have updated the rollout timeline below. Thank you for your patience.</p><p>This new feature will support the addition of custom list templates from your organization alongside the ready-made templates Microsoft provides to make it easy to get started tracking and managing information.</p> \\\\\\n<p>[Key points]</p> \\\\\\n<ul> \\\\\\n<li>Microsoft 365 <a href=\\\"https://www.microsoft.com/microsoft-365/roadmap?filters=&amp;searchterms=70753\\\" target=\\\"_blank\\\">Roadmap ID: 70753</a></li> \\\\\\n<li>Timing:<ul><li>Targeted release (entire org): Complete</li><li>Standard release: will roll out in mid-September (previously mid-May) and be complete by early November (previously mid-June)</li></ul></li> \\\\\\n<li>Roll-out: tenant level </li> \\\\\\n<li>Control type: user control / admin control</li> \\\\\\n<li>Action: review, assess and educate</li></ul><p>[How this will affect your organization]</p><p>This feature will give organizations the ability to create their own custom list templates with custom formatting and schema. It will also empower organizations to create repeatable solutions within the same Microsoft Lists infrastructure (including list creation in SharePoint, Teams, and within the Lists app itself).</p><p>End-user impact:</p>\\\\\\n<p>Visual updates to the list creation dialog and the addition of a<i> From your organization</i> tab when creating a new list. This new tab is where your custom list templates appear alongside the ready-made templates from Microsoft.</p>\\\\\\n<p><img src=\\\"https://img-prod-cms-rt-microsoft-com.akamaized.net/cms/api/am/imageFileData/RE4P81n?ver=c93f\\\" alt=\\\"Your custom list templates along with Microsoft ready-made templates\\\" width=\\\"550\\\"><br>\\\\\\nAdmin impact:</p>\\\\\\n<p>Custom list templates can only be uploaded by a SharePoint administrator for Microsoft 365 by using PowerShell cmdlets. For consistency, the process of defining and uploading custom list templates is like the custom site templates experience.</p><p>To define and upload custom list templates, admins will use the following site template PowerShell cmdlets:</p><ul><li>Use the <a href=\\\"https://docs.microsoft.com/powershell/module/sharepoint-online/get-spositescriptfromlist?view=sharepoint-ps\\\" target=\\\"_blank\\\">Get-SPOSiteScriptFromList</a> cmdlet to extract the site script from any list</li><li>Run <a href=\\\"https://docs.microsoft.com/powershell/module/sharepoint-online/add-spositescript?view=sharepoint-ps\\\" target=\\\"_blank\\\">Add-SPOSiteScript</a> and <b style=\\\"\\\">Add-SPOListDesign</b> to add the custom list template to your organization.</li><li>Scope who sees the template by using <a href=\\\"https://docs.microsoft.com/powershell/module/sharepoint-online/grant-spositedesignrights?view=sharepoint-ps\\\" target=\\\"_blank\\\">Grant-SPOSiteDesignRights</a> (Optional).</li></ul><p>The visual updates for this feature will be seen by end-users in the updated user interface (UI) when creating a list.</p><p>The <i>From your organization</i> tab will be empty until your organization defines and publishes custom list templates.</p>\\\\\\n<p><img src=\\\"https://img-prod-cms-rt-microsoft-com.akamaized.net/cms/api/am/imageFileData/RE4P81t?ver=70be\\\" alt=\\\"Your custom list templates along with Microsoft ready-made templates\\\" width=\\\"550\\\"></p><p>[What you need to do to prepare]</p><p>You might want to notify your users about this new capability and update your training and documentation as appropriate.</p>\\\\\\n<p>Learn more:</p><ul><li><a href=\\\"https://docs.microsoft.com/sharepoint/dev/declarative-customization/site-design-overview\\\" target=\\\"_blank\\\">PowerShell Cmdlets documentation for custom list templates</a></li><li> <a href=\\\"https://docs.microsoft.com/sharepoint/lists-custom-template\\\" target=\\\"_blank\\\">Creating custom list templates</a></li></ul>\" } } actionRequiredByDateTime: null body : {\"contentType\":\"html\",\"content\":\"<p>Updated June 7, 2022: We have updated the rollout timeline below. Thank you for your patience.</p><p>This new feature will support the addition of custom list templates from your organization alongside the ready-made templates Microsoft provides to make it easy to get started tracking and managing information.</p> \\n<p>[Key points]</p> \\n<ul> \\n<li>Microsoft 365 <a href=\\\"https://www.microsoft.com/microsoft-365/roadmap?filters=&amp;searchterms=70753\\\" target=\\\"_blank\\\">Roadmap ID: 70753</a></li> \\n<li>Timing:<ul><li>Targeted release (entire org): Complete</li><li>Standard release: will roll out in mid-September (previously mid-May) and be complete by early November (previously mid-June)</li></ul></li> \\n<li>Roll-out: tenant level </li> \\n<li>Control type: user control / admin control</li> \\n<li>Action: review, assess and educate</li></ul><p>[How this will affect your organization]</p><p>This feature will give organizations the ability to create their own custom list templates with custom formatting and schema. It will also empower organizations to create repeatable solutions within the same Microsoft Lists infrastructure (including list creation in SharePoint, Teams, and within the Lists app itself).</p><p>End-user impact:</p>\\n<p>Visual updates to the list creation dialog and the addition of a<i> From your organization</i> tab when creating a new list. This new tab is where your custom list templates appear alongside the ready-made templates from Microsoft.</p>\\n<p><img src=\\\"https://img-prod-cms-rt-microsoft-com.akamaized.net/cms/api/am/imageFileData/RE4P81n?ver=c93f\\\" alt=\\\"Your custom list templates along with Microsoft ready-made templates\\\" width=\\\"550\\\"><br>\\nAdmin impact:</p>\\n<p>Custom list templates can only be uploaded by a SharePoint administrator for Microsoft 365 by using PowerShell cmdlets. For consistency, the process of defining and uploading custom list templates is like the custom site templates experience.</p><p>To define and upload custom list templates, admins will use the following site template PowerShell cmdlets:</p><ul><li>Use the <a href=\\\"https://docs.microsoft.com/powershell/module/sharepoint-online/get-spositescriptfromlist?view=sharepoint-ps\\\" target=\\\"_blank\\\">Get-SPOSiteScriptFromList</a> cmdlet to extract the site script from any list</li><li>Run <a href=\\\"https://docs.microsoft.com/powershell/module/sharepoint-online/add-spositescript?view=sharepoint-ps\\\" target=\\\"_blank\\\">Add-SPOSiteScript</a> and <b style=\\\"\\\">Add-SPOListDesign</b> to add the custom list template to your organization.</li><li>Scope who sees the template by using <a href=\\\"https://docs.microsoft.com/powershell/module/sharepoint-online/grant-spositedesignrights?view=sharepoint-ps\\\" target=\\\"_blank\\\">Grant-SPOSiteDesignRights</a> (Optional).</li></ul><p>The visual updates for this feature will be seen by end-users in the updated user interface (UI) when creating a list.</p><p>The <i>From your organization</i> tab will be empty until your organization defines and publishes custom list templates.</p>\\n<p><img src=\\\"https://img-prod-cms-rt-microsoft-com.akamaized.net/cms/api/am/imageFileData/RE4P81t?ver=70be\\\" alt=\\\"Your custom list templates along with Microsoft ready-made templates\\\" width=\\\"550\\\"></p><p>[What you need to do to prepare]</p><p>You might want to notify your users about this new capability and update your training and documentation as appropriate.</p>\\n<p>Learn more:</p><ul><li><a href=\\\"https://docs.microsoft.com/sharepoint/dev/declarative-customization/site-design-overview\\\" target=\\\"_blank\\\">PowerShell Cmdlets documentation for custom list templates</a></li><li> <a href=\\\"https://docs.microsoft.com/sharepoint/lists-custom-template\\\" target=\\\"_blank\\\">Creating custom list templates</a></li></ul>\"} category : planForChange details : [] endDateTime : 2022-12-09T07:00:00Z expiryDateTime : null hasAttachments : false id : MC267581 isMajorChange : false lastModifiedDateTime : 2022-06-07T20:21:06.713Z services : [\"SharePoint Online\"] severity : normal startDateTime : 2021-07-08T00:37:37Z tags : [\"Updated message\",\"New feature\",\"User impact\",\"Admin impact\"] title : (Updated) Microsoft Lists: Custom list templates viewPoint : null startDateTime,endDateTime,lastModifiedDateTime,title,id,category,severity,tags,isMajorChange,actionRequiredByDateTime,services,expiryDateTime,hasAttachments,viewPoint,details,body 2021-07-08T00:37:37Z,2022-12-09T07:00:00Z,2022-06-07T20:21:06.713Z,(Updated) Microsoft Lists: Custom list templates,MC267581,planForChange,normal,\"[\"\"Updated message\"\",\"\"New feature\"\",\"\"User impact\"\",\"\"Admin impact\"\"]\",,,\"[\"\"SharePoint Online\"\"]\",,,,[],\"{\"\"contentType\"\":\"\"html\"\",\"\"content\"\":\"\"<p>Updated June 7, 2022: We have updated the rollout timeline below. Thank you for your patience.</p><p>This new feature will support the addition of custom list templates from your organization alongside the ready-made templates Microsoft provides to make it easy to get started tracking and managing information.</p> \\n<p>[Key points]</p> \\n<ul> \\n<li>Microsoft 365 <a href=\\\"\"https://www.microsoft.com/microsoft-365/roadmap?filters=&amp;searchterms=70753\\\"\" target=\\\"\"_blank\\\"\">Roadmap ID: 70753</a></li> \\n<li>Timing:<ul><li>Targeted release (entire org): Complete</li><li>Standard release: will roll out in mid-September (previously mid-May) and be complete by early November (previously mid-June)</li></ul></li> \\n<li>Roll-out: tenant level </li> \\n<li>Control type: user control / admin control</li> \\n<li>Action: review, assess and educate</li></ul><p>[How this will affect your organization]</p><p>This feature will give organizations the ability to create their own custom list templates with custom formatting and schema. It will also empower organizations to create repeatable solutions within the same Microsoft Lists infrastructure (including list creation in SharePoint, Teams, and within the Lists app itself).</p><p>End-user impact:</p>\\n<p>Visual updates to the list creation dialog and the addition of a<i> From your organization</i> tab when creating a new list. This new tab is where your custom list templates appear alongside the ready-made templates from Microsoft.</p>\\n<p><img src=\\\"\"https://img-prod-cms-rt-microsoft-com.akamaized.net/cms/api/am/imageFileData/RE4P81n?ver=c93f\\\"\" alt=\\\"\"Your custom list templates along with Microsoft ready-made templates\\\"\" width=\\\"\"550\\\"\"><br>\\nAdmin impact:</p>\\n<p>Custom list templates can only be uploaded by a SharePoint administrator for Microsoft 365 by using PowerShell cmdlets. For consistency, the process of defining and uploading custom list templates is like the custom site templates experience.</p><p>To define and upload custom list templates, admins will use the following site template PowerShell cmdlets:</p><ul><li>Use the <a href=\\\"\"https://docs.microsoft.com/powershell/module/sharepoint-online/get-spositescriptfromlist?view=sharepoint-ps\\\"\" target=\\\"\"_blank\\\"\">Get-SPOSiteScriptFromList</a> cmdlet to extract the site script from any list</li><li>Run <a href=\\\"\"https://docs.microsoft.com/powershell/module/sharepoint-online/add-spositescript?view=sharepoint-ps\\\"\" target=\\\"\"_blank\\\"\">Add-SPOSiteScript</a> and <b style=\\\"\"\\\"\">Add-SPOListDesign</b> to add the custom list template to your organization.</li><li>Scope who sees the template by using <a href=\\\"\"https://docs.microsoft.com/powershell/module/sharepoint-online/grant-spositedesignrights?view=sharepoint-ps\\\"\" target=\\\"\"_blank\\\"\">Grant-SPOSiteDesignRights</a> (Optional).</li></ul><p>The visual updates for this feature will be seen by end-users in the updated user interface (UI) when creating a list.</p><p>The <i>From your organization</i> tab will be empty until your organization defines and publishes custom list templates.</p>\\n<p><img src=\\\"\"https://img-prod-cms-rt-microsoft-com.akamaized.net/cms/api/am/imageFileData/RE4P81t?ver=70be\\\"\" alt=\\\"\"Your custom list templates along with Microsoft ready-made templates\\\"\" width=\\\"\"550\\\"\"></p><p>[What you need to do to prepare]</p><p>You might want to notify your users about this new capability and update your training and documentation as appropriate.</p>\\n<p>Learn more:</p><ul><li><a href=\\\"\"https://docs.microsoft.com/sharepoint/dev/declarative-customization/site-design-overview\\\"\" target=\\\"\"_blank\\\"\">PowerShell Cmdlets documentation for custom list templates</a></li><li> <a href=\\\"\"https://docs.microsoft.com/sharepoint/lists-custom-template\\\"\" target=\\\"\"_blank\\\"\">Creating custom list templates</a></li></ul>\"\"}\"","title":"Response"},{"location":"cmd/tenant/serviceannouncement/serviceannouncement-message-get/#more-information","text":"Microsoft Graph REST API reference: https://docs.microsoft.com/en-us/graph/api/serviceupdatemessage-get","title":"More information"},{"location":"cmd/tenant/serviceannouncement/serviceannouncement-message-list/","text":"tenant serviceannouncement message list \u00b6 Gets all service update messages for the tenant. Usage \u00b6 m365 tenant serviceannouncement message list [ options ] Options \u00b6 -s, --service [service] Retrieve service update messages for the particular service. If not provided, retrieves messages for all services -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Get service update messages of all services in Microsoft 365 m365 tenant serviceannouncement message list Get service update messages for Microsoft Teams m365 tenant serviceannouncement message list --service \"Microsoft Teams\" Response \u00b6 JSON Text CSV [ { \"startDateTime\" : \"2021-07-08T00:37:37Z\" , \"endDateTime\" : \"2022-12-09T07:00:00Z\" , \"lastModifiedDateTime\" : \"2022-06-07T20:21:06.713Z\" , \"title\" : \"(Updated) Microsoft Lists: Custom list templates\" , \"id\" : \"MC267581\" , \"category\" : \"planForChange\" , \"severity\" : \"normal\" , \"tags\" : [ \"Updated message\" , \"New feature\" , \"User impact\" , \"Admin impact\" ], \"isMajorChange\" : false , \"actionRequiredByDateTime\" : null , \"services\" : [ \"SharePoint Online\" ], \"expiryDateTime\" : null , \"hasAttachments\" : false , \"viewPoint\" : null , \"details\" : [], \"body\" : { \"contentType\" : \"html\" , \"content\" : \"<p>Updated June 7, 2022: We have updated the rollout timeline below. Thank you for your patience.</p><p>This new feature will support the addition of custom list templates from your organization alongside the ready-made templates Microsoft provides to make it easy to get started tracking and managing information.</p> \\\\\\n<p>[Key points]</p> \\\\\\n<ul> \\\\\\n<li>Microsoft 365 <a href=\\\"https://www.microsoft.com/microsoft-365/roadmap?filters=&amp;searchterms=70753\\\" target=\\\"_blank\\\">Roadmap ID: 70753</a></li> \\\\\\n<li>Timing:<ul><li>Targeted release (entire org): Complete</li><li>Standard release: will roll out in mid-September (previously mid-May) and be complete by early November (previously mid-June)</li></ul></li> \\\\\\n<li>Roll-out: tenant level </li> \\\\\\n<li>Control type: user control / admin control</li> \\\\\\n<li>Action: review, assess and educate</li></ul><p>[How this will affect your organization]</p><p>This feature will give organizations the ability to create their own custom list templates with custom formatting and schema. It will also empower organizations to create repeatable solutions within the same Microsoft Lists infrastructure (including list creation in SharePoint, Teams, and within the Lists app itself).</p><p>End-user impact:</p>\\\\\\n<p>Visual updates to the list creation dialog and the addition of a<i> From your organization</i> tab when creating a new list. This new tab is where your custom list templates appear alongside the ready-made templates from Microsoft.</p>\\\\\\n<p><img src=\\\"https://img-prod-cms-rt-microsoft-com.akamaized.net/cms/api/am/imageFileData/RE4P81n?ver=c93f\\\" alt=\\\"Your custom list templates along with Microsoft ready-made templates\\\" width=\\\"550\\\"><br>\\\\\\nAdmin impact:</p>\\\\\\n<p>Custom list templates can only be uploaded by a SharePoint administrator for Microsoft 365 by using PowerShell cmdlets. For consistency, the process of defining and uploading custom list templates is like the custom site templates experience.</p><p>To define and upload custom list templates, admins will use the following site template PowerShell cmdlets:</p><ul><li>Use the <a href=\\\"https://docs.microsoft.com/powershell/module/sharepoint-online/get-spositescriptfromlist?view=sharepoint-ps\\\" target=\\\"_blank\\\">Get-SPOSiteScriptFromList</a> cmdlet to extract the site script from any list</li><li>Run <a href=\\\"https://docs.microsoft.com/powershell/module/sharepoint-online/add-spositescript?view=sharepoint-ps\\\" target=\\\"_blank\\\">Add-SPOSiteScript</a> and <b style=\\\"\\\">Add-SPOListDesign</b> to add the custom list template to your organization.</li><li>Scope who sees the template by using <a href=\\\"https://docs.microsoft.com/powershell/module/sharepoint-online/grant-spositedesignrights?view=sharepoint-ps\\\" target=\\\"_blank\\\">Grant-SPOSiteDesignRights</a> (Optional).</li></ul><p>The visual updates for this feature will be seen by end-users in the updated user interface (UI) when creating a list.</p><p>The <i>From your organization</i> tab will be empty until your organization defines and publishes custom list templates.</p>\\\\\\n<p><img src=\\\"https://img-prod-cms-rt-microsoft-com.akamaized.net/cms/api/am/imageFileData/RE4P81t?ver=70be\\\" alt=\\\"Your custom list templates along with Microsoft ready-made templates\\\" width=\\\"550\\\"></p><p>[What you need to do to prepare]</p><p>You might want to notify your users about this new capability and update your training and documentation as appropriate.</p>\\\\\\n<p>Learn more:</p><ul><li><a href=\\\"https://docs.microsoft.com/sharepoint/dev/declarative-customization/site-design-overview\\\" target=\\\"_blank\\\">PowerShell Cmdlets documentation for custom list templates</a></li><li> <a href=\\\"https://docs.microsoft.com/sharepoint/lists-custom-template\\\" target=\\\"_blank\\\">Creating custom list templates</a></li></ul>\" } } ] id title -------- ------------------------------------------------ MC267581 (Updated) Microsoft Lists: Custom list templates id,title MC267581,(Updated) Microsoft Lists: Custom list templates More information \u00b6 List serviceAnnouncement messages: https://docs.microsoft.com/en-us/graph/api/serviceannouncement-list-messages","title":"serviceannouncement message list"},{"location":"cmd/tenant/serviceannouncement/serviceannouncement-message-list/#tenant-serviceannouncement-message-list","text":"Gets all service update messages for the tenant.","title":"tenant serviceannouncement message list"},{"location":"cmd/tenant/serviceannouncement/serviceannouncement-message-list/#usage","text":"m365 tenant serviceannouncement message list [ options ]","title":"Usage"},{"location":"cmd/tenant/serviceannouncement/serviceannouncement-message-list/#options","text":"-s, --service [service] Retrieve service update messages for the particular service. If not provided, retrieves messages for all services -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/tenant/serviceannouncement/serviceannouncement-message-list/#examples","text":"Get service update messages of all services in Microsoft 365 m365 tenant serviceannouncement message list Get service update messages for Microsoft Teams m365 tenant serviceannouncement message list --service \"Microsoft Teams\"","title":"Examples"},{"location":"cmd/tenant/serviceannouncement/serviceannouncement-message-list/#response","text":"JSON Text CSV [ { \"startDateTime\" : \"2021-07-08T00:37:37Z\" , \"endDateTime\" : \"2022-12-09T07:00:00Z\" , \"lastModifiedDateTime\" : \"2022-06-07T20:21:06.713Z\" , \"title\" : \"(Updated) Microsoft Lists: Custom list templates\" , \"id\" : \"MC267581\" , \"category\" : \"planForChange\" , \"severity\" : \"normal\" , \"tags\" : [ \"Updated message\" , \"New feature\" , \"User impact\" , \"Admin impact\" ], \"isMajorChange\" : false , \"actionRequiredByDateTime\" : null , \"services\" : [ \"SharePoint Online\" ], \"expiryDateTime\" : null , \"hasAttachments\" : false , \"viewPoint\" : null , \"details\" : [], \"body\" : { \"contentType\" : \"html\" , \"content\" : \"<p>Updated June 7, 2022: We have updated the rollout timeline below. Thank you for your patience.</p><p>This new feature will support the addition of custom list templates from your organization alongside the ready-made templates Microsoft provides to make it easy to get started tracking and managing information.</p> \\\\\\n<p>[Key points]</p> \\\\\\n<ul> \\\\\\n<li>Microsoft 365 <a href=\\\"https://www.microsoft.com/microsoft-365/roadmap?filters=&amp;searchterms=70753\\\" target=\\\"_blank\\\">Roadmap ID: 70753</a></li> \\\\\\n<li>Timing:<ul><li>Targeted release (entire org): Complete</li><li>Standard release: will roll out in mid-September (previously mid-May) and be complete by early November (previously mid-June)</li></ul></li> \\\\\\n<li>Roll-out: tenant level </li> \\\\\\n<li>Control type: user control / admin control</li> \\\\\\n<li>Action: review, assess and educate</li></ul><p>[How this will affect your organization]</p><p>This feature will give organizations the ability to create their own custom list templates with custom formatting and schema. It will also empower organizations to create repeatable solutions within the same Microsoft Lists infrastructure (including list creation in SharePoint, Teams, and within the Lists app itself).</p><p>End-user impact:</p>\\\\\\n<p>Visual updates to the list creation dialog and the addition of a<i> From your organization</i> tab when creating a new list. This new tab is where your custom list templates appear alongside the ready-made templates from Microsoft.</p>\\\\\\n<p><img src=\\\"https://img-prod-cms-rt-microsoft-com.akamaized.net/cms/api/am/imageFileData/RE4P81n?ver=c93f\\\" alt=\\\"Your custom list templates along with Microsoft ready-made templates\\\" width=\\\"550\\\"><br>\\\\\\nAdmin impact:</p>\\\\\\n<p>Custom list templates can only be uploaded by a SharePoint administrator for Microsoft 365 by using PowerShell cmdlets. For consistency, the process of defining and uploading custom list templates is like the custom site templates experience.</p><p>To define and upload custom list templates, admins will use the following site template PowerShell cmdlets:</p><ul><li>Use the <a href=\\\"https://docs.microsoft.com/powershell/module/sharepoint-online/get-spositescriptfromlist?view=sharepoint-ps\\\" target=\\\"_blank\\\">Get-SPOSiteScriptFromList</a> cmdlet to extract the site script from any list</li><li>Run <a href=\\\"https://docs.microsoft.com/powershell/module/sharepoint-online/add-spositescript?view=sharepoint-ps\\\" target=\\\"_blank\\\">Add-SPOSiteScript</a> and <b style=\\\"\\\">Add-SPOListDesign</b> to add the custom list template to your organization.</li><li>Scope who sees the template by using <a href=\\\"https://docs.microsoft.com/powershell/module/sharepoint-online/grant-spositedesignrights?view=sharepoint-ps\\\" target=\\\"_blank\\\">Grant-SPOSiteDesignRights</a> (Optional).</li></ul><p>The visual updates for this feature will be seen by end-users in the updated user interface (UI) when creating a list.</p><p>The <i>From your organization</i> tab will be empty until your organization defines and publishes custom list templates.</p>\\\\\\n<p><img src=\\\"https://img-prod-cms-rt-microsoft-com.akamaized.net/cms/api/am/imageFileData/RE4P81t?ver=70be\\\" alt=\\\"Your custom list templates along with Microsoft ready-made templates\\\" width=\\\"550\\\"></p><p>[What you need to do to prepare]</p><p>You might want to notify your users about this new capability and update your training and documentation as appropriate.</p>\\\\\\n<p>Learn more:</p><ul><li><a href=\\\"https://docs.microsoft.com/sharepoint/dev/declarative-customization/site-design-overview\\\" target=\\\"_blank\\\">PowerShell Cmdlets documentation for custom list templates</a></li><li> <a href=\\\"https://docs.microsoft.com/sharepoint/lists-custom-template\\\" target=\\\"_blank\\\">Creating custom list templates</a></li></ul>\" } } ] id title -------- ------------------------------------------------ MC267581 (Updated) Microsoft Lists: Custom list templates id,title MC267581,(Updated) Microsoft Lists: Custom list templates","title":"Response"},{"location":"cmd/tenant/serviceannouncement/serviceannouncement-message-list/#more-information","text":"List serviceAnnouncement messages: https://docs.microsoft.com/en-us/graph/api/serviceannouncement-list-messages","title":"More information"},{"location":"cmd/todo/list/list-add/","text":"todo list add \u00b6 Adds a new Microsoft To Do task list Usage \u00b6 m365 todo list add [ options ] Options \u00b6 -n, --name <name> The name of the task list to add -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Add a task list with the name My task list m365 todo list add --name \"My task list\"","title":"list add"},{"location":"cmd/todo/list/list-add/#todo-list-add","text":"Adds a new Microsoft To Do task list","title":"todo list add"},{"location":"cmd/todo/list/list-add/#usage","text":"m365 todo list add [ options ]","title":"Usage"},{"location":"cmd/todo/list/list-add/#options","text":"-n, --name <name> The name of the task list to add -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/todo/list/list-add/#examples","text":"Add a task list with the name My task list m365 todo list add --name \"My task list\"","title":"Examples"},{"location":"cmd/todo/list/list-get/","text":"todo list get \u00b6 Returns a specific Microsoft To Do task list Usage \u00b6 m365 todo list get [ options ] Options \u00b6 -i, --id [id] The id of the list. Specify either id or name but not both. -n, --name [name] The name of the list. Specify either id or name but not both. -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Get a specific Microsoft To Do task list based on id m365 todo list get --id \"AAMkADY3NmM5ZjhiLTc3M2ItNDg5ZC1iNGRiLTAyM2FmMjVjZmUzOQAuAAAAAAAZ1T9YqZrvS66KkevskFAXAQBEMhhN5VK7RaaKpIc1KhMKAAAZ3e1AAAA=\" Get a specific Microsoft To Do task list based on name m365 todo list get --name \"Task list\" Response \u00b6 JSON Text CSV { \"displayName\" : \"Task list\" , \"isOwner\" : true , \"isShared\" : false , \"wellknownListName\" : \"defaultList\" , \"id\" : \"AAMkADY3NmM5ZjhiLTc3M2ItNDg5ZC1iNGRiLTAyM2FmMjVjZmUzOQAuAAAAAAAZ1T9YqZrvS66KkevskFAXAQBEMhhN5VK7RaaKpIc1KhMKAAAZ3e1AAAA=\" } displayName : Task list id : AAMkADY3NmM5ZjhiLTc3M2ItNDg5ZC1iNGRiLTAyM2FmMjVjZmUzOQAuAAAAAAAZ1T9YqZrvS66KkevskFAXAQBEMhhN5VK7RaaKpIc1KhMKAAAZ3e1AAAA= displayName,id Task list,AAMkADY3NmM5ZjhiLTc3M2ItNDg5ZC1iNGRiLTAyM2FmMjVjZmUzOQAuAAAAAAAZ1T9YqZrvS66KkevskFAXAQBEMhhN5VK7RaaKpIc1KhMKAAAZ3e1AAAA=","title":"list get"},{"location":"cmd/todo/list/list-get/#todo-list-get","text":"Returns a specific Microsoft To Do task list","title":"todo list get"},{"location":"cmd/todo/list/list-get/#usage","text":"m365 todo list get [ options ]","title":"Usage"},{"location":"cmd/todo/list/list-get/#options","text":"-i, --id [id] The id of the list. Specify either id or name but not both. -n, --name [name] The name of the list. Specify either id or name but not both. -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/todo/list/list-get/#examples","text":"Get a specific Microsoft To Do task list based on id m365 todo list get --id \"AAMkADY3NmM5ZjhiLTc3M2ItNDg5ZC1iNGRiLTAyM2FmMjVjZmUzOQAuAAAAAAAZ1T9YqZrvS66KkevskFAXAQBEMhhN5VK7RaaKpIc1KhMKAAAZ3e1AAAA=\" Get a specific Microsoft To Do task list based on name m365 todo list get --name \"Task list\"","title":"Examples"},{"location":"cmd/todo/list/list-get/#response","text":"JSON Text CSV { \"displayName\" : \"Task list\" , \"isOwner\" : true , \"isShared\" : false , \"wellknownListName\" : \"defaultList\" , \"id\" : \"AAMkADY3NmM5ZjhiLTc3M2ItNDg5ZC1iNGRiLTAyM2FmMjVjZmUzOQAuAAAAAAAZ1T9YqZrvS66KkevskFAXAQBEMhhN5VK7RaaKpIc1KhMKAAAZ3e1AAAA=\" } displayName : Task list id : AAMkADY3NmM5ZjhiLTc3M2ItNDg5ZC1iNGRiLTAyM2FmMjVjZmUzOQAuAAAAAAAZ1T9YqZrvS66KkevskFAXAQBEMhhN5VK7RaaKpIc1KhMKAAAZ3e1AAAA= displayName,id Task list,AAMkADY3NmM5ZjhiLTc3M2ItNDg5ZC1iNGRiLTAyM2FmMjVjZmUzOQAuAAAAAAAZ1T9YqZrvS66KkevskFAXAQBEMhhN5VK7RaaKpIc1KhMKAAAZ3e1AAAA=","title":"Response"},{"location":"cmd/todo/list/list-list/","text":"todo list list \u00b6 Returns a list of Microsoft To Do task lists Usage \u00b6 m365 todo list list [ options ] Options \u00b6 -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Get the list of Microsoft To Do task lists m365 todo list list","title":"list list"},{"location":"cmd/todo/list/list-list/#todo-list-list","text":"Returns a list of Microsoft To Do task lists","title":"todo list list"},{"location":"cmd/todo/list/list-list/#usage","text":"m365 todo list list [ options ]","title":"Usage"},{"location":"cmd/todo/list/list-list/#options","text":"-h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/todo/list/list-list/#examples","text":"Get the list of Microsoft To Do task lists m365 todo list list","title":"Examples"},{"location":"cmd/todo/list/list-remove/","text":"todo list remove \u00b6 Removes a Microsoft To Do task list Usage \u00b6 m365 todo list remove [ options ] Options \u00b6 -n, --name [name] The name of the task list to remove. Specify either id or name but not both -i, --id [id] The ID of the task list to remove. Specify either id or name but not both --confirm Don't prompt for confirming removing the task list -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Remove a task list with the name My task list m365 todo list remove --name \"My task list\" Remove a task list with the ID AAMkAGI3NDhlZmQzLWQxYjAtNGJjNy04NmYwLWQ0M2IzZTNlMDUwNAAuAAAAAACQ1l2jfH6VSZraktP8Z7auAQCbV93BagWITZhL3J6BMqhjAAD9pHIhAAA= m365 todo list remove --id \"AAMkAGI3NDhlZmQzLWQxYjAtNGJjNy04NmYwLWQ0M2IzZTNlMDUwNAAuAAAAAACQ1l2jfH6VSZraktP8Z7auAQCbV93BagWITZhL3J6BMqhjAAD9pHIhAAA=\"","title":"list remove"},{"location":"cmd/todo/list/list-remove/#todo-list-remove","text":"Removes a Microsoft To Do task list","title":"todo list remove"},{"location":"cmd/todo/list/list-remove/#usage","text":"m365 todo list remove [ options ]","title":"Usage"},{"location":"cmd/todo/list/list-remove/#options","text":"-n, --name [name] The name of the task list to remove. Specify either id or name but not both -i, --id [id] The ID of the task list to remove. Specify either id or name but not both --confirm Don't prompt for confirming removing the task list -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/todo/list/list-remove/#examples","text":"Remove a task list with the name My task list m365 todo list remove --name \"My task list\" Remove a task list with the ID AAMkAGI3NDhlZmQzLWQxYjAtNGJjNy04NmYwLWQ0M2IzZTNlMDUwNAAuAAAAAACQ1l2jfH6VSZraktP8Z7auAQCbV93BagWITZhL3J6BMqhjAAD9pHIhAAA= m365 todo list remove --id \"AAMkAGI3NDhlZmQzLWQxYjAtNGJjNy04NmYwLWQ0M2IzZTNlMDUwNAAuAAAAAACQ1l2jfH6VSZraktP8Z7auAQCbV93BagWITZhL3J6BMqhjAAD9pHIhAAA=\"","title":"Examples"},{"location":"cmd/todo/list/list-set/","text":"todo list set \u00b6 Updates a Microsoft To Do task list Usage \u00b6 m365 todo list set [ options ] Options \u00b6 -i, --id [id] The ID of the list to update. Specify either id or name, not both -n, --name [name] The display name of the list to update. Specify either id or name, not both --newName <newName> The new name for the task list -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Rename the list with ID AAMkAGI3NDhlZmQzLWQxYjAtNGJjNy04NmYwLWQ0M2IzZTNlMDUwNAAuAAAAAACQ1l2jfH6VSZraktP8Z7auAQCbV93BagWITZhL3J6BMqhjAAD9pHIhAAA= to \"My updated task list\" m365 todo list set --id \"AAMkAGI3NDhlZmQzLWQxYjAtNGJjNy04NmYwLWQ0M2IzZTNlMDUwNAAuAAAAAACQ1l2jfH6VSZraktP8Z7auAQCbV93BagWITZhL3J6BMqhjAAD9pHIhAAA=\" --newName \"My updated task list\" Rename the list with name My Task list to \"My updated task list\" m365 todo list set --name \"My Task list\" --newName \"My updated task list\"","title":"list set"},{"location":"cmd/todo/list/list-set/#todo-list-set","text":"Updates a Microsoft To Do task list","title":"todo list set"},{"location":"cmd/todo/list/list-set/#usage","text":"m365 todo list set [ options ]","title":"Usage"},{"location":"cmd/todo/list/list-set/#options","text":"-i, --id [id] The ID of the list to update. Specify either id or name, not both -n, --name [name] The display name of the list to update. Specify either id or name, not both --newName <newName> The new name for the task list -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/todo/list/list-set/#examples","text":"Rename the list with ID AAMkAGI3NDhlZmQzLWQxYjAtNGJjNy04NmYwLWQ0M2IzZTNlMDUwNAAuAAAAAACQ1l2jfH6VSZraktP8Z7auAQCbV93BagWITZhL3J6BMqhjAAD9pHIhAAA= to \"My updated task list\" m365 todo list set --id \"AAMkAGI3NDhlZmQzLWQxYjAtNGJjNy04NmYwLWQ0M2IzZTNlMDUwNAAuAAAAAACQ1l2jfH6VSZraktP8Z7auAQCbV93BagWITZhL3J6BMqhjAAD9pHIhAAA=\" --newName \"My updated task list\" Rename the list with name My Task list to \"My updated task list\" m365 todo list set --name \"My Task list\" --newName \"My updated task list\"","title":"Examples"},{"location":"cmd/todo/task/task-add/","text":"todo task add \u00b6 Adds a task to a Microsoft To Do list Usage \u00b6 m365 todo task add [ options ] Options \u00b6 -t, --title <title> The title of the task. --listName [listName] The name of the list in which to create the task. Specify either listName or listId but not both. --listId [listId] The id of the list in which to create the task. Specify either listName or listId but not both. --bodyContent [bodyContent] The body content of the task. In the UI this is called 'notes'. --bodyContentType [bodyContentType] The type of the body content. Possible values are text and html . Default is text . --dueDateTime [dueDateTime] The date when the task is due. This should be defined as a valid ISO 8601 string in the UTC time zone. Only date value is needed, time value is always ignored. --importance [importance] The importance of the task. Possible values are: low , normal , high . Default is normal . --reminderDateTime [reminderDateTime] The date and time for a reminder alert of the task to occur. This should be defined as a valid ISO 8601 string in the UTC time zone. -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Add a task to Microsoft To Do tasks list with with a specific name m365 todo task add --title \"New task\" --listName \"My task list\" Add a task to a Microsoft To Do tasks list with a specific id m365 todo task add --title \"New task\" --listId \"AQMkADlhMTRkOGEzLWQ1M2QtNGVkNS04NjdmLWU0NzJhMjZmZWNmMwAuAAADKvwNgAMNPE_zFNRJXVrU1wEAhHKQZHItDEOVCn8U3xuA2AABmQeVPwAAAA==\" Create a new task with bodyContent and reminder and flag it as important m365 todo task add --title \"New task\" --listName \"My task list\" --bodyContent \"I should not forget this\" --reminderDateTime 2023 -01-01T12:00:00Z --importance high Create a new task with a specific due date m365 todo task add --title \"New task\" --listId \"AQMkADlhMTRkOGEzLWQ1M2QtNGVkNS04NjdmLWU0NzJhMjZmZWNmMwAuAAADKvwNgAMNPE_zFNRJXVrU1wEAhHKQZHItDEOVCn8U3xuA2AABmQeVPwAAAA==\" --dueDateTime 2023 -01-01","title":"task add"},{"location":"cmd/todo/task/task-add/#todo-task-add","text":"Adds a task to a Microsoft To Do list","title":"todo task add"},{"location":"cmd/todo/task/task-add/#usage","text":"m365 todo task add [ options ]","title":"Usage"},{"location":"cmd/todo/task/task-add/#options","text":"-t, --title <title> The title of the task. --listName [listName] The name of the list in which to create the task. Specify either listName or listId but not both. --listId [listId] The id of the list in which to create the task. Specify either listName or listId but not both. --bodyContent [bodyContent] The body content of the task. In the UI this is called 'notes'. --bodyContentType [bodyContentType] The type of the body content. Possible values are text and html . Default is text . --dueDateTime [dueDateTime] The date when the task is due. This should be defined as a valid ISO 8601 string in the UTC time zone. Only date value is needed, time value is always ignored. --importance [importance] The importance of the task. Possible values are: low , normal , high . Default is normal . --reminderDateTime [reminderDateTime] The date and time for a reminder alert of the task to occur. This should be defined as a valid ISO 8601 string in the UTC time zone. -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/todo/task/task-add/#examples","text":"Add a task to Microsoft To Do tasks list with with a specific name m365 todo task add --title \"New task\" --listName \"My task list\" Add a task to a Microsoft To Do tasks list with a specific id m365 todo task add --title \"New task\" --listId \"AQMkADlhMTRkOGEzLWQ1M2QtNGVkNS04NjdmLWU0NzJhMjZmZWNmMwAuAAADKvwNgAMNPE_zFNRJXVrU1wEAhHKQZHItDEOVCn8U3xuA2AABmQeVPwAAAA==\" Create a new task with bodyContent and reminder and flag it as important m365 todo task add --title \"New task\" --listName \"My task list\" --bodyContent \"I should not forget this\" --reminderDateTime 2023 -01-01T12:00:00Z --importance high Create a new task with a specific due date m365 todo task add --title \"New task\" --listId \"AQMkADlhMTRkOGEzLWQ1M2QtNGVkNS04NjdmLWU0NzJhMjZmZWNmMwAuAAADKvwNgAMNPE_zFNRJXVrU1wEAhHKQZHItDEOVCn8U3xuA2AABmQeVPwAAAA==\" --dueDateTime 2023 -01-01","title":"Examples"},{"location":"cmd/todo/task/task-get/","text":"todo task get \u00b6 Gets a specific task from a Microsoft To Do task list Usage \u00b6 m365 todo task get [ options ] Options \u00b6 -i, --id <id> The ID of the task in de list. --listName [listName] The name of the task list to return tasks from. Specify either listName or listId , not both --listId [listId] The id of the task list to return tasks from. Specify either listName or listId , not both -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Gets a specific task from a Microsoft To Do tasks list based on the name of the list and the task id m365 todo task get --listName \"My task list\" --id \"AAMkAGYzNjMxYTU4LTJjZjYtNDlhMi1iMzQ2LWVmMTU3YmUzOGM5MABGAAAAAAAw3-tXgryDSr5p162KnUPKBwDEwEFouXWWT50CfwqSN9cpAAEX8ECDAADEwEFouXWWT50CfwqSN9cpAAEX8GuPAAA=\" Gets a specific task from a Microsoft To Do tasks list based on the id of the list and the task id m365 todo task get --listId \"AQMkAGYzNjMxYTU4LTJjZjYtNDlhMi1iMzQ2LWVmMTU3YmUzOGM5MAAuAAADMN-7V4K8g0q_adetip1DygEAxMBBaLl1lk_dAn8KkjfXKQABF-BAgwAAAA==\" --id \"AAMkAGYzNjMxYTU4LTJjZjYtNDlhMi1iMzQ2LWVmMTU3YmUzOGM5MABGAAAAAAAw3-tXgryDSr5p162KnUPKBwDEwEFouXWWT50CfwqSN9cpAAEX8ECDAADEwEFouXWWT50CfwqSN9cpAAEX8GuPAAA=\" Response \u00b6 JSON Text CSV { \"importance\" : \"normal\" , \"isReminderOn\" : false , \"status\" : \"notStarted\" , \"title\" : \"Stay healthy\" , \"createdDateTime\" : \"2022-10-23T14:05:09.2673009Z\" , \"lastModifiedDateTime\" : \"2022-10-23T14:15:11.3180312Z\" , \"hasAttachments\" : false , \"categories\" : [], \"id\" : \"AAMkAGYzNjMxYTU4LTJjZjYtNDlhMi1iMzQ2LWVmMTU3YmUzOGM5MABGAAAAAAAw3-tXgryDSr5p162KnUPKBwDEwEFouXWWT50CfwqSN9cpAAEX8ECDAADEwEFouXWWT50CfwqSN9cpAAEX8GuPAAA=\" , \"body\" : { \"content\" : \"\" , \"contentType\" : \"text\" } } createdDateTime : 2022-10-23T14:05:09.2673009Z id : AAMkAGYzNjMxYTU4LTJjZjYtNDlhMi1iMzQ2LWVmMTU3YmUzOGM5MABGAAAAAAAw3-tXgryDSr5p162KnUPKBwDEwEFouXWWT50CfwqSN9cpAAEX8ECDAADEwEFouXWWT50CfwqSN9cpAAEX8GuPAAA= lastModifiedDateTime: 2022-10-23T14:15:11.3180312Z status : notStarted title : Stay healthy id,title,status,createdDateTime,lastModifiedDateTime AAMkAGYzNjMxYTU4LTJjZjYtNDlhMi1iMzQ2LWVmMTU3YmUzOGM5MABGAAAAAAAw3-tXgryDSr5p162KnUPKBwDEwEFouXWWT50CfwqSN9cpAAEX8ECDAADEwEFouXWWT50CfwqSN9cpAAEX8GuPAAA=,Stay healthy,notStarted,2022-10-23T14:05:09.2673009Z,2022-10-23T14:15:11.3180312Z","title":"task get"},{"location":"cmd/todo/task/task-get/#todo-task-get","text":"Gets a specific task from a Microsoft To Do task list","title":"todo task get"},{"location":"cmd/todo/task/task-get/#usage","text":"m365 todo task get [ options ]","title":"Usage"},{"location":"cmd/todo/task/task-get/#options","text":"-i, --id <id> The ID of the task in de list. --listName [listName] The name of the task list to return tasks from. Specify either listName or listId , not both --listId [listId] The id of the task list to return tasks from. Specify either listName or listId , not both -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/todo/task/task-get/#examples","text":"Gets a specific task from a Microsoft To Do tasks list based on the name of the list and the task id m365 todo task get --listName \"My task list\" --id \"AAMkAGYzNjMxYTU4LTJjZjYtNDlhMi1iMzQ2LWVmMTU3YmUzOGM5MABGAAAAAAAw3-tXgryDSr5p162KnUPKBwDEwEFouXWWT50CfwqSN9cpAAEX8ECDAADEwEFouXWWT50CfwqSN9cpAAEX8GuPAAA=\" Gets a specific task from a Microsoft To Do tasks list based on the id of the list and the task id m365 todo task get --listId \"AQMkAGYzNjMxYTU4LTJjZjYtNDlhMi1iMzQ2LWVmMTU3YmUzOGM5MAAuAAADMN-7V4K8g0q_adetip1DygEAxMBBaLl1lk_dAn8KkjfXKQABF-BAgwAAAA==\" --id \"AAMkAGYzNjMxYTU4LTJjZjYtNDlhMi1iMzQ2LWVmMTU3YmUzOGM5MABGAAAAAAAw3-tXgryDSr5p162KnUPKBwDEwEFouXWWT50CfwqSN9cpAAEX8ECDAADEwEFouXWWT50CfwqSN9cpAAEX8GuPAAA=\"","title":"Examples"},{"location":"cmd/todo/task/task-get/#response","text":"JSON Text CSV { \"importance\" : \"normal\" , \"isReminderOn\" : false , \"status\" : \"notStarted\" , \"title\" : \"Stay healthy\" , \"createdDateTime\" : \"2022-10-23T14:05:09.2673009Z\" , \"lastModifiedDateTime\" : \"2022-10-23T14:15:11.3180312Z\" , \"hasAttachments\" : false , \"categories\" : [], \"id\" : \"AAMkAGYzNjMxYTU4LTJjZjYtNDlhMi1iMzQ2LWVmMTU3YmUzOGM5MABGAAAAAAAw3-tXgryDSr5p162KnUPKBwDEwEFouXWWT50CfwqSN9cpAAEX8ECDAADEwEFouXWWT50CfwqSN9cpAAEX8GuPAAA=\" , \"body\" : { \"content\" : \"\" , \"contentType\" : \"text\" } } createdDateTime : 2022-10-23T14:05:09.2673009Z id : AAMkAGYzNjMxYTU4LTJjZjYtNDlhMi1iMzQ2LWVmMTU3YmUzOGM5MABGAAAAAAAw3-tXgryDSr5p162KnUPKBwDEwEFouXWWT50CfwqSN9cpAAEX8ECDAADEwEFouXWWT50CfwqSN9cpAAEX8GuPAAA= lastModifiedDateTime: 2022-10-23T14:15:11.3180312Z status : notStarted title : Stay healthy id,title,status,createdDateTime,lastModifiedDateTime AAMkAGYzNjMxYTU4LTJjZjYtNDlhMi1iMzQ2LWVmMTU3YmUzOGM5MABGAAAAAAAw3-tXgryDSr5p162KnUPKBwDEwEFouXWWT50CfwqSN9cpAAEX8ECDAADEwEFouXWWT50CfwqSN9cpAAEX8GuPAAA=,Stay healthy,notStarted,2022-10-23T14:05:09.2673009Z,2022-10-23T14:15:11.3180312Z","title":"Response"},{"location":"cmd/todo/task/task-list/","text":"todo task list \u00b6 List tasks from a Microsoft To Do task list Usage \u00b6 m365 todo task list [ options ] Options \u00b6 --listName [listName] The name of the task list to return tasks from. Specify either listName or listId , not both --listId [listId] The id of the task list to return tasks from. Specify either listName or listId , not both -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 List tasks from Microsoft To Do tasks list with the name My task list m365 todo task list --listName \"My task list\" List tasks from Microsoft To Do tasks list with the id AQMkAGYzNjMxYTU4LTJjZjYtNDlhMi1iMzQ2LWVmMTU3YmUzOGM5MAAuAAADMN-7V4K8g0q_adetip1DygEAxMBBaLl1lk_dAn8KkjfXKQABF-BAgwAAAA== m365 todo task list --listId \"AQMkAGYzNjMxYTU4LTJjZjYtNDlhMi1iMzQ2LWVmMTU3YmUzOGM5MAAuAAADMN-7V4K8g0q_adetip1DygEAxMBBaLl1lk_dAn8KkjfXKQABF-BAgwAAAA==\"","title":"task list"},{"location":"cmd/todo/task/task-list/#todo-task-list","text":"List tasks from a Microsoft To Do task list","title":"todo task list"},{"location":"cmd/todo/task/task-list/#usage","text":"m365 todo task list [ options ]","title":"Usage"},{"location":"cmd/todo/task/task-list/#options","text":"--listName [listName] The name of the task list to return tasks from. Specify either listName or listId , not both --listId [listId] The id of the task list to return tasks from. Specify either listName or listId , not both -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/todo/task/task-list/#examples","text":"List tasks from Microsoft To Do tasks list with the name My task list m365 todo task list --listName \"My task list\" List tasks from Microsoft To Do tasks list with the id AQMkAGYzNjMxYTU4LTJjZjYtNDlhMi1iMzQ2LWVmMTU3YmUzOGM5MAAuAAADMN-7V4K8g0q_adetip1DygEAxMBBaLl1lk_dAn8KkjfXKQABF-BAgwAAAA== m365 todo task list --listId \"AQMkAGYzNjMxYTU4LTJjZjYtNDlhMi1iMzQ2LWVmMTU3YmUzOGM5MAAuAAADMN-7V4K8g0q_adetip1DygEAxMBBaLl1lk_dAn8KkjfXKQABF-BAgwAAAA==\"","title":"Examples"},{"location":"cmd/todo/task/task-remove/","text":"todo task remove \u00b6 Removes the specified Microsoft To Do task Usage \u00b6 m365 todo task remove [ options ] Options \u00b6 -i, --id <id> The id of the task to remove --listName [listName] The name of the task list in which the task exists. Specify either listId or listName , not both --listId [listId] The id of the task list in which the task exists. Specify either listId or listName , not both --confirm Don't prompt for confirmation -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Removes Microsoft To Do task with the specified id in a list with the specified name m365 todo task remove --id \"BBMkAGI3NDhlZmQzLWQxYjAtNGJjNy04NmYwLWQ0M2IzZTNlMDUwNAAuAAAAAACQ1l2jfH6VSZraktP8Z7auAQCbV93BagWITZhL3J6BMqhjAAD9pHIhBBB=\" --listName \"Tasks\" Removes Microsoft To Do task with the specified id in a list with the specified id m365 todo task remove --id \"BBMkAGI3NDhlZmQzLWQxYjAtNGJjNy04NmYwLWQ0M2IzZTNlMDUwNAAuAAAAAACQ1l2jfH6VSZraktP8Z7auAQCbV93BagWITZhL3J6BMqhjAAD9pHIhBBB=\" --listId \"AAMkAGI3NDhlZmQzLWQxYjAtNGJjNy04NmYwLWQ0M2IzZTNlMDUwNAAuAAAAAACQ1l2jfH6VSZraktP8Z7auAQCbV93BagWITZhL3J6BMqhjAAD9pHIhAAA=\"","title":"task remove"},{"location":"cmd/todo/task/task-remove/#todo-task-remove","text":"Removes the specified Microsoft To Do task","title":"todo task remove"},{"location":"cmd/todo/task/task-remove/#usage","text":"m365 todo task remove [ options ]","title":"Usage"},{"location":"cmd/todo/task/task-remove/#options","text":"-i, --id <id> The id of the task to remove --listName [listName] The name of the task list in which the task exists. Specify either listId or listName , not both --listId [listId] The id of the task list in which the task exists. Specify either listId or listName , not both --confirm Don't prompt for confirmation -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/todo/task/task-remove/#examples","text":"Removes Microsoft To Do task with the specified id in a list with the specified name m365 todo task remove --id \"BBMkAGI3NDhlZmQzLWQxYjAtNGJjNy04NmYwLWQ0M2IzZTNlMDUwNAAuAAAAAACQ1l2jfH6VSZraktP8Z7auAQCbV93BagWITZhL3J6BMqhjAAD9pHIhBBB=\" --listName \"Tasks\" Removes Microsoft To Do task with the specified id in a list with the specified id m365 todo task remove --id \"BBMkAGI3NDhlZmQzLWQxYjAtNGJjNy04NmYwLWQ0M2IzZTNlMDUwNAAuAAAAAACQ1l2jfH6VSZraktP8Z7auAQCbV93BagWITZhL3J6BMqhjAAD9pHIhBBB=\" --listId \"AAMkAGI3NDhlZmQzLWQxYjAtNGJjNy04NmYwLWQ0M2IzZTNlMDUwNAAuAAAAAACQ1l2jfH6VSZraktP8Z7auAQCbV93BagWITZhL3J6BMqhjAAD9pHIhAAA=\"","title":"Examples"},{"location":"cmd/todo/task/task-set/","text":"todo task set \u00b6 Update a task in a Microsoft To Do task list Usage \u00b6 m365 todo task set [ options ] Options \u00b6 -i, --id <id> The id of the task to update -t, --title [title] Sets the task title -s, --status [status] Sets the status of the task. Allowed values notStarted , inProgress , completed , waitingOnOthers , deferred --listName [listName] The name of the task list in which the task exists. Specify either listName or listId , not both --listId [listId] The id of the task list in which the task exists. Specify either listName or listId , not both --bodyContent [bodyContent] The body content of the task. In the UI this is called 'notes'. --bodyContentType [bodyContentType] The type of the body content. Possible values are text and html . Default is text . --importance [importance] The importance of the task. Possible values are: low , normal , high . --dueDateTime [dueDateTime] The date and time when the task is due. This should be defined as a valid ISO 8601 string in the UTC time zone. Only date value is needed, time value is always ignored. --reminderDateTime [reminderDateTime] The date and time for a reminder alert of the task to occur. This should be defined as a valid ISO 8601 string in the UTC time zone. -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Update a task with title New task to Update doco in Microsoft To Do tasks list with a specific name m365 todo task set --id \"AAMkADU3Y2E0OTMxLTllYTQtNGFlZS1hZGM0LWI1NjZjY2FhM2RhMABGAAAAAADhr7P77n9xS6PdtDemRwpHBwCin1tvQMXzRKN1hQDz2S3VAAAXXsleAACin1tvQMXzRKN1hQDz2S3VAAAXXzr9AAA=\" --title \"Update doco\" --listName \"My task list\" Update a task with status from notStarted to inProgress in Microsoft To Do tasks list with a specific name m365 todo task set --id \"AAMkADU3Y2E0OTMxLTllYTQtNGFlZS1hZGM0LWI1NjZjY2FhM2RhMABGAAAAAADhr7P77n9xS6PdtDemRwpHBwCin1tvQMXzRKN1hQDz2S3VAAAXXsleAACin1tvQMXzRKN1hQDz2S3VAAAXXzr9AAA=\" --status \"inProgress\" --listName \"My task list\" Update a task with bodyContent and reminder and flag it as important in Microsoft To Do tasks list with a specific name m365 todo task set --id \"AAMkADU3Y2E0OTMxLTllYTQtNGFlZS1hZGM0LWI1NjZjY2FhM2RhMABGAAAAAADhr7P77n9xS6PdtDemRwpHBwCin1tvQMXzRKN1hQDz2S3VAAAXXsleAACin1tvQMXzRKN1hQDz2S3VAAAXXzr9AAA=\" --listName \"My task list\" --bodyContent \"I should not forget this\" --reminderDateTime 2023 -01-01T12:00:00Z --importance high Update a task with due date in Microsoft To Do tasks list with list id m365 todo task set --id \"AAMkADU3Y2E0OTMxLTllYTQtNGFlZS1hZGM0LWI1NjZjY2FhM2RhMABGAAAAAADhr7P77n9xS6PdtDemRwpHBwCin1tvQMXzRKN1hQDz2S3VAAAXXsleAACin1tvQMXzRKN1hQDz2S3VAAAXXzr9AAA=\" --listId \"AQMkADlhMTRkOGEzLWQ1M2QtNGVkNS04NjdmLWU0NzJhMjZmZWNmMwAuAAADKvwNgAMNPE_zFNRJXVrU1wEAhHKQZHItDEOVCn8U3xuA2AABmQeVPwAAAA==\" --dueDateTime 2023 -01-01","title":"task set"},{"location":"cmd/todo/task/task-set/#todo-task-set","text":"Update a task in a Microsoft To Do task list","title":"todo task set"},{"location":"cmd/todo/task/task-set/#usage","text":"m365 todo task set [ options ]","title":"Usage"},{"location":"cmd/todo/task/task-set/#options","text":"-i, --id <id> The id of the task to update -t, --title [title] Sets the task title -s, --status [status] Sets the status of the task. Allowed values notStarted , inProgress , completed , waitingOnOthers , deferred --listName [listName] The name of the task list in which the task exists. Specify either listName or listId , not both --listId [listId] The id of the task list in which the task exists. Specify either listName or listId , not both --bodyContent [bodyContent] The body content of the task. In the UI this is called 'notes'. --bodyContentType [bodyContentType] The type of the body content. Possible values are text and html . Default is text . --importance [importance] The importance of the task. Possible values are: low , normal , high . --dueDateTime [dueDateTime] The date and time when the task is due. This should be defined as a valid ISO 8601 string in the UTC time zone. Only date value is needed, time value is always ignored. --reminderDateTime [reminderDateTime] The date and time for a reminder alert of the task to occur. This should be defined as a valid ISO 8601 string in the UTC time zone. -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/todo/task/task-set/#examples","text":"Update a task with title New task to Update doco in Microsoft To Do tasks list with a specific name m365 todo task set --id \"AAMkADU3Y2E0OTMxLTllYTQtNGFlZS1hZGM0LWI1NjZjY2FhM2RhMABGAAAAAADhr7P77n9xS6PdtDemRwpHBwCin1tvQMXzRKN1hQDz2S3VAAAXXsleAACin1tvQMXzRKN1hQDz2S3VAAAXXzr9AAA=\" --title \"Update doco\" --listName \"My task list\" Update a task with status from notStarted to inProgress in Microsoft To Do tasks list with a specific name m365 todo task set --id \"AAMkADU3Y2E0OTMxLTllYTQtNGFlZS1hZGM0LWI1NjZjY2FhM2RhMABGAAAAAADhr7P77n9xS6PdtDemRwpHBwCin1tvQMXzRKN1hQDz2S3VAAAXXsleAACin1tvQMXzRKN1hQDz2S3VAAAXXzr9AAA=\" --status \"inProgress\" --listName \"My task list\" Update a task with bodyContent and reminder and flag it as important in Microsoft To Do tasks list with a specific name m365 todo task set --id \"AAMkADU3Y2E0OTMxLTllYTQtNGFlZS1hZGM0LWI1NjZjY2FhM2RhMABGAAAAAADhr7P77n9xS6PdtDemRwpHBwCin1tvQMXzRKN1hQDz2S3VAAAXXsleAACin1tvQMXzRKN1hQDz2S3VAAAXXzr9AAA=\" --listName \"My task list\" --bodyContent \"I should not forget this\" --reminderDateTime 2023 -01-01T12:00:00Z --importance high Update a task with due date in Microsoft To Do tasks list with list id m365 todo task set --id \"AAMkADU3Y2E0OTMxLTllYTQtNGFlZS1hZGM0LWI1NjZjY2FhM2RhMABGAAAAAADhr7P77n9xS6PdtDemRwpHBwCin1tvQMXzRKN1hQDz2S3VAAAXXsleAACin1tvQMXzRKN1hQDz2S3VAAAXXzr9AAA=\" --listId \"AQMkADlhMTRkOGEzLWQ1M2QtNGVkNS04NjdmLWU0NzJhMjZmZWNmMwAuAAADKvwNgAMNPE_zFNRJXVrU1wEAhHKQZHItDEOVCn8U3xuA2AABmQeVPwAAAA==\" --dueDateTime 2023 -01-01","title":"Examples"},{"location":"cmd/util/accesstoken/accesstoken-get/","text":"util accesstoken get \u00b6 Gets access token for the specified resource Usage \u00b6 m365 util accesstoken get [ options ] Options \u00b6 -r, --resource <resource> The resource for which to retrieve an access token --new Retrieve a new access token to ensure that it's valid for as long as possible -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 The util accesstoken get command returns an access token for the specified resource. If an access token has been previously retrieved and is still valid, the command will return the cached token. If you want to ensure that the returned access token is valid for as long as possible, you can force the command to retrieve a new access token by using the --new option. If the URL of your SharePoint tenant has been previously retrieved, you can use sharepoint as the resource to retrieve access token for SharePoint. To verify if the URL of your SharePoint tenant has been previously retrieved, use the spo get command. To explicitly set the URL of your SharePoint tenant use the spo set command. Examples \u00b6 Get access token for the Microsoft Graph m365 util accesstoken get --resource https://graph.microsoft.com Get access token for SharePoint Online using the shorthand identifier m365 util accesstoken get --resource sharepoint Get a new access token for SharePoint Online m365 util accesstoken get --resource https://contoso.sharepoint.com --new","title":"accesstoken get"},{"location":"cmd/util/accesstoken/accesstoken-get/#util-accesstoken-get","text":"Gets access token for the specified resource","title":"util accesstoken get"},{"location":"cmd/util/accesstoken/accesstoken-get/#usage","text":"m365 util accesstoken get [ options ]","title":"Usage"},{"location":"cmd/util/accesstoken/accesstoken-get/#options","text":"-r, --resource <resource> The resource for which to retrieve an access token --new Retrieve a new access token to ensure that it's valid for as long as possible -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/util/accesstoken/accesstoken-get/#remarks","text":"The util accesstoken get command returns an access token for the specified resource. If an access token has been previously retrieved and is still valid, the command will return the cached token. If you want to ensure that the returned access token is valid for as long as possible, you can force the command to retrieve a new access token by using the --new option. If the URL of your SharePoint tenant has been previously retrieved, you can use sharepoint as the resource to retrieve access token for SharePoint. To verify if the URL of your SharePoint tenant has been previously retrieved, use the spo get command. To explicitly set the URL of your SharePoint tenant use the spo set command.","title":"Remarks"},{"location":"cmd/util/accesstoken/accesstoken-get/#examples","text":"Get access token for the Microsoft Graph m365 util accesstoken get --resource https://graph.microsoft.com Get access token for SharePoint Online using the shorthand identifier m365 util accesstoken get --resource sharepoint Get a new access token for SharePoint Online m365 util accesstoken get --resource https://contoso.sharepoint.com --new","title":"Examples"},{"location":"cmd/viva/connections/connections-app-create/","text":"viva connections app create \u00b6 Creates a Viva Connections desktop app package to upload to Microsoft Teams Usage \u00b6 m365 viva connections app create [ options ] Options \u00b6 --portalUrl <portalUrl> The URL of the site to pin in Microsoft Teams. Must be a Communication site --name <name> Name of the app to create, eg. Contoso . No longer than 30 characters --description <description> Short description of the app. Displayed in the app's About dialog. No longer than 80 characters --longDescription <longDescription> Long description of the app. Displayed in the app's About dialog. No longer than 4000 characters --privacyPolicyUrl [privacyPolicyUrl] URL to your organization's privacy policy. Displayed in the app's About dialog. Defaults to https://privacy.microsoft.com/en-us/privacystatement if not specified --termsOfUseUrl [termsOfUseUrl] URL to your organization's terms of use. Displayed in the app's About dialog. Defaults to https://go.microsoft.com/fwlink/?linkid=2039674 if not specified --companyName <companyName> Your organization's name. Displayed in the app's About dialog --companyWebsiteUrl <companyWebsiteUrl> Your organization's website URL. Displayed in the app's About dialog --coloredIconPath <coloredIconPath> Absolute or relative path to the color icon for your app --outlineIconPath <outlineIconPath> Absolute or relative path to the outline icon for your app --accentColor [accentColor] A HEX color to use in conjunction with and as a background for your outline icon. Defaults to #40497E if not specified --force Specify, to overwrite the existing package file on disk -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 If the specified portal URL doesn't exist, the command will a 404 - FILE NOT FOUND error. The specified portal URL must point to a valid Communication site. To get the list of Communication sites in your tenant, execute: m365 spo site list --type CommunicationSite . The command generates a Microsoft Teams app package. App packages must meet specific requirements to be uploaded to Microsoft Teams. Specified attributes must not exceed their maximum length and the specified color and outline icons must be respectively 192x192px and 32x32px. For the latest list of requirements, see the links in the More information section at the end of this page. The generated app package will be written in the current working folder. After creating the Viva Connections desktop app package, you need to upload it to your Microsoft Teams app catalog. You can do it either manually, or using the CLI by executing m365 teams app publish --filePath ./contoso.zip . Examples \u00b6 Create a Viva Connections desktop app package m365 viva connections app create --portalUrl https://contoso.sharepoint.com --name Contoso --description \"Contoso company app\" --longDescription \"Stay on top of what's happening at Contoso\" --companyName Contoso --companyWebsiteUrl https://contoso.com --coloredIconPath icon-color.png --outlineIconPath icon-outline.png More information \u00b6 Add Viva Connections for Microsoft Teams desktop: https://docs.microsoft.com/sharepoint/viva-connections App manifest checklist: https://docs.microsoft.com/microsoftteams/platform/concepts/deploy-and-publish/appsource/prepare/app-manifest-checklist Reference: Manifest schema for Microsoft Teams: https://docs.microsoft.com/microsoftteams/platform/resources/schema/manifest-schema","title":"connections app create"},{"location":"cmd/viva/connections/connections-app-create/#viva-connections-app-create","text":"Creates a Viva Connections desktop app package to upload to Microsoft Teams","title":"viva connections app create"},{"location":"cmd/viva/connections/connections-app-create/#usage","text":"m365 viva connections app create [ options ]","title":"Usage"},{"location":"cmd/viva/connections/connections-app-create/#options","text":"--portalUrl <portalUrl> The URL of the site to pin in Microsoft Teams. Must be a Communication site --name <name> Name of the app to create, eg. Contoso . No longer than 30 characters --description <description> Short description of the app. Displayed in the app's About dialog. No longer than 80 characters --longDescription <longDescription> Long description of the app. Displayed in the app's About dialog. No longer than 4000 characters --privacyPolicyUrl [privacyPolicyUrl] URL to your organization's privacy policy. Displayed in the app's About dialog. Defaults to https://privacy.microsoft.com/en-us/privacystatement if not specified --termsOfUseUrl [termsOfUseUrl] URL to your organization's terms of use. Displayed in the app's About dialog. Defaults to https://go.microsoft.com/fwlink/?linkid=2039674 if not specified --companyName <companyName> Your organization's name. Displayed in the app's About dialog --companyWebsiteUrl <companyWebsiteUrl> Your organization's website URL. Displayed in the app's About dialog --coloredIconPath <coloredIconPath> Absolute or relative path to the color icon for your app --outlineIconPath <outlineIconPath> Absolute or relative path to the outline icon for your app --accentColor [accentColor] A HEX color to use in conjunction with and as a background for your outline icon. Defaults to #40497E if not specified --force Specify, to overwrite the existing package file on disk -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/viva/connections/connections-app-create/#remarks","text":"If the specified portal URL doesn't exist, the command will a 404 - FILE NOT FOUND error. The specified portal URL must point to a valid Communication site. To get the list of Communication sites in your tenant, execute: m365 spo site list --type CommunicationSite . The command generates a Microsoft Teams app package. App packages must meet specific requirements to be uploaded to Microsoft Teams. Specified attributes must not exceed their maximum length and the specified color and outline icons must be respectively 192x192px and 32x32px. For the latest list of requirements, see the links in the More information section at the end of this page. The generated app package will be written in the current working folder. After creating the Viva Connections desktop app package, you need to upload it to your Microsoft Teams app catalog. You can do it either manually, or using the CLI by executing m365 teams app publish --filePath ./contoso.zip .","title":"Remarks"},{"location":"cmd/viva/connections/connections-app-create/#examples","text":"Create a Viva Connections desktop app package m365 viva connections app create --portalUrl https://contoso.sharepoint.com --name Contoso --description \"Contoso company app\" --longDescription \"Stay on top of what's happening at Contoso\" --companyName Contoso --companyWebsiteUrl https://contoso.com --coloredIconPath icon-color.png --outlineIconPath icon-outline.png","title":"Examples"},{"location":"cmd/viva/connections/connections-app-create/#more-information","text":"Add Viva Connections for Microsoft Teams desktop: https://docs.microsoft.com/sharepoint/viva-connections App manifest checklist: https://docs.microsoft.com/microsoftteams/platform/concepts/deploy-and-publish/appsource/prepare/app-manifest-checklist Reference: Manifest schema for Microsoft Teams: https://docs.microsoft.com/microsoftteams/platform/resources/schema/manifest-schema","title":"More information"},{"location":"cmd/yammer/yammer-search/","text":"yammer search \u00b6 Returns a list of messages, users, topics and groups that match the specified query. Usage \u00b6 m365 yammer search [ options ] Options \u00b6 --queryText <queryText> The query for the search --show [show] Specifies the type of data to return when using --output text. Allowed values summary, messages, users, topics, groups . --limit [limit] Limits the results returned for each item category. -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 Attention In order to use this command, you need to grant the Azure AD application used by the CLI for Microsoft 365 the permission to the Yammer API. To do this, execute the cli consent --service yammer command. Using the --show option in JSON output is not supported. To filter JSON results, use either a JMESPath query or filter the data yourself after retrieving them. Examples \u00b6 Returns search result for the query community m365 yammer search --queryText \"community\" Returns groups that match community m365 yammer search --queryText \"community\" --show \"groups\" Returns topics that match community m365 yammer search --queryText \"community\" --show \"topics\" Returns the first 50 users who match the search query nuborocks.onmicrosoft.com m365 yammer search --queryText \"nuborocks.onmicrosoft.com\" --show \"users\" --limit 50 Returns all search results for the query community . Stops at 1000 results. m365 yammer search --queryText \"community\" --output json Returns the search results for the query community and limits the results to the first 50 entries for each result category. m365 yammer search --queryText \"community\" --output json --limit 50","title":"search"},{"location":"cmd/yammer/yammer-search/#yammer-search","text":"Returns a list of messages, users, topics and groups that match the specified query.","title":"yammer search"},{"location":"cmd/yammer/yammer-search/#usage","text":"m365 yammer search [ options ]","title":"Usage"},{"location":"cmd/yammer/yammer-search/#options","text":"--queryText <queryText> The query for the search --show [show] Specifies the type of data to return when using --output text. Allowed values summary, messages, users, topics, groups . --limit [limit] Limits the results returned for each item category. -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/yammer/yammer-search/#remarks","text":"Attention In order to use this command, you need to grant the Azure AD application used by the CLI for Microsoft 365 the permission to the Yammer API. To do this, execute the cli consent --service yammer command. Using the --show option in JSON output is not supported. To filter JSON results, use either a JMESPath query or filter the data yourself after retrieving them.","title":"Remarks"},{"location":"cmd/yammer/yammer-search/#examples","text":"Returns search result for the query community m365 yammer search --queryText \"community\" Returns groups that match community m365 yammer search --queryText \"community\" --show \"groups\" Returns topics that match community m365 yammer search --queryText \"community\" --show \"topics\" Returns the first 50 users who match the search query nuborocks.onmicrosoft.com m365 yammer search --queryText \"nuborocks.onmicrosoft.com\" --show \"users\" --limit 50 Returns all search results for the query community . Stops at 1000 results. m365 yammer search --queryText \"community\" --output json Returns the search results for the query community and limits the results to the first 50 entries for each result category. m365 yammer search --queryText \"community\" --output json --limit 50","title":"Examples"},{"location":"cmd/yammer/group/group-list/","text":"yammer group list \u00b6 Returns the list of groups in a Yammer network or the groups for a specific user Usage \u00b6 m365 yammer group list [ options ] Options \u00b6 --userId [userId] Returns the groups for a specific user --limit [limit] Limits the groups returned -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 Attention In order to use this command, you need to grant the Azure AD application used by the CLI for Microsoft 365 the permission to the Yammer API. To do this, execute the cli consent --service yammer command. Examples \u00b6 Returns all Yammer network groups m365 yammer group list Returns all Yammer network groups for the user with the ID 5611239081 m365 yammer group list --userId 5611239081 Returns the first 10 Yammer network groups m365 yammer group list --limit 10 Returns the first 10 Yammer network groups for the user with the ID 5611239081 m365 yammer group list --userId 5611239081 --limit 10","title":"group list"},{"location":"cmd/yammer/group/group-list/#yammer-group-list","text":"Returns the list of groups in a Yammer network or the groups for a specific user","title":"yammer group list"},{"location":"cmd/yammer/group/group-list/#usage","text":"m365 yammer group list [ options ]","title":"Usage"},{"location":"cmd/yammer/group/group-list/#options","text":"--userId [userId] Returns the groups for a specific user --limit [limit] Limits the groups returned -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/yammer/group/group-list/#remarks","text":"Attention In order to use this command, you need to grant the Azure AD application used by the CLI for Microsoft 365 the permission to the Yammer API. To do this, execute the cli consent --service yammer command.","title":"Remarks"},{"location":"cmd/yammer/group/group-list/#examples","text":"Returns all Yammer network groups m365 yammer group list Returns all Yammer network groups for the user with the ID 5611239081 m365 yammer group list --userId 5611239081 Returns the first 10 Yammer network groups m365 yammer group list --limit 10 Returns the first 10 Yammer network groups for the user with the ID 5611239081 m365 yammer group list --userId 5611239081 --limit 10","title":"Examples"},{"location":"cmd/yammer/group/group-user-add/","text":"yammer group user add \u00b6 Adds a user to a Yammer Group Usage \u00b6 m365 yammer group user add [ options ] Options \u00b6 --groupId <groupId> The ID of the group to add the user to --id [id] ID of the user to add to the group. If not specified, adds the current user --email [email] E-mail of the user to add to the group -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 Attention In order to use this command, you need to grant the Azure AD application used by the CLI for Microsoft 365 the permission to the Yammer API. To do this, execute the cli consent --service yammer command. If the specified user is not a member of the network, the command will return an HTTP 400 error message. Examples \u00b6 Adds the current user to the group with the ID 5611239081 m365 yammer group user add --groupId 5611239081 Adds the user with ID 66622349 to the group with the ID 5611239081 m365 yammer group user add --groupId 5611239081 --id 66622349 Adds the user with e-mail suzy@contoso.com to the group with ID 5611239081 m365 yammer group user add --groupId 5611239081 --email suzy@contoso.com","title":"group user add"},{"location":"cmd/yammer/group/group-user-add/#yammer-group-user-add","text":"Adds a user to a Yammer Group","title":"yammer group user add"},{"location":"cmd/yammer/group/group-user-add/#usage","text":"m365 yammer group user add [ options ]","title":"Usage"},{"location":"cmd/yammer/group/group-user-add/#options","text":"--groupId <groupId> The ID of the group to add the user to --id [id] ID of the user to add to the group. If not specified, adds the current user --email [email] E-mail of the user to add to the group -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/yammer/group/group-user-add/#remarks","text":"Attention In order to use this command, you need to grant the Azure AD application used by the CLI for Microsoft 365 the permission to the Yammer API. To do this, execute the cli consent --service yammer command. If the specified user is not a member of the network, the command will return an HTTP 400 error message.","title":"Remarks"},{"location":"cmd/yammer/group/group-user-add/#examples","text":"Adds the current user to the group with the ID 5611239081 m365 yammer group user add --groupId 5611239081 Adds the user with ID 66622349 to the group with the ID 5611239081 m365 yammer group user add --groupId 5611239081 --id 66622349 Adds the user with e-mail suzy@contoso.com to the group with ID 5611239081 m365 yammer group user add --groupId 5611239081 --email suzy@contoso.com","title":"Examples"},{"location":"cmd/yammer/group/group-user-remove/","text":"yammer group user remove \u00b6 Removes a user from a Yammer group Usage \u00b6 m365 yammer group user remove [ options ] Options \u00b6 --groupId <groupId> The ID of the Yammer group --id [id] ID of the user to remove from the group. If not specified, removes the current user --confirm Don't prompt for confirmation before removing the user from the group -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 Attention In order to use this command, you need to grant the Azure AD application used by the CLI for Microsoft 365 the permission to the Yammer API. To do this, execute the cli consent --service yammer command. Examples \u00b6 Remove the current user from the group with the ID 5611239081 m365 yammer group user remove --groupId 5611239081 Remove the user with the ID 66622349 from the group with the ID 5611239081 m365 yammer group user remove --groupId 5611239081 --id 66622349 Remove the user with the ID 66622349 from the group with the ID 5611239081 without asking for confirmation m365 yammer group user remove --groupId 5611239081 --id 66622349 --confirm","title":"group user remove"},{"location":"cmd/yammer/group/group-user-remove/#yammer-group-user-remove","text":"Removes a user from a Yammer group","title":"yammer group user remove"},{"location":"cmd/yammer/group/group-user-remove/#usage","text":"m365 yammer group user remove [ options ]","title":"Usage"},{"location":"cmd/yammer/group/group-user-remove/#options","text":"--groupId <groupId> The ID of the Yammer group --id [id] ID of the user to remove from the group. If not specified, removes the current user --confirm Don't prompt for confirmation before removing the user from the group -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/yammer/group/group-user-remove/#remarks","text":"Attention In order to use this command, you need to grant the Azure AD application used by the CLI for Microsoft 365 the permission to the Yammer API. To do this, execute the cli consent --service yammer command.","title":"Remarks"},{"location":"cmd/yammer/group/group-user-remove/#examples","text":"Remove the current user from the group with the ID 5611239081 m365 yammer group user remove --groupId 5611239081 Remove the user with the ID 66622349 from the group with the ID 5611239081 m365 yammer group user remove --groupId 5611239081 --id 66622349 Remove the user with the ID 66622349 from the group with the ID 5611239081 without asking for confirmation m365 yammer group user remove --groupId 5611239081 --id 66622349 --confirm","title":"Examples"},{"location":"cmd/yammer/message/message-add/","text":"yammer message add \u00b6 Posts a Yammer network message on behalf of the current user Usage \u00b6 m365 yammer message add [ options ] Options \u00b6 -b, --body <body> The text of the message body --groupId [groupId] Post the message to this group, specified by ID. If this is set then the networkId is inferred from it. You must either specify groupId , repliedToId , or directToUserIds to send the message -r, --repliedToId [repliedToId] The message ID this message is in reply to. If this is set then groupId and networkId are inferred from it. You must either specify groupId , repliedToId , or directToUserIds to send the message -d, --directToUserIds [directToUserIds] Send a private message to one or more users, specified by ID. Alternatively, you can use the Yammer network e-mail addresses instead of the IDs. You must either specify groupId , repliedToId , or directToUserIds to send the message --networkId [networkId] Specify the network to post a message -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 Attention In order to use this command, you need to grant the Azure AD application used by the CLI for Microsoft 365 the permission to the Yammer API. To do this, execute the cli consent --service yammer command. Examples \u00b6 Replies to a message with the ID 1231231231 m365 yammer message add --body \"Hello everyone!\" --repliedToId 1231231231 Sends a private conversation to the user with the ID 1231231231 m365 yammer message add --body \"Hello everyone!\" --directToUserIds 1231231231 Sends a private conversation to multiple users by ID m365 yammer message add --body \"Hello everyone!\" --directToUserIds \"1231231231,1121312\" Sends a private conversation to the user with the e-mail pl@nubo.eu and sc@nubo.eu m365 yammer message add --body \"Hello everyone!\" --directToUserIds \"pl@nubo.eu,sc@nubo.eu\" Posts a message to the group with the ID 12312312312 m365 yammer message add --body \"Hello everyone!\" --groupId 12312312312 Posts a message to the group with the ID 12312312312 in the network 11112312 m365 yammer message add --body \"Hello everyone!\" --groupId 12312312312 --networkId 11112312","title":"message add"},{"location":"cmd/yammer/message/message-add/#yammer-message-add","text":"Posts a Yammer network message on behalf of the current user","title":"yammer message add"},{"location":"cmd/yammer/message/message-add/#usage","text":"m365 yammer message add [ options ]","title":"Usage"},{"location":"cmd/yammer/message/message-add/#options","text":"-b, --body <body> The text of the message body --groupId [groupId] Post the message to this group, specified by ID. If this is set then the networkId is inferred from it. You must either specify groupId , repliedToId , or directToUserIds to send the message -r, --repliedToId [repliedToId] The message ID this message is in reply to. If this is set then groupId and networkId are inferred from it. You must either specify groupId , repliedToId , or directToUserIds to send the message -d, --directToUserIds [directToUserIds] Send a private message to one or more users, specified by ID. Alternatively, you can use the Yammer network e-mail addresses instead of the IDs. You must either specify groupId , repliedToId , or directToUserIds to send the message --networkId [networkId] Specify the network to post a message -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/yammer/message/message-add/#remarks","text":"Attention In order to use this command, you need to grant the Azure AD application used by the CLI for Microsoft 365 the permission to the Yammer API. To do this, execute the cli consent --service yammer command.","title":"Remarks"},{"location":"cmd/yammer/message/message-add/#examples","text":"Replies to a message with the ID 1231231231 m365 yammer message add --body \"Hello everyone!\" --repliedToId 1231231231 Sends a private conversation to the user with the ID 1231231231 m365 yammer message add --body \"Hello everyone!\" --directToUserIds 1231231231 Sends a private conversation to multiple users by ID m365 yammer message add --body \"Hello everyone!\" --directToUserIds \"1231231231,1121312\" Sends a private conversation to the user with the e-mail pl@nubo.eu and sc@nubo.eu m365 yammer message add --body \"Hello everyone!\" --directToUserIds \"pl@nubo.eu,sc@nubo.eu\" Posts a message to the group with the ID 12312312312 m365 yammer message add --body \"Hello everyone!\" --groupId 12312312312 Posts a message to the group with the ID 12312312312 in the network 11112312 m365 yammer message add --body \"Hello everyone!\" --groupId 12312312312 --networkId 11112312","title":"Examples"},{"location":"cmd/yammer/message/message-get/","text":"yammer message get \u00b6 Returns a Yammer message Usage \u00b6 m365 yammer message get [ options ] Options \u00b6 --id <id> The id of the Yammer message -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 Attention In order to use this command, you need to grant the Azure AD application used by the CLI for Microsoft 365 the permission to the Yammer API. To do this, execute the cli consent --service yammer command. Examples \u00b6 Returns the Yammer message with the id 1239871123 m365 yammer message get --id 1239871123 Returns the Yammer message with the id 1239871123 in JSON format m365 yammer message get --id 1239871123 --output json","title":"message get"},{"location":"cmd/yammer/message/message-get/#yammer-message-get","text":"Returns a Yammer message","title":"yammer message get"},{"location":"cmd/yammer/message/message-get/#usage","text":"m365 yammer message get [ options ]","title":"Usage"},{"location":"cmd/yammer/message/message-get/#options","text":"--id <id> The id of the Yammer message -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/yammer/message/message-get/#remarks","text":"Attention In order to use this command, you need to grant the Azure AD application used by the CLI for Microsoft 365 the permission to the Yammer API. To do this, execute the cli consent --service yammer command.","title":"Remarks"},{"location":"cmd/yammer/message/message-get/#examples","text":"Returns the Yammer message with the id 1239871123 m365 yammer message get --id 1239871123 Returns the Yammer message with the id 1239871123 in JSON format m365 yammer message get --id 1239871123 --output json","title":"Examples"},{"location":"cmd/yammer/message/message-like-set/","text":"yammer message like set \u00b6 Likes or unlikes a Yammer message Usage \u00b6 m365 yammer message like set [ options ] Options \u00b6 --messageId <messageId> The id of the Yammer message --enable [enable] Set to true to like a message. Set to false to unlike it. Default true --confirm Don't prompt for confirmation before unliking a message -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 Attention In order to use this command, you need to grant the Azure AD application used by the CLI for Microsoft 365 the permission to the Yammer API. To do this, execute the cli consent --service yammer command. Examples \u00b6 Likes the message with the ID 5611239081 m365 yammer message like set --messageId 5611239081 Unlike the message with the ID 5611239081 m365 yammer message like set --messageId 5611239081 --enable false Unlike the message with the ID 5611239081 without asking for confirmation m365 yammer message like set --messageId 5611239081 --enable false --confirm","title":"message like set"},{"location":"cmd/yammer/message/message-like-set/#yammer-message-like-set","text":"Likes or unlikes a Yammer message","title":"yammer message like set"},{"location":"cmd/yammer/message/message-like-set/#usage","text":"m365 yammer message like set [ options ]","title":"Usage"},{"location":"cmd/yammer/message/message-like-set/#options","text":"--messageId <messageId> The id of the Yammer message --enable [enable] Set to true to like a message. Set to false to unlike it. Default true --confirm Don't prompt for confirmation before unliking a message -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/yammer/message/message-like-set/#remarks","text":"Attention In order to use this command, you need to grant the Azure AD application used by the CLI for Microsoft 365 the permission to the Yammer API. To do this, execute the cli consent --service yammer command.","title":"Remarks"},{"location":"cmd/yammer/message/message-like-set/#examples","text":"Likes the message with the ID 5611239081 m365 yammer message like set --messageId 5611239081 Unlike the message with the ID 5611239081 m365 yammer message like set --messageId 5611239081 --enable false Unlike the message with the ID 5611239081 without asking for confirmation m365 yammer message like set --messageId 5611239081 --enable false --confirm","title":"Examples"},{"location":"cmd/yammer/message/message-list/","text":"yammer message list \u00b6 Returns all accessible messages from the user's Yammer network Usage \u00b6 m365 yammer message list [ options ] Options \u00b6 --olderThanId [olderThanId] Returns messages older than the message ID specified as a numeric string --threaded Will only return the thread starter (first message) for each thread. This parameter is intended for apps which need to display message threads collapsed -f, --feedType [feedType] Returns messages from a specific feed. Available options: All,Top,My,Following,Sent,Private,Received . Default All --groupId [groupId] Returns the messages from a specific group --threadId [threadId] Returns the messages from a specific thread --limit [limit] Limits the messages returned -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 Attention In order to use this command, you need to grant the Azure AD application used by the CLI for Microsoft 365 the permission to the Yammer API. To do this, execute the cli consent --service yammer command. Feed types All: Corresponds to \u201cAll\u201d conversations in the Yammer web interface Top: The algorithmic feed for the user that corresponds to \"Top\" conversations. The Top conversations feed is the feed currently shown in the Yammer mobile apps My: The user\u2019s feed, based on the selection they have made between \"Following\" and \"Top\" conversations Following: The \"Following\" feed which is conversations involving people and topics that the user is following Sent: All messages sent by the user Private: Private messages received by the user Received: All messages received by the user Examples \u00b6 Returns all Yammer network messages m365 yammer message list Returns all Yammer network messages older than the message ID 5611239081 m365 yammer message list --olderThanId 5611239081 Returns all Yammer network thread starter (first message) for each thread m365 yammer message list --threaded Returns the first 10 Yammer network messages m365 yammer message list --limit 10 Returns the first 10 Yammer network messages from the Yammer group 312891231 m365 yammer message list --groupId 312891231 --limit 10 Returns the first 10 Yammer network messages from thread 5611239081 m365 yammer message list --threadId 5611239081 --limit 10 Returns the first 20 Yammer message from the sent feed of the user m365 yammer message list --feedType Sent --limit 20","title":"message list"},{"location":"cmd/yammer/message/message-list/#yammer-message-list","text":"Returns all accessible messages from the user's Yammer network","title":"yammer message list"},{"location":"cmd/yammer/message/message-list/#usage","text":"m365 yammer message list [ options ]","title":"Usage"},{"location":"cmd/yammer/message/message-list/#options","text":"--olderThanId [olderThanId] Returns messages older than the message ID specified as a numeric string --threaded Will only return the thread starter (first message) for each thread. This parameter is intended for apps which need to display message threads collapsed -f, --feedType [feedType] Returns messages from a specific feed. Available options: All,Top,My,Following,Sent,Private,Received . Default All --groupId [groupId] Returns the messages from a specific group --threadId [threadId] Returns the messages from a specific thread --limit [limit] Limits the messages returned -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/yammer/message/message-list/#remarks","text":"Attention In order to use this command, you need to grant the Azure AD application used by the CLI for Microsoft 365 the permission to the Yammer API. To do this, execute the cli consent --service yammer command. Feed types All: Corresponds to \u201cAll\u201d conversations in the Yammer web interface Top: The algorithmic feed for the user that corresponds to \"Top\" conversations. The Top conversations feed is the feed currently shown in the Yammer mobile apps My: The user\u2019s feed, based on the selection they have made between \"Following\" and \"Top\" conversations Following: The \"Following\" feed which is conversations involving people and topics that the user is following Sent: All messages sent by the user Private: Private messages received by the user Received: All messages received by the user","title":"Remarks"},{"location":"cmd/yammer/message/message-list/#examples","text":"Returns all Yammer network messages m365 yammer message list Returns all Yammer network messages older than the message ID 5611239081 m365 yammer message list --olderThanId 5611239081 Returns all Yammer network thread starter (first message) for each thread m365 yammer message list --threaded Returns the first 10 Yammer network messages m365 yammer message list --limit 10 Returns the first 10 Yammer network messages from the Yammer group 312891231 m365 yammer message list --groupId 312891231 --limit 10 Returns the first 10 Yammer network messages from thread 5611239081 m365 yammer message list --threadId 5611239081 --limit 10 Returns the first 20 Yammer message from the sent feed of the user m365 yammer message list --feedType Sent --limit 20","title":"Examples"},{"location":"cmd/yammer/message/message-remove/","text":"yammer message remove \u00b6 Removes a Yammer message Usage \u00b6 m365 yammer message remove [ options ] Options \u00b6 --id <id> The id of the Yammer message --confirm Don't prompt for confirming removing the Yammer message -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 Attention In order to use this command, you need to grant the Azure AD application used by the CLI for Microsoft 365 the permission to the Yammer API. To do this, execute the cli consent --service yammer command. To remove a message, you must either: have posted the message yourself be an administrator of the group the message was posted to or be an admin of the network the message is in Examples \u00b6 Removes the Yammer message with the id 1239871123 m365 yammer message remove --id 1239871123 Removes the Yammer message with the id 1239871123 without prompting for confirmation. m365 yammer message remove --id 1239871123 --confirm","title":"message remove"},{"location":"cmd/yammer/message/message-remove/#yammer-message-remove","text":"Removes a Yammer message","title":"yammer message remove"},{"location":"cmd/yammer/message/message-remove/#usage","text":"m365 yammer message remove [ options ]","title":"Usage"},{"location":"cmd/yammer/message/message-remove/#options","text":"--id <id> The id of the Yammer message --confirm Don't prompt for confirming removing the Yammer message -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/yammer/message/message-remove/#remarks","text":"Attention In order to use this command, you need to grant the Azure AD application used by the CLI for Microsoft 365 the permission to the Yammer API. To do this, execute the cli consent --service yammer command. To remove a message, you must either: have posted the message yourself be an administrator of the group the message was posted to or be an admin of the network the message is in","title":"Remarks"},{"location":"cmd/yammer/message/message-remove/#examples","text":"Removes the Yammer message with the id 1239871123 m365 yammer message remove --id 1239871123 Removes the Yammer message with the id 1239871123 without prompting for confirmation. m365 yammer message remove --id 1239871123 --confirm","title":"Examples"},{"location":"cmd/yammer/network/network-list/","text":"Yammer network list \u00b6 Returns a list of networks to which the current user has access Usage \u00b6 m365 yammer network list [ options ] Options \u00b6 --includeSuspended Include the networks in which the user is suspended -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 Attention In order to use this command, you need to grant the Azure AD application used by the CLI for Microsoft 365 the permission to the Yammer API. To do this, execute the cli consent --service yammer command. Examples \u00b6 Returns the current user's networks m365 yammer network list Returns the current user's networks including the networks in which the user is suspended m365 yammer network list --includeSuspended","title":"network list"},{"location":"cmd/yammer/network/network-list/#yammer-network-list","text":"Returns a list of networks to which the current user has access","title":"Yammer network list"},{"location":"cmd/yammer/network/network-list/#usage","text":"m365 yammer network list [ options ]","title":"Usage"},{"location":"cmd/yammer/network/network-list/#options","text":"--includeSuspended Include the networks in which the user is suspended -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/yammer/network/network-list/#remarks","text":"Attention In order to use this command, you need to grant the Azure AD application used by the CLI for Microsoft 365 the permission to the Yammer API. To do this, execute the cli consent --service yammer command.","title":"Remarks"},{"location":"cmd/yammer/network/network-list/#examples","text":"Returns the current user's networks m365 yammer network list Returns the current user's networks including the networks in which the user is suspended m365 yammer network list --includeSuspended","title":"Examples"},{"location":"cmd/yammer/report/report-activitycounts/","text":"yammer report activitycounts \u00b6 Gets the trends on the amount of Yammer activity in your organization by how many messages were posted, read, and liked Usage \u00b6 m365 yammer report activitycounts [ options ] Options \u00b6 -p, --period <period> The length of time over which the report is aggregated. Supported values D7,D30,D90,D180 -f, --outputFile [outputFile] Path to the file where the report should be stored in -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Gets the trends on the amount of Yammer activity in your organization by how many messages were posted, read, and liked for the last week m365 yammer report activitycounts --period D7 Gets the trends on the amount of Yammer activity in your organization by how many messages were posted, read, and liked for the last week and exports the report data in the specified path in text format m365 yammer report activitycounts --period D7 --output text > \"activitycounts.txt\" Gets the trends on the amount of Yammer activity in your organization by how many messages were posted, read, and liked for the last week and exports the report data in the specified path in json format m365 yammer report activitycounts --period D7 --output json > \"activitycounts.json\"","title":"report activitycounts"},{"location":"cmd/yammer/report/report-activitycounts/#yammer-report-activitycounts","text":"Gets the trends on the amount of Yammer activity in your organization by how many messages were posted, read, and liked","title":"yammer report activitycounts"},{"location":"cmd/yammer/report/report-activitycounts/#usage","text":"m365 yammer report activitycounts [ options ]","title":"Usage"},{"location":"cmd/yammer/report/report-activitycounts/#options","text":"-p, --period <period> The length of time over which the report is aggregated. Supported values D7,D30,D90,D180 -f, --outputFile [outputFile] Path to the file where the report should be stored in -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/yammer/report/report-activitycounts/#examples","text":"Gets the trends on the amount of Yammer activity in your organization by how many messages were posted, read, and liked for the last week m365 yammer report activitycounts --period D7 Gets the trends on the amount of Yammer activity in your organization by how many messages were posted, read, and liked for the last week and exports the report data in the specified path in text format m365 yammer report activitycounts --period D7 --output text > \"activitycounts.txt\" Gets the trends on the amount of Yammer activity in your organization by how many messages were posted, read, and liked for the last week and exports the report data in the specified path in json format m365 yammer report activitycounts --period D7 --output json > \"activitycounts.json\"","title":"Examples"},{"location":"cmd/yammer/report/report-activityusercounts/","text":"yammer report activityusercounts \u00b6 Gets the trends on the number of unique users who posted, read, and liked Yammer messages Usage \u00b6 m365 yammer report activityusercounts [ options ] Options \u00b6 -p, --period <period> The length of time over which the report is aggregated. Supported values D7,D30,D90,D180 -f, --outputFile [outputFile] Path to the file where the report should be stored in -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Gets the trends on the number of unique users who posted, read, and liked Yammer messages for the last week m365 yammer report activityusercounts --period D7 Gets the trends on the number of unique users who posted, read, and liked Yammer messages for the last week and exports the report data in the specified path in text format m365 yammer report activityusercounts --period D7 --output text > \"activityusercounts.txt\" Gets the trends on the number of unique users who posted, read, and liked Yammer messages for the last week and exports the report data in the specified path in json format m365 yammer report activityusercounts --period D7 --output json > \"activityusercounts.json\"","title":"report activityusercounts"},{"location":"cmd/yammer/report/report-activityusercounts/#yammer-report-activityusercounts","text":"Gets the trends on the number of unique users who posted, read, and liked Yammer messages","title":"yammer report activityusercounts"},{"location":"cmd/yammer/report/report-activityusercounts/#usage","text":"m365 yammer report activityusercounts [ options ]","title":"Usage"},{"location":"cmd/yammer/report/report-activityusercounts/#options","text":"-p, --period <period> The length of time over which the report is aggregated. Supported values D7,D30,D90,D180 -f, --outputFile [outputFile] Path to the file where the report should be stored in -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/yammer/report/report-activityusercounts/#examples","text":"Gets the trends on the number of unique users who posted, read, and liked Yammer messages for the last week m365 yammer report activityusercounts --period D7 Gets the trends on the number of unique users who posted, read, and liked Yammer messages for the last week and exports the report data in the specified path in text format m365 yammer report activityusercounts --period D7 --output text > \"activityusercounts.txt\" Gets the trends on the number of unique users who posted, read, and liked Yammer messages for the last week and exports the report data in the specified path in json format m365 yammer report activityusercounts --period D7 --output json > \"activityusercounts.json\"","title":"Examples"},{"location":"cmd/yammer/report/report-activityuserdetail/","text":"yammer report activityuserdetail \u00b6 Gets details about Yammer activity by user Usage \u00b6 m365 yammer report activityuserdetail [ options ] Options \u00b6 -d, --date [date] The date for which you would like to view the users who performed any activity. Supported date format is YYYY-MM-DD . Specify the date or period, but not both. -p, --period [period] The length of time over which the report is aggregated. Supported values D7,D30,D90,D180 -f, --outputFile [outputFile] Path to the file where the report should be stored in -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 As this report is only available for the past 28 days, date parameter value should be a date from that range. Examples \u00b6 Gets details about Yammer activity by user for the last week m365 yammer report activityuserdetail --period D7 Gets details about Yammer activity by user for May 1, 2019 m365 yammer report activityuserdetail --date 2019 -05-01 Gets details about Yammer activity by user for the last week and exports the report data in the specified path in text format m365 yammer report activityuserdetail --period D7 --output text > \"activityuserdetail.txt\" Gets details about Yammer activity by user for the last week and exports the report data in the specified path in json format m365 yammer report activityuserdetail --period D7 --output json > \"activityuserdetail.json\"","title":"report activityuserdetail"},{"location":"cmd/yammer/report/report-activityuserdetail/#yammer-report-activityuserdetail","text":"Gets details about Yammer activity by user","title":"yammer report activityuserdetail"},{"location":"cmd/yammer/report/report-activityuserdetail/#usage","text":"m365 yammer report activityuserdetail [ options ]","title":"Usage"},{"location":"cmd/yammer/report/report-activityuserdetail/#options","text":"-d, --date [date] The date for which you would like to view the users who performed any activity. Supported date format is YYYY-MM-DD . Specify the date or period, but not both. -p, --period [period] The length of time over which the report is aggregated. Supported values D7,D30,D90,D180 -f, --outputFile [outputFile] Path to the file where the report should be stored in -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/yammer/report/report-activityuserdetail/#remarks","text":"As this report is only available for the past 28 days, date parameter value should be a date from that range.","title":"Remarks"},{"location":"cmd/yammer/report/report-activityuserdetail/#examples","text":"Gets details about Yammer activity by user for the last week m365 yammer report activityuserdetail --period D7 Gets details about Yammer activity by user for May 1, 2019 m365 yammer report activityuserdetail --date 2019 -05-01 Gets details about Yammer activity by user for the last week and exports the report data in the specified path in text format m365 yammer report activityuserdetail --period D7 --output text > \"activityuserdetail.txt\" Gets details about Yammer activity by user for the last week and exports the report data in the specified path in json format m365 yammer report activityuserdetail --period D7 --output json > \"activityuserdetail.json\"","title":"Examples"},{"location":"cmd/yammer/report/report-deviceusagedistributionusercounts/","text":"yammer report deviceusagedistributionusercounts \u00b6 Gets the number of users by device type Usage \u00b6 m365 yammer report deviceusagedistributionusercounts [ options ] Options \u00b6 -p, --period <period> The length of time over which the report is aggregated. Supported values D7,D30,D90,D180 -f, --outputFile [outputFile] Path to the file where the report should be stored in -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Gets the number of users by device type for the last week m365 yammer report deviceusagedistributionusercounts --period D7 Gets the number of users by device type for the last week and exports the report data in the specified path in text format m365 yammer report deviceusagedistributionusercounts --period D7 --output text > \"deviceusagedistributionusercounts.txt\" Gets the number of users by device type for the last week and exports the report data in the specified path in json format m365 yammer report deviceusagedistributionusercounts --period D7 --output json > \"deviceusagedistributionusercounts.json\"","title":"report deviceusagedistributionusercounts"},{"location":"cmd/yammer/report/report-deviceusagedistributionusercounts/#yammer-report-deviceusagedistributionusercounts","text":"Gets the number of users by device type","title":"yammer report deviceusagedistributionusercounts"},{"location":"cmd/yammer/report/report-deviceusagedistributionusercounts/#usage","text":"m365 yammer report deviceusagedistributionusercounts [ options ]","title":"Usage"},{"location":"cmd/yammer/report/report-deviceusagedistributionusercounts/#options","text":"-p, --period <period> The length of time over which the report is aggregated. Supported values D7,D30,D90,D180 -f, --outputFile [outputFile] Path to the file where the report should be stored in -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/yammer/report/report-deviceusagedistributionusercounts/#examples","text":"Gets the number of users by device type for the last week m365 yammer report deviceusagedistributionusercounts --period D7 Gets the number of users by device type for the last week and exports the report data in the specified path in text format m365 yammer report deviceusagedistributionusercounts --period D7 --output text > \"deviceusagedistributionusercounts.txt\" Gets the number of users by device type for the last week and exports the report data in the specified path in json format m365 yammer report deviceusagedistributionusercounts --period D7 --output json > \"deviceusagedistributionusercounts.json\"","title":"Examples"},{"location":"cmd/yammer/report/report-deviceusageusercounts/","text":"yammer report deviceusageusercounts \u00b6 Gets the number of daily users by device type Usage \u00b6 m365 yammer report deviceusageusercounts [ options ] Options \u00b6 -p, --period <period> The length of time over which the report is aggregated. Supported values D7,D30,D90,D180 -f, --outputFile [outputFile] Path to the file where the report should be stored in -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Gets the number of daily users by device type for the last week m365 yammer report deviceusageusercounts --period D7 Gets the number of daily users by device type for the last week and exports the report data in the specified path in text format m365 yammer report deviceusageusercounts --period D7 --output text > \"deviceusageusercounts.txt\" Gets the number of daily users by device type for the last week and exports the report data in the specified path in json format m365 yammer report deviceusageusercounts --period D7 --output json > \"deviceusageusercounts.json\"","title":"report deviceusageusercounts"},{"location":"cmd/yammer/report/report-deviceusageusercounts/#yammer-report-deviceusageusercounts","text":"Gets the number of daily users by device type","title":"yammer report deviceusageusercounts"},{"location":"cmd/yammer/report/report-deviceusageusercounts/#usage","text":"m365 yammer report deviceusageusercounts [ options ]","title":"Usage"},{"location":"cmd/yammer/report/report-deviceusageusercounts/#options","text":"-p, --period <period> The length of time over which the report is aggregated. Supported values D7,D30,D90,D180 -f, --outputFile [outputFile] Path to the file where the report should be stored in -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/yammer/report/report-deviceusageusercounts/#examples","text":"Gets the number of daily users by device type for the last week m365 yammer report deviceusageusercounts --period D7 Gets the number of daily users by device type for the last week and exports the report data in the specified path in text format m365 yammer report deviceusageusercounts --period D7 --output text > \"deviceusageusercounts.txt\" Gets the number of daily users by device type for the last week and exports the report data in the specified path in json format m365 yammer report deviceusageusercounts --period D7 --output json > \"deviceusageusercounts.json\"","title":"Examples"},{"location":"cmd/yammer/report/report-deviceusageuserdetail/","text":"yammer report deviceusageuserdetail \u00b6 Gets details about Yammer device usage by user Usage \u00b6 m365 yammer report deviceusageuserdetail [ options ] Options \u00b6 -p, --period [period] The length of time over which the report is aggregated. Supported values D7,D30,D90,D180 -d, --date [date] The date for which you would like to view the users who performed any activity. Supported date format is YYYY-MM-DD . -f, --outputFile [outputFile] Path to the file where the report should be stored in -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 As this report is only available for the past 28 days, date parameter value should be a date from that range. Examples \u00b6 Gets details about Yammer device usage by user for the last week m365 yammer report deviceusageuserdetail --period D7 Gets details about Yammer device usage by user for July 1, 2019 m365 yammer report deviceusageuserdetail --date 2019 -07-01 Gets details about Yammer device usage by user for the last week and exports the report data in the specified path in text format m365 yammer report deviceusageuserdetail --period D7 --output text > \"deviceusageuserdetail.txt\" Gets details about Yammer device usage by user for the last week and exports the report data in the specified path in json format m365 yammer report deviceusageuserdetail --period D7 --output json > \"deviceusageuserdetail.json\"","title":"report deviceusageuserdetail"},{"location":"cmd/yammer/report/report-deviceusageuserdetail/#yammer-report-deviceusageuserdetail","text":"Gets details about Yammer device usage by user","title":"yammer report deviceusageuserdetail"},{"location":"cmd/yammer/report/report-deviceusageuserdetail/#usage","text":"m365 yammer report deviceusageuserdetail [ options ]","title":"Usage"},{"location":"cmd/yammer/report/report-deviceusageuserdetail/#options","text":"-p, --period [period] The length of time over which the report is aggregated. Supported values D7,D30,D90,D180 -d, --date [date] The date for which you would like to view the users who performed any activity. Supported date format is YYYY-MM-DD . -f, --outputFile [outputFile] Path to the file where the report should be stored in -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/yammer/report/report-deviceusageuserdetail/#remarks","text":"As this report is only available for the past 28 days, date parameter value should be a date from that range.","title":"Remarks"},{"location":"cmd/yammer/report/report-deviceusageuserdetail/#examples","text":"Gets details about Yammer device usage by user for the last week m365 yammer report deviceusageuserdetail --period D7 Gets details about Yammer device usage by user for July 1, 2019 m365 yammer report deviceusageuserdetail --date 2019 -07-01 Gets details about Yammer device usage by user for the last week and exports the report data in the specified path in text format m365 yammer report deviceusageuserdetail --period D7 --output text > \"deviceusageuserdetail.txt\" Gets details about Yammer device usage by user for the last week and exports the report data in the specified path in json format m365 yammer report deviceusageuserdetail --period D7 --output json > \"deviceusageuserdetail.json\"","title":"Examples"},{"location":"cmd/yammer/report/report-groupsactivitycounts/","text":"yammer report groupsactivitycounts \u00b6 Gets the number of Yammer messages posted, read, and liked in groups Usage \u00b6 m365 yammer report groupsactivitycounts [ options ] Options \u00b6 -p, --period <period> The length of time over which the report is aggregated. Supported values D7,D30,D90,D180 -f, --outputFile [outputFile] Path to the file where the report should be stored in -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Gets the number of Yammer messages posted, read, and liked in groups for the last week m365 yammer report groupsactivitycounts --period D7 Gets the number of Yammer messages posted, read, and liked in groups for the last week and exports the report data in the specified path in text format m365 yammer report groupsactivitycounts --period D7 --output text > \"groupsactivitycounts.txt\" Gets the number of Yammer messages posted, read, and liked in groups for the last week and exports the report data in the specified path in json format m365 yammer report groupsactivitycounts --period D7 --output json > \"groupsactivitycounts.json\"","title":"report groupsactivitycounts"},{"location":"cmd/yammer/report/report-groupsactivitycounts/#yammer-report-groupsactivitycounts","text":"Gets the number of Yammer messages posted, read, and liked in groups","title":"yammer report groupsactivitycounts"},{"location":"cmd/yammer/report/report-groupsactivitycounts/#usage","text":"m365 yammer report groupsactivitycounts [ options ]","title":"Usage"},{"location":"cmd/yammer/report/report-groupsactivitycounts/#options","text":"-p, --period <period> The length of time over which the report is aggregated. Supported values D7,D30,D90,D180 -f, --outputFile [outputFile] Path to the file where the report should be stored in -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/yammer/report/report-groupsactivitycounts/#examples","text":"Gets the number of Yammer messages posted, read, and liked in groups for the last week m365 yammer report groupsactivitycounts --period D7 Gets the number of Yammer messages posted, read, and liked in groups for the last week and exports the report data in the specified path in text format m365 yammer report groupsactivitycounts --period D7 --output text > \"groupsactivitycounts.txt\" Gets the number of Yammer messages posted, read, and liked in groups for the last week and exports the report data in the specified path in json format m365 yammer report groupsactivitycounts --period D7 --output json > \"groupsactivitycounts.json\"","title":"Examples"},{"location":"cmd/yammer/report/report-groupsactivitydetail/","text":"yammer report groupsactivitydetail \u00b6 Gets details about Yammer groups activity by group Usage \u00b6 m365 yammer report groupsactivitydetail [ options ] Options \u00b6 -p, --period [period] The length of time over which the report is aggregated. Supported values D7,D30,D90,D180 -d, --date [date] The date for which you would like to view the users who performed any activity. Supported date format is YYYY-MM-DD . -f, --outputFile [outputFile] Path to the file where the report should be stored in -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 As this report is only available for the past 28 days, date parameter value should be a date from that range. Examples \u00b6 Gets details about Yammer groups activity by group for the last week m365 yammer report groupsactivitydetail --period D7 Gets details about Yammer groups activity by group for July 1, 2019 m365 yammer report groupsactivitydetail --date 2019 -07-01 Gets details about Yammer groups activity by group for the last week and exports the report data in the specified path in text format m365 yammer report groupsactivitydetail --period D7 --output text > \"groupsactivitydetail.txt\" Gets details about Yammer groups activity by group for the last week and exports the report data in the specified path in json format m365 yammer report groupsactivitydetail --period D7 --output json > \"groupsactivitydetail.json\"","title":"report groupsactivitydetail"},{"location":"cmd/yammer/report/report-groupsactivitydetail/#yammer-report-groupsactivitydetail","text":"Gets details about Yammer groups activity by group","title":"yammer report groupsactivitydetail"},{"location":"cmd/yammer/report/report-groupsactivitydetail/#usage","text":"m365 yammer report groupsactivitydetail [ options ]","title":"Usage"},{"location":"cmd/yammer/report/report-groupsactivitydetail/#options","text":"-p, --period [period] The length of time over which the report is aggregated. Supported values D7,D30,D90,D180 -d, --date [date] The date for which you would like to view the users who performed any activity. Supported date format is YYYY-MM-DD . -f, --outputFile [outputFile] Path to the file where the report should be stored in -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/yammer/report/report-groupsactivitydetail/#remarks","text":"As this report is only available for the past 28 days, date parameter value should be a date from that range.","title":"Remarks"},{"location":"cmd/yammer/report/report-groupsactivitydetail/#examples","text":"Gets details about Yammer groups activity by group for the last week m365 yammer report groupsactivitydetail --period D7 Gets details about Yammer groups activity by group for July 1, 2019 m365 yammer report groupsactivitydetail --date 2019 -07-01 Gets details about Yammer groups activity by group for the last week and exports the report data in the specified path in text format m365 yammer report groupsactivitydetail --period D7 --output text > \"groupsactivitydetail.txt\" Gets details about Yammer groups activity by group for the last week and exports the report data in the specified path in json format m365 yammer report groupsactivitydetail --period D7 --output json > \"groupsactivitydetail.json\"","title":"Examples"},{"location":"cmd/yammer/report/report-groupsactivitygroupcounts/","text":"yammer report groupsactivitygroupcounts \u00b6 Gets the total number of groups that existed and how many included group conversation activity Usage \u00b6 m365 yammer report groupsactivitygroupcounts [ options ] Options \u00b6 -p, --period <period> The length of time over which the report is aggregated. Supported values D7,D30,D90,D180 -f, --outputFile [outputFile] Path to the file where the report should be stored in -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Examples \u00b6 Gets the total number of groups that existed and how many included group conversation activity for the last week m365 yammer report groupsactivitygroupcounts --period D7 Gets the total number of groups that existed and how many included group conversation activity for the last week and exports the report data in the specified path in text format m365 yammer report groupsactivitygroupcounts --period D7 --output text > \"groupsactivitygroupcounts.txt\" Gets the total number of groups that existed and how many included group conversation activity for the last week and exports the report data in the specified path in json format m365 yammer report groupsactivitygroupcounts --period D7 --output json > \"groupsactivitygroupcounts.json\"","title":"report groupsactivitygroupcounts"},{"location":"cmd/yammer/report/report-groupsactivitygroupcounts/#yammer-report-groupsactivitygroupcounts","text":"Gets the total number of groups that existed and how many included group conversation activity","title":"yammer report groupsactivitygroupcounts"},{"location":"cmd/yammer/report/report-groupsactivitygroupcounts/#usage","text":"m365 yammer report groupsactivitygroupcounts [ options ]","title":"Usage"},{"location":"cmd/yammer/report/report-groupsactivitygroupcounts/#options","text":"-p, --period <period> The length of time over which the report is aggregated. Supported values D7,D30,D90,D180 -f, --outputFile [outputFile] Path to the file where the report should be stored in -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/yammer/report/report-groupsactivitygroupcounts/#examples","text":"Gets the total number of groups that existed and how many included group conversation activity for the last week m365 yammer report groupsactivitygroupcounts --period D7 Gets the total number of groups that existed and how many included group conversation activity for the last week and exports the report data in the specified path in text format m365 yammer report groupsactivitygroupcounts --period D7 --output text > \"groupsactivitygroupcounts.txt\" Gets the total number of groups that existed and how many included group conversation activity for the last week and exports the report data in the specified path in json format m365 yammer report groupsactivitygroupcounts --period D7 --output json > \"groupsactivitygroupcounts.json\"","title":"Examples"},{"location":"cmd/yammer/user/user-get/","text":"yammer user get \u00b6 Retrieves the current user or searches for a user by ID or e-mail Usage \u00b6 m365 yammer user get [ options ] Options \u00b6 -i, --id [id] Retrieve a user by ID --email [email] Retrieve a user by e-mail -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 Attention In order to use this command, you need to grant the Azure AD application used by the CLI for Microsoft 365 the permission to the Yammer API. To do this, execute the cli consent --service yammer command. All operations return a single user object. Operations executed with the email parameter return an array of user objects. Examples \u00b6 Returns the current user m365 yammer user get Returns the user with the ID 1496550697 m365 yammer user get --id 1496550697 Returns an array of users matching the e-mail john.smith@contoso.com m365 yammer user get --email john.smith@contoso.com Returns an array of users matching the e-mail john.smith@contoso.com in JSON. The JSON output returns a full user object m365 yammer user get --email john.smith@contoso.com --output json","title":"user get"},{"location":"cmd/yammer/user/user-get/#yammer-user-get","text":"Retrieves the current user or searches for a user by ID or e-mail","title":"yammer user get"},{"location":"cmd/yammer/user/user-get/#usage","text":"m365 yammer user get [ options ]","title":"Usage"},{"location":"cmd/yammer/user/user-get/#options","text":"-i, --id [id] Retrieve a user by ID --email [email] Retrieve a user by e-mail -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/yammer/user/user-get/#remarks","text":"Attention In order to use this command, you need to grant the Azure AD application used by the CLI for Microsoft 365 the permission to the Yammer API. To do this, execute the cli consent --service yammer command. All operations return a single user object. Operations executed with the email parameter return an array of user objects.","title":"Remarks"},{"location":"cmd/yammer/user/user-get/#examples","text":"Returns the current user m365 yammer user get Returns the user with the ID 1496550697 m365 yammer user get --id 1496550697 Returns an array of users matching the e-mail john.smith@contoso.com m365 yammer user get --email john.smith@contoso.com Returns an array of users matching the e-mail john.smith@contoso.com in JSON. The JSON output returns a full user object m365 yammer user get --email john.smith@contoso.com --output json","title":"Examples"},{"location":"cmd/yammer/user/user-list/","text":"yammer user list \u00b6 Returns users from the current network Usage \u00b6 m365 yammer user list [ options ] Options \u00b6 -g, --groupId [groupId] Returns users within a given group -l, --letter [letter] Returns users with usernames beginning with the given character --reverse Returns users in reverse sorting order --limit [limit] Limits the users returned --sortBy [sortBy] Returns users sorted by a number of messages or followers, instead of the default behavior of sorting alphabetically. Allowed values are messages,followers -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging Remarks \u00b6 Attention In order to use this command, you need to grant the Azure AD application used by the CLI for Microsoft 365 the permission to the Yammer API. To do this, execute the cli consent --service yammer command. Examples \u00b6 Returns all Yammer network users m365 yammer user list Returns all Yammer network users with usernames beginning with \"a\" m365 yammer user list --letter a Returns all Yammer network users sorted alphabetically in descending order m365 yammer user list --reverse Returns the first 10 Yammer network users within the group 5785177 m365 user list --groupId 5785177 --limit 10","title":"user list"},{"location":"cmd/yammer/user/user-list/#yammer-user-list","text":"Returns users from the current network","title":"yammer user list"},{"location":"cmd/yammer/user/user-list/#usage","text":"m365 yammer user list [ options ]","title":"Usage"},{"location":"cmd/yammer/user/user-list/#options","text":"-g, --groupId [groupId] Returns users within a given group -l, --letter [letter] Returns users with usernames beginning with the given character --reverse Returns users in reverse sorting order --limit [limit] Limits the users returned --sortBy [sortBy] Returns users sorted by a number of messages or followers, instead of the default behavior of sorting alphabetically. Allowed values are messages,followers -h, --help output usage information --query [query] JMESPath query string. See http://jmespath.org/ for more information and examples -o, --output [output] Output type. json,text,csv . Default json --verbose Runs command with verbose logging --debug Runs command with debug logging","title":"Options"},{"location":"cmd/yammer/user/user-list/#remarks","text":"Attention In order to use this command, you need to grant the Azure AD application used by the CLI for Microsoft 365 the permission to the Yammer API. To do this, execute the cli consent --service yammer command.","title":"Remarks"},{"location":"cmd/yammer/user/user-list/#examples","text":"Returns all Yammer network users m365 yammer user list Returns all Yammer network users with usernames beginning with \"a\" m365 yammer user list --letter a Returns all Yammer network users sorted alphabetically in descending order m365 yammer user list --reverse Returns the first 10 Yammer network users within the group 5785177 m365 user list --groupId 5785177 --limit 10","title":"Examples"},{"location":"concepts/authorization-tokens/","text":"Authorization and access tokens \u00b6 Commands provided with the CLI for Microsoft 365 manipulate different settings of Microsoft 365. Before you can execute any of the commands in the CLI, you have to log in to Microsoft 365. CLI for Microsoft 365 will then automatically retrieve the access token necessary to execute the particular command. Authorization in the CLI for Microsoft 365 \u00b6 There are a number of ways in which you can authenticate and authorize with Microsoft 365. The CLI for Microsoft 365 uses the OAuth protocol to authorize with Microsoft 365 and its services. OAuth flows in Microsoft 365 are facilitated by Azure Active Directory. Azure AD application used by the CLI for Microsoft 365 \u00b6 CLI for Microsoft 365 gets access to Microsoft 365 through a custom Azure AD application named PnP Microsoft 365 Management Shell . If you don't want to consent this application in your tenant, you can use a different application instead. Important When you decide to use your own Azure AD application, you need to choose the application to be a public client . Despite the setting's description, the application will not be publicly accessible. This setting enables the use of the device flow for your own application. Without activating this setting, it is not possible to complete the authentication process. The option is currently only available in the preview blade for managing for Azure AD applications. When specifying a custom Azure AD application to be used by the CLI for Microsoft 365, set the CLIMICROSOFT365_AADAPPID environment variable to the ID of your Azure AD application. CLI for Microsoft 365 requires the following permissions to Microsoft 365 services: Microsoft 365 SharePoint Online Have full control of all site collections Read user profiles Read and write managed metadata Microsoft Graph Read and write to all app catalogs Read and write all groups Read and write directory data Access directory as the signed in user Read and write identity providers Read and write access to user mail Send mail as a user Read all usage reports Manage user's installed Teams apps Invite guest users to the organization Create, read, update and delete user tasks and projects Microsoft 365 Management APIs Read service health information for your organization Windows Azure Active Directory Access the directory as the signed-in user Windows Azure Service Management API Access Azure Service Management as organization users Yammer Read and write to the Yammer platform Attention After changing the ID of the Azure AD application used by the CLI for Microsoft 365 refresh the existing connection to Microsoft 365 using the login command. If you try to use the existing connection, CLI for Microsoft 365 will fail when trying to refresh the existing access token. For instructions on how to create your own Azure AD app see Using your own Azure AD identity . Access and refresh tokens in the CLI for Microsoft 365 \u00b6 After completing the OAuth flow, the CLI receives from Azure Active Directory a refresh- and an access token. Each web request to Microsoft 365 APIs contains the access token which authorizes the CLI for Microsoft 365 to execute the particular operation. When the access token expires, the CLI uses the refresh token to obtain a new access token. When the refresh token expires, the user has to reauthenticate to Microsoft 365 to obtain a new refresh token. Services and commands \u00b6 Each command in the CLI for Microsoft 365 belongs to a service, for example the spo site add command, which creates a new modern site, belongs to the SharePoint Online service, while the aad sp get command, which lists Azure Active Directory service principals, belongs to the Azure Active Directory Graph service. Each service in Microsoft 365 is a different Azure Active Directory authorization resource and requires a separate access token. When working with the CLI, you can be simultaneously connected to multiple services. Each command in the CLI knows which Microsoft 365 service it communicates with and for which resource it should have a valid access token. Communicating with Microsoft 365 \u00b6 Before a command can log in to Microsoft 365, it requires a valid access token. CLI for Microsoft 365 automatically obtains the access token for the particular web request without you having to worry about it. Yammer commands are executed in the context of the current logged in user \u00b6 Yammer commands require the delegated 'user_impersonation' permission to be granted for the Azure AD application. Yammer commands are executed in the context of the currently logged in user. Certificate-based authentication with app_only permissions is currently not supported by Azure AD.","title":"Authorization and access tokens"},{"location":"concepts/authorization-tokens/#authorization-and-access-tokens","text":"Commands provided with the CLI for Microsoft 365 manipulate different settings of Microsoft 365. Before you can execute any of the commands in the CLI, you have to log in to Microsoft 365. CLI for Microsoft 365 will then automatically retrieve the access token necessary to execute the particular command.","title":"Authorization and access tokens"},{"location":"concepts/authorization-tokens/#authorization-in-the-cli-for-microsoft-365","text":"There are a number of ways in which you can authenticate and authorize with Microsoft 365. The CLI for Microsoft 365 uses the OAuth protocol to authorize with Microsoft 365 and its services. OAuth flows in Microsoft 365 are facilitated by Azure Active Directory.","title":"Authorization in the CLI for Microsoft 365"},{"location":"concepts/authorization-tokens/#azure-ad-application-used-by-the-cli-for-microsoft-365","text":"CLI for Microsoft 365 gets access to Microsoft 365 through a custom Azure AD application named PnP Microsoft 365 Management Shell . If you don't want to consent this application in your tenant, you can use a different application instead. Important When you decide to use your own Azure AD application, you need to choose the application to be a public client . Despite the setting's description, the application will not be publicly accessible. This setting enables the use of the device flow for your own application. Without activating this setting, it is not possible to complete the authentication process. The option is currently only available in the preview blade for managing for Azure AD applications. When specifying a custom Azure AD application to be used by the CLI for Microsoft 365, set the CLIMICROSOFT365_AADAPPID environment variable to the ID of your Azure AD application. CLI for Microsoft 365 requires the following permissions to Microsoft 365 services: Microsoft 365 SharePoint Online Have full control of all site collections Read user profiles Read and write managed metadata Microsoft Graph Read and write to all app catalogs Read and write all groups Read and write directory data Access directory as the signed in user Read and write identity providers Read and write access to user mail Send mail as a user Read all usage reports Manage user's installed Teams apps Invite guest users to the organization Create, read, update and delete user tasks and projects Microsoft 365 Management APIs Read service health information for your organization Windows Azure Active Directory Access the directory as the signed-in user Windows Azure Service Management API Access Azure Service Management as organization users Yammer Read and write to the Yammer platform Attention After changing the ID of the Azure AD application used by the CLI for Microsoft 365 refresh the existing connection to Microsoft 365 using the login command. If you try to use the existing connection, CLI for Microsoft 365 will fail when trying to refresh the existing access token. For instructions on how to create your own Azure AD app see Using your own Azure AD identity .","title":"Azure AD application used by the CLI for Microsoft 365"},{"location":"concepts/authorization-tokens/#access-and-refresh-tokens-in-the-cli-for-microsoft-365","text":"After completing the OAuth flow, the CLI receives from Azure Active Directory a refresh- and an access token. Each web request to Microsoft 365 APIs contains the access token which authorizes the CLI for Microsoft 365 to execute the particular operation. When the access token expires, the CLI uses the refresh token to obtain a new access token. When the refresh token expires, the user has to reauthenticate to Microsoft 365 to obtain a new refresh token.","title":"Access and refresh tokens in the CLI for Microsoft 365"},{"location":"concepts/authorization-tokens/#services-and-commands","text":"Each command in the CLI for Microsoft 365 belongs to a service, for example the spo site add command, which creates a new modern site, belongs to the SharePoint Online service, while the aad sp get command, which lists Azure Active Directory service principals, belongs to the Azure Active Directory Graph service. Each service in Microsoft 365 is a different Azure Active Directory authorization resource and requires a separate access token. When working with the CLI, you can be simultaneously connected to multiple services. Each command in the CLI knows which Microsoft 365 service it communicates with and for which resource it should have a valid access token.","title":"Services and commands"},{"location":"concepts/authorization-tokens/#communicating-with-microsoft-365","text":"Before a command can log in to Microsoft 365, it requires a valid access token. CLI for Microsoft 365 automatically obtains the access token for the particular web request without you having to worry about it.","title":"Communicating with Microsoft 365"},{"location":"concepts/authorization-tokens/#yammer-commands-are-executed-in-the-context-of-the-current-logged-in-user","text":"Yammer commands require the delegated 'user_impersonation' permission to be granted for the Azure AD application. Yammer commands are executed in the context of the currently logged in user. Certificate-based authentication with app_only permissions is currently not supported by Azure AD.","title":"Yammer commands are executed in the context of the current logged in user"},{"location":"concepts/communicating-m365/","text":"Communication with Microsoft 365 \u00b6 To manage settings of the different Microsoft 365 services, the CLI for Microsoft 365 uses REST APIs exposed by the corresponding services. Using the REST APIs is meant to promote consistency and reusability of code and tests across the CLI no matter which Microsoft 365 service the CLI is communicating with. Some SharePoint Online commands deviate from this rule and mimic SharePoint CSOM calls instead. This is done out of necessity as some operations, such as managing Microsoft 365 CDN settings or tenant properties, are not exposed through REST APIs. Whenever REST APIs become available for these operations, the affected commands will be changed to use REST APIs instead of mimicking CSOM calls.","title":"Communication with Microsoft 365"},{"location":"concepts/communicating-m365/#communication-with-microsoft-365","text":"To manage settings of the different Microsoft 365 services, the CLI for Microsoft 365 uses REST APIs exposed by the corresponding services. Using the REST APIs is meant to promote consistency and reusability of code and tests across the CLI no matter which Microsoft 365 service the CLI is communicating with. Some SharePoint Online commands deviate from this rule and mimic SharePoint CSOM calls instead. This is done out of necessity as some operations, such as managing Microsoft 365 CDN settings or tenant properties, are not exposed through REST APIs. Whenever REST APIs become available for these operations, the affected commands will be changed to use REST APIs instead of mimicking CSOM calls.","title":"Communication with Microsoft 365"},{"location":"concepts/persisting-connection/","text":"Persisting connection information \u00b6 After logging in to Microsoft 365, the CLI for Microsoft 365 will persist the information about the connection until you explicitly log out from Microsoft 365. Why is persisting connection information important \u00b6 Persisting connection information is important for two reasons. Convenience \u00b6 First of all it's more convenient to use the CLI for Microsoft 365. If you're using it often to manage a specific tenant, you can connect once and the CLI will remember your credentials. The next time you start the CLI, you can directly start managing your tenant without having to authenticate first. Building scripts \u00b6 When working with CLI for Microsoft 365, each command is executed in an isolated context and has no access to the memory of any command executed before. So unless you would store the connection information in a variable and explicitly pass it to each command, the CLI would be unable to log in to your tenant. As you can imagine, working with the CLI in this way would be tedious and inconvenient. By persisting the connection information the CLI for Microsoft 365 can be used to build scripts, for example: Deploy all apps that are not yet deployed in the tenant app catalog: m365 # get all apps available in the tenant app catalog apps = $( m365 spo app list -o json ) # get IDs of all apps that are not deployed notDeployedAppsIds =( $( echo $apps | jq -r '.[] | select(.Deployed == false) | {ID} | .[]' ) ) # deploy all not deployed apps for appId in $notDeployedAppsIds ; do m365 spo app deploy -i $appId done First, you use the CLI for Microsoft 365 to get the list of all apps from the tenant app catalog using the spo app list command. You set the output type to JSON and store it in a shell variable apps . Next, you parse the JSON string using jq and get IDs of apps that are not deployed. Finally, for each ID you run the spo app deploy CLI for Microsoft 365 command passing the ID as a command argument. Notice, that in the script, both spo commands are run as separate commands directly in the shell. In both cases, the shell starts the CLI, executes the specified command and closes the CLI removing all of its resources from memory. Scripts, like the one mentioned above can work, because the CLI for Microsoft 365 persists its connection information. Persisting connection information in CLI for Microsoft 365 \u00b6 When you log in to Microsoft 365 in the CLI for Microsoft 365, the CLI will persist the information about the connection for future reuse. For the established connection, the CLI for Microsoft 365 persists the refresh token as well as all access tokens obtained when using the different CLI commands. Depending on the CLI for Microsoft 365 commands you have used, the CLI might persist some additional information. For example, when using commands that interact with SharePoint Online, the CLI will store the URL of your SharePoint Online tenant as well as its ID. The CLI for Microsoft 365 stores its connection information in two JSON files located in the home directory of the current user. On MacOS and Linux, these are ~/.cli-m365-tokens.json and ~/.cli-m365-msal.json . On Windows, this is <root>\\Users\\<username>\\.cli-m365-tokens.json and <root>\\Users\\<username>\\.cli-m365-msal.json . The tokens file serves as a quick lookup of tokens to speed up command execution. The msal file is the cache of the msal-node library used by CLI for Microsoft 365 to authenticate to Microsoft 365. Contents of both these files are not encrypted. Removing persisted connection information \u00b6 CLI for Microsoft 365 persists its connection information until you either explicitly log out from the particular service or manually remove the stored credentials. To check if you are logged in to Microsoft 365 in the CLI for Microsoft 365, run the status command. If you are logged in, the command will return the name of the user account or AAD application used to log in. If you are not connected, the command will return false . To log out from Office, run the logout command. Running this command will remove all previously stored connection data from your machine.","title":"Persisting connection"},{"location":"concepts/persisting-connection/#persisting-connection-information","text":"After logging in to Microsoft 365, the CLI for Microsoft 365 will persist the information about the connection until you explicitly log out from Microsoft 365.","title":"Persisting connection information"},{"location":"concepts/persisting-connection/#why-is-persisting-connection-information-important","text":"Persisting connection information is important for two reasons.","title":"Why is persisting connection information important"},{"location":"concepts/persisting-connection/#convenience","text":"First of all it's more convenient to use the CLI for Microsoft 365. If you're using it often to manage a specific tenant, you can connect once and the CLI will remember your credentials. The next time you start the CLI, you can directly start managing your tenant without having to authenticate first.","title":"Convenience"},{"location":"concepts/persisting-connection/#building-scripts","text":"When working with CLI for Microsoft 365, each command is executed in an isolated context and has no access to the memory of any command executed before. So unless you would store the connection information in a variable and explicitly pass it to each command, the CLI would be unable to log in to your tenant. As you can imagine, working with the CLI in this way would be tedious and inconvenient. By persisting the connection information the CLI for Microsoft 365 can be used to build scripts, for example: Deploy all apps that are not yet deployed in the tenant app catalog: m365 # get all apps available in the tenant app catalog apps = $( m365 spo app list -o json ) # get IDs of all apps that are not deployed notDeployedAppsIds =( $( echo $apps | jq -r '.[] | select(.Deployed == false) | {ID} | .[]' ) ) # deploy all not deployed apps for appId in $notDeployedAppsIds ; do m365 spo app deploy -i $appId done First, you use the CLI for Microsoft 365 to get the list of all apps from the tenant app catalog using the spo app list command. You set the output type to JSON and store it in a shell variable apps . Next, you parse the JSON string using jq and get IDs of apps that are not deployed. Finally, for each ID you run the spo app deploy CLI for Microsoft 365 command passing the ID as a command argument. Notice, that in the script, both spo commands are run as separate commands directly in the shell. In both cases, the shell starts the CLI, executes the specified command and closes the CLI removing all of its resources from memory. Scripts, like the one mentioned above can work, because the CLI for Microsoft 365 persists its connection information.","title":"Building scripts"},{"location":"concepts/persisting-connection/#persisting-connection-information-in-cli-for-microsoft-365","text":"When you log in to Microsoft 365 in the CLI for Microsoft 365, the CLI will persist the information about the connection for future reuse. For the established connection, the CLI for Microsoft 365 persists the refresh token as well as all access tokens obtained when using the different CLI commands. Depending on the CLI for Microsoft 365 commands you have used, the CLI might persist some additional information. For example, when using commands that interact with SharePoint Online, the CLI will store the URL of your SharePoint Online tenant as well as its ID. The CLI for Microsoft 365 stores its connection information in two JSON files located in the home directory of the current user. On MacOS and Linux, these are ~/.cli-m365-tokens.json and ~/.cli-m365-msal.json . On Windows, this is <root>\\Users\\<username>\\.cli-m365-tokens.json and <root>\\Users\\<username>\\.cli-m365-msal.json . The tokens file serves as a quick lookup of tokens to speed up command execution. The msal file is the cache of the msal-node library used by CLI for Microsoft 365 to authenticate to Microsoft 365. Contents of both these files are not encrypted.","title":"Persisting connection information in CLI for Microsoft 365"},{"location":"concepts/persisting-connection/#removing-persisted-connection-information","text":"CLI for Microsoft 365 persists its connection information until you either explicitly log out from the particular service or manually remove the stored credentials. To check if you are logged in to Microsoft 365 in the CLI for Microsoft 365, run the status command. If you are logged in, the command will return the name of the user account or AAD application used to log in. If you are not connected, the command will return false . To log out from Office, run the logout command. Running this command will remove all previously stored connection data from your machine.","title":"Removing persisted connection information"},{"location":"sample-scripts/","text":"Sample Scripts \u00b6 This section contains a collection of sample scripts that automate managing the different services in Microsoft 365. If you'd like to add your script to the collection, let us know by submitting an issue on GitHub. You can browse the scripts by workload, using the navigation, or by topics, using the list below. adaptivecards \u00b6 Flow runs day summary report adoption \u00b6 Recognize most active users for a specific Team Share social champions to Teams ai \u00b6 Analyze User Profile Photos using Azure Computer Vision API apps \u00b6 List all Power Platform Environments and their Flows and Apps Deploy Microsoft Teams app from Azure DevOps Deploy Microsoft Teams personal app and add it to users List app usage in Microsoft Teams Removes Microsoft Teams personal app from users and Microsoft Teams app catalog azure \u00b6 Analyze User Profile Photos using Azure Computer Vision API Export a single flow to a Logic App Sync SharePoint Document Library Documents with Azure Storage Container cleanup \u00b6 Delete all Microsoft 365 groups and SharePoint sites Delete all Microsoft 365 groups Replace a user's membership in selected Microsoft 365 Groups or Teams Cancel all running flow runs for a flow in an environment Delete all (non-group connected) modern SharePoint sites Empty the tenant recycle bin Delete custom color themes from SharePoint Remove orphaned redirect sites Remove pending SharePoint API permission requests Delete custom SharePoint site designs Delete custom SharePoint site scripts Remove a Site Collection Admin User from all Site Collections Removes Microsoft Teams personal app from users and Microsoft Teams app catalog Remove Wiki tab in a Microsoft Teams channel Cleanup completed Microsoft To Do tasks compliance \u00b6 Detecting PII exists in SharePoint List using AWS Comprehend customizations \u00b6 Disable specified Tenant-wide Extension Export Configurations of Tenant Wide Extensions List all application customizers in a tenant List all tenant-wide extensions files \u00b6 Add multiple folders in libraries using a csv file Copy files to another SharePoint Library in another site Insert pictures in a SharePoint Document Library into a Word document List all checked out files in SharePoint List all documents with a specific name within a SharePoint site Lists number of files in all lists and folders for the given site List Attachment Names From SharePoint Lists For A Site List all large files within a SharePoint Site How to perform operations if a command is not covered by the CLI for Microsoft 365 Sync SharePoint Document Library Documents with Azure Storage Container Upload local files and folders to SharePoint Online flows \u00b6 Cancel all running flow runs for a flow in an environment Export all flows in environment Export a single flow to a Logic App Flow runs day summary report Inventory Flows By Creator Resubmit all failed flow runs for a flow in an environment Search flows for connections List all Power Platform Environments and their Flows and Apps groups \u00b6 Delete all Microsoft 365 groups and SharePoint sites Delete all Microsoft 365 groups Scan for Microsoft 365 Groups created with user's first or last name Bulk add/remove users to Microsoft Teams and Microsoft 365 Groups Replace a user's membership in selected Microsoft 365 Groups or Teams Replace an owner in a Microsoft 365 Group or Microsoft Team Add users to the Associated SharePoint Groups of a site from a CSV File Change group membership of all SharePoint Online sites List all external users in site groups across all site collections Create a Microsoft Team with channels from a Microsoft 365 Group guests \u00b6 List all external users in site groups across all site collections List all external users in all site collections libraries \u00b6 Add multiple folders in libraries using a csv file Add multiple lists in multiple sites Copy files to another SharePoint Library in another site Insert pictures in a SharePoint Document Library into a Word document Lists number of files in all lists and folders for the given site Setup example site listitems \u00b6 Copy list items between SharePoint lists List all items with unique permissions How to perform operations if a command is not covered by the CLI for Microsoft 365 lists \u00b6 Copy list items between SharePoint lists Ensure the Site Assets Library is created Hide SharePoint list from Site Contents List Attachment Names From SharePoint Lists For A Site List site collections and their lists Planner migration to SharePoint list Setup example site migration \u00b6 Export all flows in environment Export a single flow to a Logic App Add multiple tasks in Planner Add custom client-side web part to modern page Copy files to another SharePoint Library in another site Copy list items between SharePoint lists Planner migration to SharePoint list Sync SharePoint Document Library Documents with Azure Storage Container Upload local files and folders to SharePoint Online Export all channels in Microsoft Teams teams in the tenant Export conversations from Microsoft Teams Channels pages \u00b6 Add custom client-side web part to modern page pipelines \u00b6 Deploy Microsoft Teams app from Azure DevOps provisioning \u00b6 Add App Catalog to SharePoint site Add custom client-side web part to modern page Add multiple folders in libraries using a csv file Add multiple lists in multiple sites Disable specified Tenant-wide Extension Ensure the Site Assets Library is created Delete custom color themes from SharePoint Setup example site Bulk add members to Microsoft Teams team from CSV file Create a Microsoft Teams team and bulk add members from CSV file Create a Microsoft Team with channels from a Microsoft 365 Group Deploy Microsoft Teams app from Azure DevOps Deploy Microsoft Teams personal app and add it to users reports \u00b6 Scan for Microsoft 365 Groups created with user's first or last name Flow runs day summary report Inventory Flows By Creator Search flows for connections List all Power Platform Environments and their Flows and Apps Export Configurations of Tenant Wide Extensions List all application customizers in a tenant List all checked out files in SharePoint List all documents with a specific name within a SharePoint site Lists number of files in all lists and folders for the given site List Attachment Names From SharePoint Lists For A Site List all external users in site groups across all site collections List all failed site design for all sites List all large files within a SharePoint Site Lists active SharePoint site collection application catalogs List site collections and their lists List site collection owners List all tenant-wide extensions Monitor Site Collections Storage Usage Get all the Teams a specific user is part of Govern orphaned Microsoft Teams List all tabs in Microsoft Teams teams in the tenant List all team members in Microsoft Teams teams in the tenant List app usage in Microsoft Teams List Microsoft Teams teams, channels, and tabs in the tenant Monitor and notify Microsoft 365 health status security \u00b6 Analyze users for known data breaches with have i been pwned Bulk add/remove users to Microsoft Teams and Microsoft 365 Groups Replace a user's membership in selected Microsoft 365 Groups or Teams Replace an owner in a Microsoft 365 Group or Microsoft Team Replace an owner in a Microsoft 365 Group or Microsoft Team Add a Site Collection Admin using a csv file Add users to the Associated SharePoint Groups of a site from a CSV File Change group membership of all SharePoint Online sites Grant API permissions to SharePoint Azure AD Application List all items with unique permissions List site collection owners List all external users in all site collections Remove SharePoint API permissions Remove pending SharePoint API permission requests Remove a Site Collection Admin User from all Site Collections Replace site collection admin with another user Govern orphaned Microsoft Teams sites \u00b6 Delete all Microsoft 365 groups and SharePoint sites Add App Catalog to SharePoint site Delete all (non-group connected) modern SharePoint sites List all external users in site groups across all site collections List site collections and their lists Monitor Site Collections Storage Usage Remove orphaned redirect sites Remove a Site Collection Admin User from all Site Collections Setup example site tasks \u00b6 Add multiple tasks in Planner Planner migration to SharePoint list Cleanup completed Microsoft To Do tasks teams \u00b6 Bulk add/remove users to Microsoft Teams and Microsoft 365 Groups Replace a user's membership in selected Microsoft 365 Groups or Teams Replace an owner in a Microsoft 365 Group or Microsoft Team Create a Microsoft Teams team and bulk add members from CSV file Create a Microsoft Team with channels from a Microsoft 365 Group Export all channels in Microsoft Teams teams in the tenant Export conversations from Microsoft Teams Channels Get all the Teams a specific user is part of Govern orphaned Microsoft Teams List all tabs in Microsoft Teams teams in the tenant List all team members in Microsoft Teams teams in the tenant List app usage in Microsoft Teams List Microsoft Teams teams, channels, and tabs in the tenant List all Microsoft Teams team's Owners and Members Remove Wiki tab in a Microsoft Teams channel users \u00b6 Analyze User Profile Photos using Azure Computer Vision API Analyze users for known data breaches with have i been pwned Scan for Microsoft 365 Groups created with user's first or last name Bulk add/remove users to Microsoft Teams and Microsoft 365 Groups Replace a user's membership in selected Microsoft 365 Groups or Teams Replace an owner in a Microsoft 365 Group or Microsoft Team Inventory Flows By Creator Add a Site Collection Admin using a csv file Add users to the Associated SharePoint Groups of a site from a CSV File Change group membership of all SharePoint Online sites List all external users in site groups across all site collections List site collection owners List all external users in all site collections Remove a Site Collection Admin User from all Site Collections Replace site collection admin with another user Bulk add members to Microsoft Teams team from CSV file Create a Microsoft Teams team and bulk add members from CSV file Get all the Teams a specific user is part of Govern orphaned Microsoft Teams Deploy Microsoft Teams personal app and add it to users List all team members in Microsoft Teams teams in the tenant Recognize most active users for a specific Team Share social champions to Teams","title":"Introduction"},{"location":"sample-scripts/#sample-scripts","text":"This section contains a collection of sample scripts that automate managing the different services in Microsoft 365. If you'd like to add your script to the collection, let us know by submitting an issue on GitHub. You can browse the scripts by workload, using the navigation, or by topics, using the list below.","title":"Sample Scripts"},{"location":"sample-scripts/#adaptivecards","text":"Flow runs day summary report","title":"adaptivecards"},{"location":"sample-scripts/#adoption","text":"Recognize most active users for a specific Team Share social champions to Teams","title":"adoption"},{"location":"sample-scripts/#ai","text":"Analyze User Profile Photos using Azure Computer Vision API","title":"ai"},{"location":"sample-scripts/#apps","text":"List all Power Platform Environments and their Flows and Apps Deploy Microsoft Teams app from Azure DevOps Deploy Microsoft Teams personal app and add it to users List app usage in Microsoft Teams Removes Microsoft Teams personal app from users and Microsoft Teams app catalog","title":"apps"},{"location":"sample-scripts/#azure","text":"Analyze User Profile Photos using Azure Computer Vision API Export a single flow to a Logic App Sync SharePoint Document Library Documents with Azure Storage Container","title":"azure"},{"location":"sample-scripts/#cleanup","text":"Delete all Microsoft 365 groups and SharePoint sites Delete all Microsoft 365 groups Replace a user's membership in selected Microsoft 365 Groups or Teams Cancel all running flow runs for a flow in an environment Delete all (non-group connected) modern SharePoint sites Empty the tenant recycle bin Delete custom color themes from SharePoint Remove orphaned redirect sites Remove pending SharePoint API permission requests Delete custom SharePoint site designs Delete custom SharePoint site scripts Remove a Site Collection Admin User from all Site Collections Removes Microsoft Teams personal app from users and Microsoft Teams app catalog Remove Wiki tab in a Microsoft Teams channel Cleanup completed Microsoft To Do tasks","title":"cleanup"},{"location":"sample-scripts/#compliance","text":"Detecting PII exists in SharePoint List using AWS Comprehend","title":"compliance"},{"location":"sample-scripts/#customizations","text":"Disable specified Tenant-wide Extension Export Configurations of Tenant Wide Extensions List all application customizers in a tenant List all tenant-wide extensions","title":"customizations"},{"location":"sample-scripts/#files","text":"Add multiple folders in libraries using a csv file Copy files to another SharePoint Library in another site Insert pictures in a SharePoint Document Library into a Word document List all checked out files in SharePoint List all documents with a specific name within a SharePoint site Lists number of files in all lists and folders for the given site List Attachment Names From SharePoint Lists For A Site List all large files within a SharePoint Site How to perform operations if a command is not covered by the CLI for Microsoft 365 Sync SharePoint Document Library Documents with Azure Storage Container Upload local files and folders to SharePoint Online","title":"files"},{"location":"sample-scripts/#flows","text":"Cancel all running flow runs for a flow in an environment Export all flows in environment Export a single flow to a Logic App Flow runs day summary report Inventory Flows By Creator Resubmit all failed flow runs for a flow in an environment Search flows for connections List all Power Platform Environments and their Flows and Apps","title":"flows"},{"location":"sample-scripts/#groups","text":"Delete all Microsoft 365 groups and SharePoint sites Delete all Microsoft 365 groups Scan for Microsoft 365 Groups created with user's first or last name Bulk add/remove users to Microsoft Teams and Microsoft 365 Groups Replace a user's membership in selected Microsoft 365 Groups or Teams Replace an owner in a Microsoft 365 Group or Microsoft Team Add users to the Associated SharePoint Groups of a site from a CSV File Change group membership of all SharePoint Online sites List all external users in site groups across all site collections Create a Microsoft Team with channels from a Microsoft 365 Group","title":"groups"},{"location":"sample-scripts/#guests","text":"List all external users in site groups across all site collections List all external users in all site collections","title":"guests"},{"location":"sample-scripts/#libraries","text":"Add multiple folders in libraries using a csv file Add multiple lists in multiple sites Copy files to another SharePoint Library in another site Insert pictures in a SharePoint Document Library into a Word document Lists number of files in all lists and folders for the given site Setup example site","title":"libraries"},{"location":"sample-scripts/#listitems","text":"Copy list items between SharePoint lists List all items with unique permissions How to perform operations if a command is not covered by the CLI for Microsoft 365","title":"listitems"},{"location":"sample-scripts/#lists","text":"Copy list items between SharePoint lists Ensure the Site Assets Library is created Hide SharePoint list from Site Contents List Attachment Names From SharePoint Lists For A Site List site collections and their lists Planner migration to SharePoint list Setup example site","title":"lists"},{"location":"sample-scripts/#migration","text":"Export all flows in environment Export a single flow to a Logic App Add multiple tasks in Planner Add custom client-side web part to modern page Copy files to another SharePoint Library in another site Copy list items between SharePoint lists Planner migration to SharePoint list Sync SharePoint Document Library Documents with Azure Storage Container Upload local files and folders to SharePoint Online Export all channels in Microsoft Teams teams in the tenant Export conversations from Microsoft Teams Channels","title":"migration"},{"location":"sample-scripts/#pages","text":"Add custom client-side web part to modern page","title":"pages"},{"location":"sample-scripts/#pipelines","text":"Deploy Microsoft Teams app from Azure DevOps","title":"pipelines"},{"location":"sample-scripts/#provisioning","text":"Add App Catalog to SharePoint site Add custom client-side web part to modern page Add multiple folders in libraries using a csv file Add multiple lists in multiple sites Disable specified Tenant-wide Extension Ensure the Site Assets Library is created Delete custom color themes from SharePoint Setup example site Bulk add members to Microsoft Teams team from CSV file Create a Microsoft Teams team and bulk add members from CSV file Create a Microsoft Team with channels from a Microsoft 365 Group Deploy Microsoft Teams app from Azure DevOps Deploy Microsoft Teams personal app and add it to users","title":"provisioning"},{"location":"sample-scripts/#reports","text":"Scan for Microsoft 365 Groups created with user's first or last name Flow runs day summary report Inventory Flows By Creator Search flows for connections List all Power Platform Environments and their Flows and Apps Export Configurations of Tenant Wide Extensions List all application customizers in a tenant List all checked out files in SharePoint List all documents with a specific name within a SharePoint site Lists number of files in all lists and folders for the given site List Attachment Names From SharePoint Lists For A Site List all external users in site groups across all site collections List all failed site design for all sites List all large files within a SharePoint Site Lists active SharePoint site collection application catalogs List site collections and their lists List site collection owners List all tenant-wide extensions Monitor Site Collections Storage Usage Get all the Teams a specific user is part of Govern orphaned Microsoft Teams List all tabs in Microsoft Teams teams in the tenant List all team members in Microsoft Teams teams in the tenant List app usage in Microsoft Teams List Microsoft Teams teams, channels, and tabs in the tenant Monitor and notify Microsoft 365 health status","title":"reports"},{"location":"sample-scripts/#security","text":"Analyze users for known data breaches with have i been pwned Bulk add/remove users to Microsoft Teams and Microsoft 365 Groups Replace a user's membership in selected Microsoft 365 Groups or Teams Replace an owner in a Microsoft 365 Group or Microsoft Team Replace an owner in a Microsoft 365 Group or Microsoft Team Add a Site Collection Admin using a csv file Add users to the Associated SharePoint Groups of a site from a CSV File Change group membership of all SharePoint Online sites Grant API permissions to SharePoint Azure AD Application List all items with unique permissions List site collection owners List all external users in all site collections Remove SharePoint API permissions Remove pending SharePoint API permission requests Remove a Site Collection Admin User from all Site Collections Replace site collection admin with another user Govern orphaned Microsoft Teams","title":"security"},{"location":"sample-scripts/#sites","text":"Delete all Microsoft 365 groups and SharePoint sites Add App Catalog to SharePoint site Delete all (non-group connected) modern SharePoint sites List all external users in site groups across all site collections List site collections and their lists Monitor Site Collections Storage Usage Remove orphaned redirect sites Remove a Site Collection Admin User from all Site Collections Setup example site","title":"sites"},{"location":"sample-scripts/#tasks","text":"Add multiple tasks in Planner Planner migration to SharePoint list Cleanup completed Microsoft To Do tasks","title":"tasks"},{"location":"sample-scripts/#teams","text":"Bulk add/remove users to Microsoft Teams and Microsoft 365 Groups Replace a user's membership in selected Microsoft 365 Groups or Teams Replace an owner in a Microsoft 365 Group or Microsoft Team Create a Microsoft Teams team and bulk add members from CSV file Create a Microsoft Team with channels from a Microsoft 365 Group Export all channels in Microsoft Teams teams in the tenant Export conversations from Microsoft Teams Channels Get all the Teams a specific user is part of Govern orphaned Microsoft Teams List all tabs in Microsoft Teams teams in the tenant List all team members in Microsoft Teams teams in the tenant List app usage in Microsoft Teams List Microsoft Teams teams, channels, and tabs in the tenant List all Microsoft Teams team's Owners and Members Remove Wiki tab in a Microsoft Teams channel","title":"teams"},{"location":"sample-scripts/#users","text":"Analyze User Profile Photos using Azure Computer Vision API Analyze users for known data breaches with have i been pwned Scan for Microsoft 365 Groups created with user's first or last name Bulk add/remove users to Microsoft Teams and Microsoft 365 Groups Replace a user's membership in selected Microsoft 365 Groups or Teams Replace an owner in a Microsoft 365 Group or Microsoft Team Inventory Flows By Creator Add a Site Collection Admin using a csv file Add users to the Associated SharePoint Groups of a site from a CSV File Change group membership of all SharePoint Online sites List all external users in site groups across all site collections List site collection owners List all external users in all site collections Remove a Site Collection Admin User from all Site Collections Replace site collection admin with another user Bulk add members to Microsoft Teams team from CSV file Create a Microsoft Teams team and bulk add members from CSV file Get all the Teams a specific user is part of Govern orphaned Microsoft Teams Deploy Microsoft Teams personal app and add it to users List all team members in Microsoft Teams teams in the tenant Recognize most active users for a specific Team Share social champions to Teams","title":"users"},{"location":"sample-scripts/aad/analyze-user-profile-photos/","tags":["ai","azure","users"],"text":"Analyze User Profile Photos using Azure Computer Vision API \u00b6 Author: Joseph Velliah This script uses Azure Cognitive Service API and Microsoft 365 CLI to analyze user profile pictures and assess whether they meet the standards placed by the organization. It can be customized to ban content within an org channel or collaboration network where employees post pictures, memes, etc. Prerequisites CLI for Microsoft 365 Microsoft 365 users Computer Vision API instance and API key Note If you don't already have an Azure Cognitive Services instance and key , create a cognitive service instance and get API key from there. PowerShell $resultDir = \"Output\" $azureVisionApiInstance = \"azure-vision-api-instance-name\" $azureVisionApiKey = \"azure-vision-api-key\" $photoRequirements = @{ requirePortrait = $false allowClipart = $true allowLinedrawing = $true allowAdult = $false allowRacy = $false allowGory = $false photoRequirements = @{ requirePortrait = $false allowClipart = $true allowLinedrawing = $true allowAdult = $false allowRacy = $false allowGory = $false forbiddenKeywords = @( \"cartoon\" , ` \"animal\" , ` \"nude\" , ` \"child\" , ` \"people\" , ` \"group\" , ` \"family\" , ` \"several\" , ` \"crowd\" , ` \"food\" , ` \"restaurant\" , ` \"train\" , ` \"bus\" , ` \"car\" , ` \"airplane\" , ` \"vehicle\" , ` \"platform\" , ` \"station\" , ` \"standing\" , ` \"flying\" , ` \"suitcase\" , ` \"screenshot\" , ` \"newspaper\" , ` \"typography\" , ` \"font\" , ` \"document\" , ` \"sport\" ) } } $requiredProfileProperties = \"id,displayName,userPrincipalName\" $global:analysisOutcomes = @() $executionDir = $PSScriptRoot $outputDir = \"$executionDir/$resultDir\" $outputFilePath = \"$outputDir/ $( get-date -f yyyyMMdd-HHmmss ) -scan-profile-pictures-outcome.csv\" if ( -not ( Test-Path -Path \"$outputDir\" -PathType Container )) { New-Item -ItemType Directory -Path \"$outputDir\" Write-Host \"Created $outputDir folder...\" } function AddAnalysisOutcome { param ( [ Parameter ( Mandatory = $false )] [string] $UserId , [ Parameter ( Mandatory = $false )] [string] $UserPrincipalName , [ Parameter ( Mandatory = $false )] [bool] $IsPortraitValid , [ Parameter ( Mandatory = $false )] [bool] $IsOnlyOnePersonValid , [ Parameter ( Mandatory = $false )] [bool] $IsClipartValid , [ Parameter ( Mandatory = $false )] [bool] $IsLineDrawingValid , [ Parameter ( Mandatory = $false )] [bool] $IsAdultValid , [ Parameter ( Mandatory = $false )] [bool] $IsRacyValid , [ Parameter ( Mandatory = $false )] [bool] $IsGoryValid , [ Parameter ( Mandatory = $false )] [bool] $IsCelebrity , [ Parameter ( Mandatory = $false )] [bool] $IsForbiddenKeywordExist , [ Parameter ( Mandatory = $false )] [bool] $IsValidProfilePhoto , [ Parameter ( Mandatory = $false )] [string] $Notes ) $analysisOutcome = New-Object -TypeName PSObject $analysisOutcome | Add-Member -MemberType NoteProperty -Name \"UserId\" -Value $UserId $analysisOutcome | Add-Member -MemberType NoteProperty -Name \"UserPrincipalName\" -Value $UserPrincipalName $analysisOutcome | Add-Member -MemberType NoteProperty -Name \"IsPortraitValid\" -Value $IsPortraitValid $analysisOutcome | Add-Member -MemberType NoteProperty -Name \"IsOnlyOnePersonValid\" -Value $IsOnlyOnePersonValid $analysisOutcome | Add-Member -MemberType NoteProperty -Name \"IsClipartValid\" -Value $IsClipartValid $analysisOutcome | Add-Member -MemberType NoteProperty -Name \"IsLineDrawingValid\" -Value $IsLineDrawingValid $analysisOutcome | Add-Member -MemberType NoteProperty -Name \"IsAdultValid\" -Value $IsAdultValid $analysisOutcome | Add-Member -MemberType NoteProperty -Name \"IsRacyValid\" -Value $IsRacyValid $analysisOutcome | Add-Member -MemberType NoteProperty -Name \"IsGoryValid\" -Value $IsGoryValid $analysisOutcome | Add-Member -MemberType NoteProperty -Name \"IsCelebrity\" -Value $IsCelebrity $analysisOutcome | Add-Member -MemberType NoteProperty -Name \"IsForbiddenKeywordExist\" -Value $IsForbiddenKeywordExist $analysisOutcome | Add-Member -MemberType NoteProperty -Name \"IsValidProfilePhoto\" -Value $IsValidProfilePhoto $analysisOutcome | Add-Member -MemberType NoteProperty -Name \"Notes\" -Value $Notes $global:analysisOutcomes += $analysisOutcome } $users = m365 aad user list - -properties $requiredProfileProperties -o json | ConvertFrom-Json -AsHashtable $usersCount = $users . Count Write-Host \"Number of users found : $usersCount\" try { $token = m365 util accesstoken get - -resource https :// graph . microsoft . com $i = 0 for ( $i = 0 ; $i -lt $usersCount ; $i ++) { try { $userId = $users [ $i ]. id $userPrincipalName = $users [ $i ]. userPrincipalName $percentComplete = ( $i / $usersCount ) * 100 Write-Progress -Activity \"Analysing\" -Status \"User : $userId - $userPrincipalName\" -PercentComplete $percentComplete try { $headers = New-Object \"System.Collections.Generic.Dictionary[[String],[String]]\" $headers . Add ( \"Content-Type\" , \"image/jpg\" ) $headers . Add ( \"Authorization\" , \"Bearer $token\" ) $userPhoto = ( Invoke-RestMethod -Uri \"https://graph.microsoft.com/v1.0/users/$userId/photo/ `$ value\" -Headers $headers ) if ( $userPhoto ) { try { $headers = New-Object \"System.Collections.Generic.Dictionary[[String],[String]]\" $headers . Add ( \"Content-Type\" , \"application/json\" ) $headers . Add ( \"Ocp-Apim-Subscription-Key\" , $azureVisionApiKey ) $analysis = ( Invoke-RestMethod -Uri ( \"https://$azureVisionApiInstance.cognitiveservices.azure.com/vision/v3.1/analyze?visualFeatures=Categories,Adult,Tags,Description,Faces,Color,ImageType,Objects&details=Celebrities&language=en\" ) ` -Headers $headers ` -Body ( $userPhoto ) ` -ContentType \"application/octet-stream\" ` -Method \"Post\" ); if ( $analysis ) { $analysisData = $analysis | ConvertFrom-Json -AsHashtable $isPortrait = $analysisData . categories . Length -gt 0 ? ( $analysisData . categories | Where-Object { $_ . name -eq 'people_portrait' }). Length -gt 0 ? $true : $false : $false $isPortraitValid = $photoRequirements . requirePortrait ? $isPortrait : $true $isOnlyOnePersonValid = $analysisData . faces . Length -eq 1 ? $true : $false $isClipartValid = $analysisData . imageType . clipArtType -eq 0 ? $true : $false $isLineDrawingValid = $analysisData . imageType . lineDrawingType -eq 0 ? $true : $false $isAdultValid = $photoRequirements . allowAdult ? $true : ! $analysisData . adult . isAdultContent $isRacyValid = $photoRequirements . allowRacy ? $true : ! $analysisData . adult . isRacyContent $isGoryValid = $photoRequirements . allowGory ? $true : ! $analysisData . adult . isGoryContent $isCelebrity = ( $analysisData . categories | Where-Object { $_ . detail . celebrities . Length -gt 0 }). Length -gt 0 ? $true : $false $invalidKeywords = @() foreach ( $forbiddenKeyword in $photoRequirements . forbiddenKeywords ) { $isForbiddenKeywordExist = ( $analysisData . tags | Where-Object { $_ . name -eq $forbiddenKeyword }). Length -gt 0 ? $true : $false if ( $isForbiddenKeywordExist ) { $invalidKeyword = New-Object -TypeName PSObject $invalidKeyword | Add-Member -MemberType NoteProperty -Name forbiddenKeyword -Value $forbiddenKeyword $invalidKeywords += $invalidKeyword } } $isForbiddenKeywordExist = $invalidKeywords . Length -gt 0 ? $true : $false $isValidProfilePhoto = $isPortraitValid ` -and $isOnlyOnePersonValid ` -and $isClipartValid ` -and $isLineDrawingValid ` -and $isAdultValid ` -and $isRacyValid ` -and $isGoryValid ` -and ! $isCelebrity ` -and ! $isForbiddenKeywordExist ; AddAnalysisOutcome $userId ` $userPrincipalName ` $isPortraitValid ` $isOnlyOnePersonValid ` $isClipartValid ` $isLineDrawingValid ` $isAdultValid ` $isRacyValid ` $isGoryValid ` $isCelebrity ` $isForbiddenKeywordExist ` $isValidProfilePhoto ` \"Profile photo available\" } } catch { AddAnalysisOutcome $userId ` $userPrincipalName ` $false ` $false ` $false ` $false ` $false ` $false ` $false ` $false ` $false ` $false ` \"Unable to analyze profile photo\" } } } catch { AddAnalysisOutcome $userId ` $userPrincipalName ` $false ` $false ` $false ` $false ` $false ` $false ` $false ` $false ` $false ` $false ` \"Unable to get profile photo\" } } catch { Write-Host \"Unable to get profile details for this user\" -ForegroundColor Red } } } catch { Write-Host \"Unable to get new access token\" -ForegroundColor Red } $global:analysisOutcomes | Export-Csv -Path \"$outputFilePath\" -NoTypeInformation Write-Host \"Open $outputFilePath to review analysis outcomes report.\"","title":"Analyze User Profile Photos using Azure Computer Vision API"},{"location":"sample-scripts/aad/analyze-user-profile-photos/#analyze-user-profile-photos-using-azure-computer-vision-api","text":"Author: Joseph Velliah This script uses Azure Cognitive Service API and Microsoft 365 CLI to analyze user profile pictures and assess whether they meet the standards placed by the organization. It can be customized to ban content within an org channel or collaboration network where employees post pictures, memes, etc. Prerequisites CLI for Microsoft 365 Microsoft 365 users Computer Vision API instance and API key Note If you don't already have an Azure Cognitive Services instance and key , create a cognitive service instance and get API key from there. PowerShell $resultDir = \"Output\" $azureVisionApiInstance = \"azure-vision-api-instance-name\" $azureVisionApiKey = \"azure-vision-api-key\" $photoRequirements = @{ requirePortrait = $false allowClipart = $true allowLinedrawing = $true allowAdult = $false allowRacy = $false allowGory = $false photoRequirements = @{ requirePortrait = $false allowClipart = $true allowLinedrawing = $true allowAdult = $false allowRacy = $false allowGory = $false forbiddenKeywords = @( \"cartoon\" , ` \"animal\" , ` \"nude\" , ` \"child\" , ` \"people\" , ` \"group\" , ` \"family\" , ` \"several\" , ` \"crowd\" , ` \"food\" , ` \"restaurant\" , ` \"train\" , ` \"bus\" , ` \"car\" , ` \"airplane\" , ` \"vehicle\" , ` \"platform\" , ` \"station\" , ` \"standing\" , ` \"flying\" , ` \"suitcase\" , ` \"screenshot\" , ` \"newspaper\" , ` \"typography\" , ` \"font\" , ` \"document\" , ` \"sport\" ) } } $requiredProfileProperties = \"id,displayName,userPrincipalName\" $global:analysisOutcomes = @() $executionDir = $PSScriptRoot $outputDir = \"$executionDir/$resultDir\" $outputFilePath = \"$outputDir/ $( get-date -f yyyyMMdd-HHmmss ) -scan-profile-pictures-outcome.csv\" if ( -not ( Test-Path -Path \"$outputDir\" -PathType Container )) { New-Item -ItemType Directory -Path \"$outputDir\" Write-Host \"Created $outputDir folder...\" } function AddAnalysisOutcome { param ( [ Parameter ( Mandatory = $false )] [string] $UserId , [ Parameter ( Mandatory = $false )] [string] $UserPrincipalName , [ Parameter ( Mandatory = $false )] [bool] $IsPortraitValid , [ Parameter ( Mandatory = $false )] [bool] $IsOnlyOnePersonValid , [ Parameter ( Mandatory = $false )] [bool] $IsClipartValid , [ Parameter ( Mandatory = $false )] [bool] $IsLineDrawingValid , [ Parameter ( Mandatory = $false )] [bool] $IsAdultValid , [ Parameter ( Mandatory = $false )] [bool] $IsRacyValid , [ Parameter ( Mandatory = $false )] [bool] $IsGoryValid , [ Parameter ( Mandatory = $false )] [bool] $IsCelebrity , [ Parameter ( Mandatory = $false )] [bool] $IsForbiddenKeywordExist , [ Parameter ( Mandatory = $false )] [bool] $IsValidProfilePhoto , [ Parameter ( Mandatory = $false )] [string] $Notes ) $analysisOutcome = New-Object -TypeName PSObject $analysisOutcome | Add-Member -MemberType NoteProperty -Name \"UserId\" -Value $UserId $analysisOutcome | Add-Member -MemberType NoteProperty -Name \"UserPrincipalName\" -Value $UserPrincipalName $analysisOutcome | Add-Member -MemberType NoteProperty -Name \"IsPortraitValid\" -Value $IsPortraitValid $analysisOutcome | Add-Member -MemberType NoteProperty -Name \"IsOnlyOnePersonValid\" -Value $IsOnlyOnePersonValid $analysisOutcome | Add-Member -MemberType NoteProperty -Name \"IsClipartValid\" -Value $IsClipartValid $analysisOutcome | Add-Member -MemberType NoteProperty -Name \"IsLineDrawingValid\" -Value $IsLineDrawingValid $analysisOutcome | Add-Member -MemberType NoteProperty -Name \"IsAdultValid\" -Value $IsAdultValid $analysisOutcome | Add-Member -MemberType NoteProperty -Name \"IsRacyValid\" -Value $IsRacyValid $analysisOutcome | Add-Member -MemberType NoteProperty -Name \"IsGoryValid\" -Value $IsGoryValid $analysisOutcome | Add-Member -MemberType NoteProperty -Name \"IsCelebrity\" -Value $IsCelebrity $analysisOutcome | Add-Member -MemberType NoteProperty -Name \"IsForbiddenKeywordExist\" -Value $IsForbiddenKeywordExist $analysisOutcome | Add-Member -MemberType NoteProperty -Name \"IsValidProfilePhoto\" -Value $IsValidProfilePhoto $analysisOutcome | Add-Member -MemberType NoteProperty -Name \"Notes\" -Value $Notes $global:analysisOutcomes += $analysisOutcome } $users = m365 aad user list - -properties $requiredProfileProperties -o json | ConvertFrom-Json -AsHashtable $usersCount = $users . Count Write-Host \"Number of users found : $usersCount\" try { $token = m365 util accesstoken get - -resource https :// graph . microsoft . com $i = 0 for ( $i = 0 ; $i -lt $usersCount ; $i ++) { try { $userId = $users [ $i ]. id $userPrincipalName = $users [ $i ]. userPrincipalName $percentComplete = ( $i / $usersCount ) * 100 Write-Progress -Activity \"Analysing\" -Status \"User : $userId - $userPrincipalName\" -PercentComplete $percentComplete try { $headers = New-Object \"System.Collections.Generic.Dictionary[[String],[String]]\" $headers . Add ( \"Content-Type\" , \"image/jpg\" ) $headers . Add ( \"Authorization\" , \"Bearer $token\" ) $userPhoto = ( Invoke-RestMethod -Uri \"https://graph.microsoft.com/v1.0/users/$userId/photo/ `$ value\" -Headers $headers ) if ( $userPhoto ) { try { $headers = New-Object \"System.Collections.Generic.Dictionary[[String],[String]]\" $headers . Add ( \"Content-Type\" , \"application/json\" ) $headers . Add ( \"Ocp-Apim-Subscription-Key\" , $azureVisionApiKey ) $analysis = ( Invoke-RestMethod -Uri ( \"https://$azureVisionApiInstance.cognitiveservices.azure.com/vision/v3.1/analyze?visualFeatures=Categories,Adult,Tags,Description,Faces,Color,ImageType,Objects&details=Celebrities&language=en\" ) ` -Headers $headers ` -Body ( $userPhoto ) ` -ContentType \"application/octet-stream\" ` -Method \"Post\" ); if ( $analysis ) { $analysisData = $analysis | ConvertFrom-Json -AsHashtable $isPortrait = $analysisData . categories . Length -gt 0 ? ( $analysisData . categories | Where-Object { $_ . name -eq 'people_portrait' }). Length -gt 0 ? $true : $false : $false $isPortraitValid = $photoRequirements . requirePortrait ? $isPortrait : $true $isOnlyOnePersonValid = $analysisData . faces . Length -eq 1 ? $true : $false $isClipartValid = $analysisData . imageType . clipArtType -eq 0 ? $true : $false $isLineDrawingValid = $analysisData . imageType . lineDrawingType -eq 0 ? $true : $false $isAdultValid = $photoRequirements . allowAdult ? $true : ! $analysisData . adult . isAdultContent $isRacyValid = $photoRequirements . allowRacy ? $true : ! $analysisData . adult . isRacyContent $isGoryValid = $photoRequirements . allowGory ? $true : ! $analysisData . adult . isGoryContent $isCelebrity = ( $analysisData . categories | Where-Object { $_ . detail . celebrities . Length -gt 0 }). Length -gt 0 ? $true : $false $invalidKeywords = @() foreach ( $forbiddenKeyword in $photoRequirements . forbiddenKeywords ) { $isForbiddenKeywordExist = ( $analysisData . tags | Where-Object { $_ . name -eq $forbiddenKeyword }). Length -gt 0 ? $true : $false if ( $isForbiddenKeywordExist ) { $invalidKeyword = New-Object -TypeName PSObject $invalidKeyword | Add-Member -MemberType NoteProperty -Name forbiddenKeyword -Value $forbiddenKeyword $invalidKeywords += $invalidKeyword } } $isForbiddenKeywordExist = $invalidKeywords . Length -gt 0 ? $true : $false $isValidProfilePhoto = $isPortraitValid ` -and $isOnlyOnePersonValid ` -and $isClipartValid ` -and $isLineDrawingValid ` -and $isAdultValid ` -and $isRacyValid ` -and $isGoryValid ` -and ! $isCelebrity ` -and ! $isForbiddenKeywordExist ; AddAnalysisOutcome $userId ` $userPrincipalName ` $isPortraitValid ` $isOnlyOnePersonValid ` $isClipartValid ` $isLineDrawingValid ` $isAdultValid ` $isRacyValid ` $isGoryValid ` $isCelebrity ` $isForbiddenKeywordExist ` $isValidProfilePhoto ` \"Profile photo available\" } } catch { AddAnalysisOutcome $userId ` $userPrincipalName ` $false ` $false ` $false ` $false ` $false ` $false ` $false ` $false ` $false ` $false ` \"Unable to analyze profile photo\" } } } catch { AddAnalysisOutcome $userId ` $userPrincipalName ` $false ` $false ` $false ` $false ` $false ` $false ` $false ` $false ` $false ` $false ` \"Unable to get profile photo\" } } catch { Write-Host \"Unable to get profile details for this user\" -ForegroundColor Red } } } catch { Write-Host \"Unable to get new access token\" -ForegroundColor Red } $global:analysisOutcomes | Export-Csv -Path \"$outputFilePath\" -NoTypeInformation Write-Host \"Open $outputFilePath to review analysis outcomes report.\"","title":"Analyze User Profile Photos using Azure Computer Vision API"},{"location":"sample-scripts/aad/analyze-users-haveibeenpwnd/","tags":["security","users"],"text":"Analyze users for known data breaches with have i been pwned \u00b6 Inspired by: Albert-Jan Schot Validate all your users against known breaches with the have i been pwned api. That way you can quickly scan if your users are part of any known breaches. PowerShell $apiKey = \"<PUTYOURKEYHERE>\" $m365Status = m365 status - -output text if ( $m365Status -eq \"Logged Out\" ) { # Connection to Microsoft 365 m365 login } $users = m365 aad user list - -properties \"displayName,userPrincipalName\" | ConvertFrom-Json $users | ForEach -Object { $user = $_ $i ++ Write-Host \"Check HBIP status for user ' $( $user . userPrincipalName ) ' - ($i/ $( $users . length ) )\" $hbipStatus = m365 aad user hibp - -userName $user . userPrincipalName - -apiKey $apiKey - -verbose | ConvertFrom-Json if ( $hbipStatus -ne \"No pwnage found\" ) { Write-Host -ForegroundColor Red \"Issue with user ' $( $user . userPrincipalName ) '\" $hbipStatus } Start-Sleep -Milliseconds 1500 }","title":"Analyze users for known data breaches with have i been pwned"},{"location":"sample-scripts/aad/analyze-users-haveibeenpwnd/#analyze-users-for-known-data-breaches-with-have-i-been-pwned","text":"Inspired by: Albert-Jan Schot Validate all your users against known breaches with the have i been pwned api. That way you can quickly scan if your users are part of any known breaches. PowerShell $apiKey = \"<PUTYOURKEYHERE>\" $m365Status = m365 status - -output text if ( $m365Status -eq \"Logged Out\" ) { # Connection to Microsoft 365 m365 login } $users = m365 aad user list - -properties \"displayName,userPrincipalName\" | ConvertFrom-Json $users | ForEach -Object { $user = $_ $i ++ Write-Host \"Check HBIP status for user ' $( $user . userPrincipalName ) ' - ($i/ $( $users . length ) )\" $hbipStatus = m365 aad user hibp - -userName $user . userPrincipalName - -apiKey $apiKey - -verbose | ConvertFrom-Json if ( $hbipStatus -ne \"No pwnage found\" ) { Write-Host -ForegroundColor Red \"Issue with user ' $( $user . userPrincipalName ) '\" $hbipStatus } Start-Sleep -Milliseconds 1500 }","title":"Analyze users for known data breaches with have i been pwned"},{"location":"sample-scripts/aad/delete-m365-groups-and-sharepoint-sites/","tags":["cleanup","groups","sites"],"text":"Delete all Microsoft 365 groups and SharePoint sites \u00b6 Author: Patrick Lamber Another example how you can delete all Microsoft 365 Groups and SharePoint Online sites in your development environment. PowerShell ### Warning. Use with caution. This script deletes all M365 Groups and SPO Sites in your tenant $devAccount = \"<putyourupnhereforsecuritycheck>\" ### Deletes the resources from the recyclebin. The CLI does not support this feature yet $skipRecycleBin = $true $m365Status = m365 status - -output text Write-Host $m365Status if ( $m365Status -eq \"Logged Out\" ) { # Connection to Microsoft 365 m365 login $m365Status = m365 status } # Check added as security measure if ( $m365Status [ 0 ]. ToString (). IndexOf ( $devAccount ) -eq - 1 ) { Write-Host \"The user does not match the target development account. Stopping...\" -ForegroundColor Red return ; } Write-host \"Retrieving all groups...\" $allGroups = m365 aad o365group list -o json | ConvertFrom-Json $groupCount = $allGroups . Count Write-Host \"Processing $groupCount sites...\" #Loop through each site $groupCounter = 0 foreach ( $group in $allGroups ) { $groupCounter ++ Write-Host \"Deleting $( $group . displayName ) ... ($groupCounter/$groupCount)\" m365 aad o365group remove - -id $group . id - -confirm $true } Write-host \"Retrieving all SPO sites...\" $allSites = m365 spo site list - -query \"[?contains(Template,'SITEPAGEPUBLISHING') || contains(Template,'STS')]\" | ConvertFrom-Json $siteCount = $allSites . Count Write-Host \"Processing $siteCount sites...\" #Loop through each site $siteCounter = 0 foreach ( $site in $allSites ) { $siteCounter ++ Write-Host \"Deleting $( $site . Url ) ... ($siteCounter/$siteCount)\" m365 spo site remove - -url $site . Url - -skipRecycleBin $skipRecycleBin - -confirm $true }","title":"Delete all Microsoft 365 groups and SharePoint sites"},{"location":"sample-scripts/aad/delete-m365-groups-and-sharepoint-sites/#delete-all-microsoft-365-groups-and-sharepoint-sites","text":"Author: Patrick Lamber Another example how you can delete all Microsoft 365 Groups and SharePoint Online sites in your development environment. PowerShell ### Warning. Use with caution. This script deletes all M365 Groups and SPO Sites in your tenant $devAccount = \"<putyourupnhereforsecuritycheck>\" ### Deletes the resources from the recyclebin. The CLI does not support this feature yet $skipRecycleBin = $true $m365Status = m365 status - -output text Write-Host $m365Status if ( $m365Status -eq \"Logged Out\" ) { # Connection to Microsoft 365 m365 login $m365Status = m365 status } # Check added as security measure if ( $m365Status [ 0 ]. ToString (). IndexOf ( $devAccount ) -eq - 1 ) { Write-Host \"The user does not match the target development account. Stopping...\" -ForegroundColor Red return ; } Write-host \"Retrieving all groups...\" $allGroups = m365 aad o365group list -o json | ConvertFrom-Json $groupCount = $allGroups . Count Write-Host \"Processing $groupCount sites...\" #Loop through each site $groupCounter = 0 foreach ( $group in $allGroups ) { $groupCounter ++ Write-Host \"Deleting $( $group . displayName ) ... ($groupCounter/$groupCount)\" m365 aad o365group remove - -id $group . id - -confirm $true } Write-host \"Retrieving all SPO sites...\" $allSites = m365 spo site list - -query \"[?contains(Template,'SITEPAGEPUBLISHING') || contains(Template,'STS')]\" | ConvertFrom-Json $siteCount = $allSites . Count Write-Host \"Processing $siteCount sites...\" #Loop through each site $siteCounter = 0 foreach ( $site in $allSites ) { $siteCounter ++ Write-Host \"Deleting $( $site . Url ) ... ($siteCounter/$siteCount)\" m365 spo site remove - -url $site . Url - -skipRecycleBin $skipRecycleBin - -confirm $true }","title":"Delete all Microsoft 365 groups and SharePoint sites"},{"location":"sample-scripts/aad/delete-m365-groups/","tags":["cleanup","groups"],"text":"Delete all Microsoft 365 groups \u00b6 Author: Laura Kokkarinen There are so many different ways to create Microsoft 365 groups. Teams, Planner, SharePoint team sites, etc. \u2014 you can accumulate a lot of them very fast. Use this script below to delete the ones you no longer need. PowerShell Bash $sparksjoy = \"All Company\" , \"TEMPLATE Project\" , \"We have cats in this team! Join!\" $groups = m365 aad o365group list -o json | ConvertFrom-Json $groups = $groups | where { -not ( $sparksjoy -contains $_ . displayName )} if ( $groups . Count -eq 0 ) { break } $groups | Format-Table displayName Write-Host \"Total:\" $groups . Count Read-Host -Prompt \"Press Enter to start deleting (CTRL + C to exit)\" $progress = 0 $total = $groups . Count foreach ( $group in $groups ) { $progress ++ Write-Host $progress / $total \":\" $group . displayName m365 aad o365group remove - -id $group . id - -confirm } #!/bin/bash # requires jq: https://stedolan.github.io/jq/ sparksjoy =( \"All Company\" \"TEMPLATE Project\" \"We have cats in this team! Join!\" ) groupstoremove =() while read o365group ; do exists = false displayName = $( echo $o365group | cut -d ';' -f 1 ) for keep in \" ${ sparksjoy [@] } \" ; do if [ \" $keep \" == \" $displayName \" ] ; then exists = true break fi done if [ \" $exists \" = false ] ; then groupstoremove +=( \" $o365group \" ) fi done < < ( m365 aad o365group list -o json | jq -r '.[] | .displayName + \";\" + .id' ) if [ ${# groupstoremove [@] } = 0 ] ; then exit 1 fi printf '%s\\n' \" ${ groupstoremove [@] } \" echo \"Press Enter to start deleting (CTRL + C to exit)\" read foo for o365group in \" ${ groupstoremove [@] } \" ; do displayName = $( echo $o365group | cut -d ';' -f 1 ) id = $( echo $o365group | cut -d ';' -f 2 ) echo \"Deleting $displayName ...\" m365 aad o365group remove --id \" $id \" --confirm done","title":"Delete all Microsoft 365 groups"},{"location":"sample-scripts/aad/delete-m365-groups/#delete-all-microsoft-365-groups","text":"Author: Laura Kokkarinen There are so many different ways to create Microsoft 365 groups. Teams, Planner, SharePoint team sites, etc. \u2014 you can accumulate a lot of them very fast. Use this script below to delete the ones you no longer need. PowerShell Bash $sparksjoy = \"All Company\" , \"TEMPLATE Project\" , \"We have cats in this team! Join!\" $groups = m365 aad o365group list -o json | ConvertFrom-Json $groups = $groups | where { -not ( $sparksjoy -contains $_ . displayName )} if ( $groups . Count -eq 0 ) { break } $groups | Format-Table displayName Write-Host \"Total:\" $groups . Count Read-Host -Prompt \"Press Enter to start deleting (CTRL + C to exit)\" $progress = 0 $total = $groups . Count foreach ( $group in $groups ) { $progress ++ Write-Host $progress / $total \":\" $group . displayName m365 aad o365group remove - -id $group . id - -confirm } #!/bin/bash # requires jq: https://stedolan.github.io/jq/ sparksjoy =( \"All Company\" \"TEMPLATE Project\" \"We have cats in this team! Join!\" ) groupstoremove =() while read o365group ; do exists = false displayName = $( echo $o365group | cut -d ';' -f 1 ) for keep in \" ${ sparksjoy [@] } \" ; do if [ \" $keep \" == \" $displayName \" ] ; then exists = true break fi done if [ \" $exists \" = false ] ; then groupstoremove +=( \" $o365group \" ) fi done < < ( m365 aad o365group list -o json | jq -r '.[] | .displayName + \";\" + .id' ) if [ ${# groupstoremove [@] } = 0 ] ; then exit 1 fi printf '%s\\n' \" ${ groupstoremove [@] } \" echo \"Press Enter to start deleting (CTRL + C to exit)\" read foo for o365group in \" ${ groupstoremove [@] } \" ; do displayName = $( echo $o365group | cut -d ';' -f 1 ) id = $( echo $o365group | cut -d ';' -f 2 ) echo \"Deleting $displayName ...\" m365 aad o365group remove --id \" $id \" --confirm done","title":"Delete all Microsoft 365 groups"},{"location":"sample-scripts/aad/flag-groups-with-user-names/","tags":["users","reports","groups"],"text":"Scan for Microsoft 365 Groups created with user's first or last name \u00b6 Author: Joseph Velliah We can use the group naming policy to enforce a consistent naming strategy for groups created by users in our organization. A naming policy can help us and our users identify the function of the group. We can use the policy to block specific words from being used in group names and aliases. But what if we need to find out the list of Microsoft 365 groups created with user\u2019s givenName or surname as their mail? This sample script scans the Microsoft 365 groups that may contain user\u2019s first or last name as the group mail. Note: The filter condition can be changed as per your requirement. PowerShell Bash $groupsToFlag = @() $users = m365 aad user list - -properties 'displayName,givenName,surname' -o json | ConvertFrom-Json $groups = m365 aad o365group list -o json | ConvertFrom-Json foreach ( $user in $users ) { $userGivenName = $user . givenName $userSurname = $user . surname if ( $userGivenName -and $userSurname ) { $groupsMatch = $groups | Where-Object { $_ . mail -like \"*$userGivenName*\" -or $_ . mail -like \"*$userSurname*\" } foreach ( $group in $groupsMatch ) { $groupObject = New-Object -TypeName PSObject $groupObject | Add-Member -MemberType NoteProperty -Name \"groupId\" -Value $group . id $groupObject | Add-Member -MemberType NoteProperty -Name \"groupMail\" -Value $group . mail $groupObject | Add-Member -MemberType NoteProperty -Name \"userGivenName\" -Value $userGivenName $groupObject | Add-Member -MemberType NoteProperty -Name \"userSurname\" -Value $userSurname $groupsToFlag += $groupObject } } } $groupsToFlag | Format-Table -AutoSize #!/bin/bash # requires jq: https://stedolan.github.io/jq/ defaultIFS = $IFS IFS = $'\\n' groupsToFlag =() users = ` m365 aad user list --properties 'displayName,givenName,surname' -o json ` groups = ` m365 aad o365group list -o json ` for user in ` echo $users | jq -c '.[]' ` ; do userGivenName = ` echo $user | jq -r '.givenName' ` userSurname = ` echo $user | jq -r '.surname' ` if [ ! -z \" $userGivenName \" ] || [ !-z \" $userSurname \" ] then groupsMatch = $( echo $groups | jq -c --arg GivenName \" $userGivenName \" --arg Surname \" $userSurname \" 'map(select((.mail|ascii_downcase|contains($GivenName|ascii_downcase)) or (.mail|ascii_downcase|contains($Surname|ascii_downcase))))' ) for group in ` echo $groupsMatch | jq -c '.[]' ` ; do groupId = ` echo $group | jq -r '.id' ` groupMail = ` echo $group | jq -r '.mail' ` groupObject = $( jq -n -c \\ --arg GroupId \" $groupId \" \\ --arg GroupMail \" $groupMail \" \\ --arg UserGivenName \" $userGivenName \" \\ --arg UserSurname \" $userSurname \" \\ '{groupId: $GroupId, groupMail: $GroupMail, userGivenName: $UserGivenName, userSurname: $UserSurname}' ) groupsToFlag +=( $groupObject ) done fi done echo ${ groupsToFlag [@] } | jq -csr '(.[0] |keys_unsorted | @tsv), (.[]|.|map(.) |@tsv)' | column -s $'\\t' -t IFS = defaultIFS exit 1","title":"Scan for Microsoft 365 Groups created with user's first or last name"},{"location":"sample-scripts/aad/flag-groups-with-user-names/#scan-for-microsoft-365-groups-created-with-users-first-or-last-name","text":"Author: Joseph Velliah We can use the group naming policy to enforce a consistent naming strategy for groups created by users in our organization. A naming policy can help us and our users identify the function of the group. We can use the policy to block specific words from being used in group names and aliases. But what if we need to find out the list of Microsoft 365 groups created with user\u2019s givenName or surname as their mail? This sample script scans the Microsoft 365 groups that may contain user\u2019s first or last name as the group mail. Note: The filter condition can be changed as per your requirement. PowerShell Bash $groupsToFlag = @() $users = m365 aad user list - -properties 'displayName,givenName,surname' -o json | ConvertFrom-Json $groups = m365 aad o365group list -o json | ConvertFrom-Json foreach ( $user in $users ) { $userGivenName = $user . givenName $userSurname = $user . surname if ( $userGivenName -and $userSurname ) { $groupsMatch = $groups | Where-Object { $_ . mail -like \"*$userGivenName*\" -or $_ . mail -like \"*$userSurname*\" } foreach ( $group in $groupsMatch ) { $groupObject = New-Object -TypeName PSObject $groupObject | Add-Member -MemberType NoteProperty -Name \"groupId\" -Value $group . id $groupObject | Add-Member -MemberType NoteProperty -Name \"groupMail\" -Value $group . mail $groupObject | Add-Member -MemberType NoteProperty -Name \"userGivenName\" -Value $userGivenName $groupObject | Add-Member -MemberType NoteProperty -Name \"userSurname\" -Value $userSurname $groupsToFlag += $groupObject } } } $groupsToFlag | Format-Table -AutoSize #!/bin/bash # requires jq: https://stedolan.github.io/jq/ defaultIFS = $IFS IFS = $'\\n' groupsToFlag =() users = ` m365 aad user list --properties 'displayName,givenName,surname' -o json ` groups = ` m365 aad o365group list -o json ` for user in ` echo $users | jq -c '.[]' ` ; do userGivenName = ` echo $user | jq -r '.givenName' ` userSurname = ` echo $user | jq -r '.surname' ` if [ ! -z \" $userGivenName \" ] || [ !-z \" $userSurname \" ] then groupsMatch = $( echo $groups | jq -c --arg GivenName \" $userGivenName \" --arg Surname \" $userSurname \" 'map(select((.mail|ascii_downcase|contains($GivenName|ascii_downcase)) or (.mail|ascii_downcase|contains($Surname|ascii_downcase))))' ) for group in ` echo $groupsMatch | jq -c '.[]' ` ; do groupId = ` echo $group | jq -r '.id' ` groupMail = ` echo $group | jq -r '.mail' ` groupObject = $( jq -n -c \\ --arg GroupId \" $groupId \" \\ --arg GroupMail \" $groupMail \" \\ --arg UserGivenName \" $userGivenName \" \\ --arg UserSurname \" $userSurname \" \\ '{groupId: $GroupId, groupMail: $GroupMail, userGivenName: $UserGivenName, userSurname: $UserSurname}' ) groupsToFlag +=( $groupObject ) done fi done echo ${ groupsToFlag [@] } | jq -csr '(.[0] |keys_unsorted | @tsv), (.[]|.|map(.) |@tsv)' | column -s $'\\t' -t IFS = defaultIFS exit 1","title":"Scan for Microsoft 365 Groups created with user's first or last name"},{"location":"sample-scripts/aad/manage-group-users/","tags":["groups","security","teams","users"],"text":"Bulk add/remove users to Microsoft Teams and Microsoft 365 Groups \u00b6 Author: Joseph Velliah Companies pursue to hasten profits growth or enter new marketplace through Mergers and Acquisitions (M&A). M&A typically fails during integration. This also applies to migrating users and data in Microsoft Teams and Groups. Partial acquisition can be pretty tricky. To help make the activity as charming as possible, I have created the following sample script to add/remove bulk users to/from Microsoft Teams team or Microsoft 365 group using CLI for Microsoft 365 commands. Note: Refactor the code as per your requirement. PowerShell Input CSV File Format $taskItems = import-csv \"sample-input-file.csv\" \u2013 header mailNickname , userEmail , role , action $groups = m365 aad o365group list -o json | ConvertFrom-Json ForEach ( $taskItem in $taskItems ) { $mailNickname = $( $taskItem . mailNickname ) $userEmail = $( $taskItem . userEmail ) $role = $( $taskItem . role ) $action = $( $taskItem . action ) $group = $groups | Where-Object { $_ . mailNickname -eq \"$mailNickname\" } $user = m365 aad user get - -userName $userEmail -o json | ConvertFrom-Json Write-Host \"Processing: User --> \" $user . mail \" Group --> \" $group . mailNickname If ( $action -eq \"add\" ) { If ( $role -eq \"owner\" ) { m365 aad o365group user add - -groupId $group . id - -userName $user . mail - -role Owner ; Write-Host $user . mail \" added as owner in \" $group . mailNickname } ElseIf ( $role -eq \"member\" ) { m365 aad o365group user add - -groupId $group . id - -userName $user . mail Write-Host $user . mail \" added as member in \" $group . mailNickname } Else { Write-Host \"Invalid user role '\" $role \"'\" } } ElseIf ( $action -eq \"remove\" ) { m365 aad o365group user remove - -groupId $group . id - -userName $user . mail - -confirm Write-Host $user . mail \" removed from \" $group . mailNickname } Else { Write-Host \"Invalid task action '\" $action \"'\" } } groupMailNickname1, user1@domainname.com, owner, add groupMailNickname2, user2@domainname.com, member, add groupMailNickname3, user3@domainname.com, , remove","title":"Bulk add/remove users to Microsoft Teams and Microsoft 365 Groups"},{"location":"sample-scripts/aad/manage-group-users/#bulk-addremove-users-to-microsoft-teams-and-microsoft-365-groups","text":"Author: Joseph Velliah Companies pursue to hasten profits growth or enter new marketplace through Mergers and Acquisitions (M&A). M&A typically fails during integration. This also applies to migrating users and data in Microsoft Teams and Groups. Partial acquisition can be pretty tricky. To help make the activity as charming as possible, I have created the following sample script to add/remove bulk users to/from Microsoft Teams team or Microsoft 365 group using CLI for Microsoft 365 commands. Note: Refactor the code as per your requirement. PowerShell Input CSV File Format $taskItems = import-csv \"sample-input-file.csv\" \u2013 header mailNickname , userEmail , role , action $groups = m365 aad o365group list -o json | ConvertFrom-Json ForEach ( $taskItem in $taskItems ) { $mailNickname = $( $taskItem . mailNickname ) $userEmail = $( $taskItem . userEmail ) $role = $( $taskItem . role ) $action = $( $taskItem . action ) $group = $groups | Where-Object { $_ . mailNickname -eq \"$mailNickname\" } $user = m365 aad user get - -userName $userEmail -o json | ConvertFrom-Json Write-Host \"Processing: User --> \" $user . mail \" Group --> \" $group . mailNickname If ( $action -eq \"add\" ) { If ( $role -eq \"owner\" ) { m365 aad o365group user add - -groupId $group . id - -userName $user . mail - -role Owner ; Write-Host $user . mail \" added as owner in \" $group . mailNickname } ElseIf ( $role -eq \"member\" ) { m365 aad o365group user add - -groupId $group . id - -userName $user . mail Write-Host $user . mail \" added as member in \" $group . mailNickname } Else { Write-Host \"Invalid user role '\" $role \"'\" } } ElseIf ( $action -eq \"remove\" ) { m365 aad o365group user remove - -groupId $group . id - -userName $user . mail - -confirm Write-Host $user . mail \" removed from \" $group . mailNickname } Else { Write-Host \"Invalid task action '\" $action \"'\" } } groupMailNickname1, user1@domainname.com, owner, add groupMailNickname2, user2@domainname.com, member, add groupMailNickname3, user3@domainname.com, , remove","title":"Bulk add/remove users to Microsoft Teams and Microsoft 365 Groups"},{"location":"sample-scripts/aad/replace-membership-of-selected-groups/","tags":["cleanup","groups","security","teams","users"],"text":"Replace a user's membership in selected Microsoft 365 Groups or Teams \u00b6 Inspired by: Alan Eardley , Patrick Lamber This script can be used to replace the membership of a user for a selected list of Groups. It might be useful when a person changes role in an organization or is about to leave it. PowerShell Input CSV File Format $fileInput = \"<PUTYOURPATHHERE.csv>\" $oldUser = \"upnOfOldUser\" $newUser = \"upnOfNewUser\" # Parameters end $m365Status = m365 status - -output text if ( $m365Status -eq \"Logged Out\" ) { # Connection to Microsoft 365 m365 login } # configure the CLI to output JSON on each execution m365 cli config set - -key output - -value json m365 cli config set - -key errorOutput - -value stdout m365 cli config set - -key showHelpOnFailure - -value false m365 cli config set - -key printErrorsAsPlainText - -value false function Get-CLIValue { [ cmdletbinding ()] param ( [ parameter ( Mandatory = $true , ValueFromPipeline = $true )] $input ) $output = $input | ConvertFrom-Json if ( $output . error -ne $null ) { throw $output . error } return $output } function Replace-Membership { [ cmdletbinding ()] param ( [ parameter ( Mandatory = $true )] $fileInput , [ parameter ( Mandatory = $true )] $oldUser , [ parameter ( Mandatory = $true )] $newUser ) $groupsToProcess = Import-Csv $fileInput $groupsToProcess . id | ForEach -Object { $groupId = $_ Write-Host \"Processing Group ($groupId)\" -ForegroundColor DarkGray -NoNewline $group = $null try { $group = m365 aad o365group get - -id $groupId | Get-CLIValue } catch { Write-Host Write-Host $_ . Exception . Message -ForegroundColor Red return } Write-Host \" - $( $group . displayName ) \" -ForegroundColor DarkGray $isTeam = $group . resourceProvisioningOptions . Contains ( \"Team\" ); $users = $null $users = m365 aad o365group user list - -groupId $groupId | Get-CLIValue $users | Where-Object { $_ . userPrincipalName -eq $oldUser } | ForEach -Object { $user = $_ $isMember = $user . userType -eq \"Member\" $isOwner = $user . userType -eq \"Owner\" Write-Host \"Found $oldUser with $( $user . userType . tolower ()) rights\" -ForegroundColor Green # owners must be explicitly added as members if it is a team if ( $isMember -or $isTeam ) { try { Write-Host \"Granting $newUser member rights\" m365 aad o365group user add - -groupId $groupId - -userName $newUser | Get-CLIValue } catch { Write-Host $_ . Exception . Message -ForegroundColor White } } if ( $isOwner ) { try { Write-Host \"Granting $newUser owner rights\" m365 aad o365group user add - -groupId $groupId - -userName $newUser - -role Owner | Get-CLIValue } catch { Write-Host $_ . Exception . Message -ForegroundColor White } } try { Write-Host \"Removing $oldUser...\" m365 aad o365group user remove - -groupId $groupId - -userName $oldUser - -confirm $false | Get-CLIValue } catch { Write-Host $_ . Exception . Message -ForegroundColor Red continue } } } } Replace-Membership $fileInput $oldUser $newUser id <groupId> <groupId> <groupId>","title":"Replace a user's membership in selected Microsoft 365 Groups or Teams"},{"location":"sample-scripts/aad/replace-membership-of-selected-groups/#replace-a-users-membership-in-selected-microsoft-365-groups-or-teams","text":"Inspired by: Alan Eardley , Patrick Lamber This script can be used to replace the membership of a user for a selected list of Groups. It might be useful when a person changes role in an organization or is about to leave it. PowerShell Input CSV File Format $fileInput = \"<PUTYOURPATHHERE.csv>\" $oldUser = \"upnOfOldUser\" $newUser = \"upnOfNewUser\" # Parameters end $m365Status = m365 status - -output text if ( $m365Status -eq \"Logged Out\" ) { # Connection to Microsoft 365 m365 login } # configure the CLI to output JSON on each execution m365 cli config set - -key output - -value json m365 cli config set - -key errorOutput - -value stdout m365 cli config set - -key showHelpOnFailure - -value false m365 cli config set - -key printErrorsAsPlainText - -value false function Get-CLIValue { [ cmdletbinding ()] param ( [ parameter ( Mandatory = $true , ValueFromPipeline = $true )] $input ) $output = $input | ConvertFrom-Json if ( $output . error -ne $null ) { throw $output . error } return $output } function Replace-Membership { [ cmdletbinding ()] param ( [ parameter ( Mandatory = $true )] $fileInput , [ parameter ( Mandatory = $true )] $oldUser , [ parameter ( Mandatory = $true )] $newUser ) $groupsToProcess = Import-Csv $fileInput $groupsToProcess . id | ForEach -Object { $groupId = $_ Write-Host \"Processing Group ($groupId)\" -ForegroundColor DarkGray -NoNewline $group = $null try { $group = m365 aad o365group get - -id $groupId | Get-CLIValue } catch { Write-Host Write-Host $_ . Exception . Message -ForegroundColor Red return } Write-Host \" - $( $group . displayName ) \" -ForegroundColor DarkGray $isTeam = $group . resourceProvisioningOptions . Contains ( \"Team\" ); $users = $null $users = m365 aad o365group user list - -groupId $groupId | Get-CLIValue $users | Where-Object { $_ . userPrincipalName -eq $oldUser } | ForEach -Object { $user = $_ $isMember = $user . userType -eq \"Member\" $isOwner = $user . userType -eq \"Owner\" Write-Host \"Found $oldUser with $( $user . userType . tolower ()) rights\" -ForegroundColor Green # owners must be explicitly added as members if it is a team if ( $isMember -or $isTeam ) { try { Write-Host \"Granting $newUser member rights\" m365 aad o365group user add - -groupId $groupId - -userName $newUser | Get-CLIValue } catch { Write-Host $_ . Exception . Message -ForegroundColor White } } if ( $isOwner ) { try { Write-Host \"Granting $newUser owner rights\" m365 aad o365group user add - -groupId $groupId - -userName $newUser - -role Owner | Get-CLIValue } catch { Write-Host $_ . Exception . Message -ForegroundColor White } } try { Write-Host \"Removing $oldUser...\" m365 aad o365group user remove - -groupId $groupId - -userName $oldUser - -confirm $false | Get-CLIValue } catch { Write-Host $_ . Exception . Message -ForegroundColor Red continue } } } } Replace-Membership $fileInput $oldUser $newUser id <groupId> <groupId> <groupId>","title":"Replace a user's membership in selected Microsoft 365 Groups or Teams"},{"location":"sample-scripts/aad/replace-owner-with-a-different-one/","tags":["users","groups","security","security","teams"],"text":"Replace an owner in a Microsoft 365 Group or Microsoft Team \u00b6 Inspired by: Alan Eardley , Patrick Lamber Find all the Microsoft 365 Groups that a user is an Owner of and replace them with someone else useful for when an employee leaves and ownership needs to be updated. PowerShell # This script replaces an owner with a different person in all Microsoft 365 Groups $oldUser = \"oldUserUpn\" $newUser = \"newUserUpn\" # Parameters end $m365Status = m365 status - -output text if ( $m365Status -eq \"Logged Out\" ) { # Connection to Microsoft 365 m365 login } # configure the CLI to output JSON on each execution m365 cli config set - -key output - -value json m365 cli config set - -key errorOutput - -value stdout m365 cli config set - -key showHelpOnFailure - -value false m365 cli config set - -key printErrorsAsPlainText - -value false function Get-CLIValue { [ cmdletbinding ()] param ( [ parameter ( Mandatory = $true , ValueFromPipeline = $true )] $input ) $output = $input | ConvertFrom-Json if ( $output . error -ne $null ) { throw $output . error } return $output } function Replace-Owner { [ cmdletbinding ()] param ( [ parameter ( Mandatory = $true )] $oldUser , [ parameter ( Mandatory = $true )] $newUser ) $groupsToProcess = m365 aad o365group list | Get-CLIValue $i = 0 $groupsToProcess | ForEach -Object { $group = $_ $i ++ Write-Host \"Processing Group ( $( $group . id ) ) - $( $group . displayName ) - ($i/ $( $groupsToProcess . Length ) )\" -ForegroundColor DarkGray $hasOwner = $null # verify if the old user is in the owners list $hasOwner = m365 aad o365group user list - -groupId $group . id - -query \"[?userType=='Owner' && userPrincipalName=='$oldUser'].[id]\" | Get-CLIValue if ( $hasOwner -ne $null ) { Write-Host \"Found $oldUser\" -ForegroundColor Green try { Write-Host \"Granting $newUser owner rights\" m365 aad o365group user add - -groupId $group . id - -userName $newUser - -role Owner | Get-CLIValue } catch { Write-Host $_ . Exception . Message -ForegroundColor White } try { Write-Host \"Removing $oldUser permissions...\" m365 aad o365group user remove - -groupId $group . id - -userName $oldUser - -confirm $false | Get-CLIValue } catch { Write-Host $_ . Exception . Message -ForegroundColor Red continue } } } } Replace-Owner $oldUser $newUser","title":"Replace an owner in a Microsoft 365 Group or Microsoft Team"},{"location":"sample-scripts/aad/replace-owner-with-a-different-one/#replace-an-owner-in-a-microsoft-365-group-or-microsoft-team","text":"Inspired by: Alan Eardley , Patrick Lamber Find all the Microsoft 365 Groups that a user is an Owner of and replace them with someone else useful for when an employee leaves and ownership needs to be updated. PowerShell # This script replaces an owner with a different person in all Microsoft 365 Groups $oldUser = \"oldUserUpn\" $newUser = \"newUserUpn\" # Parameters end $m365Status = m365 status - -output text if ( $m365Status -eq \"Logged Out\" ) { # Connection to Microsoft 365 m365 login } # configure the CLI to output JSON on each execution m365 cli config set - -key output - -value json m365 cli config set - -key errorOutput - -value stdout m365 cli config set - -key showHelpOnFailure - -value false m365 cli config set - -key printErrorsAsPlainText - -value false function Get-CLIValue { [ cmdletbinding ()] param ( [ parameter ( Mandatory = $true , ValueFromPipeline = $true )] $input ) $output = $input | ConvertFrom-Json if ( $output . error -ne $null ) { throw $output . error } return $output } function Replace-Owner { [ cmdletbinding ()] param ( [ parameter ( Mandatory = $true )] $oldUser , [ parameter ( Mandatory = $true )] $newUser ) $groupsToProcess = m365 aad o365group list | Get-CLIValue $i = 0 $groupsToProcess | ForEach -Object { $group = $_ $i ++ Write-Host \"Processing Group ( $( $group . id ) ) - $( $group . displayName ) - ($i/ $( $groupsToProcess . Length ) )\" -ForegroundColor DarkGray $hasOwner = $null # verify if the old user is in the owners list $hasOwner = m365 aad o365group user list - -groupId $group . id - -query \"[?userType=='Owner' && userPrincipalName=='$oldUser'].[id]\" | Get-CLIValue if ( $hasOwner -ne $null ) { Write-Host \"Found $oldUser\" -ForegroundColor Green try { Write-Host \"Granting $newUser owner rights\" m365 aad o365group user add - -groupId $group . id - -userName $newUser - -role Owner | Get-CLIValue } catch { Write-Host $_ . Exception . Message -ForegroundColor White } try { Write-Host \"Removing $oldUser permissions...\" m365 aad o365group user remove - -groupId $group . id - -userName $oldUser - -confirm $false | Get-CLIValue } catch { Write-Host $_ . Exception . Message -ForegroundColor Red continue } } } } Replace-Owner $oldUser $newUser","title":"Replace an owner in a Microsoft 365 Group or Microsoft Team"},{"location":"sample-scripts/flow/cancel-all-running-flow-runs/","tags":["cleanup","flows"],"text":"Cancel all running flow runs for a flow in an environment \u00b6 Author: Mohamed Ashiq Faleel Do you want to automate the cancellation of running Power Automate flow runs? Microsoft 365 CLI cmdlets will help you to cancel all the running flow runs. This script will cancel all running flow runs of a Power Automate flow created in an environment. Pass the Flow environment id and the flow guid as parameter while running the script. PowerShell $flowEnvironment = $args [ 0 ] $flowGUID = $args [ 1 ] $flowRuns = m365 flow run list - -environment $flowEnvironment - -flow $flowGUID - -output json | ConvertFrom-Json foreach ( $run in $flowRuns ) { if ( $run . status -eq \"Running\" ) { Write-Output \"Run details: \" $run # Cancel all the running flow runs m365 flow run cancel - -environment $flowEnvironment - -flow $flowGUID - -name $run . name - -confirm Write-Output \"Run Cancelled successfully\" } }","title":"Cancel all running flow runs for a flow in an environment"},{"location":"sample-scripts/flow/cancel-all-running-flow-runs/#cancel-all-running-flow-runs-for-a-flow-in-an-environment","text":"Author: Mohamed Ashiq Faleel Do you want to automate the cancellation of running Power Automate flow runs? Microsoft 365 CLI cmdlets will help you to cancel all the running flow runs. This script will cancel all running flow runs of a Power Automate flow created in an environment. Pass the Flow environment id and the flow guid as parameter while running the script. PowerShell $flowEnvironment = $args [ 0 ] $flowGUID = $args [ 1 ] $flowRuns = m365 flow run list - -environment $flowEnvironment - -flow $flowGUID - -output json | ConvertFrom-Json foreach ( $run in $flowRuns ) { if ( $run . status -eq \"Running\" ) { Write-Output \"Run details: \" $run # Cancel all the running flow runs m365 flow run cancel - -environment $flowEnvironment - -flow $flowGUID - -name $run . name - -confirm Write-Output \"Run Cancelled successfully\" } }","title":"Cancel all running flow runs for a flow in an environment"},{"location":"sample-scripts/flow/export-all-flows-in-environment/","tags":["flows","migration"],"text":"Export all flows in environment \u00b6 Author: Garry Trinder When was the last time you backed up all the flows in your environment? By combining the CLI for Microsoft 365 and PowerShell we can make this task easy and repeatable. This script will get all flows in your default environment and export them as both a ZIP file for importing back into Power Automate and as a JSON file for importing into Azure as an Azure Logic App. PowerShell Write-Output \"Getting environment info...\" $environment = m365 flow environment list - -query '[?properties.isDefault==`true`].name' - -output json | ConvertFrom-JSON Write-Output \"Getting Flows info...\" $flows = m365 flow list - -environment $environment - -asAdmin - -output json | ConvertFrom-JSON Write-Output \"Found $( $flows . Count ) Flows to export...\" $flows | ForEach -Object { Write-Output \"Exporting as ZIP & JSON... $( $_ . displayName ) \" $filename = $_ . displayName . Replace ( \" \" , \"\" ) $timestamp = Get-Date -Format \"yyyymmddhhmmss\" $exportPath = \" $( $filename ) _ $( $timestamp ) \" $flowId = $_ . Name m365 flow export - -id $flowId - -environment $environment - -packageDisplayName $_ . displayName - -path \"$exportPath.zip\" m365 flow export - -id $flowId - -environment $environment - -format json - -path \"$exportPath.json\" } Write-Output \"Complete\"","title":"Export all flows in environment"},{"location":"sample-scripts/flow/export-all-flows-in-environment/#export-all-flows-in-environment","text":"Author: Garry Trinder When was the last time you backed up all the flows in your environment? By combining the CLI for Microsoft 365 and PowerShell we can make this task easy and repeatable. This script will get all flows in your default environment and export them as both a ZIP file for importing back into Power Automate and as a JSON file for importing into Azure as an Azure Logic App. PowerShell Write-Output \"Getting environment info...\" $environment = m365 flow environment list - -query '[?properties.isDefault==`true`].name' - -output json | ConvertFrom-JSON Write-Output \"Getting Flows info...\" $flows = m365 flow list - -environment $environment - -asAdmin - -output json | ConvertFrom-JSON Write-Output \"Found $( $flows . Count ) Flows to export...\" $flows | ForEach -Object { Write-Output \"Exporting as ZIP & JSON... $( $_ . displayName ) \" $filename = $_ . displayName . Replace ( \" \" , \"\" ) $timestamp = Get-Date -Format \"yyyymmddhhmmss\" $exportPath = \" $( $filename ) _ $( $timestamp ) \" $flowId = $_ . Name m365 flow export - -id $flowId - -environment $environment - -packageDisplayName $_ . displayName - -path \"$exportPath.zip\" m365 flow export - -id $flowId - -environment $environment - -format json - -path \"$exportPath.json\" } Write-Output \"Complete\"","title":"Export all flows in environment"},{"location":"sample-scripts/flow/export-flow-logicapp/","tags":["azure","flows","migration"],"text":"Export a single flow to a Logic App \u00b6 Author: Albert-Jan Schot !!! Want to upgrade one of your Power Automate flows to a Logic App? Missing the option in the UI? Or just looking at an easy way to do it programmatically? By combining the CLI for Microsoft 365 and PowerShell we can make this task easy and repeatable. This script will export the Power Automate flow Your sample test flow , make sure to pass the correct name in the script, and your flow will be exported right away. !!! PowerShell Bash Write-Output \"Getting environment info...\" $environmentId = $( m365 flow environment list - -query \"[?displayName == '(default)']\" -o json | ConvertFrom-Json ). Name $flowId = $( m365 flow list - -environment $environmentId - -query \"[?displayName == 'Your sample test flow']\" -o json | ConvertFrom-Json )[ 0 ]. Name Write-Output \"Getting Flow info...\" m365 flow export - -environment $environmentId - -id $flowId -f 'json' Write-Output \"Complete\" #!/bin/bash ENV_NAME = m365 flow environment list --query '[?contains(displayName,`default`)] .name' FLOW_NAME = m365 flow list --environment $environmentId --query '[?displayName == `Your sample test flow`] .name' echo \"Exporting your flow\" m365 flow export --environment $ENV_NAME --id $FLOW_NAME -f 'json'","title":"Export a single flow to a Logic App"},{"location":"sample-scripts/flow/export-flow-logicapp/#export-a-single-flow-to-a-logic-app","text":"Author: Albert-Jan Schot !!! Want to upgrade one of your Power Automate flows to a Logic App? Missing the option in the UI? Or just looking at an easy way to do it programmatically? By combining the CLI for Microsoft 365 and PowerShell we can make this task easy and repeatable. This script will export the Power Automate flow Your sample test flow , make sure to pass the correct name in the script, and your flow will be exported right away. !!! PowerShell Bash Write-Output \"Getting environment info...\" $environmentId = $( m365 flow environment list - -query \"[?displayName == '(default)']\" -o json | ConvertFrom-Json ). Name $flowId = $( m365 flow list - -environment $environmentId - -query \"[?displayName == 'Your sample test flow']\" -o json | ConvertFrom-Json )[ 0 ]. Name Write-Output \"Getting Flow info...\" m365 flow export - -environment $environmentId - -id $flowId -f 'json' Write-Output \"Complete\" #!/bin/bash ENV_NAME = m365 flow environment list --query '[?contains(displayName,`default`)] .name' FLOW_NAME = m365 flow list --environment $environmentId --query '[?displayName == `Your sample test flow`] .name' echo \"Exporting your flow\" m365 flow export --environment $ENV_NAME --id $FLOW_NAME -f 'json'","title":"Export a single flow to a Logic App"},{"location":"sample-scripts/flow/flow-runs-day-summary/","tags":["adaptivecards","flows","reports"],"text":"Flow runs day summary report \u00b6 Author: Adam This script creates a report of all flow runs from current day and sends the report as an adaptive card to the provided url PowerShell $m365Status = m365 status - -output text if ( $m365Status -eq \"Logged Out\" ) { m365 login } $environment = 'Default-2942bb31-1d49-4da6-8d3d-d0f9e1141234' $adaptiveCard = '{\\\"type\\\":\\\"AdaptiveCard\\\",\\\"body\\\":[{\\\"type\\\":\\\"TextBlock\\\",\\\"size\\\":\\\"Medium\\\",\\\"weight\\\":\\\"Bolder\\\",\\\"text\\\":\\\"${title}\\\"},{\\\"type\\\":\\\"TextBlock\\\",\\\"text\\\":\\\"${description}\\\",\\\"wrap\\\":true}],\\\"$schema\\\":\\\"http://adaptivecards.io/schemas/adaptive-card.json\\\",\\\"version\\\":\\\"1.3\\\"}' $webhook = 'https://contoso.webhook.office.com/webhookb2/1204eba2-061c-4442-9696-2a725cb2d094@2942bb31-1d49-4da6-8d3d-d0f9e1141486/IncomingWebhook/6e54c3958bde444e96fec9ecad356993/be11f523-2a4d-4eae-9d42-277410893c41' $flows = m365 flow list - -environment $environment - -output json $flows = $flows | ConvertFrom-Json $currentDayDate = Get-Date $previousDayDate = ( Get-Date ). AddDays (- 1 ) $adaptiveCardDescription = \"\" foreach ( $flow in $flows ) { $flowRuns = m365 flow run list - -environment $environment - -flow $flow . name - -output json $flowRuns = $flowRuns | ConvertFrom-Json $displayName = $flow . displayName $id = $flow . name $todayRuns = $flowRuns . Where ({ [DateTime] $_ . properties . endTime -le $currentDayDate -and [DateTime] $_ . properties . endTime -gt $previousDayDate }) $todayRunsCount = 0 $todaySuccessRunsCount = 0 $todayFailedRunsCount = 0 if ( $todayRuns . Count -gt 0 ) { $todaySuccessRuns = $todayRuns . Where ({ $_ . status -eq 'Succeeded' }) $todaySuccessRunsCount = $todaySuccessRuns . Count $todayFailedRuns = $todayRuns . Where ({ $_ . status -eq 'Failed' }) $todayFailedRunsCount = $todayFailedRuns . Count $todayRunsCount = $todayRuns . Count } Write-Host \"$displayName -> Runs: $todayRunsCount , Succeeded: $todaySuccessRunsCount , Failed: $todayFailedRunsCount\" $adaptiveCardDescription = $adaptiveCardDescription + \"\\r- [$displayName](https://us.flow.microsoft.com/manage/environments/$environment/flows/$id/details) -> Runs: $todayRunsCount , Succeeded: $todaySuccessRunsCount , Failed: $todayFailedRunsCount\" } $today = Get-Date -Format \"MM/dd/yyyy\" $cardData = '{\\\"title\\\": \\\"Flows summary - ' + $today + '\\\" ,\\\"description\\\":\\\"' + $adaptiveCardDescription + '\\\"}' m365 adaptivecard send - -url $webhook - -card $adaptiveCard - -cardData $cardData","title":"Flow runs day summary report"},{"location":"sample-scripts/flow/flow-runs-day-summary/#flow-runs-day-summary-report","text":"Author: Adam This script creates a report of all flow runs from current day and sends the report as an adaptive card to the provided url PowerShell $m365Status = m365 status - -output text if ( $m365Status -eq \"Logged Out\" ) { m365 login } $environment = 'Default-2942bb31-1d49-4da6-8d3d-d0f9e1141234' $adaptiveCard = '{\\\"type\\\":\\\"AdaptiveCard\\\",\\\"body\\\":[{\\\"type\\\":\\\"TextBlock\\\",\\\"size\\\":\\\"Medium\\\",\\\"weight\\\":\\\"Bolder\\\",\\\"text\\\":\\\"${title}\\\"},{\\\"type\\\":\\\"TextBlock\\\",\\\"text\\\":\\\"${description}\\\",\\\"wrap\\\":true}],\\\"$schema\\\":\\\"http://adaptivecards.io/schemas/adaptive-card.json\\\",\\\"version\\\":\\\"1.3\\\"}' $webhook = 'https://contoso.webhook.office.com/webhookb2/1204eba2-061c-4442-9696-2a725cb2d094@2942bb31-1d49-4da6-8d3d-d0f9e1141486/IncomingWebhook/6e54c3958bde444e96fec9ecad356993/be11f523-2a4d-4eae-9d42-277410893c41' $flows = m365 flow list - -environment $environment - -output json $flows = $flows | ConvertFrom-Json $currentDayDate = Get-Date $previousDayDate = ( Get-Date ). AddDays (- 1 ) $adaptiveCardDescription = \"\" foreach ( $flow in $flows ) { $flowRuns = m365 flow run list - -environment $environment - -flow $flow . name - -output json $flowRuns = $flowRuns | ConvertFrom-Json $displayName = $flow . displayName $id = $flow . name $todayRuns = $flowRuns . Where ({ [DateTime] $_ . properties . endTime -le $currentDayDate -and [DateTime] $_ . properties . endTime -gt $previousDayDate }) $todayRunsCount = 0 $todaySuccessRunsCount = 0 $todayFailedRunsCount = 0 if ( $todayRuns . Count -gt 0 ) { $todaySuccessRuns = $todayRuns . Where ({ $_ . status -eq 'Succeeded' }) $todaySuccessRunsCount = $todaySuccessRuns . Count $todayFailedRuns = $todayRuns . Where ({ $_ . status -eq 'Failed' }) $todayFailedRunsCount = $todayFailedRuns . Count $todayRunsCount = $todayRuns . Count } Write-Host \"$displayName -> Runs: $todayRunsCount , Succeeded: $todaySuccessRunsCount , Failed: $todayFailedRunsCount\" $adaptiveCardDescription = $adaptiveCardDescription + \"\\r- [$displayName](https://us.flow.microsoft.com/manage/environments/$environment/flows/$id/details) -> Runs: $todayRunsCount , Succeeded: $todaySuccessRunsCount , Failed: $todayFailedRunsCount\" } $today = Get-Date -Format \"MM/dd/yyyy\" $cardData = '{\\\"title\\\": \\\"Flows summary - ' + $today + '\\\" ,\\\"description\\\":\\\"' + $adaptiveCardDescription + '\\\"}' m365 adaptivecard send - -url $webhook - -card $adaptiveCard - -cardData $cardData","title":"Flow runs day summary report"},{"location":"sample-scripts/flow/inventory-flows-by-author/","tags":["flows","reports","users"],"text":"Inventory Flows By Creator \u00b6 Author: Pete Skelly The Power Automate Admin Center provides a list of the Flows in your tenant, but there is no way to easily export Flows from the Flow admin center for governance activities. This script retrieves Flows from the Default Environment and maps creator information from Azure AD to list Flows by owner, state and trigger type. The bash version of this script uses an external file to process owner mapping. This is provided in the jq tab and should be saved to the same folder as the bash script and named merge.jq . PowerShell Bash jq #!/usr/local/bin/pwsh -File $DIR = Split-Path $script:MyInvocation . MyCommand . Path $TMP_DIR = \"./tmp\" $TMP_FLOWS = \"$TMP_DIR/flows.json\" $FLOWSCSV = \"flows.csv\" function CleanDistFolder { # Remove the dist folder as needed if ( Test-Path -Path \"$TMP_DIR\" -PathType Container ) { Remove-Item -Path \"$TMP_DIR\" -Recurse -Force -Confirm : $false -ErrorAction SilentlyContinue } } $CURRENT_USER = $( m365 status ). Split ( ':' )[ 1 ] Write-Host \"Logged in as $CURRENT_USER\" try { if ( -not ( Test-Path -Path \"$TMP_DIR\" -PathType Container )) { Write-Host \" Creating $TMP_DIR folder...\" New-Item -ItemType Directory -Path \"$TMP_DIR\" } #Step 1 - Get the default environment Write-Host \"Querying for default Flow environment...\" $flowEnvironments = m365 flow environment list - -output json | ConvertFrom-Json $defaultEnvironment = $flowEnvironments [ 0 ]. name Write-Host \"Found default environment $defaultEnvironment, querying Flows...\" # Step 2 - Get all of the flows using the cli and write flows json to a tmp file # Use a JMESPath query to filter the size of the file. See https://github.com/pnp/cli-microsoft365/issues/1266 m365 flow list - -environment $defaultEnvironment ` - -query '[].{name: name, displayName: properties.displayName,owner: properties.creator.userId, state: properties.state, created: properties.createdTime, lastModified: properties.lastModifiedTime, trigger: properties.definitionSummary.triggers[0].swaggerOperationId, triggerType: properties.definitionSummary.triggers[0].type }' - -asAdmin - -output json | Out-File \"$TMP_FLOWS\" -Encoding ASCII $flows = Get-Content \"$TMP_FLOWS\" | ConvertFrom-Json #Step 3 - Get a unique list of the flow owners from the tmp file Write-Host \"Flows found, searching for owner values...\" $uniqueOwners = $flows . owner | Sort-Object | Get-Unique Write-Host \"There are $( $uniqueOwners . Count ) unique Flows owners.\" Write-Host \"Building owner information mappings...\" #Step 4 - map properties.creator.userId's to {name, email} mapping hashtable Write-Host \"Querying graph for userids...\" $userMap = @{} $uniqueOwners | ForEach -Object { Write-Host \"Querying graph for userid $_...\" m365 aad user get - -id $_ - -output json | ConvertFrom-Json } | ForEach -Object { $userMap . Add ( $_ . id , @{ upn = $_ . userPrincipalName displayName = $_ . displayName mail = $_ . mail } ) } # And add the Owner information to each flow entry to get owner name and email Write-Host \"Mapping owner information...\" $flows | ForEach -Object { $_ | Add-Member -MemberType NoteProperty -Name \"upn\" -Value $userMap [ $_ . owner ]. upn $_ | Add-Member -MemberType NoteProperty -Name \"ownerName\" -Value $userMap [ $_ . owner ]. displayName $_ | Add-Member -MemberType NoteProperty -Name \"ownerMail\" -Value $userMap [ $_ . owner ]. mail } #Step 5 - Create a CSV file with header row, flow information and owner email $flows | Export-Csv -Path \"$FLOWSCSV\" -NoTypeInformation } finally { CleanDistFolder } # if we are on macOS try opening the file with Excel if ( $IsMacOS ) { $answer = Read-Host -Prompt \"Open CSV file in Excel? (y/n)\" switch ( $answer ) { y { open -a \"/Applications/Microsoft Excel.app\" \"$DIR/$FLOWSCSV\" } Default { Write-Host \"Open $DIR/$FLOWSCSV to review report.\" } } } #!/usr/bin/env bash set -e DIR = \" $( cd \" $( dirname \" ${ BASH_SOURCE [0] } \" ) \" >/dev/null && pwd ) \" TMP_ENVIRONMENTS = ./tmp/environments.json TMP_FLOWS = ./tmp/flows.json TMP_OWNERS = ./tmp/owners.json TMP_MAPPEDFLOWS = ./tmp/mappedFlows.json FLOWSCSV = flows.csv JQ_MERGE_FILE = merge.jq function cleanup { #clean up the tmp files rm -rf tmp echo \"Cleaned tmp folder...\" } # Configure trap to call finish whenever EXIT is called to ensure cleanup of tmp trap cleanup EXIT CURRENT_USER = $( m365 status --output json | jq '.connectedAs' ) echo \"Logged in as $CURRENT_USER \" if [[ ! -z tmp ]] ; then echo \"Creating temporary folder for file manipulation...\" mkdir tmp fi #Step 1 - Get the default environment echo \"Querying for default Flow environment...\" DEFAULT_ENVIRONMENT = $( m365 flow environment list --output json | jq -r '.[] | select(.name | contains(\"' \"Default\" '\")) | .name' ) echo \"Found default environment $DEFAULT_ENVIRONMENT , querying Flows...\" #Step 2 - Get all of the flows using the cli and write flows json to a tmp file #See https://github.com/pnp/cli-microsoft365/issues/1266 for temp file usage reason m365 flow list --environment $DEFAULT_ENVIRONMENT --asAdmin --output json > $TMP_FLOWS #Step 3 - Get a unique list of the flow owners from the tmp file echo \"Flows found, searching for owner values...\" uniqueOwners = $( cat $TMP_FLOWS | jq -r 'map({userId: .properties.creator.userId}) | unique | .[] | .userId' ) #Get the owner count and loop to call Microsoft Graph and build owner mapping file ownerCount = $( cat $TMP_FLOWS | jq -r 'map({userId: .properties.creator.userId}) | unique | length' ) echo \"There are $ownerCount unique Flows owners.\" echo \"Building owner information json mapping file...\" echo \"[\" > $TMP_OWNERS i = 0 for ownerId in $uniqueOwners ; do echo \"Querying graph for userid $ownerId ...\" echo $( m365 aad user get --id $ownerId --output json ) >> $TMP_OWNERS if [[ $i -lt $ownerCount -1 ]] ; then echo \",\" >> $TMP_OWNERS fi i = $( expr $i + 1 ) done echo \"]\" >> $TMP_OWNERS #Step 4 - Use a jq module file to create a map of the creator.usedId's to {name, email} echo \"Mapping owners information...\" jq -n --argfile flows $TMP_FLOWS --argfile owners $TMP_OWNERS -f $JQ_MERGE_FILE >> $TMP_MAPPEDFLOWS #Step 5 - Create a CSV file with header row, flow information and owner email echo \"Building CSV file...\" jq -r '[\"FlowID\", \"DisplayName\", \"State\", \"Created\", \"LastModified\", \"Owner\", \"OwnerName\", \"OwnerMail\", \"Upn\", \"Trigger\", \"TriggerType\"], (.[] | [.name, .properties.displayName, .properties.state, .properties.createdTime, .properties.lastModifiedTime, .properties.creator.userId, .properties.creator.displayName, .properties.creator.mail, .properties.creator.userPrincipalName, .properties.definitionSummary.triggers[0].swaggerOperationId, .properties.definitionSummary.triggers[0].type]) | @csv' $TMP_MAPPEDFLOWS > $FLOWSCSV # if we are on macOS try opening the file with Excel if [[ \" $OSTYPE \" == \"darwin\" * ]] ; then echo \"Open CSV file in Excel? (y/n)?\" read answer if [ \" $answer \" ! = \" ${ answer #[Yy] } \" ] ; then open -a /Applications/Microsoft \\ Excel.app $DIR / $FLOWSCSV else echo \"Open $DIR /file.csv to review report.\" fi fi # Create a dictionary based on the $owner.id property from the owners array parameter ( $owners | map ( select ( .id ! = null )) | map ( {( .id ) : { displayName, userPrincipalName, mail }}) | add ) as $dict # Output each flow, append owner information from each entry using flow creator.userId property as the key | $flows | . [] .properties.creator | = . + $dict [ .userId ]","title":"Inventory Flows By Creator"},{"location":"sample-scripts/flow/inventory-flows-by-author/#inventory-flows-by-creator","text":"Author: Pete Skelly The Power Automate Admin Center provides a list of the Flows in your tenant, but there is no way to easily export Flows from the Flow admin center for governance activities. This script retrieves Flows from the Default Environment and maps creator information from Azure AD to list Flows by owner, state and trigger type. The bash version of this script uses an external file to process owner mapping. This is provided in the jq tab and should be saved to the same folder as the bash script and named merge.jq . PowerShell Bash jq #!/usr/local/bin/pwsh -File $DIR = Split-Path $script:MyInvocation . MyCommand . Path $TMP_DIR = \"./tmp\" $TMP_FLOWS = \"$TMP_DIR/flows.json\" $FLOWSCSV = \"flows.csv\" function CleanDistFolder { # Remove the dist folder as needed if ( Test-Path -Path \"$TMP_DIR\" -PathType Container ) { Remove-Item -Path \"$TMP_DIR\" -Recurse -Force -Confirm : $false -ErrorAction SilentlyContinue } } $CURRENT_USER = $( m365 status ). Split ( ':' )[ 1 ] Write-Host \"Logged in as $CURRENT_USER\" try { if ( -not ( Test-Path -Path \"$TMP_DIR\" -PathType Container )) { Write-Host \" Creating $TMP_DIR folder...\" New-Item -ItemType Directory -Path \"$TMP_DIR\" } #Step 1 - Get the default environment Write-Host \"Querying for default Flow environment...\" $flowEnvironments = m365 flow environment list - -output json | ConvertFrom-Json $defaultEnvironment = $flowEnvironments [ 0 ]. name Write-Host \"Found default environment $defaultEnvironment, querying Flows...\" # Step 2 - Get all of the flows using the cli and write flows json to a tmp file # Use a JMESPath query to filter the size of the file. See https://github.com/pnp/cli-microsoft365/issues/1266 m365 flow list - -environment $defaultEnvironment ` - -query '[].{name: name, displayName: properties.displayName,owner: properties.creator.userId, state: properties.state, created: properties.createdTime, lastModified: properties.lastModifiedTime, trigger: properties.definitionSummary.triggers[0].swaggerOperationId, triggerType: properties.definitionSummary.triggers[0].type }' - -asAdmin - -output json | Out-File \"$TMP_FLOWS\" -Encoding ASCII $flows = Get-Content \"$TMP_FLOWS\" | ConvertFrom-Json #Step 3 - Get a unique list of the flow owners from the tmp file Write-Host \"Flows found, searching for owner values...\" $uniqueOwners = $flows . owner | Sort-Object | Get-Unique Write-Host \"There are $( $uniqueOwners . Count ) unique Flows owners.\" Write-Host \"Building owner information mappings...\" #Step 4 - map properties.creator.userId's to {name, email} mapping hashtable Write-Host \"Querying graph for userids...\" $userMap = @{} $uniqueOwners | ForEach -Object { Write-Host \"Querying graph for userid $_...\" m365 aad user get - -id $_ - -output json | ConvertFrom-Json } | ForEach -Object { $userMap . Add ( $_ . id , @{ upn = $_ . userPrincipalName displayName = $_ . displayName mail = $_ . mail } ) } # And add the Owner information to each flow entry to get owner name and email Write-Host \"Mapping owner information...\" $flows | ForEach -Object { $_ | Add-Member -MemberType NoteProperty -Name \"upn\" -Value $userMap [ $_ . owner ]. upn $_ | Add-Member -MemberType NoteProperty -Name \"ownerName\" -Value $userMap [ $_ . owner ]. displayName $_ | Add-Member -MemberType NoteProperty -Name \"ownerMail\" -Value $userMap [ $_ . owner ]. mail } #Step 5 - Create a CSV file with header row, flow information and owner email $flows | Export-Csv -Path \"$FLOWSCSV\" -NoTypeInformation } finally { CleanDistFolder } # if we are on macOS try opening the file with Excel if ( $IsMacOS ) { $answer = Read-Host -Prompt \"Open CSV file in Excel? (y/n)\" switch ( $answer ) { y { open -a \"/Applications/Microsoft Excel.app\" \"$DIR/$FLOWSCSV\" } Default { Write-Host \"Open $DIR/$FLOWSCSV to review report.\" } } } #!/usr/bin/env bash set -e DIR = \" $( cd \" $( dirname \" ${ BASH_SOURCE [0] } \" ) \" >/dev/null && pwd ) \" TMP_ENVIRONMENTS = ./tmp/environments.json TMP_FLOWS = ./tmp/flows.json TMP_OWNERS = ./tmp/owners.json TMP_MAPPEDFLOWS = ./tmp/mappedFlows.json FLOWSCSV = flows.csv JQ_MERGE_FILE = merge.jq function cleanup { #clean up the tmp files rm -rf tmp echo \"Cleaned tmp folder...\" } # Configure trap to call finish whenever EXIT is called to ensure cleanup of tmp trap cleanup EXIT CURRENT_USER = $( m365 status --output json | jq '.connectedAs' ) echo \"Logged in as $CURRENT_USER \" if [[ ! -z tmp ]] ; then echo \"Creating temporary folder for file manipulation...\" mkdir tmp fi #Step 1 - Get the default environment echo \"Querying for default Flow environment...\" DEFAULT_ENVIRONMENT = $( m365 flow environment list --output json | jq -r '.[] | select(.name | contains(\"' \"Default\" '\")) | .name' ) echo \"Found default environment $DEFAULT_ENVIRONMENT , querying Flows...\" #Step 2 - Get all of the flows using the cli and write flows json to a tmp file #See https://github.com/pnp/cli-microsoft365/issues/1266 for temp file usage reason m365 flow list --environment $DEFAULT_ENVIRONMENT --asAdmin --output json > $TMP_FLOWS #Step 3 - Get a unique list of the flow owners from the tmp file echo \"Flows found, searching for owner values...\" uniqueOwners = $( cat $TMP_FLOWS | jq -r 'map({userId: .properties.creator.userId}) | unique | .[] | .userId' ) #Get the owner count and loop to call Microsoft Graph and build owner mapping file ownerCount = $( cat $TMP_FLOWS | jq -r 'map({userId: .properties.creator.userId}) | unique | length' ) echo \"There are $ownerCount unique Flows owners.\" echo \"Building owner information json mapping file...\" echo \"[\" > $TMP_OWNERS i = 0 for ownerId in $uniqueOwners ; do echo \"Querying graph for userid $ownerId ...\" echo $( m365 aad user get --id $ownerId --output json ) >> $TMP_OWNERS if [[ $i -lt $ownerCount -1 ]] ; then echo \",\" >> $TMP_OWNERS fi i = $( expr $i + 1 ) done echo \"]\" >> $TMP_OWNERS #Step 4 - Use a jq module file to create a map of the creator.usedId's to {name, email} echo \"Mapping owners information...\" jq -n --argfile flows $TMP_FLOWS --argfile owners $TMP_OWNERS -f $JQ_MERGE_FILE >> $TMP_MAPPEDFLOWS #Step 5 - Create a CSV file with header row, flow information and owner email echo \"Building CSV file...\" jq -r '[\"FlowID\", \"DisplayName\", \"State\", \"Created\", \"LastModified\", \"Owner\", \"OwnerName\", \"OwnerMail\", \"Upn\", \"Trigger\", \"TriggerType\"], (.[] | [.name, .properties.displayName, .properties.state, .properties.createdTime, .properties.lastModifiedTime, .properties.creator.userId, .properties.creator.displayName, .properties.creator.mail, .properties.creator.userPrincipalName, .properties.definitionSummary.triggers[0].swaggerOperationId, .properties.definitionSummary.triggers[0].type]) | @csv' $TMP_MAPPEDFLOWS > $FLOWSCSV # if we are on macOS try opening the file with Excel if [[ \" $OSTYPE \" == \"darwin\" * ]] ; then echo \"Open CSV file in Excel? (y/n)?\" read answer if [ \" $answer \" ! = \" ${ answer #[Yy] } \" ] ; then open -a /Applications/Microsoft \\ Excel.app $DIR / $FLOWSCSV else echo \"Open $DIR /file.csv to review report.\" fi fi # Create a dictionary based on the $owner.id property from the owners array parameter ( $owners | map ( select ( .id ! = null )) | map ( {( .id ) : { displayName, userPrincipalName, mail }}) | add ) as $dict # Output each flow, append owner information from each entry using flow creator.userId property as the key | $flows | . [] .properties.creator | = . + $dict [ .userId ]","title":"Inventory Flows By Creator"},{"location":"sample-scripts/flow/resubmit-all-failed-flow-runs/","tags":["flows"],"text":"Resubmit all failed flow runs for a flow in an environment \u00b6 Author: Mohamed Ashiq Faleel Have you ever been forced to resubmit lot of failed Power Automate flow runs manually? Microsoft 365 CLI cmdlets to the rescue, it will help you resubmit the flow runs automatically. This script will resubmit all failed flow runs of a Power Automate flow created in an environment. Pass the Flow environment id and the flow guid as parameter while running the script. PowerShell $flowEnvironment = $args [ 0 ] $flowGUID = $args [ 1 ] $flowRuns = m365 flow run list - -environment $flowEnvironment - -flow $flowGUID - -output json | ConvertFrom-Json foreach ( $run in $flowRuns ) { if ( $run . status -eq \"Failed\" ) { Write-Output \"Run details: \" $run #Resubmit all the failed flows m365 flow run resubmit - -environment $flowEnvironment - -flow $flowGUID - -name $run . name - -confirm Write-Output \"Run resubmitted successfully\" } }","title":"Resubmit all failed flow runs for a flow in an environment"},{"location":"sample-scripts/flow/resubmit-all-failed-flow-runs/#resubmit-all-failed-flow-runs-for-a-flow-in-an-environment","text":"Author: Mohamed Ashiq Faleel Have you ever been forced to resubmit lot of failed Power Automate flow runs manually? Microsoft 365 CLI cmdlets to the rescue, it will help you resubmit the flow runs automatically. This script will resubmit all failed flow runs of a Power Automate flow created in an environment. Pass the Flow environment id and the flow guid as parameter while running the script. PowerShell $flowEnvironment = $args [ 0 ] $flowGUID = $args [ 1 ] $flowRuns = m365 flow run list - -environment $flowEnvironment - -flow $flowGUID - -output json | ConvertFrom-Json foreach ( $run in $flowRuns ) { if ( $run . status -eq \"Failed\" ) { Write-Output \"Run details: \" $run #Resubmit all the failed flows m365 flow run resubmit - -environment $flowEnvironment - -flow $flowGUID - -name $run . name - -confirm Write-Output \"Run resubmitted successfully\" } }","title":"Resubmit all failed flow runs for a flow in an environment"},{"location":"sample-scripts/flow/search-flows-for-connection/","tags":["flows","reports"],"text":"Search flows for connections \u00b6 Author: Albert-Jan Schot Search all flows as, an administrator, for a specific search string and report results. This sample allows you to get a report of all flows that are connected to a specific site or list. The $searchString can be any value but results are the best when using a GUID or site collection URL. PowerShell Write-Output \"Retrieving all environments\" $environments = m365 flow environment list -o json | ConvertFrom-Json $searchString = \"15f5b014-9508-4941-b564-b4ab1b863a7a\" #listGuid $path = \"exportedflow.json\" ; ForEach ( $env in $environments ) { Write-Output \"Processing $( $env . displayName ) ...\" $flows = m365 flow list - -environment $env . name - -asAdmin -o json | ConvertFrom-Json ForEach ( $flow in $flows ) { Write-Output \"Processing $( $flow . displayName ) ...\" m365 flow export - -id $flow . name - -environment $env . name - -format json - -path $path $flowData = Get-Content -Path $path -ErrorAction SilentlyContinue if ( $null -ne $flowData ) { if ( $flowData . Contains ( $searchString )) { Write-Output $( $flow . displayName + \"contains your search string\" + $searchString ) Write-Output $flow . id } Remove-Item $path -Confirm : $false } } }","title":"Search flows for connections"},{"location":"sample-scripts/flow/search-flows-for-connection/#search-flows-for-connections","text":"Author: Albert-Jan Schot Search all flows as, an administrator, for a specific search string and report results. This sample allows you to get a report of all flows that are connected to a specific site or list. The $searchString can be any value but results are the best when using a GUID or site collection URL. PowerShell Write-Output \"Retrieving all environments\" $environments = m365 flow environment list -o json | ConvertFrom-Json $searchString = \"15f5b014-9508-4941-b564-b4ab1b863a7a\" #listGuid $path = \"exportedflow.json\" ; ForEach ( $env in $environments ) { Write-Output \"Processing $( $env . displayName ) ...\" $flows = m365 flow list - -environment $env . name - -asAdmin -o json | ConvertFrom-Json ForEach ( $flow in $flows ) { Write-Output \"Processing $( $flow . displayName ) ...\" m365 flow export - -id $flow . name - -environment $env . name - -format json - -path $path $flowData = Get-Content -Path $path -ErrorAction SilentlyContinue if ( $null -ne $flowData ) { if ( $flowData . Contains ( $searchString )) { Write-Output $( $flow . displayName + \"contains your search string\" + $searchString ) Write-Output $flow . id } Remove-Item $path -Confirm : $false } } }","title":"Search flows for connections"},{"location":"sample-scripts/graph/call-graph/","text":"Authenticate with and call the Microsoft Graph \u00b6 Author: Garry Trinder Calling the Microsoft Graph can be done using the m365 request command. m365 request --url https://graph.microsoft.com/v1.0/me Another route would be to use shell-specific webrequest tooling. To do this, obtain a new access token for the Microsoft Graph and use it in an HTTP request. PowerShell Bash $token = m365 util accesstoken get - -resource https :// graph . microsoft . com - -new - -output text $me = Invoke-RestMethod -Uri https :// graph . microsoft . com / v1 . 0 / me -Headers @{ \"Authorization\" = \"Bearer $token\" } $me #!/bin/bash # requires jq: https://stedolan.github.io/jq/ token = ` m365 util accesstoken get --resource https://graph.microsoft.com --new --output text ` me = ` curl https://graph.microsoft.com/v1.0/me -H \"Authorization: Bearer $token \" ` echo $me | jq","title":"Authenticate with and call the Microsoft Graph"},{"location":"sample-scripts/graph/call-graph/#authenticate-with-and-call-the-microsoft-graph","text":"Author: Garry Trinder Calling the Microsoft Graph can be done using the m365 request command. m365 request --url https://graph.microsoft.com/v1.0/me Another route would be to use shell-specific webrequest tooling. To do this, obtain a new access token for the Microsoft Graph and use it in an HTTP request. PowerShell Bash $token = m365 util accesstoken get - -resource https :// graph . microsoft . com - -new - -output text $me = Invoke-RestMethod -Uri https :// graph . microsoft . com / v1 . 0 / me -Headers @{ \"Authorization\" = \"Bearer $token\" } $me #!/bin/bash # requires jq: https://stedolan.github.io/jq/ token = ` m365 util accesstoken get --resource https://graph.microsoft.com --new --output text ` me = ` curl https://graph.microsoft.com/v1.0/me -H \"Authorization: Bearer $token \" ` echo $me | jq","title":"Authenticate with and call the Microsoft Graph"},{"location":"sample-scripts/planner/add-multiple-tasks/","tags":["migration","tasks"],"text":"Add multiple tasks in Planner \u00b6 Author: Veronique Lengelle Add multiple tasks using a CSV file \u00b6 This script will create multiple tasks to a Planner plan from the information provided in your csv file. For this particular example, the csv file should contain the following columns: TaskName , Description , PlanID , BucketName , StartDateTime , AssignedToUserNames . PowerShell $m365Status = m365 status - -output text if ( $m365Status -eq \"Logged Out\" ) { # Connection to Microsoft 365 m365 login } #Import your CSV file $csvTasks = Import-Csv -Path \"<YOUR-CSV-PATH>\" foreach ( $task in $csvTasks ){ m365 planner task add - -title \" $( $task . TaskName ) \" - -description \" $( $task . Description ) \" - -planId \" $( $task . PlanID ) \" - -bucketName \" $( $task . BucketName ) \" - -startDateTime \" $( $task . StartDateTime ) \" - -assignedToUserNames \" $( $task . AssignedToUserNames ) \" } Create multiple tasks using an in-script hashtable \u00b6 PowerShell #Create multiple tasks onto a single Planner bucket with in-script tasks $allMyTasks = @{ Taks1 = @{ TaskName = \"Task 1\" Description = \"Description 1\" PlanID = \"fdmtzs0rkkik0ILStJRu12345678\" BucketName = \"SharePoint\" StartDateTime = \"2022-06-01T09:30:00.000Z\" DueDateTime = \"2022-06-02T17:30:00.000Z\" AssignedToUserNames = \"veronique@contoso.onmicrosoft.com\" } Task2 = @{ TaskName = \"Task 2\" Description = \"Description 2\" PlanID = \"fdmtzs0rkkik0ILStJRu12345678\" BucketName = \"PowerApps\" StartDateTime = \"2022-06-05T09:30:00.000Z\" DueDateTime = \"2022-06-07T17:30:00.000Z\" AssignedToUserNames = \"veronique@contoso.onmicrosoft.com, jdoe@contoso.onmicrosoft.com\" } } foreach ( $task in $allMyTasks . Values ){ m365 planner task add - -title \" $( $task . TaskName ) \" - -description \" $( $task . Description ) \" - -planId \" $( $task . PlanID ) \" - -bucketName \" $( $task . BucketName ) \" - -startDateTime \" $( $task . StartDateTime ) \" - -dueDateTime \" $( $task . DueDateTime ) \" - -assignedToUserNames \" $( $task . AssignedToUserNames ) \" }","title":"Add multiple tasks in Planner"},{"location":"sample-scripts/planner/add-multiple-tasks/#add-multiple-tasks-in-planner","text":"Author: Veronique Lengelle","title":"Add multiple tasks in Planner"},{"location":"sample-scripts/planner/add-multiple-tasks/#add-multiple-tasks-using-a-csv-file","text":"This script will create multiple tasks to a Planner plan from the information provided in your csv file. For this particular example, the csv file should contain the following columns: TaskName , Description , PlanID , BucketName , StartDateTime , AssignedToUserNames . PowerShell $m365Status = m365 status - -output text if ( $m365Status -eq \"Logged Out\" ) { # Connection to Microsoft 365 m365 login } #Import your CSV file $csvTasks = Import-Csv -Path \"<YOUR-CSV-PATH>\" foreach ( $task in $csvTasks ){ m365 planner task add - -title \" $( $task . TaskName ) \" - -description \" $( $task . Description ) \" - -planId \" $( $task . PlanID ) \" - -bucketName \" $( $task . BucketName ) \" - -startDateTime \" $( $task . StartDateTime ) \" - -assignedToUserNames \" $( $task . AssignedToUserNames ) \" }","title":"Add multiple tasks using a CSV file"},{"location":"sample-scripts/planner/add-multiple-tasks/#create-multiple-tasks-using-an-in-script-hashtable","text":"PowerShell #Create multiple tasks onto a single Planner bucket with in-script tasks $allMyTasks = @{ Taks1 = @{ TaskName = \"Task 1\" Description = \"Description 1\" PlanID = \"fdmtzs0rkkik0ILStJRu12345678\" BucketName = \"SharePoint\" StartDateTime = \"2022-06-01T09:30:00.000Z\" DueDateTime = \"2022-06-02T17:30:00.000Z\" AssignedToUserNames = \"veronique@contoso.onmicrosoft.com\" } Task2 = @{ TaskName = \"Task 2\" Description = \"Description 2\" PlanID = \"fdmtzs0rkkik0ILStJRu12345678\" BucketName = \"PowerApps\" StartDateTime = \"2022-06-05T09:30:00.000Z\" DueDateTime = \"2022-06-07T17:30:00.000Z\" AssignedToUserNames = \"veronique@contoso.onmicrosoft.com, jdoe@contoso.onmicrosoft.com\" } } foreach ( $task in $allMyTasks . Values ){ m365 planner task add - -title \" $( $task . TaskName ) \" - -description \" $( $task . Description ) \" - -planId \" $( $task . PlanID ) \" - -bucketName \" $( $task . BucketName ) \" - -startDateTime \" $( $task . StartDateTime ) \" - -dueDateTime \" $( $task . DueDateTime ) \" - -assignedToUserNames \" $( $task . AssignedToUserNames ) \" }","title":"Create multiple tasks using an in-script hashtable"},{"location":"sample-scripts/powerplatform/list-environments-flows-apps/","tags":["apps","flows","reports"],"text":"List all Power Platform Environments and their Flows and Apps \u00b6 Author: Albert-Jan Schot This script will retrieve all environments as an Administrator and loop through all Flows and Apps to provide you with a report indicating how much Power Platform components are in use in the tenant. PowerShell $m365Status = m365 status if ( $m365Status -eq \"Logged Out\" ) { # Connection to Microsoft 365 m365 login } $environments = m365 pp environment list - -asAdmin | ConvertFrom-Json Write-Host -f Green \"Processing $( $environments . Count ) environments\" ; $results = @() $environments | ForEach -Object { Write-Host -f Green \"Processing environment: $( $_ . displayName ) \" $envId = $( $_ . name ) $results += [pscustomobject] @{ type = \"environment\" id = $envId displayName = $_ . displayName envId = $envId lifeCycleId = $_ . properties . environmentSku status = $_ . properties . isDefault ? \"Default\" : \"NotDefault\" createdByUpn = $_ . properties . createdBy . userPrincipalName ? $_ . properties . createdBy . userPrincipalName : \"\" } $apps = m365 pa app list - -environment $envId - -asAdmin | ConvertFrom-Json Write-Host -f Green \"Processing: $( $apps . Count ) apps\" $apps | ForEach -Object { $results += [pscustomobject] @{ type = $_ . appType id = $_ . name displayName = $_ . displayName envId = $envId lifeCycleId = $_ . properties . lifeCycleId status = $_ . properties . status createdByUpn = $_ . properties . createdBy . userPrincipalName } } $flows = m365 flow list - -environment $envId - -asAdmin | ConvertFrom-Json Write-Host -f Green \"Processing: $( $flows . Count ) flows\" $flows | ForEach -Object { $createUser = m365 aad user get - -id $_ . properties . creator . userId | ConvertFrom-Json $results += [pscustomobject] @{ type = \"flow\" id = $_ . name displayName = $_ . displayName envId = $envId lifeCycleId = $_ . properties . lifeCycleId status = $_ . properties . state createdByUpn = $createUser . userPrincipalName } } } $results | Export-Csv -Path .\\ cli-powerplatform-report . csv -NoTypeInformation Write-Host -f Green \"Done\"","title":"List all Power Platform Environments and their Flows and Apps"},{"location":"sample-scripts/powerplatform/list-environments-flows-apps/#list-all-power-platform-environments-and-their-flows-and-apps","text":"Author: Albert-Jan Schot This script will retrieve all environments as an Administrator and loop through all Flows and Apps to provide you with a report indicating how much Power Platform components are in use in the tenant. PowerShell $m365Status = m365 status if ( $m365Status -eq \"Logged Out\" ) { # Connection to Microsoft 365 m365 login } $environments = m365 pp environment list - -asAdmin | ConvertFrom-Json Write-Host -f Green \"Processing $( $environments . Count ) environments\" ; $results = @() $environments | ForEach -Object { Write-Host -f Green \"Processing environment: $( $_ . displayName ) \" $envId = $( $_ . name ) $results += [pscustomobject] @{ type = \"environment\" id = $envId displayName = $_ . displayName envId = $envId lifeCycleId = $_ . properties . environmentSku status = $_ . properties . isDefault ? \"Default\" : \"NotDefault\" createdByUpn = $_ . properties . createdBy . userPrincipalName ? $_ . properties . createdBy . userPrincipalName : \"\" } $apps = m365 pa app list - -environment $envId - -asAdmin | ConvertFrom-Json Write-Host -f Green \"Processing: $( $apps . Count ) apps\" $apps | ForEach -Object { $results += [pscustomobject] @{ type = $_ . appType id = $_ . name displayName = $_ . displayName envId = $envId lifeCycleId = $_ . properties . lifeCycleId status = $_ . properties . status createdByUpn = $_ . properties . createdBy . userPrincipalName } } $flows = m365 flow list - -environment $envId - -asAdmin | ConvertFrom-Json Write-Host -f Green \"Processing: $( $flows . Count ) flows\" $flows | ForEach -Object { $createUser = m365 aad user get - -id $_ . properties . creator . userId | ConvertFrom-Json $results += [pscustomobject] @{ type = \"flow\" id = $_ . name displayName = $_ . displayName envId = $envId lifeCycleId = $_ . properties . lifeCycleId status = $_ . properties . state createdByUpn = $createUser . userPrincipalName } } } $results | Export-Csv -Path .\\ cli-powerplatform-report . csv -NoTypeInformation Write-Host -f Green \"Done\"","title":"List all Power Platform Environments and their Flows and Apps"},{"location":"sample-scripts/spo/add-app-catalog/","tags":["provisioning","sites"],"text":"Add App Catalog to SharePoint site \u00b6 Author: David Ramalho When you just want to deploy certain SharePoint solution to a specific site, it's required to create an app catalog for that site. The below script will create it for the site. In the article referenced above you can check where you can use App catalog for the site instead of global app catalog. PowerShell Bash $site = \"https://contoso.sharepoint.com/sites/site\" m365 login m365 spo site appcatalog add - -url $site Write-output \"App Catalog Created on \" $site #!/bin/bash site = https://tricks365.sharepoint.com/sites/site m365 login m365 spo site appcatalog add --url $site echo \"App Catalog Created on $site \"","title":"Add App Catalog to SharePoint site"},{"location":"sample-scripts/spo/add-app-catalog/#add-app-catalog-to-sharepoint-site","text":"Author: David Ramalho When you just want to deploy certain SharePoint solution to a specific site, it's required to create an app catalog for that site. The below script will create it for the site. In the article referenced above you can check where you can use App catalog for the site instead of global app catalog. PowerShell Bash $site = \"https://contoso.sharepoint.com/sites/site\" m365 login m365 spo site appcatalog add - -url $site Write-output \"App Catalog Created on \" $site #!/bin/bash site = https://tricks365.sharepoint.com/sites/site m365 login m365 spo site appcatalog add --url $site echo \"App Catalog Created on $site \"","title":"Add App Catalog to SharePoint site"},{"location":"sample-scripts/spo/add-custom-clientside-webpart-to-modern-page/","tags":["provisioning","migration","pages"],"text":"Add custom client-side web part to modern page \u00b6 Author: Yannick Plenevaux You've built an amazing new web part and now you want to programmatically add it to a modern page. This sample helps you add your web part to the page with your custom properties that might be dynamic according to your script. PowerShell Bash $site = \"https://contoso.sharepoint.com/sites/site1\" $pageName = \"AModernPage.aspx\" $webPartId = \"af660fc1-c09b-4c15-b093-2b74b047286b\" $choice1 = \"Choice 1\" $choice2 = \"Choice 2\" # Put all the web part properties in a PowerShell hashtable $webPartProps = @{ myChoices = @( $choice1 , $choice2 ); description = 'My \"Awesome\" web part' ; }; # Build JSON string from PowerShell hashtable object $webPartPropsJson = $webPartProps | ConvertTo-Json -Compress # Make sure to add the backticks, double the JSON double-quotes and escape double quotes in properties'values $webPartPropsJson = '`\"{0}\"`' -f $webPartPropsJson . Replace ( '\\' , '\\\\' ). Replace ( '\"' , '\"\"' ) m365 spo page clientsidewebpart add -u $site -n $pageName - -webPartId $webPartId - -webPartProperties $webPartPropsJson #!/bin/bash site = https://contoso.sharepoint.com/sites/site1 pageName = AModernPage.aspx webPartId = af660fc1-c09b-4c15-b093-2b74b047286b choice1 = 'Choice X' choice2 = 'Choice Z' description = 'My \"Super Awesome\" web part' ; # Build the JSON including your dynamic values with printf # For each argument that might be dynamic, we escape the double quotes \" with \\\" # Make sure not to ommit the surrounding back ticks and surrounding double quotes for each arguments printf -v webPartPropsJson '`{\"myChoices\":[\"%s\",\"%s\"], \"description\":\"%s\"}`' \" ${ choice1 // \\\" / \\\\\\\" } \" \" ${ choice2 // \\\" / \\\\\\\" } \" \" ${ description // \\\" / \\\\\\\" } \" m365 spo page clientsidewebpart add -u $site -n $pageName --webPartId $webPartId --webPartProperties $webPartPropsJson","title":"Add custom client-side web part to modern page"},{"location":"sample-scripts/spo/add-custom-clientside-webpart-to-modern-page/#add-custom-client-side-web-part-to-modern-page","text":"Author: Yannick Plenevaux You've built an amazing new web part and now you want to programmatically add it to a modern page. This sample helps you add your web part to the page with your custom properties that might be dynamic according to your script. PowerShell Bash $site = \"https://contoso.sharepoint.com/sites/site1\" $pageName = \"AModernPage.aspx\" $webPartId = \"af660fc1-c09b-4c15-b093-2b74b047286b\" $choice1 = \"Choice 1\" $choice2 = \"Choice 2\" # Put all the web part properties in a PowerShell hashtable $webPartProps = @{ myChoices = @( $choice1 , $choice2 ); description = 'My \"Awesome\" web part' ; }; # Build JSON string from PowerShell hashtable object $webPartPropsJson = $webPartProps | ConvertTo-Json -Compress # Make sure to add the backticks, double the JSON double-quotes and escape double quotes in properties'values $webPartPropsJson = '`\"{0}\"`' -f $webPartPropsJson . Replace ( '\\' , '\\\\' ). Replace ( '\"' , '\"\"' ) m365 spo page clientsidewebpart add -u $site -n $pageName - -webPartId $webPartId - -webPartProperties $webPartPropsJson #!/bin/bash site = https://contoso.sharepoint.com/sites/site1 pageName = AModernPage.aspx webPartId = af660fc1-c09b-4c15-b093-2b74b047286b choice1 = 'Choice X' choice2 = 'Choice Z' description = 'My \"Super Awesome\" web part' ; # Build the JSON including your dynamic values with printf # For each argument that might be dynamic, we escape the double quotes \" with \\\" # Make sure not to ommit the surrounding back ticks and surrounding double quotes for each arguments printf -v webPartPropsJson '`{\"myChoices\":[\"%s\",\"%s\"], \"description\":\"%s\"}`' \" ${ choice1 // \\\" / \\\\\\\" } \" \" ${ choice2 // \\\" / \\\\\\\" } \" \" ${ description // \\\" / \\\\\\\" } \" m365 spo page clientsidewebpart add -u $site -n $pageName --webPartId $webPartId --webPartProperties $webPartPropsJson","title":"Add custom client-side web part to modern page"},{"location":"sample-scripts/spo/add-multiple-folders-in-libraries-using-csv-file/","tags":["files","provisioning","libraries"],"text":"Add multiple folders in libraries using a csv file \u00b6 Author: Veronique Lengelle Add multiple folders in different libraries in a specific site \u00b6 Below is an example of the format needed for your .csv file: libName folderName Customers Contracts Support Roadmaps Support Analysis Important Make sure your target libraries contained in the file do exist in SharePoint Online. PowerShell <# .SYNOPSIS Create multiple folders in different libraries. .DESCRIPTION Create multiple folders in different libraries in a specific site using a .csv file. .EXAMPLE PS C:\\> Add-FoldersToMultipleLibraries -siteUrl \"https://contoso.sharepoint.com/sites/Marketing\" -filePathToImport \"C:\\myCSVFile.csv\" This script will create the folders (not nested) into the libraries provided in the .csv file. .INPUTS Inputs (if any) .OUTPUTS Output (if any) .NOTES Your .csv file MUST contain headers called libName and folderName. If you change those headers then make sure to amend the script. Also make sure that your libraries ALREADY exist. #> function Add-FoldersToMultipleLibraries { [ CmdletBinding ()] param ( [ Parameter ( Mandatory = $true , HelpMessage = \"Full URL of the target SharePoint Online site\" )] [string] $site , [ Parameter ( Mandatory = $true , HelpMessage = \"Full path of your .csv file\" )] [string] $filePathToImport ) #Create the folders $csvFile = Import-Csv -Path $filePathToImport foreach ( $row in $csvFile ){ Write-Host \"Creating:\" $row . folderName -f Yellow m365 spo folder add - -webUrl $site - -parentFolderUrl $( $row . libName ) - -name $( $row . folderName ) } } Add multiple folders in different libraries AND in different sites \u00b6 Below is an example of the format needed for your .csv file: libName folderName site Customers Contracts https://contoso.sharepoint.com/sites/site1 Support Roadmaps https://contoso.sharepoint.com/sites/site2 Support Analysis https://contoso.sharepoint.com/sites/site2 Important Make sure your target libraries & sites contained in the file do exist in SharePoint Online. PowerShell <# .SYNOPSIS Create multiple folders in different libraries and in different sites. .DESCRIPTION Create multiple folders in different libraries and in different SharePoint sites using a .csv file. .EXAMPLE PS C:\\> Add-FoldersToMultipleLibrariesInMultipleSites -filePathToImport 'C:\\myCSVFile.csv' This script will create the folders (not nested) into the libraries and sites provided in the .csv file. .INPUTS Inputs (if any) .OUTPUTS Output (if any) .NOTES Your .csv file MUST contain headers called libName, folderName, and site. If you change those headers then make sure to amend the script. Also make sure that your libraries & sites ALREADY exist. #> function Add-FoldersToMultipleLibrariesInMultipleSites { [ CmdletBinding ()] param ( [ Parameter ( Mandatory = $true , HelpMessage = \"Full path of your .csv file\" )] [string] $filePathToImport ) #Create the folders $csvFile = Import-Csv -Path $filePathToImport foreach ( $row in $csvFile ) { Write-Host \"Creating:\" $row . folderName -f Yellow m365 spo folder add - -webUrl $( $row . site ) - -parentFolderUrl $( $row . libName ) - -name $( $row . folderName ) } }","title":"Add multiple folders in libraries using a csv file"},{"location":"sample-scripts/spo/add-multiple-folders-in-libraries-using-csv-file/#add-multiple-folders-in-libraries-using-a-csv-file","text":"Author: Veronique Lengelle","title":"Add multiple folders in libraries using a csv file"},{"location":"sample-scripts/spo/add-multiple-folders-in-libraries-using-csv-file/#add-multiple-folders-in-different-libraries-in-a-specific-site","text":"Below is an example of the format needed for your .csv file: libName folderName Customers Contracts Support Roadmaps Support Analysis Important Make sure your target libraries contained in the file do exist in SharePoint Online. PowerShell <# .SYNOPSIS Create multiple folders in different libraries. .DESCRIPTION Create multiple folders in different libraries in a specific site using a .csv file. .EXAMPLE PS C:\\> Add-FoldersToMultipleLibraries -siteUrl \"https://contoso.sharepoint.com/sites/Marketing\" -filePathToImport \"C:\\myCSVFile.csv\" This script will create the folders (not nested) into the libraries provided in the .csv file. .INPUTS Inputs (if any) .OUTPUTS Output (if any) .NOTES Your .csv file MUST contain headers called libName and folderName. If you change those headers then make sure to amend the script. Also make sure that your libraries ALREADY exist. #> function Add-FoldersToMultipleLibraries { [ CmdletBinding ()] param ( [ Parameter ( Mandatory = $true , HelpMessage = \"Full URL of the target SharePoint Online site\" )] [string] $site , [ Parameter ( Mandatory = $true , HelpMessage = \"Full path of your .csv file\" )] [string] $filePathToImport ) #Create the folders $csvFile = Import-Csv -Path $filePathToImport foreach ( $row in $csvFile ){ Write-Host \"Creating:\" $row . folderName -f Yellow m365 spo folder add - -webUrl $site - -parentFolderUrl $( $row . libName ) - -name $( $row . folderName ) } }","title":"Add multiple folders in different libraries in a specific site"},{"location":"sample-scripts/spo/add-multiple-folders-in-libraries-using-csv-file/#add-multiple-folders-in-different-libraries-and-in-different-sites","text":"Below is an example of the format needed for your .csv file: libName folderName site Customers Contracts https://contoso.sharepoint.com/sites/site1 Support Roadmaps https://contoso.sharepoint.com/sites/site2 Support Analysis https://contoso.sharepoint.com/sites/site2 Important Make sure your target libraries & sites contained in the file do exist in SharePoint Online. PowerShell <# .SYNOPSIS Create multiple folders in different libraries and in different sites. .DESCRIPTION Create multiple folders in different libraries and in different SharePoint sites using a .csv file. .EXAMPLE PS C:\\> Add-FoldersToMultipleLibrariesInMultipleSites -filePathToImport 'C:\\myCSVFile.csv' This script will create the folders (not nested) into the libraries and sites provided in the .csv file. .INPUTS Inputs (if any) .OUTPUTS Output (if any) .NOTES Your .csv file MUST contain headers called libName, folderName, and site. If you change those headers then make sure to amend the script. Also make sure that your libraries & sites ALREADY exist. #> function Add-FoldersToMultipleLibrariesInMultipleSites { [ CmdletBinding ()] param ( [ Parameter ( Mandatory = $true , HelpMessage = \"Full path of your .csv file\" )] [string] $filePathToImport ) #Create the folders $csvFile = Import-Csv -Path $filePathToImport foreach ( $row in $csvFile ) { Write-Host \"Creating:\" $row . folderName -f Yellow m365 spo folder add - -webUrl $( $row . site ) - -parentFolderUrl $( $row . libName ) - -name $( $row . folderName ) } }","title":"Add multiple folders in different libraries AND in different sites"},{"location":"sample-scripts/spo/add-multiple-lists-in-multiple-sites/","tags":["provisioning","libraries"],"text":"Add multiple lists in multiple sites \u00b6 Author: Sudharsan Kesavanarayanan PowerShell <# .SYNOPSIS Create multiple lists in multiple sites. .DESCRIPTION Create multiple lists in multiple sites and also to map the content type. .EXAMPLE PS C:\\> Add-ListsAndMapContentTypes -SiteUrls \"/Sites/Site1\", \"/Sites/Site2\" -Lists \"List1\", \"List2\" .INPUTS Inputs (if any) .OUTPUTS Output (if any) .NOTES Below are the 2 global variables that have to be updated $weburl = \"https://tenantname.sharepoint.com\" $ContentTypeId = '<content type id>' #> $weburl = \"https://tenantname.sharepoint.com\" $ContentTypeId = '<content type id>' function Add-ListsAndMapContentTypes ( [ Parameter ( Mandatory = $true )] [string[]] $SiteUrls , [ Parameter ( Mandatory = $true )] [string[]] $Lists ) { $SiteUrls | ForEach -Object { [string] $FinalSiteUrl = $weburl + $_ . ToString () Write-Output \"Started creating lists for '$FinalSiteUrl'\" Write-Output \"\" $Lists | ForEach -Object { [string] $listTitle = $_ . ToString () Write-Output \"Checking and creating list '$listTitle'\" $list = m365 spo list get -u $FinalSiteUrl -t $listTitle -o 'json' | ConvertFrom-Json if ( $null -eq $list ) { m365 spo list add -t $listTitle - -baseTemplate DocumentLibrary -u $FinalSiteUrl - -contentTypesEnabled true - -enableVersioning true - -listExperienceOptions 1 - -onQuickLaunch false $list = m365 spo list get -t $listTitle -u $FinalSiteUrl - -properties \"Title,Id\" - -output 'json' | ConvertFrom-Json m365 spo list contenttype add -l $list . Id -u $FinalSiteUrl -c $ContentTypeId - -output 'json' | ConvertFrom-Json $listContentType = m365 spo list contenttype list -l $list . Id -u $FinalSiteUrl - -output 'json' | ConvertFrom-Json m365 spo list contenttype default set -l $list . Id -u $FinalSiteUrl -c $listContentType . StringId [ 2 ] - -output 'json' | ConvertFrom-Json Write-Output \"Successfully created list '$listTitle'\" } else { Write-Output \"List '$listTitle' already exists\" } Write-Output \"----------------------\" } Write-Output \"\" } } Write-Host \"Ensure logged in\" $m365Status = m365 status - -output text if ( $m365Status -eq \"Logged Out\" ) { Write-Host \"Logging in the User!\" m365 login - -authType browser }","title":"Add multiple lists in multiple sites"},{"location":"sample-scripts/spo/add-multiple-lists-in-multiple-sites/#add-multiple-lists-in-multiple-sites","text":"Author: Sudharsan Kesavanarayanan PowerShell <# .SYNOPSIS Create multiple lists in multiple sites. .DESCRIPTION Create multiple lists in multiple sites and also to map the content type. .EXAMPLE PS C:\\> Add-ListsAndMapContentTypes -SiteUrls \"/Sites/Site1\", \"/Sites/Site2\" -Lists \"List1\", \"List2\" .INPUTS Inputs (if any) .OUTPUTS Output (if any) .NOTES Below are the 2 global variables that have to be updated $weburl = \"https://tenantname.sharepoint.com\" $ContentTypeId = '<content type id>' #> $weburl = \"https://tenantname.sharepoint.com\" $ContentTypeId = '<content type id>' function Add-ListsAndMapContentTypes ( [ Parameter ( Mandatory = $true )] [string[]] $SiteUrls , [ Parameter ( Mandatory = $true )] [string[]] $Lists ) { $SiteUrls | ForEach -Object { [string] $FinalSiteUrl = $weburl + $_ . ToString () Write-Output \"Started creating lists for '$FinalSiteUrl'\" Write-Output \"\" $Lists | ForEach -Object { [string] $listTitle = $_ . ToString () Write-Output \"Checking and creating list '$listTitle'\" $list = m365 spo list get -u $FinalSiteUrl -t $listTitle -o 'json' | ConvertFrom-Json if ( $null -eq $list ) { m365 spo list add -t $listTitle - -baseTemplate DocumentLibrary -u $FinalSiteUrl - -contentTypesEnabled true - -enableVersioning true - -listExperienceOptions 1 - -onQuickLaunch false $list = m365 spo list get -t $listTitle -u $FinalSiteUrl - -properties \"Title,Id\" - -output 'json' | ConvertFrom-Json m365 spo list contenttype add -l $list . Id -u $FinalSiteUrl -c $ContentTypeId - -output 'json' | ConvertFrom-Json $listContentType = m365 spo list contenttype list -l $list . Id -u $FinalSiteUrl - -output 'json' | ConvertFrom-Json m365 spo list contenttype default set -l $list . Id -u $FinalSiteUrl -c $listContentType . StringId [ 2 ] - -output 'json' | ConvertFrom-Json Write-Output \"Successfully created list '$listTitle'\" } else { Write-Output \"List '$listTitle' already exists\" } Write-Output \"----------------------\" } Write-Output \"\" } } Write-Host \"Ensure logged in\" $m365Status = m365 status - -output text if ( $m365Status -eq \"Logged Out\" ) { Write-Host \"Logging in the User!\" m365 login - -authType browser }","title":"Add multiple lists in multiple sites"},{"location":"sample-scripts/spo/add-site-collection-admin-using-csv-file/","tags":["users","security"],"text":"Add a Site Collection Admin using a csv file \u00b6 Warning When you decide to add users for all your Site Collections, you can't simply run through all the sites in your tenant. Why? Because what you \"see\" in the SPO admin center, is not reflecting what you really have. There a few Site Collections that are not visible. A few examples would be: Search My Site (contoso-my.sharepoint.com) sites created with Private Channels Sites created with Private Channels are not (yet?) visible in the SharePoint Online admin center, so adding users as Site Collection Admins into those could cause chaos! It's safer to get a list of all your sites, and keep the intended ones in your csv file to feed the script. Get all the Site Collections in your tenant \u00b6 To get all the Site Collections in your tenant and export to a .csv file, you can run the following: PowerShell $allSites = m365 spo site list - -query \"[?Template!='SRCHCEN#0']\" | ConvertFrom-Json $results = @() foreach ( $site in $allSites ){ $results += [pscustomobject][ordered] @{ Title = $site . Title Url = $site . Url Template = $site . Template } } $results | Export-Csv -Path \"<YOUR-CSV-FILE-PATH>\" The script above has a query to ignore the Search site collection by filtering with the template code. If for example you wish to only get the sites that have been created with Private Channels, you could amend your query as follows: PowerShell $privateChannelSites = m365 spo site list - -query \"[?Template=='TEAMCHANNEL#0']\" | ConvertFrom-Json Add the user as Site Collection Admin \u00b6 Once you've got the .csv file from the script above, filter it to your needs to keep only the targeted sites, and use it in the script below. Note The script will add the user as a \"site admin\" on classic and non group-connected sites, or a an \"additional admin\" in group-connected sites (and not as a group Member). PowerShell $csvSites = Import-Csv -Path \"<YOUR-CSV-FILE-PATH>\" $UserToAdd = \"john.smith@contoso.com\" ## Change to your user $siteCount = $csvSites . Count Write-Host \"Processing $siteCount sites...\" -f Cyan #Loop through the sites in the csv file foreach ( $site in $csvSites ){ Write-Host \"Going through $( $site . Title ) \" $users = m365 spo user list - -webUrl $site . Url -o json | ConvertFrom-Json $admins = $users . value | Where-Object { $_ . IsSiteAdmin -eq $true } if ( $admins . Email -eq $UserToAdd ) { Write-Host \"User $( $UserToAdd ) is already an Admin in $( $site . Title ) .\" -f Green } else { Write-Host \"Adding $( $UserToAdd ) to $( $site . Title ) . \" -f Magenta m365 spo site set - -url $site . Url - -owners $UserToAdd } }","title":"Add a Site Collection Admin using a csv file"},{"location":"sample-scripts/spo/add-site-collection-admin-using-csv-file/#add-a-site-collection-admin-using-a-csv-file","text":"Warning When you decide to add users for all your Site Collections, you can't simply run through all the sites in your tenant. Why? Because what you \"see\" in the SPO admin center, is not reflecting what you really have. There a few Site Collections that are not visible. A few examples would be: Search My Site (contoso-my.sharepoint.com) sites created with Private Channels Sites created with Private Channels are not (yet?) visible in the SharePoint Online admin center, so adding users as Site Collection Admins into those could cause chaos! It's safer to get a list of all your sites, and keep the intended ones in your csv file to feed the script.","title":"Add a Site Collection Admin using a csv file"},{"location":"sample-scripts/spo/add-site-collection-admin-using-csv-file/#get-all-the-site-collections-in-your-tenant","text":"To get all the Site Collections in your tenant and export to a .csv file, you can run the following: PowerShell $allSites = m365 spo site list - -query \"[?Template!='SRCHCEN#0']\" | ConvertFrom-Json $results = @() foreach ( $site in $allSites ){ $results += [pscustomobject][ordered] @{ Title = $site . Title Url = $site . Url Template = $site . Template } } $results | Export-Csv -Path \"<YOUR-CSV-FILE-PATH>\" The script above has a query to ignore the Search site collection by filtering with the template code. If for example you wish to only get the sites that have been created with Private Channels, you could amend your query as follows: PowerShell $privateChannelSites = m365 spo site list - -query \"[?Template=='TEAMCHANNEL#0']\" | ConvertFrom-Json","title":"Get all the Site Collections in your tenant"},{"location":"sample-scripts/spo/add-site-collection-admin-using-csv-file/#add-the-user-as-site-collection-admin","text":"Once you've got the .csv file from the script above, filter it to your needs to keep only the targeted sites, and use it in the script below. Note The script will add the user as a \"site admin\" on classic and non group-connected sites, or a an \"additional admin\" in group-connected sites (and not as a group Member). PowerShell $csvSites = Import-Csv -Path \"<YOUR-CSV-FILE-PATH>\" $UserToAdd = \"john.smith@contoso.com\" ## Change to your user $siteCount = $csvSites . Count Write-Host \"Processing $siteCount sites...\" -f Cyan #Loop through the sites in the csv file foreach ( $site in $csvSites ){ Write-Host \"Going through $( $site . Title ) \" $users = m365 spo user list - -webUrl $site . Url -o json | ConvertFrom-Json $admins = $users . value | Where-Object { $_ . IsSiteAdmin -eq $true } if ( $admins . Email -eq $UserToAdd ) { Write-Host \"User $( $UserToAdd ) is already an Admin in $( $site . Title ) .\" -f Green } else { Write-Host \"Adding $( $UserToAdd ) to $( $site . Title ) . \" -f Magenta m365 spo site set - -url $site . Url - -owners $UserToAdd } }","title":"Add the user as Site Collection Admin"},{"location":"sample-scripts/spo/add-users-associatedspgroup-site-csv-file/","tags":["groups","users","security"],"text":"Add users to the Associated SharePoint Groups of a site from a CSV File \u00b6 Author: Arjun Menon Script Details \u00b6 This is a script which adds multiple users to associated SharePoint groups (Owners, Members, Visitors) of a site from a CSV file. Typical use case of the script will be a migration scenario where the contents are migrated, while the permissions are not migrated. In that case you will have a list of users and its equivalent permission level of the source system. The script sample will read the source permission details from a CSV file and will add the users to the associated SharePoint groups of a site File Format \u00b6 Below is an example of the format needed for your .csv file: Username,PermissionLevel adelev@contoso.com,Read alexw@contoso.com,Owner alland@contoso.com,Member christiec@contoso.com,Member Permission Level Mapping \u00b6 Permission Level mapping assumptions are given below Permission Level Equivalent SharePoint Group Details Read Visitors User will be added to the associated Visitors group of the site Owner Owners User will be added to the associated Owners group of the site Member Member User will be added to the associated Owners group of the site Complete Script \u00b6 PowerShell #Check the M365 login status for CLI $LoginStatus = m365 status - -output text if ( $LoginStatus -Match \"Logged out\" ){ #Executing login command for CLI m365 login } #Set the URL of the site where the users need to be added $siteURL = \"https://aum365.sharepoint.com/sites/M365CLI\" #Getting the Associated Groups for the specific site $SiteInformation = m365 spo web get - -webUrl $siteURL - -withGroups - -output json | ConvertFrom-Json #Importing the Current permission list from CSV. Adding the equivalent SharePoint Group Id to the imported object. #Object will be grouped with multiple users with , seperator since CLI supports adding multiple users in a single command $GroupedResult = Import-Csv -Path .\\ Current-Permission-Migration . csv | Group-Object PermissionLevel | ForEach -Object { [PsCustomObject] @{ PermissionLevel = $_ . Name UsernameValues = $_ . Group . Username -join ', ' SPGroupId = switch ( $_ . Name ){ \"Read\" { \" $( $SiteInformation . AssociatedVisitorGroup . Id ) \" } #Adding to the default Visitor's Group \"Member\" { \" $( $SiteInformation . AssociatedMemberGroup . Id ) \" } #Adding to the default Member's Group \"Owner\" { \" $( $SiteInformation . AssociatedOwnerGroup . Id ) \" } #Adding to the default Owner's Group default { \" $( $SiteInformation . AssociatedVisitorGroup . Id ) \" } } } } #Show the Formatted data table for reference $GroupedResult | Format-Table #Read Grouped Permission level and users and add the users to the SharePoint Groups Foreach ( $PermissionLevel in $GroupedResult ) { Write-Host \"Adding $( $PermissionLevel . PermissionLevel ) Permission users to the SharePoint Group ID: $( $PermissionLevel . SPGroupId ) \" #Since the command supports multiple usernames to be added in the single command, script will add users in single command execution m365 spo group user add - -webUrl $siteURL - -groupId $PermissionLevel . SPGroupId - -userName $PermissionLevel . UsernameValues }","title":"Add users to the Associated SharePoint Groups of a site from a CSV File"},{"location":"sample-scripts/spo/add-users-associatedspgroup-site-csv-file/#add-users-to-the-associated-sharepoint-groups-of-a-site-from-a-csv-file","text":"Author: Arjun Menon","title":"Add users to the Associated SharePoint Groups of a site from a CSV File"},{"location":"sample-scripts/spo/add-users-associatedspgroup-site-csv-file/#script-details","text":"This is a script which adds multiple users to associated SharePoint groups (Owners, Members, Visitors) of a site from a CSV file. Typical use case of the script will be a migration scenario where the contents are migrated, while the permissions are not migrated. In that case you will have a list of users and its equivalent permission level of the source system. The script sample will read the source permission details from a CSV file and will add the users to the associated SharePoint groups of a site","title":"Script Details"},{"location":"sample-scripts/spo/add-users-associatedspgroup-site-csv-file/#file-format","text":"Below is an example of the format needed for your .csv file: Username,PermissionLevel adelev@contoso.com,Read alexw@contoso.com,Owner alland@contoso.com,Member christiec@contoso.com,Member","title":"File Format"},{"location":"sample-scripts/spo/add-users-associatedspgroup-site-csv-file/#permission-level-mapping","text":"Permission Level mapping assumptions are given below Permission Level Equivalent SharePoint Group Details Read Visitors User will be added to the associated Visitors group of the site Owner Owners User will be added to the associated Owners group of the site Member Member User will be added to the associated Owners group of the site","title":"Permission Level Mapping"},{"location":"sample-scripts/spo/add-users-associatedspgroup-site-csv-file/#complete-script","text":"PowerShell #Check the M365 login status for CLI $LoginStatus = m365 status - -output text if ( $LoginStatus -Match \"Logged out\" ){ #Executing login command for CLI m365 login } #Set the URL of the site where the users need to be added $siteURL = \"https://aum365.sharepoint.com/sites/M365CLI\" #Getting the Associated Groups for the specific site $SiteInformation = m365 spo web get - -webUrl $siteURL - -withGroups - -output json | ConvertFrom-Json #Importing the Current permission list from CSV. Adding the equivalent SharePoint Group Id to the imported object. #Object will be grouped with multiple users with , seperator since CLI supports adding multiple users in a single command $GroupedResult = Import-Csv -Path .\\ Current-Permission-Migration . csv | Group-Object PermissionLevel | ForEach -Object { [PsCustomObject] @{ PermissionLevel = $_ . Name UsernameValues = $_ . Group . Username -join ', ' SPGroupId = switch ( $_ . Name ){ \"Read\" { \" $( $SiteInformation . AssociatedVisitorGroup . Id ) \" } #Adding to the default Visitor's Group \"Member\" { \" $( $SiteInformation . AssociatedMemberGroup . Id ) \" } #Adding to the default Member's Group \"Owner\" { \" $( $SiteInformation . AssociatedOwnerGroup . Id ) \" } #Adding to the default Owner's Group default { \" $( $SiteInformation . AssociatedVisitorGroup . Id ) \" } } } } #Show the Formatted data table for reference $GroupedResult | Format-Table #Read Grouped Permission level and users and add the users to the SharePoint Groups Foreach ( $PermissionLevel in $GroupedResult ) { Write-Host \"Adding $( $PermissionLevel . PermissionLevel ) Permission users to the SharePoint Group ID: $( $PermissionLevel . SPGroupId ) \" #Since the command supports multiple usernames to be added in the single command, script will add users in single command execution m365 spo group user add - -webUrl $siteURL - -groupId $PermissionLevel . SPGroupId - -userName $PermissionLevel . UsernameValues }","title":"Complete Script"},{"location":"sample-scripts/spo/change-owner-group-membership/","tags":["groups","users","security"],"text":"Change group membership of all SharePoint Online sites \u00b6 Author: Arjun Menon , Inspired by Patrick Lamber This is a script which takes a subset or all members of the default owner group and downgrades the permission to the default member group. The below script filters all the Communication Sites from your tenant whose Title contains the keyword Central . Based on your use case / requirement, you can modify the script PowerShell $siteFilterKeyword = \"Central\" #Getting the Communication Sites whose title contains the the given keyword $siteList = m365 spo site list - -type CommunicationSite - -output json - -query \"[? contains(Title,'$siteFilterKeyword')]\" | ConvertFrom-Json $TotalSiteCount = $SiteList . Count Write-Host \"Total number sites which has the keyword '$siteFilterKeyword' in their title are : $TotalSiteCount\" $SiteCounter = 1 Foreach ( $site in $siteList ){ Write-Host \"Processing site No : $SiteCounter / $TotalSiteCount.\" Write-Host \"Site URL - $( $site . Url ) \" # Getting only Associated Owner and Member Groups using JMES Query $AssociatedGroups = m365 spo web get - -webUrl $site . Url - -withGroups - -query \"{MemberGroup: AssociatedMemberGroup, OwnerGroup: AssociatedOwnerGroup}\" - -output json | ConvertFrom-Json # Getting list of members from the Owner Group $UserList = m365 spo group user list - -webUrl $site . Url - -groupId $AssociatedGroups . OwnerGroup . Id - -query \"value\" - -output json | ConvertFrom-Json Write-Host \"Total Users available in the Group, $( $AssociatedGroups . OwnerGroup . Title ) : \" $UserList . Count Foreach ( $User in $UserList ){ # Adding the user to Member Group m365 spo group user add - -webUrl $site . Url - -groupId $AssociatedGroups . MemberGroup . Id - -userName \" $( $User . UserPrincipalName ) \" # Removing the user from Owner Group m365 spo group user remove - -webUrl $site . Url - -groupId $AssociatedGroups . OwnerGroup . Id - -userName \" $( $User . UserPrincipalName ) \" - -confirm } $SiteCounter ++ }","title":"Change group membership of all SharePoint Online sites"},{"location":"sample-scripts/spo/change-owner-group-membership/#change-group-membership-of-all-sharepoint-online-sites","text":"Author: Arjun Menon , Inspired by Patrick Lamber This is a script which takes a subset or all members of the default owner group and downgrades the permission to the default member group. The below script filters all the Communication Sites from your tenant whose Title contains the keyword Central . Based on your use case / requirement, you can modify the script PowerShell $siteFilterKeyword = \"Central\" #Getting the Communication Sites whose title contains the the given keyword $siteList = m365 spo site list - -type CommunicationSite - -output json - -query \"[? contains(Title,'$siteFilterKeyword')]\" | ConvertFrom-Json $TotalSiteCount = $SiteList . Count Write-Host \"Total number sites which has the keyword '$siteFilterKeyword' in their title are : $TotalSiteCount\" $SiteCounter = 1 Foreach ( $site in $siteList ){ Write-Host \"Processing site No : $SiteCounter / $TotalSiteCount.\" Write-Host \"Site URL - $( $site . Url ) \" # Getting only Associated Owner and Member Groups using JMES Query $AssociatedGroups = m365 spo web get - -webUrl $site . Url - -withGroups - -query \"{MemberGroup: AssociatedMemberGroup, OwnerGroup: AssociatedOwnerGroup}\" - -output json | ConvertFrom-Json # Getting list of members from the Owner Group $UserList = m365 spo group user list - -webUrl $site . Url - -groupId $AssociatedGroups . OwnerGroup . Id - -query \"value\" - -output json | ConvertFrom-Json Write-Host \"Total Users available in the Group, $( $AssociatedGroups . OwnerGroup . Title ) : \" $UserList . Count Foreach ( $User in $UserList ){ # Adding the user to Member Group m365 spo group user add - -webUrl $site . Url - -groupId $AssociatedGroups . MemberGroup . Id - -userName \" $( $User . UserPrincipalName ) \" # Removing the user from Owner Group m365 spo group user remove - -webUrl $site . Url - -groupId $AssociatedGroups . OwnerGroup . Id - -userName \" $( $User . UserPrincipalName ) \" - -confirm } $SiteCounter ++ }","title":"Change group membership of all SharePoint Online sites"},{"location":"sample-scripts/spo/copy-files-to-another-library/","tags":["files","libraries","migration"],"text":"Copy files to another SharePoint Library in another site \u00b6 Author: Garry Trinder , Adam , Inspired by Veronique Lengelle This script shows how you can use the CLI to: when copyKeepingSameFolderStructure is true - copy all files and folders from source library to a different library in different SharePoint site keeping the same folder and subfolder structure when copyKeepingSameFolderStructure is false - copy all files from all folders and subfolders from source library to a different library to a root folder in different SharePoint PowerShell Write-host 'Copy files to another SharePoint Library in another site' function Copy-FilesFromFolderToLibrary ( [ Parameter ( Mandatory = $True )] [string] $tenatUrl , [ Parameter ( Mandatory = $True )] [string] $sourceSite , [ Parameter ( Mandatory = $True )] [string] $folder , [ Parameter ( Mandatory = $True )] [string] $targetLibrary , [ Parameter ( Mandatory = $True )] [string] $targetSite ) { Write-Host $folder $allFolders = m365 spo folder list - -webUrl \"$tenatUrl$sourceSite\" - -parentFolderUrl $folder - -output 'json' $allFolders = $allFolders | ConvertFrom-Json foreach ( $innerfolder in $allFolders ) { if ( $innerfolder . Name -ne 'Forms' ) { $folderUrl = $innerfolder . ServerRelativeUrl -replace $sourceSite , '' Copy-FilesFromFolderToLibrary -tenatUrl $tenatUrl -sourceSite $sourceSite -folder $folderUrl -targetLibrary $targetLibrary -targetSite $targetSite } } $allFiles = m365 spo file list - -webUrl \"$tenatUrl$sourceSite\" - -folder $folder . substring ( 1 ) - -output 'json' $allFiles = $allFiles | ConvertFrom-Json foreach ( $file in $allFiles ) { $fileUrl = $file . ServerRelativeUrl -replace $sourceSite , '' m365 spo file copy - -webUrl \"$tenatUrl$sourceSite\" - -sourceUrl $fileUrl - -targetUrl \"$targetSite/$targetLibrary\" - -allowSchemaMismatch } } function Copy-LibraryToLibrary ( [ Parameter ( Mandatory = $True )] [string] $tenatUrl , [ Parameter ( Mandatory = $True )] [string] $sourceLibrary , [ Parameter ( Mandatory = $True )] [string] $sourceSite , [ Parameter ( Mandatory = $True )] [string] $targetLibrary , [ Parameter ( Mandatory = $True )] [string] $targetSite , [ Parameter ( Mandatory = $True )] [bool] $copyKeepingSameFolderStructure ) { if ( $copyKeepingSameFolderStructure ) { Write-host \"Copy the same structure\" $allFolders = m365 spo folder list - -webUrl \"$tenatUrl$sourceSite\" - -parentFolderUrl \"/$sourceLibrary\" - -output 'json' $allFolders = $allFolders | ConvertFrom-Json foreach ( $folder in $allFolders ) { if ( $folder . Name -ne 'Forms' ) { $folderName = $folder . Name m365 spo folder copy - -webUrl \"$tenatUrl$sourceSite\" - -sourceUrl \"/$sourceLibrary/$folderName\" - -targetUrl \"$targetSite/$targetLibrary\" - -allowSchemaMismatch } } $allFiles = m365 spo file list - -webUrl \"$tenatUrl$sourceSite\" - -folder $sourceLibrary - -output 'json' $allFiles = $allFiles | ConvertFrom-Json foreach ( $file in $allFiles ) { $fileUrl = $file . ServerRelativeUrl -replace $sourceSite , '' m365 spo file copy - -webUrl \"$tenatUrl$sourceSite\" - -sourceUrl $fileUrl - -targetUrl \"$targetSite/$targetLibrary\" - -allowSchemaMismatch } } else { Write-host \"Copy files to the root target folder\" Copy-FilesFromFolderToLibrary -tenatUrl $tenatUrl -sourceSite $sourceSite -folder \"/$sourceLibrary\" -targetLibrary $targetLibrary -targetSite $targetSite } } Write-host 'ensure logged in' $m365Status = m365 status - -output text if ( $m365Status -eq \"Logged Out\" ) { m365 login } $tenatUrl = 'https://contoso.sharepoint.com' $sourceLibrary = 'Shared%20Documents' $sourceSite = '/sites/FromSite' $targetLibrary = 'Shared%20Documents' $targetSite = '/sites/ToSite' $copyKeepingSameFolderStructure = $false Copy-LibraryToLibrary -tenatUrl $tenatUrl -sourceLibrary $sourceLibrary -sourceSite $sourceSite -targetLibrary $targetLibrary -targetSite $targetSite -copyKeepingSameFolderStructure $copyKeepingSameFolderStructure","title":"Copy files to another SharePoint Library in another site"},{"location":"sample-scripts/spo/copy-files-to-another-library/#copy-files-to-another-sharepoint-library-in-another-site","text":"Author: Garry Trinder , Adam , Inspired by Veronique Lengelle This script shows how you can use the CLI to: when copyKeepingSameFolderStructure is true - copy all files and folders from source library to a different library in different SharePoint site keeping the same folder and subfolder structure when copyKeepingSameFolderStructure is false - copy all files from all folders and subfolders from source library to a different library to a root folder in different SharePoint PowerShell Write-host 'Copy files to another SharePoint Library in another site' function Copy-FilesFromFolderToLibrary ( [ Parameter ( Mandatory = $True )] [string] $tenatUrl , [ Parameter ( Mandatory = $True )] [string] $sourceSite , [ Parameter ( Mandatory = $True )] [string] $folder , [ Parameter ( Mandatory = $True )] [string] $targetLibrary , [ Parameter ( Mandatory = $True )] [string] $targetSite ) { Write-Host $folder $allFolders = m365 spo folder list - -webUrl \"$tenatUrl$sourceSite\" - -parentFolderUrl $folder - -output 'json' $allFolders = $allFolders | ConvertFrom-Json foreach ( $innerfolder in $allFolders ) { if ( $innerfolder . Name -ne 'Forms' ) { $folderUrl = $innerfolder . ServerRelativeUrl -replace $sourceSite , '' Copy-FilesFromFolderToLibrary -tenatUrl $tenatUrl -sourceSite $sourceSite -folder $folderUrl -targetLibrary $targetLibrary -targetSite $targetSite } } $allFiles = m365 spo file list - -webUrl \"$tenatUrl$sourceSite\" - -folder $folder . substring ( 1 ) - -output 'json' $allFiles = $allFiles | ConvertFrom-Json foreach ( $file in $allFiles ) { $fileUrl = $file . ServerRelativeUrl -replace $sourceSite , '' m365 spo file copy - -webUrl \"$tenatUrl$sourceSite\" - -sourceUrl $fileUrl - -targetUrl \"$targetSite/$targetLibrary\" - -allowSchemaMismatch } } function Copy-LibraryToLibrary ( [ Parameter ( Mandatory = $True )] [string] $tenatUrl , [ Parameter ( Mandatory = $True )] [string] $sourceLibrary , [ Parameter ( Mandatory = $True )] [string] $sourceSite , [ Parameter ( Mandatory = $True )] [string] $targetLibrary , [ Parameter ( Mandatory = $True )] [string] $targetSite , [ Parameter ( Mandatory = $True )] [bool] $copyKeepingSameFolderStructure ) { if ( $copyKeepingSameFolderStructure ) { Write-host \"Copy the same structure\" $allFolders = m365 spo folder list - -webUrl \"$tenatUrl$sourceSite\" - -parentFolderUrl \"/$sourceLibrary\" - -output 'json' $allFolders = $allFolders | ConvertFrom-Json foreach ( $folder in $allFolders ) { if ( $folder . Name -ne 'Forms' ) { $folderName = $folder . Name m365 spo folder copy - -webUrl \"$tenatUrl$sourceSite\" - -sourceUrl \"/$sourceLibrary/$folderName\" - -targetUrl \"$targetSite/$targetLibrary\" - -allowSchemaMismatch } } $allFiles = m365 spo file list - -webUrl \"$tenatUrl$sourceSite\" - -folder $sourceLibrary - -output 'json' $allFiles = $allFiles | ConvertFrom-Json foreach ( $file in $allFiles ) { $fileUrl = $file . ServerRelativeUrl -replace $sourceSite , '' m365 spo file copy - -webUrl \"$tenatUrl$sourceSite\" - -sourceUrl $fileUrl - -targetUrl \"$targetSite/$targetLibrary\" - -allowSchemaMismatch } } else { Write-host \"Copy files to the root target folder\" Copy-FilesFromFolderToLibrary -tenatUrl $tenatUrl -sourceSite $sourceSite -folder \"/$sourceLibrary\" -targetLibrary $targetLibrary -targetSite $targetSite } } Write-host 'ensure logged in' $m365Status = m365 status - -output text if ( $m365Status -eq \"Logged Out\" ) { m365 login } $tenatUrl = 'https://contoso.sharepoint.com' $sourceLibrary = 'Shared%20Documents' $sourceSite = '/sites/FromSite' $targetLibrary = 'Shared%20Documents' $targetSite = '/sites/ToSite' $copyKeepingSameFolderStructure = $false Copy-LibraryToLibrary -tenatUrl $tenatUrl -sourceLibrary $sourceLibrary -sourceSite $sourceSite -targetLibrary $targetLibrary -targetSite $targetSite -copyKeepingSameFolderStructure $copyKeepingSameFolderStructure","title":"Copy files to another SharePoint Library in another site"},{"location":"sample-scripts/spo/copy-listitems-sharepointlist/","tags":["lists","listitems","migration"],"text":"Copy list items between SharePoint lists \u00b6 Author: SekThang , Inspired by Ruud This script helps you to copy list items from one list to another list. I have written script logics to migrate list items from one site collection to another site collection. Prerequisites: List and metadata should be created in the destination site collection site as it's in the source site collection Update columns to match your list in lines 12 and 14 PowerShell $SourceSite = Read-Host -Prompt 'Source site Url' $DestinationSite = Read-Host -Prompt 'Destination site Url' $SourceList = Read-Host -Prompt 'Source list name' $DestinationList = Read-Host -Prompt 'Destination list name' $listItems = m365 spo listitem list - -title $SourceList - -webUrl $SourceSite - -output json | ConvertFrom-Json Write-Host 'Total count in the source list is' -> -fore Green $listItems . Count $count = 0 $reportLocation = Get-Location foreach ( $item in $listItems ) { $count ++ m365 spo listitem add - -listTitle $DestinationList - -webUrl $DestinationSite - -Title $item . Title - -Firstname $item . Firstname - -Lastname $item . Lastname Write-Host $count 'item has been migrated to destination list. Reference item id is' $item . Id -fore Magenta Write-output \"Id:\" $item . ID \" - Firstname: \" $item . Firstname \"________________\" | Out-File $reportLocation \\ Reports . txt -Append } Write-Host 'Report has been generated in .txt format, please check your drive' -fore Cyan","title":"Copy list items between SharePoint lists"},{"location":"sample-scripts/spo/copy-listitems-sharepointlist/#copy-list-items-between-sharepoint-lists","text":"Author: SekThang , Inspired by Ruud This script helps you to copy list items from one list to another list. I have written script logics to migrate list items from one site collection to another site collection. Prerequisites: List and metadata should be created in the destination site collection site as it's in the source site collection Update columns to match your list in lines 12 and 14 PowerShell $SourceSite = Read-Host -Prompt 'Source site Url' $DestinationSite = Read-Host -Prompt 'Destination site Url' $SourceList = Read-Host -Prompt 'Source list name' $DestinationList = Read-Host -Prompt 'Destination list name' $listItems = m365 spo listitem list - -title $SourceList - -webUrl $SourceSite - -output json | ConvertFrom-Json Write-Host 'Total count in the source list is' -> -fore Green $listItems . Count $count = 0 $reportLocation = Get-Location foreach ( $item in $listItems ) { $count ++ m365 spo listitem add - -listTitle $DestinationList - -webUrl $DestinationSite - -Title $item . Title - -Firstname $item . Firstname - -Lastname $item . Lastname Write-Host $count 'item has been migrated to destination list. Reference item id is' $item . Id -fore Magenta Write-output \"Id:\" $item . ID \" - Firstname: \" $item . Firstname \"________________\" | Out-File $reportLocation \\ Reports . txt -Append } Write-Host 'Report has been generated in .txt format, please check your drive' -fore Cyan","title":"Copy list items between SharePoint lists"},{"location":"sample-scripts/spo/delete-non-group-connected-modern-sites/","tags":["cleanup","sites"],"text":"Delete all (non-group connected) modern SharePoint sites \u00b6 Author: Laura Kokkarinen When you delete Microsoft 365 groups, the modern group-connected team sites get deleted with them. The script below handles the remaining modern sites: communication sites and groupless team sites. PowerShell Bash $sparksjoy = \"Cat Lovers United\" , \"Extranet\" , \"Hub\" $sites = m365 spo site list | ConvertFrom-Json $sites = $sites | where { $_ . template -eq \"SITEPAGEPUBLISHING#0\" -or $_ . template -eq \"STS#3\" -and -not ( $sparksjoy -contains $_ . Title )} if ( $sites . Count -eq 0 ) { break } $sites | Format-Table Title , Url , Template Read-Host -Prompt \"Press Enter to start deleting (CTRL + C to exit)\" $progress = 0 $total = $sites . Count foreach ( $site in $sites ) { $progress ++ write-host $progress / $total \":\" $site . Title write-host $site . Url m365 spo site remove - -url $site . Url } #!/bin/bash # requires jq: https://stedolan.github.io/jq/ sparksjoy =( \"Communication site\" \"Comm Site\" \"Hub\" ) sitestoremove =() while read site ; do siteTitle = $( echo ${ site } | jq -r '.Title' ) echo $siteTitle exists = true for keep in \" ${ sparksjoy [@] } \" ; do echo $keep if [ \" $keep \" == \" $siteTitle \" ] ; then echo \"matched\" exists = false break fi done if [ \" $exists \" = true ] ; then sitestoremove +=( \" $site \" ) fi done < < ( m365 spo site list | jq -c '.[] | select(.Template == \"SITEPAGEPUBLISHING#0\" or .Template == \"STS#3\")' ) if [ ${# sitestoremove [@] } = 0 ] ; then exit 1 fi printf '%s\\n' \" ${ sitestoremove [@] } \" echo \"Press Enter to start deleting (CTRL + C to exit)\" read foo for site in \" ${ sitestoremove [@] } \" ; do siteUrl = $( echo ${ site } | jq -r '.Url' ) echo \"Deleting site...\" echo $siteUrl m365 spo site remove --url $siteUrl done","title":"Delete all (non-group connected) modern SharePoint sites"},{"location":"sample-scripts/spo/delete-non-group-connected-modern-sites/#delete-all-non-group-connected-modern-sharepoint-sites","text":"Author: Laura Kokkarinen When you delete Microsoft 365 groups, the modern group-connected team sites get deleted with them. The script below handles the remaining modern sites: communication sites and groupless team sites. PowerShell Bash $sparksjoy = \"Cat Lovers United\" , \"Extranet\" , \"Hub\" $sites = m365 spo site list | ConvertFrom-Json $sites = $sites | where { $_ . template -eq \"SITEPAGEPUBLISHING#0\" -or $_ . template -eq \"STS#3\" -and -not ( $sparksjoy -contains $_ . Title )} if ( $sites . Count -eq 0 ) { break } $sites | Format-Table Title , Url , Template Read-Host -Prompt \"Press Enter to start deleting (CTRL + C to exit)\" $progress = 0 $total = $sites . Count foreach ( $site in $sites ) { $progress ++ write-host $progress / $total \":\" $site . Title write-host $site . Url m365 spo site remove - -url $site . Url } #!/bin/bash # requires jq: https://stedolan.github.io/jq/ sparksjoy =( \"Communication site\" \"Comm Site\" \"Hub\" ) sitestoremove =() while read site ; do siteTitle = $( echo ${ site } | jq -r '.Title' ) echo $siteTitle exists = true for keep in \" ${ sparksjoy [@] } \" ; do echo $keep if [ \" $keep \" == \" $siteTitle \" ] ; then echo \"matched\" exists = false break fi done if [ \" $exists \" = true ] ; then sitestoremove +=( \" $site \" ) fi done < < ( m365 spo site list | jq -c '.[] | select(.Template == \"SITEPAGEPUBLISHING#0\" or .Template == \"STS#3\")' ) if [ ${# sitestoremove [@] } = 0 ] ; then exit 1 fi printf '%s\\n' \" ${ sitestoremove [@] } \" echo \"Press Enter to start deleting (CTRL + C to exit)\" read foo for site in \" ${ sitestoremove [@] } \" ; do siteUrl = $( echo ${ site } | jq -r '.Url' ) echo \"Deleting site...\" echo $siteUrl m365 spo site remove --url $siteUrl done","title":"Delete all (non-group connected) modern SharePoint sites"},{"location":"sample-scripts/spo/detecting-pii-exists-in-sharepointlist-column/","tags":["compliance"],"text":"Detecting PII exists in SharePoint List using AWS Comprehend \u00b6 Author: Joseph Velliah Personally Identifiable Information (PII) is information that, when used alone or with other relevant data, can identify an individual. Sensitive personally identifiable information can include full name, SSN, driver\u2019s license, financial information and medical records. As PII can be used to identify an individual, signify a major threat to companies. If breached, this information can lead to lawsuits and can damage company\u2019s trustworthiness. Amazon Comprehend is a natural-language processing (NLP) service that uses machine learning to uncover valuable insights and connections in text and documents. We can now use Amazon Comprehend to protect and control who has access to sensitive data by identifying and redacting Personally Identifiable Information (PII) from text and documents. Also, we can redact documents(stored in an Amazon S3 bucket) by using Amazon Comprehend asynchronous analysis job. We can choose redaction mode Replace to mask PII entity with character and replace the characters in PII entities with a symbol(!, #, $, %, &, *, or @). Asynchronous PII redaction batch processing will be a great use case for SharePoint Document Libraries. In this post, I showcased using Amazon Comprehend to detect PII entities from a specific SharePoint List column and record the results in another list and CSV report via the AWS CLI and CLI for Microsoft 365. Take a look at this script, give it a try, and please send me your feedback via the contact page. Thank you, Sriharsha M S , for your valuable article on this topic. Prerequisites: CLI for Microsoft 365 AWS CLI SharePoint Online Lists(as shown in screenshots) PII List: Items containing dummy/real PII data PII Audit: To store the PII Audit audit detials Necessary permission to access SharePoint Lists, Amazon Comprehend, and to write CSV files in local machine via Source & Target Lists: PowerShell $spolHostName = \"https://tenant-name.sharepoint.com\" $spolSiteRelativeUrl = \"/sites/site-name\" $spolListToAuditTitle = \"PII List\" $spolListToSaveAuditResponse = \"PII Audit\" $spolListFields = \"ID,Title,Content\" $resultDir = \"Output\" $executionDir = $PSScriptRoot $outputDir = \"$executionDir/$resultDir\" if ( -not ( Test-Path -Path \"$outputDir\" -PathType Container )) { Write-Host \"Creating $outputDir folder...\" -ForegroundColor Yellow New-Item -ItemType Directory -Path \"$outputDir\" } $spolSiteUrl = \"${spolHostName}${spolSiteRelativeUrl}\" $spolListItems = m365 spo listitem list - -title $spolListToAuditTitle - -webUrl $spolSiteUrl - -fields $spolListFields -o json | ConvertFrom-Json -AsHashtable if ( $spolListItems . Count -gt 0 ) { ForEach ( $spolListItem in $spolListItems ) { $spolListItemId = $spolListItem . Id $spolListItemContent = $spolListItem . Content Write-Host \"Auditing Item Id: ${spolListItemId} in ${spolListToAuditTitle}\" -ForegroundColor Green $response = aws comprehend detect-pii-entities - -language-code en - -text $spolListItemContent $auditResponse = $response | ConvertFrom-Json -AsHashtable if ( $auditResponse . Entities ) { $auditEntitiesCount = $auditResponse . Entities . Count if ( $auditEntitiesCount -gt 0 ) { Write-Host \"Findings Count: ${auditEntitiesCount}\" -ForegroundColor Magenta $piiFindings = @() ForEach ( $piiEntity in $auditResponse . Entities ) { $piiFinding = New-Object -TypeName PSObject $piiFinding | Add-Member -MemberType NoteProperty -Name \"Score\" -Value $piiEntity . Score $piiFinding | Add-Member -MemberType NoteProperty -Name \"Type\" -Value $piiEntity . Type $piiFinding | Add-Member -MemberType NoteProperty -Name \"BeginOffset\" -Value $piiEntity . BeginOffset $piiFinding | Add-Member -MemberType NoteProperty -Name \"EndOffset\" -Value $piiEntity . EndOffset $piiFindings += $piiFinding } $outputFilePath = \"${outputDir}/ $( get-date -f yyyyMMdd-HHmmss ) -PIIFindings.csv\" $piiFindings | Export-Csv -Path $outputFilePath -NoTypeInformation $auditEntry = m365 spo listitem add - -contentType Item - -listTitle $spolListToSaveAuditResponse - -webUrl $spolSiteUrl - -Title $spolListToAuditTitle - -ItemID $spolListItemId - -AuditCount $auditResponse . Entities . Count - -AuditResult $outputFilePath -o json | ConvertFrom-Json -AsHashtable $auditEntryId = $auditEntry . Id Write-Host \"Audit added for source Item Id: ${spolListItemId} with Item Id ${auditEntryId} in target list ${spolListToSaveAuditResponse}\" -ForegroundColor Green } else { Write-Host \"There are no findings in this item\" -ForegroundColor Yellow } } else { Write-Host \"There are no findings in this item\" -ForegroundColor Yellow } } } else { Write-Host \"No items in this list\" -ForegroundColor Yellow } Output:","title":"Detecting PII exists in SharePoint List using AWS Comprehend"},{"location":"sample-scripts/spo/detecting-pii-exists-in-sharepointlist-column/#detecting-pii-exists-in-sharepoint-list-using-aws-comprehend","text":"Author: Joseph Velliah Personally Identifiable Information (PII) is information that, when used alone or with other relevant data, can identify an individual. Sensitive personally identifiable information can include full name, SSN, driver\u2019s license, financial information and medical records. As PII can be used to identify an individual, signify a major threat to companies. If breached, this information can lead to lawsuits and can damage company\u2019s trustworthiness. Amazon Comprehend is a natural-language processing (NLP) service that uses machine learning to uncover valuable insights and connections in text and documents. We can now use Amazon Comprehend to protect and control who has access to sensitive data by identifying and redacting Personally Identifiable Information (PII) from text and documents. Also, we can redact documents(stored in an Amazon S3 bucket) by using Amazon Comprehend asynchronous analysis job. We can choose redaction mode Replace to mask PII entity with character and replace the characters in PII entities with a symbol(!, #, $, %, &, *, or @). Asynchronous PII redaction batch processing will be a great use case for SharePoint Document Libraries. In this post, I showcased using Amazon Comprehend to detect PII entities from a specific SharePoint List column and record the results in another list and CSV report via the AWS CLI and CLI for Microsoft 365. Take a look at this script, give it a try, and please send me your feedback via the contact page. Thank you, Sriharsha M S , for your valuable article on this topic. Prerequisites: CLI for Microsoft 365 AWS CLI SharePoint Online Lists(as shown in screenshots) PII List: Items containing dummy/real PII data PII Audit: To store the PII Audit audit detials Necessary permission to access SharePoint Lists, Amazon Comprehend, and to write CSV files in local machine via Source & Target Lists: PowerShell $spolHostName = \"https://tenant-name.sharepoint.com\" $spolSiteRelativeUrl = \"/sites/site-name\" $spolListToAuditTitle = \"PII List\" $spolListToSaveAuditResponse = \"PII Audit\" $spolListFields = \"ID,Title,Content\" $resultDir = \"Output\" $executionDir = $PSScriptRoot $outputDir = \"$executionDir/$resultDir\" if ( -not ( Test-Path -Path \"$outputDir\" -PathType Container )) { Write-Host \"Creating $outputDir folder...\" -ForegroundColor Yellow New-Item -ItemType Directory -Path \"$outputDir\" } $spolSiteUrl = \"${spolHostName}${spolSiteRelativeUrl}\" $spolListItems = m365 spo listitem list - -title $spolListToAuditTitle - -webUrl $spolSiteUrl - -fields $spolListFields -o json | ConvertFrom-Json -AsHashtable if ( $spolListItems . Count -gt 0 ) { ForEach ( $spolListItem in $spolListItems ) { $spolListItemId = $spolListItem . Id $spolListItemContent = $spolListItem . Content Write-Host \"Auditing Item Id: ${spolListItemId} in ${spolListToAuditTitle}\" -ForegroundColor Green $response = aws comprehend detect-pii-entities - -language-code en - -text $spolListItemContent $auditResponse = $response | ConvertFrom-Json -AsHashtable if ( $auditResponse . Entities ) { $auditEntitiesCount = $auditResponse . Entities . Count if ( $auditEntitiesCount -gt 0 ) { Write-Host \"Findings Count: ${auditEntitiesCount}\" -ForegroundColor Magenta $piiFindings = @() ForEach ( $piiEntity in $auditResponse . Entities ) { $piiFinding = New-Object -TypeName PSObject $piiFinding | Add-Member -MemberType NoteProperty -Name \"Score\" -Value $piiEntity . Score $piiFinding | Add-Member -MemberType NoteProperty -Name \"Type\" -Value $piiEntity . Type $piiFinding | Add-Member -MemberType NoteProperty -Name \"BeginOffset\" -Value $piiEntity . BeginOffset $piiFinding | Add-Member -MemberType NoteProperty -Name \"EndOffset\" -Value $piiEntity . EndOffset $piiFindings += $piiFinding } $outputFilePath = \"${outputDir}/ $( get-date -f yyyyMMdd-HHmmss ) -PIIFindings.csv\" $piiFindings | Export-Csv -Path $outputFilePath -NoTypeInformation $auditEntry = m365 spo listitem add - -contentType Item - -listTitle $spolListToSaveAuditResponse - -webUrl $spolSiteUrl - -Title $spolListToAuditTitle - -ItemID $spolListItemId - -AuditCount $auditResponse . Entities . Count - -AuditResult $outputFilePath -o json | ConvertFrom-Json -AsHashtable $auditEntryId = $auditEntry . Id Write-Host \"Audit added for source Item Id: ${spolListItemId} with Item Id ${auditEntryId} in target list ${spolListToSaveAuditResponse}\" -ForegroundColor Green } else { Write-Host \"There are no findings in this item\" -ForegroundColor Yellow } } else { Write-Host \"There are no findings in this item\" -ForegroundColor Yellow } } } else { Write-Host \"No items in this list\" -ForegroundColor Yellow } Output:","title":"Detecting PII exists in SharePoint List using AWS Comprehend"},{"location":"sample-scripts/spo/disable-tenant-wide-extension/","tags":["customizations","provisioning"],"text":"Disable specified Tenant-wide Extension \u00b6 Author: Shantha Kumar T Tenant Wide Extensions list from the App Catalog helps to manage the activation / deactivation of the tenant wide extensions. The below sample script helps to disable the specified tenant wide extension based on the id parameter. Note: TenantWideExtensionDisabled column denotes the extension is enabled or disabled. PowerShell Bash $extensionName = Read-Host \"Enter the Extension Name\" $listName = \"Tenant Wide Extensions\" $appCatalogUrl = m365 spo tenant appcatalogurl get $filterQuery = \"Title eq '\" + $extensionName + \"'\" $appItems = m365 spo listitem list - -title $listName - -webUrl $appCatalogUrl - -fields \"Id,Title\" - -filter $filterQuery - -output json $extItems = $appItems . Replace ( \"Id\" , \"ExtId\" ) | ConvertFrom-JSON if ( $extItems . count -gt 0 ) { m365 spo listitem set - -listTitle $listName - -id $extItems . ExtId - -webUrl $appCatalogUrl - -TenantWideExtensionDisabled \"true\" > $null 2 >& 1 Write-Host ( \"Extension disabled.\" ); } else { Write-Host ( \"No extensions found with the name '\" + $extensionName + \"'.\" ); } #!/bin/bash # requires jq: https://stedolan.github.io/jq/ echo \"Enter the extension name to disable: \" ; read extensionName ; listName = \"Tenant Wide Extensions\" ; appCatalogUrl = $( m365 spo tenant appcatalogurl get ) filterQuery = \"Title eq ' $extensionName '\" appItemsJson = $( m365 spo listitem list --title \" $listName \" --webUrl \" $appCatalogUrl \" --fields \"Id,Title\" --filter \" $filterQuery \" --output json ) appItemId =( $( jq -r '.[].Id' <<< $appItemsJson ) ) if [[ $appItemId -gt 0 ]] then m365 spo listitem set --listTitle \" $listName \" --id \" $appItemId \" --webUrl \" $appCatalogUrl \" --TenantWideExtensionDisabled \"true\" >/dev/null 2 > & 1 echo \"Extension disabled.\" else echo \"No extensions found with the name ' $extensionName '.\" fi","title":"Disable specified Tenant-wide Extension"},{"location":"sample-scripts/spo/disable-tenant-wide-extension/#disable-specified-tenant-wide-extension","text":"Author: Shantha Kumar T Tenant Wide Extensions list from the App Catalog helps to manage the activation / deactivation of the tenant wide extensions. The below sample script helps to disable the specified tenant wide extension based on the id parameter. Note: TenantWideExtensionDisabled column denotes the extension is enabled or disabled. PowerShell Bash $extensionName = Read-Host \"Enter the Extension Name\" $listName = \"Tenant Wide Extensions\" $appCatalogUrl = m365 spo tenant appcatalogurl get $filterQuery = \"Title eq '\" + $extensionName + \"'\" $appItems = m365 spo listitem list - -title $listName - -webUrl $appCatalogUrl - -fields \"Id,Title\" - -filter $filterQuery - -output json $extItems = $appItems . Replace ( \"Id\" , \"ExtId\" ) | ConvertFrom-JSON if ( $extItems . count -gt 0 ) { m365 spo listitem set - -listTitle $listName - -id $extItems . ExtId - -webUrl $appCatalogUrl - -TenantWideExtensionDisabled \"true\" > $null 2 >& 1 Write-Host ( \"Extension disabled.\" ); } else { Write-Host ( \"No extensions found with the name '\" + $extensionName + \"'.\" ); } #!/bin/bash # requires jq: https://stedolan.github.io/jq/ echo \"Enter the extension name to disable: \" ; read extensionName ; listName = \"Tenant Wide Extensions\" ; appCatalogUrl = $( m365 spo tenant appcatalogurl get ) filterQuery = \"Title eq ' $extensionName '\" appItemsJson = $( m365 spo listitem list --title \" $listName \" --webUrl \" $appCatalogUrl \" --fields \"Id,Title\" --filter \" $filterQuery \" --output json ) appItemId =( $( jq -r '.[].Id' <<< $appItemsJson ) ) if [[ $appItemId -gt 0 ]] then m365 spo listitem set --listTitle \" $listName \" --id \" $appItemId \" --webUrl \" $appCatalogUrl \" --TenantWideExtensionDisabled \"true\" >/dev/null 2 > & 1 echo \"Extension disabled.\" else echo \"No extensions found with the name ' $extensionName '.\" fi","title":"Disable specified Tenant-wide Extension"},{"location":"sample-scripts/spo/empty-tenant-recyclebin/","tags":["cleanup"],"text":"Empty the tenant recycle bin \u00b6 Author: Laura Kokkarinen Your deleted modern SharePoint sites are not going to disappear from the UI before they have been removed from the tenant recycle bin. You can either wait for three months, delete them manually via the SharePoint admin center, or run the CLI for Microsoft 365 script below. PowerShell Bash $deletedSites = m365 spo tenant recyclebinitem list -o json | ConvertFrom-Json $deletedSites | Format-Table Url if ( $deletedSites . Count -eq 0 ) { break } Read-Host -Prompt \"Press Enter to start deleting (CTRL + C to exit)\" $progress = 0 $total = $deletedSites . Count foreach ( $deletedSite in $deletedSites ) { $progress ++ Write-Host $progress / $total \":\" $deletedSite . Url m365 spo tenant recyclebinitem remove -u $deletedSite . Url - -confirm } #!/bin/bash # requires jq: https://stedolan.github.io/jq/ deletedsites =( $( m365 spo tenant recyclebinitem list -o json | jq -r '.[].Url' ) ) if [ ${# deletedsites [@] } = 0 ] ; then exit 1 fi printf '%s\\n' \" ${ deletedsites [@] } \" echo \"Press Enter to start deleting (CTRL + C to exit)\" read foo progress = 0 total = ${# deletedsites [@] } for deletedsite in \" ${ deletedsites [@] } \" ; do (( progress++ )) printf '%s / %s:%s\\n' \" $progress \" \" $total \" \" $deletedsite \" m365 spo tenant recyclebinitem remove -u $deletedsite --confirm done","title":"Empty the tenant recycle bin"},{"location":"sample-scripts/spo/empty-tenant-recyclebin/#empty-the-tenant-recycle-bin","text":"Author: Laura Kokkarinen Your deleted modern SharePoint sites are not going to disappear from the UI before they have been removed from the tenant recycle bin. You can either wait for three months, delete them manually via the SharePoint admin center, or run the CLI for Microsoft 365 script below. PowerShell Bash $deletedSites = m365 spo tenant recyclebinitem list -o json | ConvertFrom-Json $deletedSites | Format-Table Url if ( $deletedSites . Count -eq 0 ) { break } Read-Host -Prompt \"Press Enter to start deleting (CTRL + C to exit)\" $progress = 0 $total = $deletedSites . Count foreach ( $deletedSite in $deletedSites ) { $progress ++ Write-Host $progress / $total \":\" $deletedSite . Url m365 spo tenant recyclebinitem remove -u $deletedSite . Url - -confirm } #!/bin/bash # requires jq: https://stedolan.github.io/jq/ deletedsites =( $( m365 spo tenant recyclebinitem list -o json | jq -r '.[].Url' ) ) if [ ${# deletedsites [@] } = 0 ] ; then exit 1 fi printf '%s\\n' \" ${ deletedsites [@] } \" echo \"Press Enter to start deleting (CTRL + C to exit)\" read foo progress = 0 total = ${# deletedsites [@] } for deletedsite in \" ${ deletedsites [@] } \" ; do (( progress++ )) printf '%s / %s:%s\\n' \" $progress \" \" $total \" \" $deletedsite \" m365 spo tenant recyclebinitem remove -u $deletedsite --confirm done","title":"Empty the tenant recycle bin"},{"location":"sample-scripts/spo/ensure-siteassets-library/","tags":["lists","provisioning"],"text":"Ensure the Site Assets Library is created \u00b6 Author: Phillip Allan-Harding There are occasions when creating a new modern SharePoint site using the CLI/REST API that the Site Assets library isn't created, use this script to ensure that the Site Assets library is created. Reference: 'ensure' commands #1427 gets the collection of lists at the site url supplied if a list with the title \"Site Assets\" isn't found gets an access token for the tenant's SharePoint resource calls the _api/web/Lists/EnsureSiteAssetsLibrary REST endpoint to create the Site Assets library returns the existing or created SPList as a JSON object PowerShell function EnsureSiteAssetsLibrary { param ( [ Parameter ( Mandatory )] [string] $siteUrl ) <# send a HTTP POST request to: https://<tenant>.sharepoint.com/sites/<sitename>/_api/web/Lists/EnsureSiteAssetsLibrary/ which returns an SPList #> Write-Host \"-> Ensure Site Assets library: $siteUrl\" $list = m365 spo list get - -webUrl $siteUrl - -title \"Site Assets\" | ConvertFrom-Json if ( $null -eq $list ) { Write-Host \"...Creating Site Assets library\" try { $resource = ( $siteUrl -split \"/\" )[ 2 ] $accessToken = m365 util accesstoken get - -resource \"https://$resource\" - -output text } catch { throw \"!! Unable to get AccessToken for EnsureSiteAssetsLibrary at '$siteUrl' `n ERROR: $_\" } try { $headers = @{ \"Authorization\" = \"Bearer $accessToken\" ; \"Accept\" = \"application/json;odata=nometadata\" } $endpoint = \"$siteUrl/_api/web/Lists/EnsureSiteAssetsLibrary/\" $response = ( Invoke-RestMethod -Uri $endpoint -Headers $headers -Method POST ) $list = $response Write-Host \"...Created: $( $list . Id ) \" } catch { throw \"!! Unable to EnsureSiteAssetsLibrary at '$siteUrl' `n ERROR: $_\" } } else { Write-Host \"...Already exists: $( $list . Id ) \" } $list }","title":"Ensure the Site Assets Library is created"},{"location":"sample-scripts/spo/ensure-siteassets-library/#ensure-the-site-assets-library-is-created","text":"Author: Phillip Allan-Harding There are occasions when creating a new modern SharePoint site using the CLI/REST API that the Site Assets library isn't created, use this script to ensure that the Site Assets library is created. Reference: 'ensure' commands #1427 gets the collection of lists at the site url supplied if a list with the title \"Site Assets\" isn't found gets an access token for the tenant's SharePoint resource calls the _api/web/Lists/EnsureSiteAssetsLibrary REST endpoint to create the Site Assets library returns the existing or created SPList as a JSON object PowerShell function EnsureSiteAssetsLibrary { param ( [ Parameter ( Mandatory )] [string] $siteUrl ) <# send a HTTP POST request to: https://<tenant>.sharepoint.com/sites/<sitename>/_api/web/Lists/EnsureSiteAssetsLibrary/ which returns an SPList #> Write-Host \"-> Ensure Site Assets library: $siteUrl\" $list = m365 spo list get - -webUrl $siteUrl - -title \"Site Assets\" | ConvertFrom-Json if ( $null -eq $list ) { Write-Host \"...Creating Site Assets library\" try { $resource = ( $siteUrl -split \"/\" )[ 2 ] $accessToken = m365 util accesstoken get - -resource \"https://$resource\" - -output text } catch { throw \"!! Unable to get AccessToken for EnsureSiteAssetsLibrary at '$siteUrl' `n ERROR: $_\" } try { $headers = @{ \"Authorization\" = \"Bearer $accessToken\" ; \"Accept\" = \"application/json;odata=nometadata\" } $endpoint = \"$siteUrl/_api/web/Lists/EnsureSiteAssetsLibrary/\" $response = ( Invoke-RestMethod -Uri $endpoint -Headers $headers -Method POST ) $list = $response Write-Host \"...Created: $( $list . Id ) \" } catch { throw \"!! Unable to EnsureSiteAssetsLibrary at '$siteUrl' `n ERROR: $_\" } } else { Write-Host \"...Already exists: $( $list . Id ) \" } $list }","title":"Ensure the Site Assets Library is created"},{"location":"sample-scripts/spo/export-configs-tenant-wide-extensions/","tags":["customizations","reports"],"text":"Export Configurations of Tenant Wide Extensions \u00b6 Author: Joseph Velliah The SharePoint Admin Center provides various governance features, but there is no way to easily export Configurations of Tenant Wide Extensions from the SharePoint admin center for governance activities. This script retrieves Tenant Wide Extension configurations from the App Catalog and exports the same in a comma-separated values (CSV) file. PowerShell $resultDir = \"Output\" $listName = \"Tenant Wide Extensions\" $fields = $fields = \"Title, Modified, Created, AuthorId, EditorId, TenantWideExtensionComponentId, TenantWideExtensionComponentProperties, TenantWideExtensionListTemplate, TenantWideExtensionWebTemplate, TenantWideExtensionSequence, TenantWideExtensionHostProperties, TenantWideExtensionLocation, TenantWideExtensionDisabled\" $executionDir = $PSScriptRoot $outputDir = \"$executionDir/$resultDir\" $outputFilePath = \"$outputDir/ $( get-date -f yyyyMMdd-HHmmss ) -tenantwideextensions.csv\" if ( -not ( Test-Path -Path \"$outputDir\" -PathType Container )) { Write-Host \"Creating $outputDir folder...\" New-Item -ItemType Directory -Path \"$outputDir\" } $appCatalogUrl = m365 spo tenant appcatalogurl get if ( $appCatalogUrl ) { $spolItems = m365 spo listitem list - -title $listName - -webUrl $appCatalogUrl - -fields $fields -o json | ConvertFrom-Json if ( $spolItems . Count -gt 0 ) { $configurations = @() foreach ( $spolItem in $spolItems ) { $author = m365 spo user get - -webUrl $appCatalogUrl - -id $spolItem . AuthorId -o json | ConvertFrom-Json $editor = m365 spo user get - -webUrl $appCatalogUrl - -id $spolItem . EditorId -o json | ConvertFrom-Json $configurationObject = New-Object -TypeName PSObject $configurationObject | Add-Member -MemberType NoteProperty -Name \"Title\" -Value $spolItem . Title $configurationObject | Add-Member -MemberType NoteProperty -Name \"Modified\" -Value $spolItem . Modified $configurationObject | Add-Member -MemberType NoteProperty -Name \"Created\" -Value $spolItem . Created $configurationObject | Add-Member -MemberType NoteProperty -Name \"Author\" -Value $author . Title $configurationObject | Add-Member -MemberType NoteProperty -Name \"Editor\" -Value $editor . Title $configurationObject | Add-Member -MemberType NoteProperty -Name \"TenantWideExtensionComponentId\" -Value $spolItem . TenantWideExtensionComponentId $configurationObject | Add-Member -MemberType NoteProperty -Name \"TenantWideExtensionComponentProperties\" -Value $spolItem . TenantWideExtensionComponentProperties $configurationObject | Add-Member -MemberType NoteProperty -Name \"TenantWideExtensionListTemplate\" -Value $spolItem . TenantWideExtensionListTemplate $configurationObject | Add-Member -MemberType NoteProperty -Name \"TenantWideExtensionWebTemplate\" -Value $spolItem . TenantWideExtensionWebTemplate $configurationObject | Add-Member -MemberType NoteProperty -Name \"TenantWideExtensionSequence\" -Value $spolItem . TenantWideExtensionSequence $configurationObject | Add-Member -MemberType NoteProperty -Name \"TenantWideExtensionHostProperties\" -Value $spolItem . TenantWideExtensionHostProperties $configurationObject | Add-Member -MemberType NoteProperty -Name \"TenantWideExtensionLocation\" -Value $spolItem . TenantWideExtensionLocation $configurationObject | Add-Member -MemberType NoteProperty -Name \"TenantWideExtensionDisabled\" -Value $spolItem . TenantWideExtensionDisabled $configurations += $configurationObject } $configurations | Export-Csv -Path \"$outputFilePath\" -NoTypeInformation Write-Host \"Open $outputFilePath to review Tenant Wide Extensions configurations report.\" } else { Write-Host \"Tenant Wide Extensions list is empty.\" } } else { Write-Host \"Unable to get App Catalog Url.\" }","title":"Export Configurations of Tenant Wide Extensions"},{"location":"sample-scripts/spo/export-configs-tenant-wide-extensions/#export-configurations-of-tenant-wide-extensions","text":"Author: Joseph Velliah The SharePoint Admin Center provides various governance features, but there is no way to easily export Configurations of Tenant Wide Extensions from the SharePoint admin center for governance activities. This script retrieves Tenant Wide Extension configurations from the App Catalog and exports the same in a comma-separated values (CSV) file. PowerShell $resultDir = \"Output\" $listName = \"Tenant Wide Extensions\" $fields = $fields = \"Title, Modified, Created, AuthorId, EditorId, TenantWideExtensionComponentId, TenantWideExtensionComponentProperties, TenantWideExtensionListTemplate, TenantWideExtensionWebTemplate, TenantWideExtensionSequence, TenantWideExtensionHostProperties, TenantWideExtensionLocation, TenantWideExtensionDisabled\" $executionDir = $PSScriptRoot $outputDir = \"$executionDir/$resultDir\" $outputFilePath = \"$outputDir/ $( get-date -f yyyyMMdd-HHmmss ) -tenantwideextensions.csv\" if ( -not ( Test-Path -Path \"$outputDir\" -PathType Container )) { Write-Host \"Creating $outputDir folder...\" New-Item -ItemType Directory -Path \"$outputDir\" } $appCatalogUrl = m365 spo tenant appcatalogurl get if ( $appCatalogUrl ) { $spolItems = m365 spo listitem list - -title $listName - -webUrl $appCatalogUrl - -fields $fields -o json | ConvertFrom-Json if ( $spolItems . Count -gt 0 ) { $configurations = @() foreach ( $spolItem in $spolItems ) { $author = m365 spo user get - -webUrl $appCatalogUrl - -id $spolItem . AuthorId -o json | ConvertFrom-Json $editor = m365 spo user get - -webUrl $appCatalogUrl - -id $spolItem . EditorId -o json | ConvertFrom-Json $configurationObject = New-Object -TypeName PSObject $configurationObject | Add-Member -MemberType NoteProperty -Name \"Title\" -Value $spolItem . Title $configurationObject | Add-Member -MemberType NoteProperty -Name \"Modified\" -Value $spolItem . Modified $configurationObject | Add-Member -MemberType NoteProperty -Name \"Created\" -Value $spolItem . Created $configurationObject | Add-Member -MemberType NoteProperty -Name \"Author\" -Value $author . Title $configurationObject | Add-Member -MemberType NoteProperty -Name \"Editor\" -Value $editor . Title $configurationObject | Add-Member -MemberType NoteProperty -Name \"TenantWideExtensionComponentId\" -Value $spolItem . TenantWideExtensionComponentId $configurationObject | Add-Member -MemberType NoteProperty -Name \"TenantWideExtensionComponentProperties\" -Value $spolItem . TenantWideExtensionComponentProperties $configurationObject | Add-Member -MemberType NoteProperty -Name \"TenantWideExtensionListTemplate\" -Value $spolItem . TenantWideExtensionListTemplate $configurationObject | Add-Member -MemberType NoteProperty -Name \"TenantWideExtensionWebTemplate\" -Value $spolItem . TenantWideExtensionWebTemplate $configurationObject | Add-Member -MemberType NoteProperty -Name \"TenantWideExtensionSequence\" -Value $spolItem . TenantWideExtensionSequence $configurationObject | Add-Member -MemberType NoteProperty -Name \"TenantWideExtensionHostProperties\" -Value $spolItem . TenantWideExtensionHostProperties $configurationObject | Add-Member -MemberType NoteProperty -Name \"TenantWideExtensionLocation\" -Value $spolItem . TenantWideExtensionLocation $configurationObject | Add-Member -MemberType NoteProperty -Name \"TenantWideExtensionDisabled\" -Value $spolItem . TenantWideExtensionDisabled $configurations += $configurationObject } $configurations | Export-Csv -Path \"$outputFilePath\" -NoTypeInformation Write-Host \"Open $outputFilePath to review Tenant Wide Extensions configurations report.\" } else { Write-Host \"Tenant Wide Extensions list is empty.\" } } else { Write-Host \"Unable to get App Catalog Url.\" }","title":"Export Configurations of Tenant Wide Extensions"},{"location":"sample-scripts/spo/grant-api-permissions-aad/","tags":["security"],"text":"Grant API permissions to SharePoint Azure AD Application \u00b6 Author: Micha\u00ebl Maillot When developing your SPFx components, you usually first run them locally before deploying them (really ?). And then comes the time to work with API such as Microsoft Graph. If you never use those permissions before in your SPFx projects (and the tenant with which you're working), you realize that you have to: Add required API permissions in your package-solution.json file Bundle / Ship your project Publish it Go to the SharePoint Admin Center Web API Permissions page Approve those permissions All of this, just to play with the API as you didn't plan to release your package in a production environment. So what if you could bypass all these steps for both Graph and owned API? Important This trick is just for development purposes. In Production environment, you should update your package-solution.json file to add required permissions and allow them (or ask for validation) in the API access page. Warning These permissions will be granted on the whole tenant and could be used by any script running in your tenant. More info here . PowerShell Bash m365 login # Don't execute that command if you're already logged in # Granting Microsoft Graph permissions $resourceName = \"Microsoft Graph\" $msGraphPermissions = @( \"Mail.Read\" , \"People.Read\" , \"User.ReadWrite\" ) $progress = 0 $total = $msGraphPermissions . Count ForEach ( $permission in $msGraphPermissions ) { $progress ++ Write-Host $progress / $total \":\" $permission # If permission already granted, you'll face an OAuth permission issue # So you can test the presence of the scope for the requested resource to prevent the error $scopeToAdd = m365 spo sp grant list - -query \"[?Resource == '${resourceName}' && Scope == '${permission}']\" if ( $scopeToAdd -eq \"\" ) { m365 spo serviceprincipal grant add - -resource \"$resourceName\" - -scope \"$permission\" Write-Host \"Permission '${permission}' for Resource '${resourceName}' granted\" -ForegroundColor Green } else { Write-Host \"Permission '${permission}' for Resource '${resourceName}' already granted\" -ForegroundColor Yellow } } # Granting custom permissions $resourceName = \"contoso-api\" $customPermissions = @( \"user_impersonation\" , \"random_permission\" ) $progress = 0 $total = $customPermissions . Count ForEach ( $permission in $customPermissions ) { $progress ++ Write-Host $progress / $total \":\" $permission # If permission already granted, you'll face an OAuth permission issue # So you can test the presence of the scope for the requested resource to prevent the error $scopeToAdd = m365 spo sp grant list - -query \"[?Resource == '${resourceName}' && Scope == '${permission}']\" if ( $scopeToAdd -eq \"\" ) { m365 spo serviceprincipal grant add - -resource \"$resourceName\" - -scope \"$permission\" Write-Host \"Permission '${permission}' for Resource '${resourceName}' granted\" -ForegroundColor Green } else { Write-Host \"Permission '${permission}' for Resource '${resourceName}' already granted\" -ForegroundColor Yellow } } #!/bin/bash # color formatting for echo NOCOLOR = '\\033[0m' YELLOW = '\\033[1;33m' GREEN = '\\033[0;32m' m365 login # Don't execute that command if you're already logged in # Granting Microsoft Graph permissions resourceName = \"Microsoft Graph\" msGraphPermissions =( \"Mail.Read\" \"People.Read\" \"User.ReadWrite\" ) progress = 0 total = ${# msGraphPermissions [@] } for permission in \" ${ msGraphPermissions [@] } \" ; do (( progress++ )) printf '%s / %s:%s\\n' \" $progress \" \" $total \" \" $permission \" # If permission already granted, you'll face an OAuth permission issue # So you can test the presence of the scope for the requested resource to prevent the error scopeToAdd = $( m365 spo sp grant list --query \"[?Resource == ' $resourceName ' && Scope == ' ${ permission } ']\" ) if [ \" $( [ -z \" $scopeToAdd \" ] && echo \"Empty\" ) \" == \"Empty\" ] ; then m365 spo serviceprincipal grant add --resource \" $resourceName \" --scope \" $permission \" echo -e \" ${ GREEN } Permission ' ${ permission } ' for Resource ' ${ resourceName } ' granted ${ NOCOLOR } \" else echo -e \" ${ YELLOW } Permission ' ${ permission } ' for Resource ' ${ resourceName } ' already granted ${ NOCOLOR } \" fi done # Granting custom permissions resourceName = \"contoso-api\" customPermissions =( \"user_impersonation\" \"random_permission\" ) progress = 0 total = ${# customPermissions [@] } for permission in \" ${ customPermissions [@] } \" ; do (( progress++ )) printf '%s / %s:%s\\n' \" $progress \" \" $total \" \" $permission \" # If permission already granted, you'll face an OAuth permission issue # So you can test the presence of the scope for the requested resource to prevent the error scopeToAdd = $( m365 spo sp grant list --query \"[?Resource == ' $resourceName ' && Scope == ' ${ permission } ']\" ) if [ \" $( [ -z \" $scopeToAdd \" ] && echo \"Empty\" ) \" == \"Empty\" ] ; then m365 spo serviceprincipal grant add --resource \" $resourceName \" --scope \" $permission \" echo -e \" ${ GREEN } Permission ' ${ permission } ' for Resource ' ${ resourceName } ' granted ${ NOCOLOR } \" else echo -e \" ${ YELLOW } Permission ' ${ permission } ' for Resource ' ${ resourceName } ' already granted ${ NOCOLOR } \" fi done","title":"Grant API permissions to SharePoint Azure AD Application"},{"location":"sample-scripts/spo/grant-api-permissions-aad/#grant-api-permissions-to-sharepoint-azure-ad-application","text":"Author: Micha\u00ebl Maillot When developing your SPFx components, you usually first run them locally before deploying them (really ?). And then comes the time to work with API such as Microsoft Graph. If you never use those permissions before in your SPFx projects (and the tenant with which you're working), you realize that you have to: Add required API permissions in your package-solution.json file Bundle / Ship your project Publish it Go to the SharePoint Admin Center Web API Permissions page Approve those permissions All of this, just to play with the API as you didn't plan to release your package in a production environment. So what if you could bypass all these steps for both Graph and owned API? Important This trick is just for development purposes. In Production environment, you should update your package-solution.json file to add required permissions and allow them (or ask for validation) in the API access page. Warning These permissions will be granted on the whole tenant and could be used by any script running in your tenant. More info here . PowerShell Bash m365 login # Don't execute that command if you're already logged in # Granting Microsoft Graph permissions $resourceName = \"Microsoft Graph\" $msGraphPermissions = @( \"Mail.Read\" , \"People.Read\" , \"User.ReadWrite\" ) $progress = 0 $total = $msGraphPermissions . Count ForEach ( $permission in $msGraphPermissions ) { $progress ++ Write-Host $progress / $total \":\" $permission # If permission already granted, you'll face an OAuth permission issue # So you can test the presence of the scope for the requested resource to prevent the error $scopeToAdd = m365 spo sp grant list - -query \"[?Resource == '${resourceName}' && Scope == '${permission}']\" if ( $scopeToAdd -eq \"\" ) { m365 spo serviceprincipal grant add - -resource \"$resourceName\" - -scope \"$permission\" Write-Host \"Permission '${permission}' for Resource '${resourceName}' granted\" -ForegroundColor Green } else { Write-Host \"Permission '${permission}' for Resource '${resourceName}' already granted\" -ForegroundColor Yellow } } # Granting custom permissions $resourceName = \"contoso-api\" $customPermissions = @( \"user_impersonation\" , \"random_permission\" ) $progress = 0 $total = $customPermissions . Count ForEach ( $permission in $customPermissions ) { $progress ++ Write-Host $progress / $total \":\" $permission # If permission already granted, you'll face an OAuth permission issue # So you can test the presence of the scope for the requested resource to prevent the error $scopeToAdd = m365 spo sp grant list - -query \"[?Resource == '${resourceName}' && Scope == '${permission}']\" if ( $scopeToAdd -eq \"\" ) { m365 spo serviceprincipal grant add - -resource \"$resourceName\" - -scope \"$permission\" Write-Host \"Permission '${permission}' for Resource '${resourceName}' granted\" -ForegroundColor Green } else { Write-Host \"Permission '${permission}' for Resource '${resourceName}' already granted\" -ForegroundColor Yellow } } #!/bin/bash # color formatting for echo NOCOLOR = '\\033[0m' YELLOW = '\\033[1;33m' GREEN = '\\033[0;32m' m365 login # Don't execute that command if you're already logged in # Granting Microsoft Graph permissions resourceName = \"Microsoft Graph\" msGraphPermissions =( \"Mail.Read\" \"People.Read\" \"User.ReadWrite\" ) progress = 0 total = ${# msGraphPermissions [@] } for permission in \" ${ msGraphPermissions [@] } \" ; do (( progress++ )) printf '%s / %s:%s\\n' \" $progress \" \" $total \" \" $permission \" # If permission already granted, you'll face an OAuth permission issue # So you can test the presence of the scope for the requested resource to prevent the error scopeToAdd = $( m365 spo sp grant list --query \"[?Resource == ' $resourceName ' && Scope == ' ${ permission } ']\" ) if [ \" $( [ -z \" $scopeToAdd \" ] && echo \"Empty\" ) \" == \"Empty\" ] ; then m365 spo serviceprincipal grant add --resource \" $resourceName \" --scope \" $permission \" echo -e \" ${ GREEN } Permission ' ${ permission } ' for Resource ' ${ resourceName } ' granted ${ NOCOLOR } \" else echo -e \" ${ YELLOW } Permission ' ${ permission } ' for Resource ' ${ resourceName } ' already granted ${ NOCOLOR } \" fi done # Granting custom permissions resourceName = \"contoso-api\" customPermissions =( \"user_impersonation\" \"random_permission\" ) progress = 0 total = ${# customPermissions [@] } for permission in \" ${ customPermissions [@] } \" ; do (( progress++ )) printf '%s / %s:%s\\n' \" $progress \" \" $total \" \" $permission \" # If permission already granted, you'll face an OAuth permission issue # So you can test the presence of the scope for the requested resource to prevent the error scopeToAdd = $( m365 spo sp grant list --query \"[?Resource == ' $resourceName ' && Scope == ' ${ permission } ']\" ) if [ \" $( [ -z \" $scopeToAdd \" ] && echo \"Empty\" ) \" == \"Empty\" ] ; then m365 spo serviceprincipal grant add --resource \" $resourceName \" --scope \" $permission \" echo -e \" ${ GREEN } Permission ' ${ permission } ' for Resource ' ${ resourceName } ' granted ${ NOCOLOR } \" else echo -e \" ${ YELLOW } Permission ' ${ permission } ' for Resource ' ${ resourceName } ' already granted ${ NOCOLOR } \" fi done","title":"Grant API permissions to SharePoint Azure AD Application"},{"location":"sample-scripts/spo/hide-list-from-site-contents/","tags":["lists"],"text":"Hide SharePoint list from Site Contents \u00b6 Author: David Ramalho If you need to hide the SharePoint list from the UI this simple PowerShell script will hide a specific list from the site contents. This will prevent users from easily accessing the list while, for example, you are still setting it up. PowerShell Bash $listName = \"listName\" $site = \"https://contoso.sharepoint.com/\" m365 login $list = m365 spo list get - -webUrl $site -t $listName -o json | ConvertFrom-Json m365 spo list set - -webUrl $site -i $list . Id -t $listName - -hidden true #!/bin/bash # requires jq: https://stedolan.github.io/jq/ listName = \"listName\" site = https://contoso.sharepoint.com/ m365 login listId = $( m365 spo list get --webUrl $site -t \" $listName \" -o json | jq \".Id\" ) m365 spo list set --webUrl $site -i $listId -t $listName --hidden true","title":"Hide SharePoint list from Site Contents"},{"location":"sample-scripts/spo/hide-list-from-site-contents/#hide-sharepoint-list-from-site-contents","text":"Author: David Ramalho If you need to hide the SharePoint list from the UI this simple PowerShell script will hide a specific list from the site contents. This will prevent users from easily accessing the list while, for example, you are still setting it up. PowerShell Bash $listName = \"listName\" $site = \"https://contoso.sharepoint.com/\" m365 login $list = m365 spo list get - -webUrl $site -t $listName -o json | ConvertFrom-Json m365 spo list set - -webUrl $site -i $list . Id -t $listName - -hidden true #!/bin/bash # requires jq: https://stedolan.github.io/jq/ listName = \"listName\" site = https://contoso.sharepoint.com/ m365 login listId = $( m365 spo list get --webUrl $site -t \" $listName \" -o json | jq \".Id\" ) m365 spo list set --webUrl $site -i $listId -t $listName --hidden true","title":"Hide SharePoint list from Site Contents"},{"location":"sample-scripts/spo/insert-sp-library-pictures-into-word/","tags":["libraries","files"],"text":"Insert pictures in a SharePoint Document Library into a Word document \u00b6 Author: Joseph Velliah This PowerShell script shows how to download and insert many pictures in a SharePoint Document Library into a Word document in a two-column table with file name using CLI for Microsoft 365 commands and PowerShell Script. Customers have multiple pictures in a SharePoint Document Library, and they need to automatically insert the pictures in Word as it will take a lot of time if operating from UI. So, they need a script to accomplish that. Prerequisites: Windows 10 Windows PowerShell CLI for Microsoft 365 Office 2007 or Higher version SharePoint Online Site Document Library with some images Folder to download the images Blank Word document to add the images PowerShell Write-Host \"Execution started\" $imagesDownloadFolderPath = \"C:\\Users\\username\\Downloads\\Temp\\images\" $targetWordDocumentPath = \"C:\\Users\\username\\Downloads\\Temp\\output\\word-document-name.docx\" $siteUrl = \"https://tenant-name.sharepoint.com/sites/site-name\" $docLibRootFolderName = \"Shared Documents\" # assumption - folder contains only images but feel free to change the filter conditions to limit the items/file types returned from document library $spolImagesCollection = m365 spo file list - -webUrl $siteUrl - -folder $docLibRootFolderName -o json | ConvertFrom-Json if ( $spolImagesCollection . Count -gt 0 ) { $numberOfRows = $spolImagesCollection . Count $numberOfColumns = 2 $wordClient = New-Object -comobject word . application $wordClient . Visible = $false $wordDoc = $wordClient . Documents . Add () $range = $wordDoc . Range () $wordDoc . Tables . Add ( $range , $numberOfRows , $numberOfColumns ) | Out-Null $table = $wordDoc . Tables . item ( 1 ) $table . Cell ( 1 , 1 ). Range . Text = \"File Name\" # column 1 heading $table . Cell ( 1 , 2 ). Range . Text = \"Image\" # column 2 heading 1 $rowNumber = 2 # to insert the images from second row ForEach ( $spolImage in $spolImagesCollection ) { $targetFilePath = Join-Path $imagesDownloadFolderPath $spolImage . Name $docServerRelativeUrl = $spolImage . ServerRelativeUrl Write-Host \"Processing: $docServerRelativeUrl\" m365 spo file get - -webUrl $siteUrl - -url $docServerRelativeUrl - -asFile - -path $targetFilePath Write-Host \"File downloaded: \" $docServerRelativeUrl $table . Cell ( $rowNumber , 1 ). Range . Text = $spolImage . Name $table . Cell ( $rowNumber , 2 ). Range . InlineShapes . AddPicture ( $targetFilePath ) | Out-Null Write-Host \"Added image in temp document table row \" $rowNumber $rowNumber ++ } [ref] $saveFormat = \"microsoft.office.interop.word.WdSaveFormat\" -as [type] $wordDoc . saveas ( [ref] $targetWordDocumentPath , [ref] $saveFormat :: wdFormatDocumentDefault ) $wordDoc . close () $wordClient . quit () [System.Runtime.Interopservices.Marshal] :: ReleaseComObject ( $wordDoc ) | Out-Null [System.Runtime.Interopservices.Marshal] :: ReleaseComObject ( $wordClient ) | Out-Null [System.Runtime.Interopservices.Marshal] :: ReleaseComObject ( $range ) | Out-Null [System.Runtime.Interopservices.Marshal] :: ReleaseComObject ( $table ) | Out-Null Remove-Variable wordDoc , wordClient , range , table [gc] :: collect () [gc] :: WaitForPendingFinalizers () Write-Host \"Open the document located in $targetWordDocumentPath and check the images in the table\" } else { Write-Host \"No files in this document library\" } Write-Host \"Execution completed\"","title":"Insert pictures in a SharePoint Document Library into a Word document"},{"location":"sample-scripts/spo/insert-sp-library-pictures-into-word/#insert-pictures-in-a-sharepoint-document-library-into-a-word-document","text":"Author: Joseph Velliah This PowerShell script shows how to download and insert many pictures in a SharePoint Document Library into a Word document in a two-column table with file name using CLI for Microsoft 365 commands and PowerShell Script. Customers have multiple pictures in a SharePoint Document Library, and they need to automatically insert the pictures in Word as it will take a lot of time if operating from UI. So, they need a script to accomplish that. Prerequisites: Windows 10 Windows PowerShell CLI for Microsoft 365 Office 2007 or Higher version SharePoint Online Site Document Library with some images Folder to download the images Blank Word document to add the images PowerShell Write-Host \"Execution started\" $imagesDownloadFolderPath = \"C:\\Users\\username\\Downloads\\Temp\\images\" $targetWordDocumentPath = \"C:\\Users\\username\\Downloads\\Temp\\output\\word-document-name.docx\" $siteUrl = \"https://tenant-name.sharepoint.com/sites/site-name\" $docLibRootFolderName = \"Shared Documents\" # assumption - folder contains only images but feel free to change the filter conditions to limit the items/file types returned from document library $spolImagesCollection = m365 spo file list - -webUrl $siteUrl - -folder $docLibRootFolderName -o json | ConvertFrom-Json if ( $spolImagesCollection . Count -gt 0 ) { $numberOfRows = $spolImagesCollection . Count $numberOfColumns = 2 $wordClient = New-Object -comobject word . application $wordClient . Visible = $false $wordDoc = $wordClient . Documents . Add () $range = $wordDoc . Range () $wordDoc . Tables . Add ( $range , $numberOfRows , $numberOfColumns ) | Out-Null $table = $wordDoc . Tables . item ( 1 ) $table . Cell ( 1 , 1 ). Range . Text = \"File Name\" # column 1 heading $table . Cell ( 1 , 2 ). Range . Text = \"Image\" # column 2 heading 1 $rowNumber = 2 # to insert the images from second row ForEach ( $spolImage in $spolImagesCollection ) { $targetFilePath = Join-Path $imagesDownloadFolderPath $spolImage . Name $docServerRelativeUrl = $spolImage . ServerRelativeUrl Write-Host \"Processing: $docServerRelativeUrl\" m365 spo file get - -webUrl $siteUrl - -url $docServerRelativeUrl - -asFile - -path $targetFilePath Write-Host \"File downloaded: \" $docServerRelativeUrl $table . Cell ( $rowNumber , 1 ). Range . Text = $spolImage . Name $table . Cell ( $rowNumber , 2 ). Range . InlineShapes . AddPicture ( $targetFilePath ) | Out-Null Write-Host \"Added image in temp document table row \" $rowNumber $rowNumber ++ } [ref] $saveFormat = \"microsoft.office.interop.word.WdSaveFormat\" -as [type] $wordDoc . saveas ( [ref] $targetWordDocumentPath , [ref] $saveFormat :: wdFormatDocumentDefault ) $wordDoc . close () $wordClient . quit () [System.Runtime.Interopservices.Marshal] :: ReleaseComObject ( $wordDoc ) | Out-Null [System.Runtime.Interopservices.Marshal] :: ReleaseComObject ( $wordClient ) | Out-Null [System.Runtime.Interopservices.Marshal] :: ReleaseComObject ( $range ) | Out-Null [System.Runtime.Interopservices.Marshal] :: ReleaseComObject ( $table ) | Out-Null Remove-Variable wordDoc , wordClient , range , table [gc] :: collect () [gc] :: WaitForPendingFinalizers () Write-Host \"Open the document located in $targetWordDocumentPath and check the images in the table\" } else { Write-Host \"No files in this document library\" } Write-Host \"Execution completed\"","title":"Insert pictures in a SharePoint Document Library into a Word document"},{"location":"sample-scripts/spo/list-all-application-customizers/","tags":["customizations","reports"],"text":"List all application customizers in a tenant \u00b6 Author: Rabia Williams List all the application customizers in a tenant. Scope is default All . Here we are using the custom action list command to list out all the Application Customizers in all the sites in the tenant. PowerShell Bash $sites = m365 spo search - -queryText \"contentclass:STS_site -SPSiteURL:personal\" - -selectProperties \"Path,Title\" - -allResults - -output json | ConvertFrom-Json foreach ( $site in $sites ) { write-host $site . Title write-host $site . Path m365 spo customaction list - -url $site . Path } #!/bin/bash # requires jq: https://stedolan.github.io/jq/ defaultIFS = $IFS IFS = $'\\n' sites = $( m365 spo search --queryText \"contentclass:STS_site -SPSiteURL:personal\" --selectProperties \"Path,Title\" --allResults --output json ) for site in $( echo $sites | jq -c '.[]' ) ; do siteUrl = $( echo ${ site } | jq -r '.Path' ) siteName = $( echo ${ site } | jq -r '.Title' ) echo $siteUrl echo $siteName m365 spo customaction list --url $siteUrl done","title":"List all application customizers in a tenant"},{"location":"sample-scripts/spo/list-all-application-customizers/#list-all-application-customizers-in-a-tenant","text":"Author: Rabia Williams List all the application customizers in a tenant. Scope is default All . Here we are using the custom action list command to list out all the Application Customizers in all the sites in the tenant. PowerShell Bash $sites = m365 spo search - -queryText \"contentclass:STS_site -SPSiteURL:personal\" - -selectProperties \"Path,Title\" - -allResults - -output json | ConvertFrom-Json foreach ( $site in $sites ) { write-host $site . Title write-host $site . Path m365 spo customaction list - -url $site . Path } #!/bin/bash # requires jq: https://stedolan.github.io/jq/ defaultIFS = $IFS IFS = $'\\n' sites = $( m365 spo search --queryText \"contentclass:STS_site -SPSiteURL:personal\" --selectProperties \"Path,Title\" --allResults --output json ) for site in $( echo $sites | jq -c '.[]' ) ; do siteUrl = $( echo ${ site } | jq -r '.Path' ) siteName = $( echo ${ site } | jq -r '.Title' ) echo $siteUrl echo $siteName m365 spo customaction list --url $siteUrl done","title":"List all application customizers in a tenant"},{"location":"sample-scripts/spo/list-all-checked-out-files/","tags":["files","reports"],"text":"List all checked out files in SharePoint \u00b6 Author: Veronique Lengelle Checked out files in a specific site \u00b6 This script will retrieve all the checked out files in a particular site. PowerShell $m365Status = m365 status - -output text if ( $m365Status -eq \"Logged Out\" ) { # Connection to Microsoft 365 m365 login } #Declare variables $siteURL = \"<YOUR-SITE-URL>\" $allLibs = m365 spo list list - -webUrl $siteURL - -query \"[?BaseTemplate == `` 101 `` ]\" -o json | ConvertFrom-Json $resultsForSite = @() foreach ( $library in $allLibs ){ $allDocs = m365 spo file list - -webUrl $siteURL - -folder $library . Url - -recursive -o json | ConvertFrom-Json foreach ( $document in $allDocs ){ if ( $document . CheckOutType -eq [int64] 0 ){ $resultsForSite += [pscustomobject][ordered] @{ LibraryName = $library . Title DocumentName = $document . Name RelativePath = $document . ServerRelativeUrl } } } } $resultsForSite Checked out files for a specific document library on a site \u00b6 This script will retrieve all the checked out files in a specific document library on a particular site. PowerShell $m365Status = m365 status - -output text if ( $m365Status -eq \"Logged Out\" ) { # Connection to Microsoft 365 m365 login } #Declare variables $siteURL = \"<YOUR-SITE-URL>\" $libraryName = \"<LIBRARY NAME>\" ## Example: \"Shared Documents\" $allDocuments = m365 spo file list - -webUrl $siteURL - -folder $( \"$libraryName\" ) - -recursive -o json | ConvertFrom-Json $resultsForLib = @() #Loop through each document foreach ( $doc in $allDocuments ){ if ( $doc . CheckOutType -eq [int64] 0 ){ $resultsForLib += [pscustomobject][ordered] @{ LibraryName = $libraryName DocName = $doc . Name RelativePath = $doc . ServerRelativeUrl } } } $resultsForLib Checked out files on each document library for multiple sites provided in a CSV file \u00b6 This script will loop through each site from your CSV file, and retrieve all the checked out files from each document library. Your CSV file should contain a single header called \"siteURL\" with each URL per row: siteURL https://contoso.sharepoint.com/sites/site1 https://contoso.sharepoint.com/sites/site2 https://contoso.sharepoint.com/sites/site3 Important Depending on the number of sites in your .csv file, the number of libraries as well as the number of files, the below script can take a very long time to provide results. PowerShell $m365Status = m365 status - -output text if ( $m365Status -eq \"Logged Out\" ) { # Connection to Microsoft 365 m365 login } #Declare variables $allSites = Import-Csv -Path \"<YOUR-FILE-PATH>\" $resultsForEachSC = @() foreach ( $row in $allsites ){ #Get the libraries $allLibraries = m365 spo list list - -webUrl $row . siteURL - -query \"[?BaseTemplate == `` 101 `` ]\" -o json | ConvertFrom-Json foreach ( $lib in $allLibraries ){ #Get all the documents $allDocs = m365 spo file list - -webUrl $row . siteURL - -folder $lib . Url - -recursive -o json | ConvertFrom-Json foreach ( $docu in $allDocs ){ if ( $docu . CheckOutType -eq [int64] 0 ){ $resultsForEachSC += [pscustomobject][ordered] @{ LibraryName = $lib . Title DocumentName = $docu . Name RelativePath = $docu . ServerRelativeUrl } } } } } $resultsForEachSC","title":"List all checked out files in SharePoint"},{"location":"sample-scripts/spo/list-all-checked-out-files/#list-all-checked-out-files-in-sharepoint","text":"Author: Veronique Lengelle","title":"List all checked out files in SharePoint"},{"location":"sample-scripts/spo/list-all-checked-out-files/#checked-out-files-in-a-specific-site","text":"This script will retrieve all the checked out files in a particular site. PowerShell $m365Status = m365 status - -output text if ( $m365Status -eq \"Logged Out\" ) { # Connection to Microsoft 365 m365 login } #Declare variables $siteURL = \"<YOUR-SITE-URL>\" $allLibs = m365 spo list list - -webUrl $siteURL - -query \"[?BaseTemplate == `` 101 `` ]\" -o json | ConvertFrom-Json $resultsForSite = @() foreach ( $library in $allLibs ){ $allDocs = m365 spo file list - -webUrl $siteURL - -folder $library . Url - -recursive -o json | ConvertFrom-Json foreach ( $document in $allDocs ){ if ( $document . CheckOutType -eq [int64] 0 ){ $resultsForSite += [pscustomobject][ordered] @{ LibraryName = $library . Title DocumentName = $document . Name RelativePath = $document . ServerRelativeUrl } } } } $resultsForSite","title":"Checked out files in a specific site"},{"location":"sample-scripts/spo/list-all-checked-out-files/#checked-out-files-for-a-specific-document-library-on-a-site","text":"This script will retrieve all the checked out files in a specific document library on a particular site. PowerShell $m365Status = m365 status - -output text if ( $m365Status -eq \"Logged Out\" ) { # Connection to Microsoft 365 m365 login } #Declare variables $siteURL = \"<YOUR-SITE-URL>\" $libraryName = \"<LIBRARY NAME>\" ## Example: \"Shared Documents\" $allDocuments = m365 spo file list - -webUrl $siteURL - -folder $( \"$libraryName\" ) - -recursive -o json | ConvertFrom-Json $resultsForLib = @() #Loop through each document foreach ( $doc in $allDocuments ){ if ( $doc . CheckOutType -eq [int64] 0 ){ $resultsForLib += [pscustomobject][ordered] @{ LibraryName = $libraryName DocName = $doc . Name RelativePath = $doc . ServerRelativeUrl } } } $resultsForLib","title":"Checked out files for a specific document library on a site"},{"location":"sample-scripts/spo/list-all-checked-out-files/#checked-out-files-on-each-document-library-for-multiple-sites-provided-in-a-csv-file","text":"This script will loop through each site from your CSV file, and retrieve all the checked out files from each document library. Your CSV file should contain a single header called \"siteURL\" with each URL per row: siteURL https://contoso.sharepoint.com/sites/site1 https://contoso.sharepoint.com/sites/site2 https://contoso.sharepoint.com/sites/site3 Important Depending on the number of sites in your .csv file, the number of libraries as well as the number of files, the below script can take a very long time to provide results. PowerShell $m365Status = m365 status - -output text if ( $m365Status -eq \"Logged Out\" ) { # Connection to Microsoft 365 m365 login } #Declare variables $allSites = Import-Csv -Path \"<YOUR-FILE-PATH>\" $resultsForEachSC = @() foreach ( $row in $allsites ){ #Get the libraries $allLibraries = m365 spo list list - -webUrl $row . siteURL - -query \"[?BaseTemplate == `` 101 `` ]\" -o json | ConvertFrom-Json foreach ( $lib in $allLibraries ){ #Get all the documents $allDocs = m365 spo file list - -webUrl $row . siteURL - -folder $lib . Url - -recursive -o json | ConvertFrom-Json foreach ( $docu in $allDocs ){ if ( $docu . CheckOutType -eq [int64] 0 ){ $resultsForEachSC += [pscustomobject][ordered] @{ LibraryName = $lib . Title DocumentName = $docu . Name RelativePath = $docu . ServerRelativeUrl } } } } } $resultsForEachSC","title":"Checked out files on each document library for multiple sites provided in a CSV file"},{"location":"sample-scripts/spo/list-all-files-specific-name/","tags":["files","reports"],"text":"List all documents with a specific name within a SharePoint site \u00b6 Author: Veronique Lengelle This script will retrieve all the files in a site that have a specific word (i.e.: search all documents where the word \"CLI\" is part of the file name). PowerShell param ( [ Parameter ( Mandatory = $true , HelpMessage = \"URL of the target site\" , Position = 0 )] [string] $SiteUrl , [ Parameter ( Mandatory = $true , HelpMessage = \"Filename \" , Position = 1 )] [string] $FileName , [ Parameter ( HelpMessage = \"Show progress messages\" , Position = 2 )] [switch] $ShowProgress ) $m365Status = m365 status - -output text if ( $m365Status -eq \"Logged Out\" ) { # Connection to Microsoft 365 m365 login } #Declare variables $site = $SiteUrl $results = @() $allLibs = m365 spo list list - -webUrl $site - -query \"[?BaseTemplate == `` 101 `` ]\" -o json | ConvertFrom-Json foreach ( $lib in $allLibs ) { # Counters $i ++ if ( $ShowProgress ) { Write-Host \"Processing ' $( $lib . Title ) ' - ($i/ $( $allLibs . length ) )\" } $allFiles = m365 spo file list - -webUrl $site - -folder $lib . Url - -recursive -o json | ConvertFrom-Json foreach ( $file in $allFiles ) { if ( $ShowProgress ) { Write-Host \"Processing file ' $( $file . ServerRelativeUrl ) '\" } if (( $file . name -like \"* $( $FileName ) *\" )) { $results += [pscustomobject] @{ libraryName = $lib . Title fileName = $file . Name filePath = $file . ServerRelativeUrl normalSize = $file . Length SizeInMB = ( $fileSizeToNum / 1MB ). ToString ( \"N\" ) LastModifiedDate = [DateTime] $file . TimeLastModified } } } } $results","title":"List all documents with a specific name within a SharePoint site"},{"location":"sample-scripts/spo/list-all-files-specific-name/#list-all-documents-with-a-specific-name-within-a-sharepoint-site","text":"Author: Veronique Lengelle This script will retrieve all the files in a site that have a specific word (i.e.: search all documents where the word \"CLI\" is part of the file name). PowerShell param ( [ Parameter ( Mandatory = $true , HelpMessage = \"URL of the target site\" , Position = 0 )] [string] $SiteUrl , [ Parameter ( Mandatory = $true , HelpMessage = \"Filename \" , Position = 1 )] [string] $FileName , [ Parameter ( HelpMessage = \"Show progress messages\" , Position = 2 )] [switch] $ShowProgress ) $m365Status = m365 status - -output text if ( $m365Status -eq \"Logged Out\" ) { # Connection to Microsoft 365 m365 login } #Declare variables $site = $SiteUrl $results = @() $allLibs = m365 spo list list - -webUrl $site - -query \"[?BaseTemplate == `` 101 `` ]\" -o json | ConvertFrom-Json foreach ( $lib in $allLibs ) { # Counters $i ++ if ( $ShowProgress ) { Write-Host \"Processing ' $( $lib . Title ) ' - ($i/ $( $allLibs . length ) )\" } $allFiles = m365 spo file list - -webUrl $site - -folder $lib . Url - -recursive -o json | ConvertFrom-Json foreach ( $file in $allFiles ) { if ( $ShowProgress ) { Write-Host \"Processing file ' $( $file . ServerRelativeUrl ) '\" } if (( $file . name -like \"* $( $FileName ) *\" )) { $results += [pscustomobject] @{ libraryName = $lib . Title fileName = $file . Name filePath = $file . ServerRelativeUrl normalSize = $file . Length SizeInMB = ( $fileSizeToNum / 1MB ). ToString ( \"N\" ) LastModifiedDate = [DateTime] $file . TimeLastModified } } } } $results","title":"List all documents with a specific name within a SharePoint site"},{"location":"sample-scripts/spo/list-all-items-with-unique-permissions/","tags":["listitems","security"],"text":"List all items with unique permissions \u00b6 Author: Veronique Lengelle , Inspired by Salaudeen Rajack List all items for a specific SharePoint list on a site \u00b6 PowerShell #Declare variables $siteURL = \"https://<TENANT-NAME>.sharepoint.com/sites/<YOUR-SITE>\" $listName = \"<YOUR-LIST-NAME>\" $allItems = m365 spo listitem list - -webUrl $siteUrl - -title $listName - -fields \"ID, HasUniqueRoleAssignments, Title\" | ConvertFrom-Json $results = @() #Loop through each item in the list foreach ( $item in $allItems ){ $results += [pscustomobject][ordered] @{ ListName = $listName ItemID = $item . Id ItemTitle = $item . Title UniquePermissions = $item . HasUniqueRoleAssignments } } $results List all items for multiple SharePoint lists on a site \u00b6 PowerShell #Declare variables $siteURL = \"https://<TENANT-NAME>.sharepoint.com/sites/<YOUR-SITE>\" $allLists = m365 spo list list - -webUrl $siteUrl - -query \"[?BaseTemplate == `` 100 `` ]\" | ConvertFrom-Json $results = @() foreach ( $list in $allLists ){ if ( $list . Hidden -eq $false ){ $allItems = m365 spo listitem list - -webUrl $siteURL - -id $list . Id - -fields \"ID, HasUniqueRoleAssignments, Title\" | ConvertFrom-Json foreach ( $item in $allItems ){ $results += [pscustomobject][ordered] @{ ListName = $list . Title ItemID = $item . Id ItemTitle = $item . Title UniquePermissions = $item . HasUniqueRoleAssignments } } } } $results","title":"List all items with unique permissions"},{"location":"sample-scripts/spo/list-all-items-with-unique-permissions/#list-all-items-with-unique-permissions","text":"Author: Veronique Lengelle , Inspired by Salaudeen Rajack","title":"List all items with unique permissions"},{"location":"sample-scripts/spo/list-all-items-with-unique-permissions/#list-all-items-for-a-specific-sharepoint-list-on-a-site","text":"PowerShell #Declare variables $siteURL = \"https://<TENANT-NAME>.sharepoint.com/sites/<YOUR-SITE>\" $listName = \"<YOUR-LIST-NAME>\" $allItems = m365 spo listitem list - -webUrl $siteUrl - -title $listName - -fields \"ID, HasUniqueRoleAssignments, Title\" | ConvertFrom-Json $results = @() #Loop through each item in the list foreach ( $item in $allItems ){ $results += [pscustomobject][ordered] @{ ListName = $listName ItemID = $item . Id ItemTitle = $item . Title UniquePermissions = $item . HasUniqueRoleAssignments } } $results","title":"List all items for a specific SharePoint list on a site"},{"location":"sample-scripts/spo/list-all-items-with-unique-permissions/#list-all-items-for-multiple-sharepoint-lists-on-a-site","text":"PowerShell #Declare variables $siteURL = \"https://<TENANT-NAME>.sharepoint.com/sites/<YOUR-SITE>\" $allLists = m365 spo list list - -webUrl $siteUrl - -query \"[?BaseTemplate == `` 100 `` ]\" | ConvertFrom-Json $results = @() foreach ( $list in $allLists ){ if ( $list . Hidden -eq $false ){ $allItems = m365 spo listitem list - -webUrl $siteURL - -id $list . Id - -fields \"ID, HasUniqueRoleAssignments, Title\" | ConvertFrom-Json foreach ( $item in $allItems ){ $results += [pscustomobject][ordered] @{ ListName = $list . Title ItemID = $item . Id ItemTitle = $item . Title UniquePermissions = $item . HasUniqueRoleAssignments } } } } $results","title":"List all items for multiple SharePoint lists on a site"},{"location":"sample-scripts/spo/list-all-list-folders-itemcount/","tags":["files","libraries","reports"],"text":"Lists number of files in all lists and folders for the given site \u00b6 Author: Albert-Jan Schot List all Lists, the folders and sub folders in a given site, and output the item count. Each folder is processed recursively. By default only non hidden document libraries are processed. As specified with the filter $false -eq $list.Hidden -and $list.BaseTemplate -eq \"101\" . The output is a CSV that contains the itemcount for each list and folder found in the specified site collection. PowerShell $siteUrl = \"<PUTYOURURLHERE>\" $fileExportPath = \"<PUTYOURPATHHERE.csv>\" $m365Status = m365 status - -output text if ( $m365Status -eq \"Logged Out\" ) { # Connection to Microsoft 365 m365 login } [System.Collections.ArrayList] $results = @() function Get-Folders ( $webUrl , $folderUrl ) { $folders = m365 spo folder list -u $webUrl - -parentFolderUrl $folderUrl -o json | ConvertFrom-Json foreach ( $folder in $folders ) { $folderStats = m365 spo folder get -u $webUrl - -folderUrl $folder . ServerRelativeUrl -o json | ConvertFrom-Json Write-Output \"Processing folder: $( $folder . ServerRelativeUrl ) ;\" [void] $results . Add ( [pscustomobject] @{ Url = $folder . ServerRelativeUrl ; ItemCount = $folderStats . ItemCount ; Type = \"Folder\" ; }) Get-Folders $webUrl $folder . ServerRelativeUrl } } $allLists = m365 spo list list -u $siteUrl -o json | ConvertFrom-Json foreach ( $list in $allLists ) { if ( $false -eq $list . Hidden -and $list . BaseTemplate -eq \"101\" ) { Write-Output \"Processing $( $list . Url ) \" [void] $results . Add ( [PSCustomObject] @{ Url = $list . Url ; ItemCount = $list . ItemCount ; Type = \"List\" ; }) Get-Folders $siteUrl $list . Url } } $results | Export-Csv -Path $fileExportPath -NoTypeInformation","title":"Lists number of files in all lists and folders for the given site"},{"location":"sample-scripts/spo/list-all-list-folders-itemcount/#lists-number-of-files-in-all-lists-and-folders-for-the-given-site","text":"Author: Albert-Jan Schot List all Lists, the folders and sub folders in a given site, and output the item count. Each folder is processed recursively. By default only non hidden document libraries are processed. As specified with the filter $false -eq $list.Hidden -and $list.BaseTemplate -eq \"101\" . The output is a CSV that contains the itemcount for each list and folder found in the specified site collection. PowerShell $siteUrl = \"<PUTYOURURLHERE>\" $fileExportPath = \"<PUTYOURPATHHERE.csv>\" $m365Status = m365 status - -output text if ( $m365Status -eq \"Logged Out\" ) { # Connection to Microsoft 365 m365 login } [System.Collections.ArrayList] $results = @() function Get-Folders ( $webUrl , $folderUrl ) { $folders = m365 spo folder list -u $webUrl - -parentFolderUrl $folderUrl -o json | ConvertFrom-Json foreach ( $folder in $folders ) { $folderStats = m365 spo folder get -u $webUrl - -folderUrl $folder . ServerRelativeUrl -o json | ConvertFrom-Json Write-Output \"Processing folder: $( $folder . ServerRelativeUrl ) ;\" [void] $results . Add ( [pscustomobject] @{ Url = $folder . ServerRelativeUrl ; ItemCount = $folderStats . ItemCount ; Type = \"Folder\" ; }) Get-Folders $webUrl $folder . ServerRelativeUrl } } $allLists = m365 spo list list -u $siteUrl -o json | ConvertFrom-Json foreach ( $list in $allLists ) { if ( $false -eq $list . Hidden -and $list . BaseTemplate -eq \"101\" ) { Write-Output \"Processing $( $list . Url ) \" [void] $results . Add ( [PSCustomObject] @{ Url = $list . Url ; ItemCount = $list . ItemCount ; Type = \"List\" ; }) Get-Folders $siteUrl $list . Url } } $results | Export-Csv -Path $fileExportPath -NoTypeInformation","title":"Lists number of files in all lists and folders for the given site"},{"location":"sample-scripts/spo/list-attachment-names-from-spo-lists/","tags":["files","lists","reports"],"text":"List Attachment Names From SharePoint Lists For A Site \u00b6 Author: Veronique Lengelle PowerShell $siteUrl = \"https://<TENANT-NAME>.sharepoint.com/sites/<YOUR-SITE>\" $allLists = m365 spo list list - -webUrl $siteUrl - -query \"[?BaseTemplate == `` 100 `` ]\" | ConvertFrom-Json $results = @() foreach ( $list in $allLists ){ if ( $list . Hidden -eq $false ){ $allItems = m365 spo listitem list - -id $list . Id - -webUrl $siteUrl | ConvertFrom-Json foreach ( $item in $allItems ){ $allAttachments = m365 spo listitem attachment list - -webUrl $siteUrl - -listTitle $list . Title - -itemId $item . Id | ConvertFrom-Json foreach ( $attachment in $allAttachments ){ $results += [pscustomobject][ordered] @{ itemID = $item . Id itemTitle = $item . Title fileName = $attachment . FileName attachmentPath = $attachment . ServerRelativeUrl } } } } } $results","title":"List Attachment Names From SharePoint Lists For A Site"},{"location":"sample-scripts/spo/list-attachment-names-from-spo-lists/#list-attachment-names-from-sharepoint-lists-for-a-site","text":"Author: Veronique Lengelle PowerShell $siteUrl = \"https://<TENANT-NAME>.sharepoint.com/sites/<YOUR-SITE>\" $allLists = m365 spo list list - -webUrl $siteUrl - -query \"[?BaseTemplate == `` 100 `` ]\" | ConvertFrom-Json $results = @() foreach ( $list in $allLists ){ if ( $list . Hidden -eq $false ){ $allItems = m365 spo listitem list - -id $list . Id - -webUrl $siteUrl | ConvertFrom-Json foreach ( $item in $allItems ){ $allAttachments = m365 spo listitem attachment list - -webUrl $siteUrl - -listTitle $list . Title - -itemId $item . Id | ConvertFrom-Json foreach ( $attachment in $allAttachments ){ $results += [pscustomobject][ordered] @{ itemID = $item . Id itemTitle = $item . Title fileName = $attachment . FileName attachmentPath = $attachment . ServerRelativeUrl } } } } } $results","title":"List Attachment Names From SharePoint Lists For A Site"},{"location":"sample-scripts/spo/list-externalusers-in-sitegroups/","tags":["guests","groups","reports","sites","users"],"text":"List all external users in site groups across all site collections \u00b6 Author: Martin Lingstuyl This script shows how you can check if external users are added to site groups. It will show all external users across all site collections and the site groups they where added to. PowerShell $m365Status = m365 status - -output text if ( $m365Status -eq \"Logged Out\" ) { m365 login } Write-Host \"Retrieving all sites and check external users...\" -ForegroundColor Green $sites = m365 spo site list - -type All | ConvertFrom-Json $siteCount = $sites . Count $siteCounter = 0 $results = [System.Collections.ArrayList] :: new () $spoAccessToken = m365 util accesstoken get - -resource sharepoint - -new | ConvertFrom-Json Write-Host \"Processing $siteCount sites...\" foreach ( $site in $sites ) { $siteCounter ++ Write-Host \"$siteCounter/$siteCount - Get external users in site groups for $( $site . Url ) ...\" -ForegroundColor Green $response = Invoke-WebRequest -Uri \" $( $site . Url ) /_api/web/siteusers? `$ filter=IsShareByEmailGuestUser eq true& `$ expand=Groups& `$ select=Title,LoginName,Email,Groups/LoginName\" -Method Get -Headers @{ Authorization = \"Bearer $spoAccessToken\" ; Accept = \"application/json;odata=nometadata\" } $users = $response . Content | ConvertFrom-Json foreach ( $user in $users . value ) { foreach ( $group in $user . Groups ) { $obj = [PSCustomObject][ordered] @{ Title = $user . Title ; Email = $user . Email ; LoginName = $user . LoginName ; Group = $group . LoginName ; } $results . Add ( $obj ) | Out-Null } } } Write-Host \"Exporting list...\" -ForegroundColor Green $results | Export-Csv -Path \"./cli-external-users-in-sitegroups.csv\" -NoTypeInformation","title":"List all external users in site groups across all site collections"},{"location":"sample-scripts/spo/list-externalusers-in-sitegroups/#list-all-external-users-in-site-groups-across-all-site-collections","text":"Author: Martin Lingstuyl This script shows how you can check if external users are added to site groups. It will show all external users across all site collections and the site groups they where added to. PowerShell $m365Status = m365 status - -output text if ( $m365Status -eq \"Logged Out\" ) { m365 login } Write-Host \"Retrieving all sites and check external users...\" -ForegroundColor Green $sites = m365 spo site list - -type All | ConvertFrom-Json $siteCount = $sites . Count $siteCounter = 0 $results = [System.Collections.ArrayList] :: new () $spoAccessToken = m365 util accesstoken get - -resource sharepoint - -new | ConvertFrom-Json Write-Host \"Processing $siteCount sites...\" foreach ( $site in $sites ) { $siteCounter ++ Write-Host \"$siteCounter/$siteCount - Get external users in site groups for $( $site . Url ) ...\" -ForegroundColor Green $response = Invoke-WebRequest -Uri \" $( $site . Url ) /_api/web/siteusers? `$ filter=IsShareByEmailGuestUser eq true& `$ expand=Groups& `$ select=Title,LoginName,Email,Groups/LoginName\" -Method Get -Headers @{ Authorization = \"Bearer $spoAccessToken\" ; Accept = \"application/json;odata=nometadata\" } $users = $response . Content | ConvertFrom-Json foreach ( $user in $users . value ) { foreach ( $group in $user . Groups ) { $obj = [PSCustomObject][ordered] @{ Title = $user . Title ; Email = $user . Email ; LoginName = $user . LoginName ; Group = $group . LoginName ; } $results . Add ( $obj ) | Out-Null } } } Write-Host \"Exporting list...\" -ForegroundColor Green $results | Export-Csv -Path \"./cli-external-users-in-sitegroups.csv\" -NoTypeInformation","title":"List all external users in site groups across all site collections"},{"location":"sample-scripts/spo/list-failed-sitedesigns/","tags":["reports"],"text":"List all failed site design for all sites \u00b6 Author: Albert-Jan Schot The following script iterates through all site collections and lists all site design runs with errors. By filtering on OutcomeCode == '1' it will return all sites and runs with explicit errors. By filtering on OutcomeCode != '0' you can also return any result that is not marked as successful. PowerShell $allSPOSites = m365 spo site list | ConvertFrom-Json $siteCount = $allSPOSites . Count Write-Output \"Processing $siteCount sites...\" foreach ( $site in $allSPOSites ) { $siteCounter ++ Write-Output \"Processing $( $site . Url ) ... ($siteCounter/$siteCount)\" $runs = m365 spo sitedesign run list - -webUrl $site . Url - -output json | ConvertFrom-Json foreach ( $run in $runs ) { $runData = m365 spo sitedesign run status get - -webUrl $site . Url - -runId $run . ID - -query '[?OutcomeCode == `1`]' - -output json | ConvertFrom-Json if ( $runData ) { Write-Output \" $( $run . SiteDesignTitle ) failed at $( $site . Url ) with id $( $run . ID ) \" } } }","title":"List all failed site design for all sites"},{"location":"sample-scripts/spo/list-failed-sitedesigns/#list-all-failed-site-design-for-all-sites","text":"Author: Albert-Jan Schot The following script iterates through all site collections and lists all site design runs with errors. By filtering on OutcomeCode == '1' it will return all sites and runs with explicit errors. By filtering on OutcomeCode != '0' you can also return any result that is not marked as successful. PowerShell $allSPOSites = m365 spo site list | ConvertFrom-Json $siteCount = $allSPOSites . Count Write-Output \"Processing $siteCount sites...\" foreach ( $site in $allSPOSites ) { $siteCounter ++ Write-Output \"Processing $( $site . Url ) ... ($siteCounter/$siteCount)\" $runs = m365 spo sitedesign run list - -webUrl $site . Url - -output json | ConvertFrom-Json foreach ( $run in $runs ) { $runData = m365 spo sitedesign run status get - -webUrl $site . Url - -runId $run . ID - -query '[?OutcomeCode == `1`]' - -output json | ConvertFrom-Json if ( $runData ) { Write-Output \" $( $run . SiteDesignTitle ) failed at $( $site . Url ) with id $( $run . ID ) \" } } }","title":"List all failed site design for all sites"},{"location":"sample-scripts/spo/list-large-files-within-a-site/","tags":["files","reports"],"text":"List all large files within a SharePoint Site \u00b6 Author: Veronique Lengelle The following script will help you find every files in a specific SharePoint Online site that are over a certain size. It iterates through all libraries and identifies all files larger than the set threshold. PowerShell param ( [ Parameter ( Mandatory = $true , HelpMessage = \"URL of the target site\" , Position = 0 )] [string] $SiteUrl , [ Parameter ( Mandatory = $true , HelpMessage = \"Size in MB\" , Position = 1 )] [int] $SizeInMB , [ Parameter ( HelpMessage = \"Show progress messages\" , Position = 2 )] [switch] $ShowProgress ) $m365Status = m365 status - -output text if ( $m365Status -eq \"Logged Out\" ) { # Connection to Microsoft 365 m365 login } #Declare variables $site = $SiteUrl $results = @() $allLibs = m365 spo list list - -webUrl $site - -query \"[?BaseTemplate == `` 101 `` ]\" -o json | ConvertFrom-Json foreach ( $lib in $allLibs ) { # Counters $i ++ if ( $ShowProgress ) { Write-Host \"Processing ' $( $lib . Title ) ' - ($i/ $( $allLibs . length ) )\" } $allFiles = m365 spo file list - -webUrl $site - -folder $lib . Url - -recursive -o json | ConvertFrom-Json foreach ( $file in $allFiles ) { if ( $ShowProgress ) { Write-Host \"Processing file ' $( $file . ServerRelativeUrl ) '\" } #Cast as [long] in case some are above 1GB $fileSizeToNum = [long] ( $file . Length ) if (( $fileSizeToNum -ge ( $SizeInMB * 1000000 )) -and ( $file . name -like \"*.*\" )) { $results += [pscustomobject] @{ libraryName = $lib . Title fileName = $file . Name filePath = $file . ServerRelativeUrl normalSize = $file . Length SizeInMB = ( $fileSizeToNum / 1MB ). ToString ( \"N\" ) LastModifiedDate = [DateTime] $file . TimeLastModified } } } } $results","title":"List all large files within a SharePoint Site"},{"location":"sample-scripts/spo/list-large-files-within-a-site/#list-all-large-files-within-a-sharepoint-site","text":"Author: Veronique Lengelle The following script will help you find every files in a specific SharePoint Online site that are over a certain size. It iterates through all libraries and identifies all files larger than the set threshold. PowerShell param ( [ Parameter ( Mandatory = $true , HelpMessage = \"URL of the target site\" , Position = 0 )] [string] $SiteUrl , [ Parameter ( Mandatory = $true , HelpMessage = \"Size in MB\" , Position = 1 )] [int] $SizeInMB , [ Parameter ( HelpMessage = \"Show progress messages\" , Position = 2 )] [switch] $ShowProgress ) $m365Status = m365 status - -output text if ( $m365Status -eq \"Logged Out\" ) { # Connection to Microsoft 365 m365 login } #Declare variables $site = $SiteUrl $results = @() $allLibs = m365 spo list list - -webUrl $site - -query \"[?BaseTemplate == `` 101 `` ]\" -o json | ConvertFrom-Json foreach ( $lib in $allLibs ) { # Counters $i ++ if ( $ShowProgress ) { Write-Host \"Processing ' $( $lib . Title ) ' - ($i/ $( $allLibs . length ) )\" } $allFiles = m365 spo file list - -webUrl $site - -folder $lib . Url - -recursive -o json | ConvertFrom-Json foreach ( $file in $allFiles ) { if ( $ShowProgress ) { Write-Host \"Processing file ' $( $file . ServerRelativeUrl ) '\" } #Cast as [long] in case some are above 1GB $fileSizeToNum = [long] ( $file . Length ) if (( $fileSizeToNum -ge ( $SizeInMB * 1000000 )) -and ( $file . name -like \"*.*\" )) { $results += [pscustomobject] @{ libraryName = $lib . Title fileName = $file . Name filePath = $file . ServerRelativeUrl normalSize = $file . Length SizeInMB = ( $fileSizeToNum / 1MB ). ToString ( \"N\" ) LastModifiedDate = [DateTime] $file . TimeLastModified } } } } $results","title":"List all large files within a SharePoint Site"},{"location":"sample-scripts/spo/list-site-app-catalogs/","tags":["reports"],"text":"Lists active SharePoint site collection application catalogs \u00b6 Inspired by: David Ramalho A sample that shows how to find all installed site collection application catalogs within a tenant. IT Professionals or DevOps can benefit from it when they govern tenants or scan tenant for customizations. Pulling a list with site collection app catalogs can give them valuable information at what scale the tenant site collections are customized. The sample outputs the URL of the site collection, and this can help IT Pros or DevOps to dig deeper and find out what and how many solution packages a site collection app catalog has installed. Check for un-healthy solution packages or such that could be a security risk. Note, because the sample uses the SharePoint search API to identify the site collection application catalogs, a newly created one might not be indexed right away. The sample output would not list the newly created app catalog until the search crawler indexes it; this usually does not take longer than a few minutes. PowerShell Bash $appCatalogs = m365 spo search - -query \"contentclass:STS_List_336\" - -selectProperties SPSiteURL - -allResults - -output json | ConvertFrom-Json $appCatalogs | ForEach -Object { Write-Host $_ . SPSiteURL } Write-Host 'Total count:' $appCatalogs . Count #!/bin/bash # requires jq: https://stedolan.github.io/jq/ appCatalogs = $( m365 spo search --query \"contentclass:STS_List_336\" --selectProperties SPSiteURL --allResults --output json ) echo $appCatalogs | jq -r '.[].SPSiteURL' echo \"Total count:\" $( echo $appCatalogs | jq length )","title":"Lists active SharePoint site collection application catalogs"},{"location":"sample-scripts/spo/list-site-app-catalogs/#lists-active-sharepoint-site-collection-application-catalogs","text":"Inspired by: David Ramalho A sample that shows how to find all installed site collection application catalogs within a tenant. IT Professionals or DevOps can benefit from it when they govern tenants or scan tenant for customizations. Pulling a list with site collection app catalogs can give them valuable information at what scale the tenant site collections are customized. The sample outputs the URL of the site collection, and this can help IT Pros or DevOps to dig deeper and find out what and how many solution packages a site collection app catalog has installed. Check for un-healthy solution packages or such that could be a security risk. Note, because the sample uses the SharePoint search API to identify the site collection application catalogs, a newly created one might not be indexed right away. The sample output would not list the newly created app catalog until the search crawler indexes it; this usually does not take longer than a few minutes. PowerShell Bash $appCatalogs = m365 spo search - -query \"contentclass:STS_List_336\" - -selectProperties SPSiteURL - -allResults - -output json | ConvertFrom-Json $appCatalogs | ForEach -Object { Write-Host $_ . SPSiteURL } Write-Host 'Total count:' $appCatalogs . Count #!/bin/bash # requires jq: https://stedolan.github.io/jq/ appCatalogs = $( m365 spo search --query \"contentclass:STS_List_336\" --selectProperties SPSiteURL --allResults --output json ) echo $appCatalogs | jq -r '.[].SPSiteURL' echo \"Total count:\" $( echo $appCatalogs | jq length )","title":"Lists active SharePoint site collection application catalogs"},{"location":"sample-scripts/spo/list-site-collection-lists/","tags":["lists","reports","sites"],"text":"List site collections and their lists \u00b6 Author: Albert-Jan Schot This script helps you to list and export all site collection and their lists SharePoint Online sites, ideal for getting insights into the size of your environment. PowerShell $fileExportPath = \"<PUTYOURPATHHERE.csv>\" $m365Status = m365 status - -output text if ( $m365Status -eq \"Logged Out\" ) { # Connection to Microsoft 365 m365 login } $results = @() Write-host \"Retrieving all sites...\" $allSPOSites = m365 spo site list | ConvertFrom-Json $siteCount = $allSPOSites . Count Write-Host \"Processing $siteCount sites...\" #Loop through each site $siteCounter = 0 foreach ( $site in $allSPOSites ) { $siteCounter ++ Write-Host \"Processing $( $site . Url ) ... ($siteCounter/$siteCount)\" $results += [pscustomobject][ordered] @{ Type = \"site\" Title = $site . Title Url = $site . Url StorageUsage = $site . StorageUsage Template = $site . Template } Write-host \"Retrieving all lists...\" $allLists = m365 spo list list -u $site . url -o json | ConvertFrom-Json foreach ( $list in $allLists ) { $results += [pscustomobject][ordered] @{ Type = \"list\" Title = $list . Title Url = $list . Url Template = $list . BaseTemplate } } } Write-Host \"Exporting file to $fileExportPath...\" $results | Export-Csv -Path $fileExportPath -NoTypeInformation Write-Host \"Completed.\"","title":"List site collections and their lists"},{"location":"sample-scripts/spo/list-site-collection-lists/#list-site-collections-and-their-lists","text":"Author: Albert-Jan Schot This script helps you to list and export all site collection and their lists SharePoint Online sites, ideal for getting insights into the size of your environment. PowerShell $fileExportPath = \"<PUTYOURPATHHERE.csv>\" $m365Status = m365 status - -output text if ( $m365Status -eq \"Logged Out\" ) { # Connection to Microsoft 365 m365 login } $results = @() Write-host \"Retrieving all sites...\" $allSPOSites = m365 spo site list | ConvertFrom-Json $siteCount = $allSPOSites . Count Write-Host \"Processing $siteCount sites...\" #Loop through each site $siteCounter = 0 foreach ( $site in $allSPOSites ) { $siteCounter ++ Write-Host \"Processing $( $site . Url ) ... ($siteCounter/$siteCount)\" $results += [pscustomobject][ordered] @{ Type = \"site\" Title = $site . Title Url = $site . Url StorageUsage = $site . StorageUsage Template = $site . Template } Write-host \"Retrieving all lists...\" $allLists = m365 spo list list -u $site . url -o json | ConvertFrom-Json foreach ( $list in $allLists ) { $results += [pscustomobject][ordered] @{ Type = \"list\" Title = $list . Title Url = $list . Url Template = $list . BaseTemplate } } } Write-Host \"Exporting file to $fileExportPath...\" $results | Export-Csv -Path $fileExportPath -NoTypeInformation Write-Host \"Completed.\"","title":"List site collections and their lists"},{"location":"sample-scripts/spo/list-site-collection-owners/","tags":["reports","security","users"],"text":"List site collection owners \u00b6 Author: Patrick Lamber This script helps you to list and export all site collection owners in your SharePoint Online sites. PowerShell $fileExportPath = \"<PUTYOURPATHHERE.csv>\" $m365Status = m365 status - -output text if ( $m365Status -eq \"Logged Out\" ) { # Connection to Microsoft 365 m365 login } $results = @() Write-host \"Retrieving all sites...\" $allSPOSites = m365 spo site list | ConvertFrom-Json $siteCount = $allSPOSites . Count Write-Host \"Processing $siteCount sites...\" #Loop through each site $counter = 0 foreach ( $site in $allSPOSites ){ $counter ++ Write-Host \"Processing $( $site . Url ) ... ($counter/$siteCount)\" $users = m365 spo user list - -webUrl $site . Url -o json | ConvertFrom-Json $owners = $users . value | where { $_ . IsSiteAdmin -eq $true } foreach ( $owner in $owners ){ $results += [pscustomobject][ordered] @{ SiteUrl = $site . Url LoginName = $owner . LoginName Title = $owner . Title Email = $owner . Email } } } Write-Host \"Exporting file to $fileExportPath...\" $results | Export-Csv -Path $fileExportPath -NoTypeInformation Write-Host \"Completed.\"","title":"List site collection owners"},{"location":"sample-scripts/spo/list-site-collection-owners/#list-site-collection-owners","text":"Author: Patrick Lamber This script helps you to list and export all site collection owners in your SharePoint Online sites. PowerShell $fileExportPath = \"<PUTYOURPATHHERE.csv>\" $m365Status = m365 status - -output text if ( $m365Status -eq \"Logged Out\" ) { # Connection to Microsoft 365 m365 login } $results = @() Write-host \"Retrieving all sites...\" $allSPOSites = m365 spo site list | ConvertFrom-Json $siteCount = $allSPOSites . Count Write-Host \"Processing $siteCount sites...\" #Loop through each site $counter = 0 foreach ( $site in $allSPOSites ){ $counter ++ Write-Host \"Processing $( $site . Url ) ... ($counter/$siteCount)\" $users = m365 spo user list - -webUrl $site . Url -o json | ConvertFrom-Json $owners = $users . value | where { $_ . IsSiteAdmin -eq $true } foreach ( $owner in $owners ){ $results += [pscustomobject][ordered] @{ SiteUrl = $site . Url LoginName = $owner . LoginName Title = $owner . Title Email = $owner . Email } } } Write-Host \"Exporting file to $fileExportPath...\" $results | Export-Csv -Path $fileExportPath -NoTypeInformation Write-Host \"Completed.\"","title":"List site collection owners"},{"location":"sample-scripts/spo/list-site-externalusers/","tags":["guests","security","users"],"text":"List all external users in all site collections \u00b6 Author: Albert-Jan Schot This script helps you to list all external users in all SharePoint Online sites. It provides insights in who the users are, and if available who they where invited by. PowerShell $fileExportPath = \"<PUTYOURPATHHERE.csv>\" $m365Status = m365 status - -output text if ( $m365Status -eq \"Logged Out\" ) { # Connection to Microsoft 365 m365 login } $results = @() Write-host \"Retrieving all sites and check external users...\" $allSPOSites = m365 spo site list | ConvertFrom-Json $siteCount = $allSPOSites . Count Write-Host \"Processing $siteCount sites...\" #Loop through each site $siteCounter = 0 foreach ( $site in $allSPOSites ) { $siteCounter ++ Write-Host \"Processing $( $site . Url ) ... ($siteCounter/$siteCount)\" Write-host \"Retrieving all external users ...\" $users = m365 spo user list - -webUrl $site . Url - -output json - -query \"[?contains(LoginName,'#ext#')]\" | ConvertFrom-Json foreach ( $user in $users ) { $externalUserObject = m365 spo externaluser list - -siteUrl $site . url -o json - -query \"[?AcceptedAs == ' $( $user . Email ) ']\" | ConvertFrom-Json $results += [pscustomobject][ordered] @{ UserPrincipalName = $user . UserPrincipalName Email = $user . Email InvitedAs = $externalUserObject . InvitedAs WhenCreated = $externalUserObject . WhenCreated InvitedBy = $externalUserObject . InvitedBy Url = $site . Url } } } Write-Host \"Exporting file to $fileExportPath...\" $results | Export-Csv -Path $fileExportPath -NoTypeInformation Write-Host \"Completed.\"","title":"List all external users in all site collections"},{"location":"sample-scripts/spo/list-site-externalusers/#list-all-external-users-in-all-site-collections","text":"Author: Albert-Jan Schot This script helps you to list all external users in all SharePoint Online sites. It provides insights in who the users are, and if available who they where invited by. PowerShell $fileExportPath = \"<PUTYOURPATHHERE.csv>\" $m365Status = m365 status - -output text if ( $m365Status -eq \"Logged Out\" ) { # Connection to Microsoft 365 m365 login } $results = @() Write-host \"Retrieving all sites and check external users...\" $allSPOSites = m365 spo site list | ConvertFrom-Json $siteCount = $allSPOSites . Count Write-Host \"Processing $siteCount sites...\" #Loop through each site $siteCounter = 0 foreach ( $site in $allSPOSites ) { $siteCounter ++ Write-Host \"Processing $( $site . Url ) ... ($siteCounter/$siteCount)\" Write-host \"Retrieving all external users ...\" $users = m365 spo user list - -webUrl $site . Url - -output json - -query \"[?contains(LoginName,'#ext#')]\" | ConvertFrom-Json foreach ( $user in $users ) { $externalUserObject = m365 spo externaluser list - -siteUrl $site . url -o json - -query \"[?AcceptedAs == ' $( $user . Email ) ']\" | ConvertFrom-Json $results += [pscustomobject][ordered] @{ UserPrincipalName = $user . UserPrincipalName Email = $user . Email InvitedAs = $externalUserObject . InvitedAs WhenCreated = $externalUserObject . WhenCreated InvitedBy = $externalUserObject . InvitedBy Url = $site . Url } } } Write-Host \"Exporting file to $fileExportPath...\" $results | Export-Csv -Path $fileExportPath -NoTypeInformation Write-Host \"Completed.\"","title":"List all external users in all site collections"},{"location":"sample-scripts/spo/list-tenant-wide-extensions/","tags":["customizations","reports"],"text":"List all tenant-wide extensions \u00b6 Author: Shantha Kumar T The following script lists all tenant-wide extensions deployed in the tenant. The sample returns the Id, Title, Extension Location and Extension Disabled status of each extension. PowerShell Bash $listName = \"Tenant Wide Extensions\" $fields = \"Id, Title, TenantWideExtensionDisabled, TenantWideExtensionLocation\" $appcatalogurl = m365 spo tenant appcatalogurl get m365 spo listitem list - -title $listName - -webUrl $appcatalogurl - -fields $fields #!/bin/bash listName = \"Tenant Wide Extensions\" fields = \"Id, Title, TenantWideExtensionLocation, TenantWideExtensionDisabled\" appcatalogurl = $( m365 spo tenant appcatalogurl get ) m365 spo listitem list --title \" $listName \" --webUrl $appcatalogurl --fields \" $fields \" Note To view more/different properties of the extensions, adjust the internal names in the fields variable. Column Internal Name Description Title Title Title of the extension. Component Id TenantWideExtensionComponentId The manifest ID of the component. It has to be in GUID format and the component must exist in the App Catalog. Component Properties TenantWideExtensionComponentProperties component properties. Web Template TenantWideExtensionWebTemplate It can be used to target extension only to a specific web template. List template TenantWideExtensionListTemplate List type as a number. Location TenantWideExtensionLocation Location of the extension. There are different support locations for application customizers and ListView Command Sets. Sequence TenantWideExtensionSequence The sequence of the extension in rendering. Host Properties TenantWideExtensionHostProperties Additional server-side configuration, like pre-allocated height for placeholders. Disabled TenantWideExtensionDisabled Is the extension enabled or disabled?","title":"List all tenant-wide extensions"},{"location":"sample-scripts/spo/list-tenant-wide-extensions/#list-all-tenant-wide-extensions","text":"Author: Shantha Kumar T The following script lists all tenant-wide extensions deployed in the tenant. The sample returns the Id, Title, Extension Location and Extension Disabled status of each extension. PowerShell Bash $listName = \"Tenant Wide Extensions\" $fields = \"Id, Title, TenantWideExtensionDisabled, TenantWideExtensionLocation\" $appcatalogurl = m365 spo tenant appcatalogurl get m365 spo listitem list - -title $listName - -webUrl $appcatalogurl - -fields $fields #!/bin/bash listName = \"Tenant Wide Extensions\" fields = \"Id, Title, TenantWideExtensionLocation, TenantWideExtensionDisabled\" appcatalogurl = $( m365 spo tenant appcatalogurl get ) m365 spo listitem list --title \" $listName \" --webUrl $appcatalogurl --fields \" $fields \" Note To view more/different properties of the extensions, adjust the internal names in the fields variable. Column Internal Name Description Title Title Title of the extension. Component Id TenantWideExtensionComponentId The manifest ID of the component. It has to be in GUID format and the component must exist in the App Catalog. Component Properties TenantWideExtensionComponentProperties component properties. Web Template TenantWideExtensionWebTemplate It can be used to target extension only to a specific web template. List template TenantWideExtensionListTemplate List type as a number. Location TenantWideExtensionLocation Location of the extension. There are different support locations for application customizers and ListView Command Sets. Sequence TenantWideExtensionSequence The sequence of the extension in rendering. Host Properties TenantWideExtensionHostProperties Additional server-side configuration, like pre-allocated height for placeholders. Disabled TenantWideExtensionDisabled Is the extension enabled or disabled?","title":"List all tenant-wide extensions"},{"location":"sample-scripts/spo/monitor-site-collection-storage-usage/","tags":["reports","sites"],"text":"Monitor Site Collections Storage Usage \u00b6 Inspired by Salaudeen Rajack PowerShell <# .SYNOPSIS Monitor Site Collections storage usage and send an email. .DESCRIPTION Monitor Site Collections storage usage and send an email with sites over the designated storage threshold. .EXAMPLE PS C:\\> Send-SiteCollectionStorageReport -storageThreshold 60 -sendTo john.smith@contoso.com Running this function with send an email to John Smith with all the sites over 60% storage used. .INPUTS Inputs (if any) .OUTPUTS Output (if any) .NOTES None. #> function Send-SiteCollectionStorageReport { [ CmdletBinding ()] param ( [ Parameter ( Mandatory = $true , HelpMessage = \"Number for the threshold percentage (i.e.: 50 for every sites above 50% storage used\" )] [int] $storageThreshold , [ Parameter ( Mandatory = $true , HelpMessage = \"User email address to send the report to\" )] [string] $sendTo ) #Declare variables $allSites = m365 spo site list | ConvertFrom-Json $largeSites = $allSites | Where-Object { $_ . StorageUsage -gt 1 } $results = @() # Format the headers for the email $style = \"<style>BODY{font-family: Arial; font-size: 10pt;}\" $style = $style + \"TABLE{border: 1px solid black; border-collapse: collapse;}\" $style = $style + \"TH{border: 1px solid black; background: #dddddd; padding: 5px; }\" $style = $style + \"TD{border: 1px solid black; padding: 5px; }\" $style = $style + \"</style>\" #Format the data foreach ( $site in $largeSites ) { $results += [pscustomobject][ordered] @{ SiteName = $site . Title \"StorageUsed (GB)\" = ( \u201c { 0 : N2 } \u201d -f ( $site . StorageUsage / 1024 )) \"StorageLimit (GB)\" = ( $site . StorageMaximumLevel / 1024 ) StorageUsedInPercent = ( \u201c { 0 : P2 } \u201d -f ( $site . StorageUsage / $site . StorageMaximumLevel )) } } #Filter to only sites above the threshold limit $siteExceeding = $results | Where-Object { $_ . StorageUsedInPercent -gt $storageThreshold } #Send an email if sites are over the designated threshold limit if ( $null -ne $siteExceeding ) { $emailBody = $siteExceeding | ConvertTo-Html -Head $style $emailBody = $emailBody -replace '\"' , '\\\"' ## To be parsed correctly by Node.js when sending the email m365 outlook mail send - -to $sendTo - -subject \"Site Collections Storage Report\" - -bodyContents \"$emailBody\" - -bodyContentType HTML - -saveToSentItems false } }","title":"Monitor Site Collections Storage Usage"},{"location":"sample-scripts/spo/monitor-site-collection-storage-usage/#monitor-site-collections-storage-usage","text":"Inspired by Salaudeen Rajack PowerShell <# .SYNOPSIS Monitor Site Collections storage usage and send an email. .DESCRIPTION Monitor Site Collections storage usage and send an email with sites over the designated storage threshold. .EXAMPLE PS C:\\> Send-SiteCollectionStorageReport -storageThreshold 60 -sendTo john.smith@contoso.com Running this function with send an email to John Smith with all the sites over 60% storage used. .INPUTS Inputs (if any) .OUTPUTS Output (if any) .NOTES None. #> function Send-SiteCollectionStorageReport { [ CmdletBinding ()] param ( [ Parameter ( Mandatory = $true , HelpMessage = \"Number for the threshold percentage (i.e.: 50 for every sites above 50% storage used\" )] [int] $storageThreshold , [ Parameter ( Mandatory = $true , HelpMessage = \"User email address to send the report to\" )] [string] $sendTo ) #Declare variables $allSites = m365 spo site list | ConvertFrom-Json $largeSites = $allSites | Where-Object { $_ . StorageUsage -gt 1 } $results = @() # Format the headers for the email $style = \"<style>BODY{font-family: Arial; font-size: 10pt;}\" $style = $style + \"TABLE{border: 1px solid black; border-collapse: collapse;}\" $style = $style + \"TH{border: 1px solid black; background: #dddddd; padding: 5px; }\" $style = $style + \"TD{border: 1px solid black; padding: 5px; }\" $style = $style + \"</style>\" #Format the data foreach ( $site in $largeSites ) { $results += [pscustomobject][ordered] @{ SiteName = $site . Title \"StorageUsed (GB)\" = ( \u201c { 0 : N2 } \u201d -f ( $site . StorageUsage / 1024 )) \"StorageLimit (GB)\" = ( $site . StorageMaximumLevel / 1024 ) StorageUsedInPercent = ( \u201c { 0 : P2 } \u201d -f ( $site . StorageUsage / $site . StorageMaximumLevel )) } } #Filter to only sites above the threshold limit $siteExceeding = $results | Where-Object { $_ . StorageUsedInPercent -gt $storageThreshold } #Send an email if sites are over the designated threshold limit if ( $null -ne $siteExceeding ) { $emailBody = $siteExceeding | ConvertTo-Html -Head $style $emailBody = $emailBody -replace '\"' , '\\\"' ## To be parsed correctly by Node.js when sending the email m365 outlook mail send - -to $sendTo - -subject \"Site Collections Storage Report\" - -bodyContents \"$emailBody\" - -bodyContentType HTML - -saveToSentItems false } }","title":"Monitor Site Collections Storage Usage"},{"location":"sample-scripts/spo/perform-operations-not-covered-by-cli-for-microsoft-365/","tags":["files","listitems"],"text":"How to perform operations if a command is not covered by the CLI for Microsoft 365 \u00b6 Author: Joseph Velliah One of the most powerful tools a Microsoft 365 user has is the CLI for Microsoft 365. The command line allows any user to get a lot of things done in a fast way. There is no boundary to the number of things a seasoned user can do by merely using the CLI for Microsoft 365. This script shows how to perform operations if a command is not covered by the CLI for Microsoft 365. Right now, AttachmentFiles property associated with a SharePoint list item is not available in CLI for Microsoft 365, so we need to execute a separate query to /_api/web/lists/getByTitle('list-title')/items(item-id)/AttachmentFiles endpoint to get the item attachments. To call AttachmentFiles endpoint, we must acquire an access token from the Microsoft identity platform. To do this we can use m365 util accesstoken get command and attach the access token with AttachmentFiles endpoint as shown in this script. Prerequisites: CLI for Microsoft 365 SharePoint Online site with list item attachments PowerShell Function Get-ListAttachments () { param ( [ Parameter ( Mandatory = $true )] [string] $AccessToken , [ Parameter ( Mandatory = $true )] [string] $SiteURL , [ Parameter ( Mandatory = $true )] [string] $ListTitle , [ Parameter ( Mandatory = $true )] [int] $ItemId ) Try { $ListItemAttachmentsEndPoint = \" $( $SiteURL ) /_api/web/lists/getbytitle(' $( $ListTitle ) ')/items( $( $ItemId ) )/AttachmentFiles\" $Header = @{ \"Authorization\" = \"Bearer $( $AccessToken ) \" \"Accept\" = \"application/json; odata=verbose\" \"Content-Type\" = \"application/json \" } $ListItemAttachments = Invoke-RestMethod -Uri $ListItemAttachmentsEndPoint -Headers $Header -Method Get return $ListItemAttachments . d . results } Catch { throw \"Error Getting List Item Attachments! $( $_ . Exception . Message ) \" } } Function Download-ListAttachments () { param ( [ Parameter ( Mandatory = $true )] [string] $TenantName , [ Parameter ( Mandatory = $true )] [string] $SiteURL , [ Parameter ( Mandatory = $true )] [string] $ListTitle , [ Parameter ( Mandatory = $true )] [string] $DownloadDirectory ) Try { #Get All Items from the List $ListItems = m365 spo listitem list - -webUrl $SiteURL - -title $ListTitle -o json | ConvertFrom-Json -AsHashtable #Iterate through each list item Foreach ( $Item in $ListItems ) { Try { Write-Output \"Processing Item Id $( $Item . Id ) \" # Right now AttachmentFiles property is not available in cli-microsoft365 so we need to execute a separate query to /_api/web/lists/getByTitle('list-title')/items(item-id)/AttachmentFiles to get the item attachments. # AttachmentFiles endpoint requires access token $AccessToken = m365 util accesstoken get - -resource \"https:// $( $TenantName ) .sharepoint.com\" - -new #Get All attachments from the List Item $Attachments = Get-ListAttachments -AccessToken $AccessToken -SiteURL $SiteURL -ListTitle $ListTitle -ItemId $Item . Id If ( $Attachments . Length -gt 0 ) { #Create directory for each list item if it doesn't exist $TargetDownloadDirectory = \" $( $DownloadDirectory ) / $( $Item . Id ) \" If (!( Test-Path -path $TargetDownloadDirectory )) { New-Item $TargetDownloadDirectory -type Directory | Out-Null } foreach ( $Attachment in $Attachments ) { Try { Write-Output \"Downloading $( $Attachment . FileName ) \" $TargetFilePath = \" $( $TargetDownloadDirectory ) / $( $Attachment . FileName ) \" #Download attachment m365 spo file get - -webUrl $SiteURL - -url $Attachment . ServerRelativeUrl - -asFile - -path $TargetFilePath } Catch { Write-Error \"Error Downloading This Attachment! $( $_ . Exception . Message ) \" } } } else { Write-Warning \"Attachments Not Found For This List Item!\" } } Catch { Write-Error \"Error Downloading This List Item Attachments! $( $_ . Exception . Message ) \" } } } Catch { Write-Error \"Error Downloading List Attachments! $( $_ . Exception . Message ) \" } } #Set Parameters $TenantName = \"tenant-name\" $SiteRelativePath = \"site-relative-path\" $ListTitle = \"list-title\" $DownloadDirectory = \" $( $PSScriptRoot ) / $( $ListTitle ) \" $SiteURL = \"https:// $( $TenantName ) .sharepoint.com/ $( $SiteRelativePath ) \" #Call the function to download list items attachments Download-ListAttachments -TenantName $TenantName -SiteURL $SiteURL -ListTitle $ListTitle -DownloadDirectory $DownloadDirectory","title":"How to perform operations if a command is not covered by the CLI for Microsoft 365"},{"location":"sample-scripts/spo/perform-operations-not-covered-by-cli-for-microsoft-365/#how-to-perform-operations-if-a-command-is-not-covered-by-the-cli-for-microsoft-365","text":"Author: Joseph Velliah One of the most powerful tools a Microsoft 365 user has is the CLI for Microsoft 365. The command line allows any user to get a lot of things done in a fast way. There is no boundary to the number of things a seasoned user can do by merely using the CLI for Microsoft 365. This script shows how to perform operations if a command is not covered by the CLI for Microsoft 365. Right now, AttachmentFiles property associated with a SharePoint list item is not available in CLI for Microsoft 365, so we need to execute a separate query to /_api/web/lists/getByTitle('list-title')/items(item-id)/AttachmentFiles endpoint to get the item attachments. To call AttachmentFiles endpoint, we must acquire an access token from the Microsoft identity platform. To do this we can use m365 util accesstoken get command and attach the access token with AttachmentFiles endpoint as shown in this script. Prerequisites: CLI for Microsoft 365 SharePoint Online site with list item attachments PowerShell Function Get-ListAttachments () { param ( [ Parameter ( Mandatory = $true )] [string] $AccessToken , [ Parameter ( Mandatory = $true )] [string] $SiteURL , [ Parameter ( Mandatory = $true )] [string] $ListTitle , [ Parameter ( Mandatory = $true )] [int] $ItemId ) Try { $ListItemAttachmentsEndPoint = \" $( $SiteURL ) /_api/web/lists/getbytitle(' $( $ListTitle ) ')/items( $( $ItemId ) )/AttachmentFiles\" $Header = @{ \"Authorization\" = \"Bearer $( $AccessToken ) \" \"Accept\" = \"application/json; odata=verbose\" \"Content-Type\" = \"application/json \" } $ListItemAttachments = Invoke-RestMethod -Uri $ListItemAttachmentsEndPoint -Headers $Header -Method Get return $ListItemAttachments . d . results } Catch { throw \"Error Getting List Item Attachments! $( $_ . Exception . Message ) \" } } Function Download-ListAttachments () { param ( [ Parameter ( Mandatory = $true )] [string] $TenantName , [ Parameter ( Mandatory = $true )] [string] $SiteURL , [ Parameter ( Mandatory = $true )] [string] $ListTitle , [ Parameter ( Mandatory = $true )] [string] $DownloadDirectory ) Try { #Get All Items from the List $ListItems = m365 spo listitem list - -webUrl $SiteURL - -title $ListTitle -o json | ConvertFrom-Json -AsHashtable #Iterate through each list item Foreach ( $Item in $ListItems ) { Try { Write-Output \"Processing Item Id $( $Item . Id ) \" # Right now AttachmentFiles property is not available in cli-microsoft365 so we need to execute a separate query to /_api/web/lists/getByTitle('list-title')/items(item-id)/AttachmentFiles to get the item attachments. # AttachmentFiles endpoint requires access token $AccessToken = m365 util accesstoken get - -resource \"https:// $( $TenantName ) .sharepoint.com\" - -new #Get All attachments from the List Item $Attachments = Get-ListAttachments -AccessToken $AccessToken -SiteURL $SiteURL -ListTitle $ListTitle -ItemId $Item . Id If ( $Attachments . Length -gt 0 ) { #Create directory for each list item if it doesn't exist $TargetDownloadDirectory = \" $( $DownloadDirectory ) / $( $Item . Id ) \" If (!( Test-Path -path $TargetDownloadDirectory )) { New-Item $TargetDownloadDirectory -type Directory | Out-Null } foreach ( $Attachment in $Attachments ) { Try { Write-Output \"Downloading $( $Attachment . FileName ) \" $TargetFilePath = \" $( $TargetDownloadDirectory ) / $( $Attachment . FileName ) \" #Download attachment m365 spo file get - -webUrl $SiteURL - -url $Attachment . ServerRelativeUrl - -asFile - -path $TargetFilePath } Catch { Write-Error \"Error Downloading This Attachment! $( $_ . Exception . Message ) \" } } } else { Write-Warning \"Attachments Not Found For This List Item!\" } } Catch { Write-Error \"Error Downloading This List Item Attachments! $( $_ . Exception . Message ) \" } } } Catch { Write-Error \"Error Downloading List Attachments! $( $_ . Exception . Message ) \" } } #Set Parameters $TenantName = \"tenant-name\" $SiteRelativePath = \"site-relative-path\" $ListTitle = \"list-title\" $DownloadDirectory = \" $( $PSScriptRoot ) / $( $ListTitle ) \" $SiteURL = \"https:// $( $TenantName ) .sharepoint.com/ $( $SiteRelativePath ) \" #Call the function to download list items attachments Download-ListAttachments -TenantName $TenantName -SiteURL $SiteURL -ListTitle $ListTitle -DownloadDirectory $DownloadDirectory","title":"How to perform operations if a command is not covered by the CLI for Microsoft 365"},{"location":"sample-scripts/spo/planner-migrate-sharepoint-list/","tags":["lists","migration","tasks"],"text":"Planner migration to SharePoint list \u00b6 Author: Albert-Jan Schot Use the CLI for Microsoft 365 to migrate an existing plan to a SharePoint Online List with this sample. You can specify the planner plan that you want to migrate and the script will generate a new list for you with the required fields and views. The current sample does migrate all tasks however it skips the following information: Categories Comments made on tasks Attachments PowerShell param ( [ Parameter ( Mandatory = $true , HelpMessage = \"URL of the target site\" , Position = 0 )] [string] $SiteUrl , [ Parameter ( Mandatory = $true , HelpMessage = \"Groupname or Planner Plan name\" , Position = 1 )] [string] $PlanGroupName , [ Parameter ( HelpMessage = \"Show progress messages\" , Position = 2 )] [switch] $ShowProgress , [ Parameter ( HelpMessage = \"Skip List creation (for running multiple migrations without creating the list)\" , Position = 3 )] [switch] $SkipListCreation ) $m365Status = m365 status - -output text if ( $m365Status -match \"Logged Out\" ) { # Connection to Microsoft 365 m365 login } $plans = m365 planner plan list - -ownerGroupName $PlanGroupName | ConvertFrom-Json Write-Host \"Found $( $plans . length ) plans to migrate\" foreach ( $plan in $plans ) { $migrationTasks = @() $plannerBuckets = m365 planner bucket list - -planId $plan . id | ConvertFrom-Json $plannerTasks = m365 planner task list - -planId $plan . id | ConvertFrom-Json foreach ( $task in $plannerTasks ) { $taskDetails = m365 planner task get - -id $task . id - -query '{description: description, checklist: checklist.*.{isChecked: isChecked, title: title} }' | ConvertFrom-Json $assignedUsers = @() foreach ( $userId in $( $task . assignments | ForEach -Object { $( $_ ). PSObject . Properties . Name })) { $assignedUsers += \"{'Key':'i:0#.f|membership| $( m365 aad user get - -id $userId - -query \"userPrincipalName\" | ConvertFrom-Json ) '}\" } $checklist = $null ; foreach ( $item in $taskDetails . checklist ) { if ( $item . isChecked ) { $checklist += \"[x] \" + $item . title + \"<br>\" ; } else { $checklist += \"[ ] \" + $item . title + \"<br>\" ; } } $migrationTasks += [pscustomobject][ordered] @{ Title = $task . title Bucket = ( $plannerBuckets | Where-Object { $_ . id -eq $task . bucketId }). Name Progress = $task . percentComplete Priority = $task . priority Description = ( $task . hasDescription ? $taskDetails . description : ' ' ) StartDate = $task . startDateTime DueDate = $task . dueDateTime Checklist = $checklist AssignedTo = $( $assignedUsers ? \"[ $( $assignedUsers -join \",\" ) ]\" : $null ) } } Write-Host \" `n Found $( $plannerBuckets . length ) buckets and $( $plannerTasks . length ) tasks to migrate for the plan $( $plan . title ) \" if ( $plannerTasks . length -gt 0 ) { if ( $false -eq $SkipListCreation ) { if ( $ShowProgress ) { Write-Host \"Setting up List\" } $list = m365 spo list add - -title $plan . title - -baseTemplate GenericList - -webUrl $SiteUrl | ConvertFrom-Json $bucketOptions = $plannerBuckets . name -join \"</CHOICE><CHOICE>\" $fieldXml = '<Field DisplayName=\\\"Bucket\\\" FillInChoice=\\\"FALSE\\\" Format=\\\"Dropdown\\\" IsModern=\\\"TRUE\\\" Name=\\\"Bucket\\\" Title=\\\"Bucket\\\" Type=\\\"Choice\\\" ID=\\\"{e5a87c1b-14fe-4a0d-b2a1-69ed51aefe0a}\\\" SourceID=\\\"{be343550-aa79-4954-95f7-e7f3e1158888}\\\" StaticName=\\\"Bucket\\\" ColName=\\\"nvarchar7\\\" RowOrdinal=\\\"0\\\" Version=\\\"5\\\"><CHOICES><CHOICE>' + $bucketOptions + '</CHOICE></CHOICES></Field>' ; $field = m365 spo field add - -webUrl $SiteUrl - -listTitle $list . title - -xml $fieldXml - -options AddToAllContentTypes $field = m365 spo field add - -webUrl $SiteUrl - -listTitle $list . title - -xml '<Field DisplayName=\\\"Assigned to\\\" Format=\\\"Dropdown\\\" IsModern=\\\"TRUE\\\" List=\\\"UserInfo\\\" Mult=\\\"TRUE\\\" Name=\\\"AssignedTo\\\" Title=\\\"AssignedTo\\\" Type=\\\"UserMulti\\\" UserSelectionMode=\\\"0\\\" UserSelectionScope=\\\"0\\\" ID=\\\"{38a2a5a8-5518-4242-9b9b-760777f5e7ea}\\\" SourceID=\\\"{50756447-36ab-447e-9b30-859b91aba49d}\\\" StaticName=\\\"AssignedTo\\\" />' - -options AddToAllContentTypes $field = m365 spo field add - -webUrl $SiteUrl - -listTitle $list . title - -xml '<Field DisplayName=\\\"Start date\\\" FriendlyDisplayFormat=\\\"Disabled\\\" Format=\\\"DateOnly\\\" IsModern=\\\"TRUE\\\" Name=\\\"Startdate\\\" Title=\\\"Start date\\\" Type=\\\"DateTime\\\" ID=\\\"{91ff7e76-118b-49e1-85dd-afda84856e96}\\\" SourceID=\\\"{50756447-36ab-447e-9b30-859b91aba49d}\\\" StaticName=\\\"Startdate\\\" ColName=\\\"datetime1\\\" RowOrdinal=\\\"0\\\" />' - -options AddToAllContentTypes $field = m365 spo field add - -webUrl $SiteUrl - -listTitle $list . title - -xml '<Field DisplayName=\\\"Due date\\\" FriendlyDisplayFormat=\\\"Disabled\\\" Format=\\\"DateOnly\\\" IsModern=\\\"TRUE\\\" Name=\\\"Duedate\\\" Title=\\\"Due date\\\" Type=\\\"DateTime\\\" ID=\\\"{23f7955a-1b1b-46f9-8b0f-316dbb37b63e}\\\" SourceID=\\\"{50756447-36ab-447e-9b30-859b91aba49d}\\\" StaticName=\\\"Duedate\\\" ColName=\\\"datetime2\\\" RowOrdinal=\\\"0\\\" />' - -options AddToAllContentTypes $field = m365 spo field add - -webUrl $SiteUrl - -listTitle $list . title - -xml '<Field AppendOnly=\\\"FALSE\\\" DisplayName=\\\"Checklist\\\" Format=\\\"Dropdown\\\" IsModern=\\\"TRUE\\\" IsolateStyles=\\\"TRUE\\\" Name=\\\"Checklist\\\" RichText=\\\"TRUE\\\" RichTextMode=\\\"FullHtml\\\" Title=\\\"Checklist\\\" Type=\\\"Note\\\" ID=\\\"{05f7b70d-eb7c-4428-afe6-ca9f2f22c5af}\\\" SourceID=\\\"{50756447-36ab-447e-9b30-859b91aba49d}\\\" StaticName=\\\"Checklist\\\" ColName=\\\"ntext2\\\" RowOrdinal=\\\"0\\\" CustomFormatter=\\\"\\\" Required=\\\"FALSE\\\" EnforceUniqueValues=\\\"FALSE\\\" Indexed=\\\"FALSE\\\" NumLines=\\\"6\\\" RestrictedMode=\\\"TRUE\\\" Version=\\\"1\\\" />' - -options AddToAllContentTypes $field = m365 spo field add - -webUrl $SiteUrl - -listTitle $list . title - -xml '<Field AppendOnly=\\\"FALSE\\\" DisplayName=\\\"Description\\\" Format=\\\"Dropdown\\\" IsModern=\\\"TRUE\\\" IsolateStyles=\\\"FALSE\\\" Name=\\\"Description\\\" RichText=\\\"FALSE\\\" RichTextMode=\\\"Compatible\\\" Title=\\\"Description\\\" Type=\\\"Note\\\" ID=\\\"{50d7e60e-ce7d-4428-afe6-ca9f2f22c5ce}\\\" SourceID=\\\"{50756447-36ab-447e-9b30-859b91aba49d}\\\" StaticName=\\\"Description\\\" ColName=\\\"ntext2\\\" RowOrdinal=\\\"0\\\" />' - -options AddToAllContentTypes $field = m365 spo field add - -webUrl $SiteUrl - -listTitle $list . title - -xml '<Field Type=\\\"Number\\\" DisplayName=\\\"Priority\\\" Required=\\\"FALSE\\\" EnforceUniqueValues=\\\"FALSE\\\" Indexed=\\\"FALSE\\\" ID=\\\"{a9639335-a3cf-41d2-a1fb-28d02c8ef09f}\\\" SourceID=\\\"{be343550-aa79-4954-95f7-e7f3e1158888}\\\" StaticName=\\\"Priority\\\" Name=\\\"Priority\\\" ColName=\\\"float1\\\" RowOrdinal=\\\"0\\\" CustomFormatter=\\\"{&quot;$schema&quot;:&quot;https://developer.microsoft.com/json-schemas/sp/v2/column-formatting.schema.json&quot;,&quot;elmType&quot;:&quot;div&quot;,&quot;style&quot;:{&quot;flex-wrap&quot;:&quot;wrap&quot;,&quot;display&quot;:&quot;flex&quot;},&quot;children&quot;:[{&quot;elmType&quot;:&quot;div&quot;,&quot;style&quot;:{&quot;box-sizing&quot;:&quot;border-box&quot;,&quot;padding&quot;:&quot;4px 8px 5px 8px&quot;,&quot;display&quot;:&quot;flex&quot;,&quot;border-radius&quot;:&quot;16px&quot;,&quot;height&quot;:&quot;24px&quot;,&quot;align-items&quot;:&quot;center&quot;,&quot;white-space&quot;:&quot;nowrap&quot;,&quot;overflow&quot;:&quot;hidden&quot;,&quot;margin&quot;:&quot;4px 4px 4px 4px&quot;},&quot;attributes&quot;:{&quot;class&quot;:{&quot;operator&quot;:&quot;:&quot;,&quot;operands&quot;:[{&quot;operator&quot;:&quot;==&quot;,&quot;operands&quot;:[&quot;[$Priority]&quot;,1]},&quot;sp-css-backgroundColor-BgRed sp-css-borderColor-WhiteFont&quot;,{&quot;operator&quot;:&quot;:&quot;,&quot;operands&quot;:[{&quot;operator&quot;:&quot;==&quot;,&quot;operands&quot;:[&quot;[$Priority]&quot;,3]},&quot;sp-css-backgroundColor-BgPeach sp-css-borderColor-PeachFont&quot;,{&quot;operator&quot;:&quot;:&quot;,&quot;operands&quot;:[{&quot;operator&quot;:&quot;==&quot;,&quot;operands&quot;:[&quot;[$Priority]&quot;,5]},&quot;sp-css-backgroundColor-BgGold&quot;,{&quot;operator&quot;:&quot;:&quot;,&quot;operands&quot;:[{&quot;operator&quot;:&quot;==&quot;,&quot;operands&quot;:[&quot;[$Priority]&quot;,9]},&quot;&quot;,{&quot;operator&quot;:&quot;:&quot;,&quot;operands&quot;:[{&quot;operator&quot;:&quot;==&quot;,&quot;operands&quot;:[&quot;[$Priority]&quot;,9]},&quot;sp-css-backgroundColor-BgMintGreen sp-css-borderColor-MintGreenFont&quot;,&quot;sp-field-borderAllRegular sp-field-borderAllSolid sp-css-borderColor-neutralSecondary&quot;]}]}]}]}]}},&quot;children&quot;:[{&quot;elmType&quot;:&quot;span&quot;,&quot;style&quot;:{&quot;line-height&quot;:&quot;16px&quot;,&quot;height&quot;:&quot;14px&quot;},&quot;attributes&quot;:{&quot;iconName&quot;:{&quot;operator&quot;:&quot;:&quot;,&quot;operands&quot;:[{&quot;operator&quot;:&quot;==&quot;,&quot;operands&quot;:[&quot;[$Priority]&quot;,1]},&quot;RingerSolid&quot;,{&quot;operator&quot;:&quot;:&quot;,&quot;operands&quot;:[{&quot;operator&quot;:&quot;==&quot;,&quot;operands&quot;:[&quot;[$Priority]&quot;,3]},&quot;Important&quot;,{&quot;operator&quot;:&quot;:&quot;,&quot;operands&quot;:[{&quot;operator&quot;:&quot;==&quot;,&quot;operands&quot;:[&quot;[$Priority]&quot;,5]},&quot;LocationDot&quot;,{&quot;operator&quot;:&quot;:&quot;,&quot;operands&quot;:[{&quot;operator&quot;:&quot;==&quot;,&quot;operands&quot;:[&quot;[$Priority]&quot;,&quot;&quot;]},&quot;Down&quot;,{&quot;operator&quot;:&quot;:&quot;,&quot;operands&quot;:[{&quot;operator&quot;:&quot;==&quot;,&quot;operands&quot;:[&quot;[$Priority]&quot;,9]},&quot;&quot;,&quot;&quot;]}]}]}]}]},&quot;class&quot;:{&quot;operator&quot;:&quot;:&quot;,&quot;operands&quot;:[{&quot;operator&quot;:&quot;==&quot;,&quot;operands&quot;:[&quot;[$Priority]&quot;,1]},&quot;sp-css-color-WhiteFont&quot;,{&quot;operator&quot;:&quot;:&quot;,&quot;operands&quot;:[{&quot;operator&quot;:&quot;==&quot;,&quot;operands&quot;:[&quot;[$Priority]&quot;,3]},&quot;sp-css-color-PeachFont&quot;,{&quot;operator&quot;:&quot;:&quot;,&quot;operands&quot;:[{&quot;operator&quot;:&quot;==&quot;,&quot;operands&quot;:[&quot;[$Priority]&quot;,5]},&quot;&quot;,{&quot;operator&quot;:&quot;:&quot;,&quot;operands&quot;:[{&quot;operator&quot;:&quot;==&quot;,&quot;operands&quot;:[&quot;[$Priority]&quot;,&quot;&quot;]},&quot;&quot;,{&quot;operator&quot;:&quot;:&quot;,&quot;operands&quot;:[{&quot;operator&quot;:&quot;==&quot;,&quot;operands&quot;:[&quot;[$Priority]&quot;,9]},&quot;sp-css-color-MintGreenFont&quot;,&quot;&quot;]}]}]}]}]}}},{&quot;elmType&quot;:&quot;span&quot;,&quot;style&quot;:{&quot;overflow&quot;:&quot;hidden&quot;,&quot;text-overflow&quot;:&quot;ellipsis&quot;,&quot;padding&quot;:&quot;0 3px&quot;},&quot;txtContent&quot;:&quot;=if(@currentField == 1, ''Urgent'', if(@currentField == 3, ''Important'', if(@currentField == 5, ''Medium'', if(@currentField == 9, '''', ''Low''))))&quot;,&quot;attributes&quot;:{&quot;class&quot;:{&quot;operator&quot;:&quot;:&quot;,&quot;operands&quot;:[{&quot;operator&quot;:&quot;==&quot;,&quot;operands&quot;:[&quot;[$Priority]&quot;,1]},&quot;sp-css-color-WhiteFont&quot;,{&quot;operator&quot;:&quot;:&quot;,&quot;operands&quot;:[{&quot;operator&quot;:&quot;==&quot;,&quot;operands&quot;:[&quot;[$Priority]&quot;,3]},&quot;sp-css-color-PeachFont&quot;,{&quot;operator&quot;:&quot;:&quot;,&quot;operands&quot;:[{&quot;operator&quot;:&quot;==&quot;,&quot;operands&quot;:[&quot;[$Priority]&quot;,5]},&quot;sp-css-color-GoldFont&quot;,{&quot;operator&quot;:&quot;:&quot;,&quot;operands&quot;:[{&quot;operator&quot;:&quot;==&quot;,&quot;operands&quot;:[&quot;[$Priority]&quot;,0]},9,{&quot;operator&quot;:&quot;:&quot;,&quot;operands&quot;:[{&quot;operator&quot;:&quot;==&quot;,&quot;operands&quot;:[&quot;[$Priority]&quot;,9]},&quot;sp-css-color-MintGreenFont&quot;,&quot;&quot;]}]}]}]}]}}}]}]}\\\" Version=\\\"23\\\" />' - -options AddToAllContentTypes $field = m365 spo field add - -webUrl $SiteUrl - -listTitle $list . title - -xml '<Field CommaSeparator=\\\"TRUE\\\" CustomUnitOnRight=\\\"TRUE\\\" DisplayName=\\\"Progress\\\" Format=\\\"Dropdown\\\" IsModern=\\\"TRUE\\\" Name=\\\"Progress\\\" Percentage=\\\"FALSE\\\" Title=\\\"Progress\\\" Type=\\\"Number\\\" Unit=\\\"None\\\" ID=\\\"{abea0d9d-83b8-4d57-9c68-8b56ad4066c9}\\\" SourceID=\\\"{be343550-aa79-4954-95f7-e7f3e1158888}\\\" StaticName=\\\"Progress\\\" ColName=\\\"float2\\\" RowOrdinal=\\\"0\\\" CustomFormatter=\\\"{&quot;$schema&quot;:&quot;https://developer.microsoft.com/json-schemas/sp/v2/column-formatting.schema.json&quot;,&quot;elmType&quot;:&quot;div&quot;,&quot;style&quot;:{&quot;flex-wrap&quot;:&quot;wrap&quot;,&quot;display&quot;:&quot;flex&quot;},&quot;children&quot;:[{&quot;elmType&quot;:&quot;div&quot;,&quot;style&quot;:{&quot;box-sizing&quot;:&quot;border-box&quot;,&quot;padding&quot;:&quot;4px 8px 5px 8px&quot;,&quot;display&quot;:&quot;flex&quot;,&quot;border-radius&quot;:&quot;16px&quot;,&quot;height&quot;:&quot;24px&quot;,&quot;align-items&quot;:&quot;center&quot;,&quot;white-space&quot;:&quot;nowrap&quot;,&quot;overflow&quot;:&quot;hidden&quot;,&quot;margin&quot;:&quot;4px 4px 4px 4px&quot;},&quot;attributes&quot;:{&quot;class&quot;:{&quot;operator&quot;:&quot;:&quot;,&quot;operands&quot;:[{&quot;operator&quot;:&quot;==&quot;,&quot;operands&quot;:[&quot;@currentField&quot;,0]},&quot;sp-css-backgroundColor-BgLightGray sp-css-borderColor-LightGrayFont&quot;,{&quot;operator&quot;:&quot;:&quot;,&quot;operands&quot;:[{&quot;operator&quot;:&quot;==&quot;,&quot;operands&quot;:[&quot;@currentField&quot;,50]},&quot;sp-css-backgroundColor-BgGold sp-css-borderColor-GoldFont&quot;,{&quot;operator&quot;:&quot;:&quot;,&quot;operands&quot;:[{&quot;operator&quot;:&quot;==&quot;,&quot;operands&quot;:[&quot;@currentField&quot;,100]},&quot;sp-css-backgroundColor-BgGreen sp-css-borderColor-WhiteFont&quot;,{&quot;operator&quot;:&quot;:&quot;,&quot;operands&quot;:[{&quot;operator&quot;:&quot;==&quot;,&quot;operands&quot;:[&quot;@currentField&quot;,&quot;&quot;]},&quot;&quot;,&quot;sp-field-borderAllRegular sp-field-borderAllSolid sp-css-borderColor-neutralSecondary&quot;]}]}]}]}},&quot;children&quot;:[{&quot;elmType&quot;:&quot;span&quot;,&quot;style&quot;:{&quot;line-height&quot;:&quot;16px&quot;,&quot;height&quot;:&quot;14px&quot;},&quot;attributes&quot;:{&quot;iconName&quot;:{&quot;operator&quot;:&quot;:&quot;,&quot;operands&quot;:[{&quot;operator&quot;:&quot;==&quot;,&quot;operands&quot;:[&quot;@currentField&quot;,0]},&quot;CircleRing&quot;,{&quot;operator&quot;:&quot;:&quot;,&quot;operands&quot;:[{&quot;operator&quot;:&quot;==&quot;,&quot;operands&quot;:[&quot;@currentField&quot;,50]},&quot;CircleHalfFull&quot;,{&quot;operator&quot;:&quot;:&quot;,&quot;operands&quot;:[{&quot;operator&quot;:&quot;==&quot;,&quot;operands&quot;:[&quot;@currentField&quot;,100]},&quot;CircleFill&quot;,{&quot;operator&quot;:&quot;:&quot;,&quot;operands&quot;:[{&quot;operator&quot;:&quot;==&quot;,&quot;operands&quot;:[&quot;@currentField&quot;,&quot;&quot;]},&quot;&quot;,&quot;&quot;]}]}]}]},&quot;class&quot;:{&quot;operator&quot;:&quot;:&quot;,&quot;operands&quot;:[{&quot;operator&quot;:&quot;==&quot;,&quot;operands&quot;:[&quot;@currentField&quot;,0]},&quot;sp-css-color-LightGrayFont&quot;,{&quot;operator&quot;:&quot;:&quot;,&quot;operands&quot;:[{&quot;operator&quot;:&quot;==&quot;,&quot;operands&quot;:[&quot;@currentField&quot;,50]},&quot;sp-css-color-GoldFont&quot;,{&quot;operator&quot;:&quot;:&quot;,&quot;operands&quot;:[{&quot;operator&quot;:&quot;==&quot;,&quot;operands&quot;:[&quot;@currentField&quot;,100]},&quot;sp-css-color-WhiteFont&quot;,{&quot;operator&quot;:&quot;:&quot;,&quot;operands&quot;:[{&quot;operator&quot;:&quot;==&quot;,&quot;operands&quot;:[&quot;@currentField&quot;,&quot;&quot;]},&quot;&quot;,&quot;&quot;]}]}]}]}}},{&quot;elmType&quot;:&quot;span&quot;,&quot;style&quot;:{&quot;overflow&quot;:&quot;hidden&quot;,&quot;text-overflow&quot;:&quot;ellipsis&quot;,&quot;padding&quot;:&quot;0 3px&quot;},&quot;txtContent&quot;:&quot;=if(@currentField == 100, ''Completed'', if(@currentField == 50, ''Completed'', if(@currentField == 0, ''Not started'', '''')))&quot;,&quot;attributes&quot;:{&quot;class&quot;:{&quot;operator&quot;:&quot;:&quot;,&quot;operands&quot;:[{&quot;operator&quot;:&quot;==&quot;,&quot;operands&quot;:[&quot;@currentField&quot;,0]},&quot;sp-field-fontSizeSmall sp-css-color-LightGrayFont&quot;,{&quot;operator&quot;:&quot;:&quot;,&quot;operands&quot;:[{&quot;operator&quot;:&quot;==&quot;,&quot;operands&quot;:[&quot;@currentField&quot;,50]},&quot;sp-field-fontSizeSmall sp-css-color-GoldFont&quot;,{&quot;operator&quot;:&quot;:&quot;,&quot;operands&quot;:[{&quot;operator&quot;:&quot;==&quot;,&quot;operands&quot;:[&quot;@currentField&quot;,100]},&quot;sp-field-fontSizeSmall sp-css-color-WhiteFont&quot;,{&quot;operator&quot;:&quot;:&quot;,&quot;operands&quot;:[{&quot;operator&quot;:&quot;==&quot;,&quot;operands&quot;:[&quot;@currentField&quot;,&quot;&quot;]},&quot;&quot;,&quot;&quot;]}]}]}]}}}]}]}\\\" Version=\\\"2\\\" />' - -options AddToAllContentTypes $viewName = \"All Items\" $viewFields = @( \"Progress\" , \"Priority\" , \"Assigned_x0020_to\" , \"Due date\" , \"Start date\" ); foreach ( $field in $viewFields ) { m365 spo list view field add - -webUrl $SiteUrl - -listTitle $list . title - -viewTitle $viewName - -fieldTitle $field } $view = m365 spo list view set - -webUrl $SiteUrl - -listTitle $list . title - -viewTitle $viewName - -ViewQuery '<GroupBy Collapse=\\\"TRUE\\\" GroupLimit=\\\"30\\\"><FieldRef Name=\\\"Bucket\\\" /></GroupBy><OrderBy><FieldRef Name=\\\"ID\\\" /></OrderBy>' $view = m365 spo list view set - -webUrl $SiteUrl - -listTitle $list . title - -viewTitle $viewName - -ViewType2 \"TILES\" } Write-Host \"Migrating tasks\" foreach ( $migrationTask in $migrationTasks ) { $i ++ if ( $ShowProgress ) { Write-Host \"Processing ($i/ $( $migrationTasks . length ) )\" } $newItem = m365 spo listitem add - -webUrl $SiteUrl - -listTitle $plan . title - -Title $migrationTask . Title - -Bucket $migrationTask . Bucket - -Progress $migrationTask . Progress - -Description $migrationTask . Description - -Assigned_x0020_to $migrationTask . AssignedTo - -Priority $migrationTask . Priority | ConvertFrom-Json -AsHashtable # Fails with an empty date so extra check to prevent issues if ( $migrationTask . StartDate ) { $updatedItem = m365 spo listitem set - -webUrl $SiteUrl - -listTitle $plan . title - -id $newItem . Id - -Start_x0020_date $migrationTask . StartDate } if ( $migrationTask . DueDate ) { $updatedItem = m365 spo listitem set - -webUrl $SiteUrl - -listTitle $plan . title - -id $newItem . Id - -Due_x0020_date $migrationTask . DueDate } if ( $migrationTask . Checklist ) { $updatedItem = m365 spo listitem set - -webUrl $SiteUrl - -listTitle $plan . title - -id $newItem . Id - -Checklist $migrationTask . Checklist } } Write-Host \"Migrating finished for the plan $( $plan . title ) \" } else { Write-Host \"Skipping migrating due to lack of tasks\" } }","title":"Planner migration to SharePoint list"},{"location":"sample-scripts/spo/planner-migrate-sharepoint-list/#planner-migration-to-sharepoint-list","text":"Author: Albert-Jan Schot Use the CLI for Microsoft 365 to migrate an existing plan to a SharePoint Online List with this sample. You can specify the planner plan that you want to migrate and the script will generate a new list for you with the required fields and views. The current sample does migrate all tasks however it skips the following information: Categories Comments made on tasks Attachments PowerShell param ( [ Parameter ( Mandatory = $true , HelpMessage = \"URL of the target site\" , Position = 0 )] [string] $SiteUrl , [ Parameter ( Mandatory = $true , HelpMessage = \"Groupname or Planner Plan name\" , Position = 1 )] [string] $PlanGroupName , [ Parameter ( HelpMessage = \"Show progress messages\" , Position = 2 )] [switch] $ShowProgress , [ Parameter ( HelpMessage = \"Skip List creation (for running multiple migrations without creating the list)\" , Position = 3 )] [switch] $SkipListCreation ) $m365Status = m365 status - -output text if ( $m365Status -match \"Logged Out\" ) { # Connection to Microsoft 365 m365 login } $plans = m365 planner plan list - -ownerGroupName $PlanGroupName | ConvertFrom-Json Write-Host \"Found $( $plans . length ) plans to migrate\" foreach ( $plan in $plans ) { $migrationTasks = @() $plannerBuckets = m365 planner bucket list - -planId $plan . id | ConvertFrom-Json $plannerTasks = m365 planner task list - -planId $plan . id | ConvertFrom-Json foreach ( $task in $plannerTasks ) { $taskDetails = m365 planner task get - -id $task . id - -query '{description: description, checklist: checklist.*.{isChecked: isChecked, title: title} }' | ConvertFrom-Json $assignedUsers = @() foreach ( $userId in $( $task . assignments | ForEach -Object { $( $_ ). PSObject . Properties . Name })) { $assignedUsers += \"{'Key':'i:0#.f|membership| $( m365 aad user get - -id $userId - -query \"userPrincipalName\" | ConvertFrom-Json ) '}\" } $checklist = $null ; foreach ( $item in $taskDetails . checklist ) { if ( $item . isChecked ) { $checklist += \"[x] \" + $item . title + \"<br>\" ; } else { $checklist += \"[ ] \" + $item . title + \"<br>\" ; } } $migrationTasks += [pscustomobject][ordered] @{ Title = $task . title Bucket = ( $plannerBuckets | Where-Object { $_ . id -eq $task . bucketId }). Name Progress = $task . percentComplete Priority = $task . priority Description = ( $task . hasDescription ? $taskDetails . description : ' ' ) StartDate = $task . startDateTime DueDate = $task . dueDateTime Checklist = $checklist AssignedTo = $( $assignedUsers ? \"[ $( $assignedUsers -join \",\" ) ]\" : $null ) } } Write-Host \" `n Found $( $plannerBuckets . length ) buckets and $( $plannerTasks . length ) tasks to migrate for the plan $( $plan . title ) \" if ( $plannerTasks . length -gt 0 ) { if ( $false -eq $SkipListCreation ) { if ( $ShowProgress ) { Write-Host \"Setting up List\" } $list = m365 spo list add - -title $plan . title - -baseTemplate GenericList - -webUrl $SiteUrl | ConvertFrom-Json $bucketOptions = $plannerBuckets . name -join \"</CHOICE><CHOICE>\" $fieldXml = '<Field DisplayName=\\\"Bucket\\\" FillInChoice=\\\"FALSE\\\" Format=\\\"Dropdown\\\" IsModern=\\\"TRUE\\\" Name=\\\"Bucket\\\" Title=\\\"Bucket\\\" Type=\\\"Choice\\\" ID=\\\"{e5a87c1b-14fe-4a0d-b2a1-69ed51aefe0a}\\\" SourceID=\\\"{be343550-aa79-4954-95f7-e7f3e1158888}\\\" StaticName=\\\"Bucket\\\" ColName=\\\"nvarchar7\\\" RowOrdinal=\\\"0\\\" Version=\\\"5\\\"><CHOICES><CHOICE>' + $bucketOptions + '</CHOICE></CHOICES></Field>' ; $field = m365 spo field add - -webUrl $SiteUrl - -listTitle $list . title - -xml $fieldXml - -options AddToAllContentTypes $field = m365 spo field add - -webUrl $SiteUrl - -listTitle $list . title - -xml '<Field DisplayName=\\\"Assigned to\\\" Format=\\\"Dropdown\\\" IsModern=\\\"TRUE\\\" List=\\\"UserInfo\\\" Mult=\\\"TRUE\\\" Name=\\\"AssignedTo\\\" Title=\\\"AssignedTo\\\" Type=\\\"UserMulti\\\" UserSelectionMode=\\\"0\\\" UserSelectionScope=\\\"0\\\" ID=\\\"{38a2a5a8-5518-4242-9b9b-760777f5e7ea}\\\" SourceID=\\\"{50756447-36ab-447e-9b30-859b91aba49d}\\\" StaticName=\\\"AssignedTo\\\" />' - -options AddToAllContentTypes $field = m365 spo field add - -webUrl $SiteUrl - -listTitle $list . title - -xml '<Field DisplayName=\\\"Start date\\\" FriendlyDisplayFormat=\\\"Disabled\\\" Format=\\\"DateOnly\\\" IsModern=\\\"TRUE\\\" Name=\\\"Startdate\\\" Title=\\\"Start date\\\" Type=\\\"DateTime\\\" ID=\\\"{91ff7e76-118b-49e1-85dd-afda84856e96}\\\" SourceID=\\\"{50756447-36ab-447e-9b30-859b91aba49d}\\\" StaticName=\\\"Startdate\\\" ColName=\\\"datetime1\\\" RowOrdinal=\\\"0\\\" />' - -options AddToAllContentTypes $field = m365 spo field add - -webUrl $SiteUrl - -listTitle $list . title - -xml '<Field DisplayName=\\\"Due date\\\" FriendlyDisplayFormat=\\\"Disabled\\\" Format=\\\"DateOnly\\\" IsModern=\\\"TRUE\\\" Name=\\\"Duedate\\\" Title=\\\"Due date\\\" Type=\\\"DateTime\\\" ID=\\\"{23f7955a-1b1b-46f9-8b0f-316dbb37b63e}\\\" SourceID=\\\"{50756447-36ab-447e-9b30-859b91aba49d}\\\" StaticName=\\\"Duedate\\\" ColName=\\\"datetime2\\\" RowOrdinal=\\\"0\\\" />' - -options AddToAllContentTypes $field = m365 spo field add - -webUrl $SiteUrl - -listTitle $list . title - -xml '<Field AppendOnly=\\\"FALSE\\\" DisplayName=\\\"Checklist\\\" Format=\\\"Dropdown\\\" IsModern=\\\"TRUE\\\" IsolateStyles=\\\"TRUE\\\" Name=\\\"Checklist\\\" RichText=\\\"TRUE\\\" RichTextMode=\\\"FullHtml\\\" Title=\\\"Checklist\\\" Type=\\\"Note\\\" ID=\\\"{05f7b70d-eb7c-4428-afe6-ca9f2f22c5af}\\\" SourceID=\\\"{50756447-36ab-447e-9b30-859b91aba49d}\\\" StaticName=\\\"Checklist\\\" ColName=\\\"ntext2\\\" RowOrdinal=\\\"0\\\" CustomFormatter=\\\"\\\" Required=\\\"FALSE\\\" EnforceUniqueValues=\\\"FALSE\\\" Indexed=\\\"FALSE\\\" NumLines=\\\"6\\\" RestrictedMode=\\\"TRUE\\\" Version=\\\"1\\\" />' - -options AddToAllContentTypes $field = m365 spo field add - -webUrl $SiteUrl - -listTitle $list . title - -xml '<Field AppendOnly=\\\"FALSE\\\" DisplayName=\\\"Description\\\" Format=\\\"Dropdown\\\" IsModern=\\\"TRUE\\\" IsolateStyles=\\\"FALSE\\\" Name=\\\"Description\\\" RichText=\\\"FALSE\\\" RichTextMode=\\\"Compatible\\\" Title=\\\"Description\\\" Type=\\\"Note\\\" ID=\\\"{50d7e60e-ce7d-4428-afe6-ca9f2f22c5ce}\\\" SourceID=\\\"{50756447-36ab-447e-9b30-859b91aba49d}\\\" StaticName=\\\"Description\\\" ColName=\\\"ntext2\\\" RowOrdinal=\\\"0\\\" />' - -options AddToAllContentTypes $field = m365 spo field add - -webUrl $SiteUrl - -listTitle $list . title - -xml '<Field Type=\\\"Number\\\" DisplayName=\\\"Priority\\\" Required=\\\"FALSE\\\" EnforceUniqueValues=\\\"FALSE\\\" Indexed=\\\"FALSE\\\" ID=\\\"{a9639335-a3cf-41d2-a1fb-28d02c8ef09f}\\\" SourceID=\\\"{be343550-aa79-4954-95f7-e7f3e1158888}\\\" StaticName=\\\"Priority\\\" Name=\\\"Priority\\\" ColName=\\\"float1\\\" RowOrdinal=\\\"0\\\" CustomFormatter=\\\"{&quot;$schema&quot;:&quot;https://developer.microsoft.com/json-schemas/sp/v2/column-formatting.schema.json&quot;,&quot;elmType&quot;:&quot;div&quot;,&quot;style&quot;:{&quot;flex-wrap&quot;:&quot;wrap&quot;,&quot;display&quot;:&quot;flex&quot;},&quot;children&quot;:[{&quot;elmType&quot;:&quot;div&quot;,&quot;style&quot;:{&quot;box-sizing&quot;:&quot;border-box&quot;,&quot;padding&quot;:&quot;4px 8px 5px 8px&quot;,&quot;display&quot;:&quot;flex&quot;,&quot;border-radius&quot;:&quot;16px&quot;,&quot;height&quot;:&quot;24px&quot;,&quot;align-items&quot;:&quot;center&quot;,&quot;white-space&quot;:&quot;nowrap&quot;,&quot;overflow&quot;:&quot;hidden&quot;,&quot;margin&quot;:&quot;4px 4px 4px 4px&quot;},&quot;attributes&quot;:{&quot;class&quot;:{&quot;operator&quot;:&quot;:&quot;,&quot;operands&quot;:[{&quot;operator&quot;:&quot;==&quot;,&quot;operands&quot;:[&quot;[$Priority]&quot;,1]},&quot;sp-css-backgroundColor-BgRed sp-css-borderColor-WhiteFont&quot;,{&quot;operator&quot;:&quot;:&quot;,&quot;operands&quot;:[{&quot;operator&quot;:&quot;==&quot;,&quot;operands&quot;:[&quot;[$Priority]&quot;,3]},&quot;sp-css-backgroundColor-BgPeach sp-css-borderColor-PeachFont&quot;,{&quot;operator&quot;:&quot;:&quot;,&quot;operands&quot;:[{&quot;operator&quot;:&quot;==&quot;,&quot;operands&quot;:[&quot;[$Priority]&quot;,5]},&quot;sp-css-backgroundColor-BgGold&quot;,{&quot;operator&quot;:&quot;:&quot;,&quot;operands&quot;:[{&quot;operator&quot;:&quot;==&quot;,&quot;operands&quot;:[&quot;[$Priority]&quot;,9]},&quot;&quot;,{&quot;operator&quot;:&quot;:&quot;,&quot;operands&quot;:[{&quot;operator&quot;:&quot;==&quot;,&quot;operands&quot;:[&quot;[$Priority]&quot;,9]},&quot;sp-css-backgroundColor-BgMintGreen sp-css-borderColor-MintGreenFont&quot;,&quot;sp-field-borderAllRegular sp-field-borderAllSolid sp-css-borderColor-neutralSecondary&quot;]}]}]}]}]}},&quot;children&quot;:[{&quot;elmType&quot;:&quot;span&quot;,&quot;style&quot;:{&quot;line-height&quot;:&quot;16px&quot;,&quot;height&quot;:&quot;14px&quot;},&quot;attributes&quot;:{&quot;iconName&quot;:{&quot;operator&quot;:&quot;:&quot;,&quot;operands&quot;:[{&quot;operator&quot;:&quot;==&quot;,&quot;operands&quot;:[&quot;[$Priority]&quot;,1]},&quot;RingerSolid&quot;,{&quot;operator&quot;:&quot;:&quot;,&quot;operands&quot;:[{&quot;operator&quot;:&quot;==&quot;,&quot;operands&quot;:[&quot;[$Priority]&quot;,3]},&quot;Important&quot;,{&quot;operator&quot;:&quot;:&quot;,&quot;operands&quot;:[{&quot;operator&quot;:&quot;==&quot;,&quot;operands&quot;:[&quot;[$Priority]&quot;,5]},&quot;LocationDot&quot;,{&quot;operator&quot;:&quot;:&quot;,&quot;operands&quot;:[{&quot;operator&quot;:&quot;==&quot;,&quot;operands&quot;:[&quot;[$Priority]&quot;,&quot;&quot;]},&quot;Down&quot;,{&quot;operator&quot;:&quot;:&quot;,&quot;operands&quot;:[{&quot;operator&quot;:&quot;==&quot;,&quot;operands&quot;:[&quot;[$Priority]&quot;,9]},&quot;&quot;,&quot;&quot;]}]}]}]}]},&quot;class&quot;:{&quot;operator&quot;:&quot;:&quot;,&quot;operands&quot;:[{&quot;operator&quot;:&quot;==&quot;,&quot;operands&quot;:[&quot;[$Priority]&quot;,1]},&quot;sp-css-color-WhiteFont&quot;,{&quot;operator&quot;:&quot;:&quot;,&quot;operands&quot;:[{&quot;operator&quot;:&quot;==&quot;,&quot;operands&quot;:[&quot;[$Priority]&quot;,3]},&quot;sp-css-color-PeachFont&quot;,{&quot;operator&quot;:&quot;:&quot;,&quot;operands&quot;:[{&quot;operator&quot;:&quot;==&quot;,&quot;operands&quot;:[&quot;[$Priority]&quot;,5]},&quot;&quot;,{&quot;operator&quot;:&quot;:&quot;,&quot;operands&quot;:[{&quot;operator&quot;:&quot;==&quot;,&quot;operands&quot;:[&quot;[$Priority]&quot;,&quot;&quot;]},&quot;&quot;,{&quot;operator&quot;:&quot;:&quot;,&quot;operands&quot;:[{&quot;operator&quot;:&quot;==&quot;,&quot;operands&quot;:[&quot;[$Priority]&quot;,9]},&quot;sp-css-color-MintGreenFont&quot;,&quot;&quot;]}]}]}]}]}}},{&quot;elmType&quot;:&quot;span&quot;,&quot;style&quot;:{&quot;overflow&quot;:&quot;hidden&quot;,&quot;text-overflow&quot;:&quot;ellipsis&quot;,&quot;padding&quot;:&quot;0 3px&quot;},&quot;txtContent&quot;:&quot;=if(@currentField == 1, ''Urgent'', if(@currentField == 3, ''Important'', if(@currentField == 5, ''Medium'', if(@currentField == 9, '''', ''Low''))))&quot;,&quot;attributes&quot;:{&quot;class&quot;:{&quot;operator&quot;:&quot;:&quot;,&quot;operands&quot;:[{&quot;operator&quot;:&quot;==&quot;,&quot;operands&quot;:[&quot;[$Priority]&quot;,1]},&quot;sp-css-color-WhiteFont&quot;,{&quot;operator&quot;:&quot;:&quot;,&quot;operands&quot;:[{&quot;operator&quot;:&quot;==&quot;,&quot;operands&quot;:[&quot;[$Priority]&quot;,3]},&quot;sp-css-color-PeachFont&quot;,{&quot;operator&quot;:&quot;:&quot;,&quot;operands&quot;:[{&quot;operator&quot;:&quot;==&quot;,&quot;operands&quot;:[&quot;[$Priority]&quot;,5]},&quot;sp-css-color-GoldFont&quot;,{&quot;operator&quot;:&quot;:&quot;,&quot;operands&quot;:[{&quot;operator&quot;:&quot;==&quot;,&quot;operands&quot;:[&quot;[$Priority]&quot;,0]},9,{&quot;operator&quot;:&quot;:&quot;,&quot;operands&quot;:[{&quot;operator&quot;:&quot;==&quot;,&quot;operands&quot;:[&quot;[$Priority]&quot;,9]},&quot;sp-css-color-MintGreenFont&quot;,&quot;&quot;]}]}]}]}]}}}]}]}\\\" Version=\\\"23\\\" />' - -options AddToAllContentTypes $field = m365 spo field add - -webUrl $SiteUrl - -listTitle $list . title - -xml '<Field CommaSeparator=\\\"TRUE\\\" CustomUnitOnRight=\\\"TRUE\\\" DisplayName=\\\"Progress\\\" Format=\\\"Dropdown\\\" IsModern=\\\"TRUE\\\" Name=\\\"Progress\\\" Percentage=\\\"FALSE\\\" Title=\\\"Progress\\\" Type=\\\"Number\\\" Unit=\\\"None\\\" ID=\\\"{abea0d9d-83b8-4d57-9c68-8b56ad4066c9}\\\" SourceID=\\\"{be343550-aa79-4954-95f7-e7f3e1158888}\\\" StaticName=\\\"Progress\\\" ColName=\\\"float2\\\" RowOrdinal=\\\"0\\\" CustomFormatter=\\\"{&quot;$schema&quot;:&quot;https://developer.microsoft.com/json-schemas/sp/v2/column-formatting.schema.json&quot;,&quot;elmType&quot;:&quot;div&quot;,&quot;style&quot;:{&quot;flex-wrap&quot;:&quot;wrap&quot;,&quot;display&quot;:&quot;flex&quot;},&quot;children&quot;:[{&quot;elmType&quot;:&quot;div&quot;,&quot;style&quot;:{&quot;box-sizing&quot;:&quot;border-box&quot;,&quot;padding&quot;:&quot;4px 8px 5px 8px&quot;,&quot;display&quot;:&quot;flex&quot;,&quot;border-radius&quot;:&quot;16px&quot;,&quot;height&quot;:&quot;24px&quot;,&quot;align-items&quot;:&quot;center&quot;,&quot;white-space&quot;:&quot;nowrap&quot;,&quot;overflow&quot;:&quot;hidden&quot;,&quot;margin&quot;:&quot;4px 4px 4px 4px&quot;},&quot;attributes&quot;:{&quot;class&quot;:{&quot;operator&quot;:&quot;:&quot;,&quot;operands&quot;:[{&quot;operator&quot;:&quot;==&quot;,&quot;operands&quot;:[&quot;@currentField&quot;,0]},&quot;sp-css-backgroundColor-BgLightGray sp-css-borderColor-LightGrayFont&quot;,{&quot;operator&quot;:&quot;:&quot;,&quot;operands&quot;:[{&quot;operator&quot;:&quot;==&quot;,&quot;operands&quot;:[&quot;@currentField&quot;,50]},&quot;sp-css-backgroundColor-BgGold sp-css-borderColor-GoldFont&quot;,{&quot;operator&quot;:&quot;:&quot;,&quot;operands&quot;:[{&quot;operator&quot;:&quot;==&quot;,&quot;operands&quot;:[&quot;@currentField&quot;,100]},&quot;sp-css-backgroundColor-BgGreen sp-css-borderColor-WhiteFont&quot;,{&quot;operator&quot;:&quot;:&quot;,&quot;operands&quot;:[{&quot;operator&quot;:&quot;==&quot;,&quot;operands&quot;:[&quot;@currentField&quot;,&quot;&quot;]},&quot;&quot;,&quot;sp-field-borderAllRegular sp-field-borderAllSolid sp-css-borderColor-neutralSecondary&quot;]}]}]}]}},&quot;children&quot;:[{&quot;elmType&quot;:&quot;span&quot;,&quot;style&quot;:{&quot;line-height&quot;:&quot;16px&quot;,&quot;height&quot;:&quot;14px&quot;},&quot;attributes&quot;:{&quot;iconName&quot;:{&quot;operator&quot;:&quot;:&quot;,&quot;operands&quot;:[{&quot;operator&quot;:&quot;==&quot;,&quot;operands&quot;:[&quot;@currentField&quot;,0]},&quot;CircleRing&quot;,{&quot;operator&quot;:&quot;:&quot;,&quot;operands&quot;:[{&quot;operator&quot;:&quot;==&quot;,&quot;operands&quot;:[&quot;@currentField&quot;,50]},&quot;CircleHalfFull&quot;,{&quot;operator&quot;:&quot;:&quot;,&quot;operands&quot;:[{&quot;operator&quot;:&quot;==&quot;,&quot;operands&quot;:[&quot;@currentField&quot;,100]},&quot;CircleFill&quot;,{&quot;operator&quot;:&quot;:&quot;,&quot;operands&quot;:[{&quot;operator&quot;:&quot;==&quot;,&quot;operands&quot;:[&quot;@currentField&quot;,&quot;&quot;]},&quot;&quot;,&quot;&quot;]}]}]}]},&quot;class&quot;:{&quot;operator&quot;:&quot;:&quot;,&quot;operands&quot;:[{&quot;operator&quot;:&quot;==&quot;,&quot;operands&quot;:[&quot;@currentField&quot;,0]},&quot;sp-css-color-LightGrayFont&quot;,{&quot;operator&quot;:&quot;:&quot;,&quot;operands&quot;:[{&quot;operator&quot;:&quot;==&quot;,&quot;operands&quot;:[&quot;@currentField&quot;,50]},&quot;sp-css-color-GoldFont&quot;,{&quot;operator&quot;:&quot;:&quot;,&quot;operands&quot;:[{&quot;operator&quot;:&quot;==&quot;,&quot;operands&quot;:[&quot;@currentField&quot;,100]},&quot;sp-css-color-WhiteFont&quot;,{&quot;operator&quot;:&quot;:&quot;,&quot;operands&quot;:[{&quot;operator&quot;:&quot;==&quot;,&quot;operands&quot;:[&quot;@currentField&quot;,&quot;&quot;]},&quot;&quot;,&quot;&quot;]}]}]}]}}},{&quot;elmType&quot;:&quot;span&quot;,&quot;style&quot;:{&quot;overflow&quot;:&quot;hidden&quot;,&quot;text-overflow&quot;:&quot;ellipsis&quot;,&quot;padding&quot;:&quot;0 3px&quot;},&quot;txtContent&quot;:&quot;=if(@currentField == 100, ''Completed'', if(@currentField == 50, ''Completed'', if(@currentField == 0, ''Not started'', '''')))&quot;,&quot;attributes&quot;:{&quot;class&quot;:{&quot;operator&quot;:&quot;:&quot;,&quot;operands&quot;:[{&quot;operator&quot;:&quot;==&quot;,&quot;operands&quot;:[&quot;@currentField&quot;,0]},&quot;sp-field-fontSizeSmall sp-css-color-LightGrayFont&quot;,{&quot;operator&quot;:&quot;:&quot;,&quot;operands&quot;:[{&quot;operator&quot;:&quot;==&quot;,&quot;operands&quot;:[&quot;@currentField&quot;,50]},&quot;sp-field-fontSizeSmall sp-css-color-GoldFont&quot;,{&quot;operator&quot;:&quot;:&quot;,&quot;operands&quot;:[{&quot;operator&quot;:&quot;==&quot;,&quot;operands&quot;:[&quot;@currentField&quot;,100]},&quot;sp-field-fontSizeSmall sp-css-color-WhiteFont&quot;,{&quot;operator&quot;:&quot;:&quot;,&quot;operands&quot;:[{&quot;operator&quot;:&quot;==&quot;,&quot;operands&quot;:[&quot;@currentField&quot;,&quot;&quot;]},&quot;&quot;,&quot;&quot;]}]}]}]}}}]}]}\\\" Version=\\\"2\\\" />' - -options AddToAllContentTypes $viewName = \"All Items\" $viewFields = @( \"Progress\" , \"Priority\" , \"Assigned_x0020_to\" , \"Due date\" , \"Start date\" ); foreach ( $field in $viewFields ) { m365 spo list view field add - -webUrl $SiteUrl - -listTitle $list . title - -viewTitle $viewName - -fieldTitle $field } $view = m365 spo list view set - -webUrl $SiteUrl - -listTitle $list . title - -viewTitle $viewName - -ViewQuery '<GroupBy Collapse=\\\"TRUE\\\" GroupLimit=\\\"30\\\"><FieldRef Name=\\\"Bucket\\\" /></GroupBy><OrderBy><FieldRef Name=\\\"ID\\\" /></OrderBy>' $view = m365 spo list view set - -webUrl $SiteUrl - -listTitle $list . title - -viewTitle $viewName - -ViewType2 \"TILES\" } Write-Host \"Migrating tasks\" foreach ( $migrationTask in $migrationTasks ) { $i ++ if ( $ShowProgress ) { Write-Host \"Processing ($i/ $( $migrationTasks . length ) )\" } $newItem = m365 spo listitem add - -webUrl $SiteUrl - -listTitle $plan . title - -Title $migrationTask . Title - -Bucket $migrationTask . Bucket - -Progress $migrationTask . Progress - -Description $migrationTask . Description - -Assigned_x0020_to $migrationTask . AssignedTo - -Priority $migrationTask . Priority | ConvertFrom-Json -AsHashtable # Fails with an empty date so extra check to prevent issues if ( $migrationTask . StartDate ) { $updatedItem = m365 spo listitem set - -webUrl $SiteUrl - -listTitle $plan . title - -id $newItem . Id - -Start_x0020_date $migrationTask . StartDate } if ( $migrationTask . DueDate ) { $updatedItem = m365 spo listitem set - -webUrl $SiteUrl - -listTitle $plan . title - -id $newItem . Id - -Due_x0020_date $migrationTask . DueDate } if ( $migrationTask . Checklist ) { $updatedItem = m365 spo listitem set - -webUrl $SiteUrl - -listTitle $plan . title - -id $newItem . Id - -Checklist $migrationTask . Checklist } } Write-Host \"Migrating finished for the plan $( $plan . title ) \" } else { Write-Host \"Skipping migrating due to lack of tasks\" } }","title":"Planner migration to SharePoint list"},{"location":"sample-scripts/spo/remove-api-permissions/","tags":["security"],"text":"Remove SharePoint API permissions \u00b6 Author: Waldek Mastykarz When building SharePoint Framework solutions connected to APIs secured with Azure Active Directory, you might need to clear the list of granted API permissions. This script helps you to quickly remove SharePoint API permissions. JavaScript (Google zx) #!/usr/bin/env zx $ . verbose = false ; console . log ( 'Retrieving granted API permissions...' ); const apiPermissions = JSON . parse ( await $ `m365 spo sp grant list -o json` ); for ( let i = 0 ; i < apiPermissions . length ; i ++ ) { const permission = apiPermissions [ i ]; console . log ( `Removing permission ${ permission . Resource } / ${ permission . Scope } ( ${ permission . ObjectId } )...` ); try { await $ `m365 spo serviceprincipal grant revoke --grantId ${ permission . ObjectId } ` console . log ( chalk . green ( 'DONE' )); } catch ( err ) { console . error ( err . stderr ); } } Using CLI for Microsoft 365 , the script first retrieves the list of granted API permissions. Then, it iterates through them and removes (revokes) each one of them using CLI for Microsoft 365. After running this script, your list of SharePoint API permissions will be empty. This script uses CLI for Microsoft 365 and Google zx . To run the script, save it to a file with the .mjs extension. Next, run the script either by calling zx remove-apipermissions.mjs or ./remove-apipermissions.mjs after making the script executable using chmod +x ./remove-apipermissions.mjs;","title":"Remove SharePoint API permissions"},{"location":"sample-scripts/spo/remove-api-permissions/#remove-sharepoint-api-permissions","text":"Author: Waldek Mastykarz When building SharePoint Framework solutions connected to APIs secured with Azure Active Directory, you might need to clear the list of granted API permissions. This script helps you to quickly remove SharePoint API permissions. JavaScript (Google zx) #!/usr/bin/env zx $ . verbose = false ; console . log ( 'Retrieving granted API permissions...' ); const apiPermissions = JSON . parse ( await $ `m365 spo sp grant list -o json` ); for ( let i = 0 ; i < apiPermissions . length ; i ++ ) { const permission = apiPermissions [ i ]; console . log ( `Removing permission ${ permission . Resource } / ${ permission . Scope } ( ${ permission . ObjectId } )...` ); try { await $ `m365 spo serviceprincipal grant revoke --grantId ${ permission . ObjectId } ` console . log ( chalk . green ( 'DONE' )); } catch ( err ) { console . error ( err . stderr ); } } Using CLI for Microsoft 365 , the script first retrieves the list of granted API permissions. Then, it iterates through them and removes (revokes) each one of them using CLI for Microsoft 365. After running this script, your list of SharePoint API permissions will be empty. This script uses CLI for Microsoft 365 and Google zx . To run the script, save it to a file with the .mjs extension. Next, run the script either by calling zx remove-apipermissions.mjs or ./remove-apipermissions.mjs after making the script executable using chmod +x ./remove-apipermissions.mjs;","title":"Remove SharePoint API permissions"},{"location":"sample-scripts/spo/remove-custom-themes/","tags":["provisioning","cleanup"],"text":"Delete custom color themes from SharePoint \u00b6 Author: Laura Kokkarinen Have you been creating a lot of beautiful themes lately and testing them in your dev tenant, but don\u2019t want to keep them anymore? If yes, then this PowerShell script is for you. PowerShell Bash $sparksjoy = \"Cat Lovers United\" , \"Multicolored theme\" $themes = m365 spo theme list -o json | ConvertFrom-Json $themes = $themes | where { -not ( $sparksjoy -contains $_ . name )} $themes | Format-Table name if ( $themes . Count -eq 0 ) { break } Read-Host -Prompt \"Press Enter to start deleting (CTRL + C to exit)\" $progress = 0 $total = $themes . Count foreach ( $theme in $themes ) { $progress ++ write-host $progress / $total \":\" $theme . name m365 spo theme remove - -name \" $( $theme . name ) \" - -confirm } #!/bin/bash # requires jq: https://stedolan.github.io/jq/ sparksjoy =( \"Cat Lovers United\" \"Multicolored theme\" ) themestoremove =() while read theme ; do exists = false for keep in \" ${ sparksjoy [@] } \" ; do if [ \" $keep \" == \" $theme \" ] ; then exists = true break fi done if [ \" $exists \" = false ] ; then themestoremove +=( \" $theme \" ) fi done < < ( m365 spo theme list -o json | jq -r '.[].name' ) if [ ${# themestoremove [@] } = 0 ] ; then exit 1 fi printf '%s\\n' \" ${ themestoremove [@] } \" echo \"Press Enter to start deleting (CTRL + C to exit)\" read foo for theme in \" ${ themestoremove [@] } \" ; do echo \"Deleting $theme ...\" m365 spo theme remove --name \" $theme \" --confirm done","title":"Delete custom color themes from SharePoint"},{"location":"sample-scripts/spo/remove-custom-themes/#delete-custom-color-themes-from-sharepoint","text":"Author: Laura Kokkarinen Have you been creating a lot of beautiful themes lately and testing them in your dev tenant, but don\u2019t want to keep them anymore? If yes, then this PowerShell script is for you. PowerShell Bash $sparksjoy = \"Cat Lovers United\" , \"Multicolored theme\" $themes = m365 spo theme list -o json | ConvertFrom-Json $themes = $themes | where { -not ( $sparksjoy -contains $_ . name )} $themes | Format-Table name if ( $themes . Count -eq 0 ) { break } Read-Host -Prompt \"Press Enter to start deleting (CTRL + C to exit)\" $progress = 0 $total = $themes . Count foreach ( $theme in $themes ) { $progress ++ write-host $progress / $total \":\" $theme . name m365 spo theme remove - -name \" $( $theme . name ) \" - -confirm } #!/bin/bash # requires jq: https://stedolan.github.io/jq/ sparksjoy =( \"Cat Lovers United\" \"Multicolored theme\" ) themestoremove =() while read theme ; do exists = false for keep in \" ${ sparksjoy [@] } \" ; do if [ \" $keep \" == \" $theme \" ] ; then exists = true break fi done if [ \" $exists \" = false ] ; then themestoremove +=( \" $theme \" ) fi done < < ( m365 spo theme list -o json | jq -r '.[].name' ) if [ ${# themestoremove [@] } = 0 ] ; then exit 1 fi printf '%s\\n' \" ${ themestoremove [@] } \" echo \"Press Enter to start deleting (CTRL + C to exit)\" read foo for theme in \" ${ themestoremove [@] } \" ; do echo \"Deleting $theme ...\" m365 spo theme remove --name \" $theme \" --confirm done","title":"Delete custom color themes from SharePoint"},{"location":"sample-scripts/spo/remove-orphaned-redirect-sites/","tags":["cleanup","sites"],"text":"Remove orphaned redirect sites \u00b6 Author: Albert-Jan Schot Changing the URL of a site results in a new site type: a Redirect Site. However this redirect site does not get removed if you delete the newly renamed site. This could result in orphaned redirect site collections that redirect to nothing. This script provides you with an overview of all orphaned redirect sites and allows you to quickly delete them. PowerShell Bash $sites = m365 spo site list - -webTemplate \"REDIRECTSITE#0\" | ConvertFrom-Json $sites | ForEach -Object { Write-Host -f Green \"Processing redirect site: \" $_ . Url $siteUrl = $_ . Url $redirectSite = Invoke-WebRequest -Uri $_ . Url -MaximumRedirection 0 -SkipHttpErrorCheck $body = $null $siteUrl = $_ . Url if ( $redirectSite . StatusCode -eq 308 ) { Try { [string] $newUrl = $redirectSite . Headers . Location ; Write-Host -f Green \" Redirects to: \" $newUrl $body = Invoke-WebRequest -Uri $newUrl -SkipHttpErrorCheck } Catch { Write-Host $_ . Exception } Finally { If ( $body . StatusCode -eq \"200\" ){ Write-host -f Yellow \" Target location still exists\" } If ( $body . StatusCode -eq \"404\" ){ Write-Host -f Red \" Target location no longer exists, should be removed\" m365 spo site remove - -url $siteUrl } } } } #!/bin/bash # requires jq: https://stedolan.github.io/jq/ clear sitestoremove =() while read site ; do siteUrl = $( echo ${ site } | jq -r '.Url' ) echo \"Checking old URL for redirect\" $siteUrl redirectsite = $( curl -I -L --max-redirs 0 --silent --user-agent \"Mozilla/5.0 (X11; Linux x86_64; rv:58.0) Gecko/20100101 Firefox/58.0\" $siteUrl | sed -En 's/^location: (.*)/\\1/p' ) echo \"Redirects to\" $redirectsite redirect_status = $( curl --write-out % { http_code } --silent --output /dev/null --user-agent \"Mozilla/5.0 (X11; Linux x86_64; rv:58.0) Gecko/20100101 Firefox/58.0\" ${ redirectsite % $'\\r' } ) if [[ \" $redirect_status \" -ne 404 ]] ; then echo \"URL exists: $redirectsite \" else echo \"URL does not exist: $redirectsite \" sitestoremove +=( \" $siteUrl \" ) fi done < < ( m365 spo site list --webTemplate \"REDIRECTSITE#0\" -o json | jq -c '.[]' ) if [ ${# sitestoremove [@] } = 0 ] ; then exit 1 fi printf '%s\\n' \" ${ sitestoremove [@] } \" s echo \"Press Enter to start deleting (CTRL + C to exit)\" read foo for site in \" ${ sitestoremove [@] } \" ; do siteUrl = $( echo ${ site } | jq -r '.Url' ) echo \"Deleting site...\" echo $siteUrl m365 spo site remove --url $siteUrl done Keywords: SharePoint Online Redirect sites","title":"Remove orphaned redirect sites"},{"location":"sample-scripts/spo/remove-orphaned-redirect-sites/#remove-orphaned-redirect-sites","text":"Author: Albert-Jan Schot Changing the URL of a site results in a new site type: a Redirect Site. However this redirect site does not get removed if you delete the newly renamed site. This could result in orphaned redirect site collections that redirect to nothing. This script provides you with an overview of all orphaned redirect sites and allows you to quickly delete them. PowerShell Bash $sites = m365 spo site list - -webTemplate \"REDIRECTSITE#0\" | ConvertFrom-Json $sites | ForEach -Object { Write-Host -f Green \"Processing redirect site: \" $_ . Url $siteUrl = $_ . Url $redirectSite = Invoke-WebRequest -Uri $_ . Url -MaximumRedirection 0 -SkipHttpErrorCheck $body = $null $siteUrl = $_ . Url if ( $redirectSite . StatusCode -eq 308 ) { Try { [string] $newUrl = $redirectSite . Headers . Location ; Write-Host -f Green \" Redirects to: \" $newUrl $body = Invoke-WebRequest -Uri $newUrl -SkipHttpErrorCheck } Catch { Write-Host $_ . Exception } Finally { If ( $body . StatusCode -eq \"200\" ){ Write-host -f Yellow \" Target location still exists\" } If ( $body . StatusCode -eq \"404\" ){ Write-Host -f Red \" Target location no longer exists, should be removed\" m365 spo site remove - -url $siteUrl } } } } #!/bin/bash # requires jq: https://stedolan.github.io/jq/ clear sitestoremove =() while read site ; do siteUrl = $( echo ${ site } | jq -r '.Url' ) echo \"Checking old URL for redirect\" $siteUrl redirectsite = $( curl -I -L --max-redirs 0 --silent --user-agent \"Mozilla/5.0 (X11; Linux x86_64; rv:58.0) Gecko/20100101 Firefox/58.0\" $siteUrl | sed -En 's/^location: (.*)/\\1/p' ) echo \"Redirects to\" $redirectsite redirect_status = $( curl --write-out % { http_code } --silent --output /dev/null --user-agent \"Mozilla/5.0 (X11; Linux x86_64; rv:58.0) Gecko/20100101 Firefox/58.0\" ${ redirectsite % $'\\r' } ) if [[ \" $redirect_status \" -ne 404 ]] ; then echo \"URL exists: $redirectsite \" else echo \"URL does not exist: $redirectsite \" sitestoremove +=( \" $siteUrl \" ) fi done < < ( m365 spo site list --webTemplate \"REDIRECTSITE#0\" -o json | jq -c '.[]' ) if [ ${# sitestoremove [@] } = 0 ] ; then exit 1 fi printf '%s\\n' \" ${ sitestoremove [@] } \" s echo \"Press Enter to start deleting (CTRL + C to exit)\" read foo for site in \" ${ sitestoremove [@] } \" ; do siteUrl = $( echo ${ site } | jq -r '.Url' ) echo \"Deleting site...\" echo $siteUrl m365 spo site remove --url $siteUrl done Keywords: SharePoint Online Redirect sites","title":"Remove orphaned redirect sites"},{"location":"sample-scripts/spo/remove-pending-api-permission-requests/","tags":["cleanup","security"],"text":"Remove pending SharePoint API permission requests \u00b6 Author: Waldek Mastykarz When building SharePoint Framework solutions connected to APIs secured with Azure Active Directory, you'll easily end up with many pending permission requests. This script helps you to quickly remove pending SharePoint API permission requests. JavaScript (Google zx) #!/usr/bin/env zx $ . verbose = false ; console . log ( 'Retrieving permission requests...' ); const permissionRequests = JSON . parse ( await $ `m365 spo sp permissionrequest list -o json` ); for ( let i = 0 ; i < permissionRequests . length ; i ++ ) { const request = permissionRequests [ i ]; console . log ( `Removing request ${ request . Resource } / ${ request . Scope } ( ${ request . Id } )...` ); try { await $ `m365 spo sp permissionrequest deny --requestId ${ request . Id } ` console . log ( chalk . green ( 'DONE' )); } catch ( err ) { console . error ( err . stderr ); } } Using CLI for Microsoft 365 , the script first retrieves the list of pending SharePoint API permission requests. Then, it iterates through the requests and removes (denies) each one of them using CLI for Microsoft 365. After running this script, your list of pending SharePoint API permission requests will be empty. This script uses CLI for Microsoft 365 and Google zx . To run the script, save it to a file with the .mjs extension. Next, run the script either by calling zx remove-permissionrequests.mjs or ./remove-permissionrequests.mjs after making the script executable using chmod +x ./remove-permissionrequests.mjs;","title":"Remove pending SharePoint API permission requests"},{"location":"sample-scripts/spo/remove-pending-api-permission-requests/#remove-pending-sharepoint-api-permission-requests","text":"Author: Waldek Mastykarz When building SharePoint Framework solutions connected to APIs secured with Azure Active Directory, you'll easily end up with many pending permission requests. This script helps you to quickly remove pending SharePoint API permission requests. JavaScript (Google zx) #!/usr/bin/env zx $ . verbose = false ; console . log ( 'Retrieving permission requests...' ); const permissionRequests = JSON . parse ( await $ `m365 spo sp permissionrequest list -o json` ); for ( let i = 0 ; i < permissionRequests . length ; i ++ ) { const request = permissionRequests [ i ]; console . log ( `Removing request ${ request . Resource } / ${ request . Scope } ( ${ request . Id } )...` ); try { await $ `m365 spo sp permissionrequest deny --requestId ${ request . Id } ` console . log ( chalk . green ( 'DONE' )); } catch ( err ) { console . error ( err . stderr ); } } Using CLI for Microsoft 365 , the script first retrieves the list of pending SharePoint API permission requests. Then, it iterates through the requests and removes (denies) each one of them using CLI for Microsoft 365. After running this script, your list of pending SharePoint API permission requests will be empty. This script uses CLI for Microsoft 365 and Google zx . To run the script, save it to a file with the .mjs extension. Next, run the script either by calling zx remove-permissionrequests.mjs or ./remove-permissionrequests.mjs after making the script executable using chmod +x ./remove-permissionrequests.mjs;","title":"Remove pending SharePoint API permission requests"},{"location":"sample-scripts/spo/remove-site-designs/","tags":["cleanup"],"text":"Delete custom SharePoint site designs \u00b6 Author: Laura Kokkarinen Site designs and especially site scripts can be something that ends up just hanging around in your tenant for a long time even though you no longer need them for anything. Use the scripts below to get rid of them. You might also find some site scripts that are not linked to any site design and hence never get executed! PowerShell Bash $sparksjoy = \"Cat Lovers United\" , \"Multicolored theme\" $sitedesigns = m365 spo sitedesign list -o json | ConvertFrom-Json $sitedesigns = $sitedesigns | where { -not ( $sparksjoy -contains $_ . Title )} $sitedesigns | Format-Table Title , SiteScriptIds , Description if ( $sitedesigns . Count -eq 0 ) { break } Read-Host -Prompt \"Press Enter to start deleting (CTRL + C to exit)\" $progress = 0 $total = $sitedesigns . Count foreach ( $sitedesign in $sitedesigns ) { $progress ++ write-host $progress / $total \":\" $sitedesign . Title m365 spo sitedesign remove - -id \" $( $sitedesign . Id ) \" - -confirm } #!/bin/bash # requires jq: https://stedolan.github.io/jq/ sparksjoy =( \"Cat Lovers United\" \"Multicolored theme\" ) sitedesignstoremove =() while read sitedesign ; do exists = false designinfo =( ${ sitedesign //;/ } ) for keep in \" ${ sparksjoy [@] } \" ; do if [ \" $keep \" == \" ${ designinfo [0] } \" ] ; then exists = true break fi done if [ \" $exists \" = false ] ; then sitedesignstoremove +=( \" $sitedesign \" ) fi done < < ( m365 spo sitedesign list -o json | jq -r '.[].Title + \";\" + .[].Id' ) if [ ${# sitedesignstoremove [@] } = 0 ] ; then exit 1 fi printf '%s\\n' \" ${ sitedesignstoremove [@] } \" echo \"Press Enter to start deleting (CTRL + C to exit)\" read foo for sitedesign in \" ${ sitedesignstoremove [@] } \" ; do designinfo =( ${ sitedesign //;/ } ) echo \"Deleting ${ designinfo [0] } ...\" m365 spo sitedesign remove --id \" ${ designinfo [1] } \" --confirm done","title":"Delete custom SharePoint site designs"},{"location":"sample-scripts/spo/remove-site-designs/#delete-custom-sharepoint-site-designs","text":"Author: Laura Kokkarinen Site designs and especially site scripts can be something that ends up just hanging around in your tenant for a long time even though you no longer need them for anything. Use the scripts below to get rid of them. You might also find some site scripts that are not linked to any site design and hence never get executed! PowerShell Bash $sparksjoy = \"Cat Lovers United\" , \"Multicolored theme\" $sitedesigns = m365 spo sitedesign list -o json | ConvertFrom-Json $sitedesigns = $sitedesigns | where { -not ( $sparksjoy -contains $_ . Title )} $sitedesigns | Format-Table Title , SiteScriptIds , Description if ( $sitedesigns . Count -eq 0 ) { break } Read-Host -Prompt \"Press Enter to start deleting (CTRL + C to exit)\" $progress = 0 $total = $sitedesigns . Count foreach ( $sitedesign in $sitedesigns ) { $progress ++ write-host $progress / $total \":\" $sitedesign . Title m365 spo sitedesign remove - -id \" $( $sitedesign . Id ) \" - -confirm } #!/bin/bash # requires jq: https://stedolan.github.io/jq/ sparksjoy =( \"Cat Lovers United\" \"Multicolored theme\" ) sitedesignstoremove =() while read sitedesign ; do exists = false designinfo =( ${ sitedesign //;/ } ) for keep in \" ${ sparksjoy [@] } \" ; do if [ \" $keep \" == \" ${ designinfo [0] } \" ] ; then exists = true break fi done if [ \" $exists \" = false ] ; then sitedesignstoremove +=( \" $sitedesign \" ) fi done < < ( m365 spo sitedesign list -o json | jq -r '.[].Title + \";\" + .[].Id' ) if [ ${# sitedesignstoremove [@] } = 0 ] ; then exit 1 fi printf '%s\\n' \" ${ sitedesignstoremove [@] } \" echo \"Press Enter to start deleting (CTRL + C to exit)\" read foo for sitedesign in \" ${ sitedesignstoremove [@] } \" ; do designinfo =( ${ sitedesign //;/ } ) echo \"Deleting ${ designinfo [0] } ...\" m365 spo sitedesign remove --id \" ${ designinfo [1] } \" --confirm done","title":"Delete custom SharePoint site designs"},{"location":"sample-scripts/spo/remove-site-scripts/","tags":["cleanup"],"text":"Delete custom SharePoint site scripts \u00b6 Author: Laura Kokkarinen Site designs and especially site scripts can be something that ends up just hanging around in your tenant for a long time even though you no longer need them for anything. Use the scripts below to get rid of them. You might also find some site scripts that are not linked to any site design and hence never get executed! PowerShell Bash $sparksjoy = \"Project Site\" , \"Issues List\" $siteScripts = m365 spo sitescript list -o json | ConvertFrom-Json $siteScripts = $siteScripts | where { -not ( $sparksjoy -contains $_ . Title )} if ( $siteScripts . Count -eq 0 ) { break } $siteScripts | Format-Table Title , SiteScriptIds , Description Read-Host -Prompt \"Press Enter to start deleting (CTRL + C to exit)\" $progress = 0 $total = $siteScripts . Count foreach ( $siteScript in $siteScripts ) { $progress ++ Write-Host $progress / $total \":\" $siteScript . Title m365 spo sitescript remove -i $siteScript . Id - -confirm } #!/bin/bash # requires jq: https://stedolan.github.io/jq/ sparksjoy =( \"Project Site\" \"Issues List\" ) sitesscriptstoremove =() while read script ; do scriptTitle = $( echo ${ script } | jq -r '.Title' ) exists = true for keep in \" ${ sparksjoy [@] } \" ; do if [ \" $keep \" == \" $scriptTitle \" ] ; then exists = false break fi done if [ \" $exists \" = true ] ; then echo $scriptTitle sitesscriptstoremove +=( \" $script \" ) fi done < < ( m365 spo sitescript list -o json | jq -c '.[]' ) if [ ${# sitesscriptstoremove [@] } = 0 ] ; then exit 1 fi echo \"Press Enter to start deleting (CTRL + C to exit)\" read foo for script in \" ${ sitesscriptstoremove [@] } \" ; do scriptTitle = $( echo ${ script } | jq -r '.Title' ) scriptId = $( echo ${ script } | jq -r '.Id' ) echo \"Deleting Site script...\" $scriptTitle m365 spo sitescript remove --id $scriptId --confirm done","title":"Delete custom SharePoint site scripts"},{"location":"sample-scripts/spo/remove-site-scripts/#delete-custom-sharepoint-site-scripts","text":"Author: Laura Kokkarinen Site designs and especially site scripts can be something that ends up just hanging around in your tenant for a long time even though you no longer need them for anything. Use the scripts below to get rid of them. You might also find some site scripts that are not linked to any site design and hence never get executed! PowerShell Bash $sparksjoy = \"Project Site\" , \"Issues List\" $siteScripts = m365 spo sitescript list -o json | ConvertFrom-Json $siteScripts = $siteScripts | where { -not ( $sparksjoy -contains $_ . Title )} if ( $siteScripts . Count -eq 0 ) { break } $siteScripts | Format-Table Title , SiteScriptIds , Description Read-Host -Prompt \"Press Enter to start deleting (CTRL + C to exit)\" $progress = 0 $total = $siteScripts . Count foreach ( $siteScript in $siteScripts ) { $progress ++ Write-Host $progress / $total \":\" $siteScript . Title m365 spo sitescript remove -i $siteScript . Id - -confirm } #!/bin/bash # requires jq: https://stedolan.github.io/jq/ sparksjoy =( \"Project Site\" \"Issues List\" ) sitesscriptstoremove =() while read script ; do scriptTitle = $( echo ${ script } | jq -r '.Title' ) exists = true for keep in \" ${ sparksjoy [@] } \" ; do if [ \" $keep \" == \" $scriptTitle \" ] ; then exists = false break fi done if [ \" $exists \" = true ] ; then echo $scriptTitle sitesscriptstoremove +=( \" $script \" ) fi done < < ( m365 spo sitescript list -o json | jq -c '.[]' ) if [ ${# sitesscriptstoremove [@] } = 0 ] ; then exit 1 fi echo \"Press Enter to start deleting (CTRL + C to exit)\" read foo for script in \" ${ sitesscriptstoremove [@] } \" ; do scriptTitle = $( echo ${ script } | jq -r '.Title' ) scriptId = $( echo ${ script } | jq -r '.Id' ) echo \"Deleting Site script...\" $scriptTitle m365 spo sitescript remove --id $scriptId --confirm done","title":"Delete custom SharePoint site scripts"},{"location":"sample-scripts/spo/remove-siteCollection-admin-user/","tags":["cleanup","security","sites","users"],"text":"Remove a Site Collection Admin User from all Site Collections \u00b6 Inspired By: Salaudeen Rajack PowerShell <# .SYNOPSIS Remove Site Collection Admin .DESCRIPTION This function will remove the designated user for every site in the tenant if he/she is a Site Collection Admin. This applies to Group-connected sites, non group-connected sites, or classic sites. .EXAMPLE PS C:\\> Remove-SiteCollectionAdminUser -UserToRemove \"jsmith@contoso.com\" This will remove the user jsmith@contoso.com as a Site Collection Admin on every site in the tenant. .EXAMPLE PS C:\\> Remove-SiteCollectionAdminUser -UserToRemove jdoe@contoso.com This will remove the user jdoe@contoso.com (works also without the quotes) as a Site Collection Admin on every site in the tenant. .INPUTS Inputs (if any) .OUTPUTS Output (if any) .NOTES This script will not remove the designated user if he/she is a Member of a group a Administrator on a site. #> function Remove-SiteCollectionAdminUser { [ CmdletBinding ()] param ( [ Parameter ( Mandatory = $true )] [string] $UserToRemove ) $allSPOSites = m365 spo site list | ConvertFrom-Json $siteCount = $allSPOSites . Count Write-Host \"Processing $siteCount sites...\" -f Green #Loop through each site foreach ( $site in $allSPOSites ) { Write-Host \"Going through $( $site . Url ) \" -f Yellow $users = m365 spo user list - -webUrl $site . Url -o json | ConvertFrom-Json foreach ( $user in $UserToRemove ){ $owners = $users . value | Where-Object { $_ . IsSiteAdmin -eq $true } foreach ( $owner in $owners ) { if ( $owner . Email -eq $UserToRemove ) { #Grab the ID $userToRemoveID = $owner . Id #Remove the user Write-Host \"User $( $UserToRemove ) is an Admin in $( $site . Title ) . Removing...\" -f Blue m365 spo user remove - -webUrl $( $site . Url ) - -id $userToRemoveID - -confirm } } } } }","title":"Remove a Site Collection Admin User from all Site Collections"},{"location":"sample-scripts/spo/remove-siteCollection-admin-user/#remove-a-site-collection-admin-user-from-all-site-collections","text":"Inspired By: Salaudeen Rajack PowerShell <# .SYNOPSIS Remove Site Collection Admin .DESCRIPTION This function will remove the designated user for every site in the tenant if he/she is a Site Collection Admin. This applies to Group-connected sites, non group-connected sites, or classic sites. .EXAMPLE PS C:\\> Remove-SiteCollectionAdminUser -UserToRemove \"jsmith@contoso.com\" This will remove the user jsmith@contoso.com as a Site Collection Admin on every site in the tenant. .EXAMPLE PS C:\\> Remove-SiteCollectionAdminUser -UserToRemove jdoe@contoso.com This will remove the user jdoe@contoso.com (works also without the quotes) as a Site Collection Admin on every site in the tenant. .INPUTS Inputs (if any) .OUTPUTS Output (if any) .NOTES This script will not remove the designated user if he/she is a Member of a group a Administrator on a site. #> function Remove-SiteCollectionAdminUser { [ CmdletBinding ()] param ( [ Parameter ( Mandatory = $true )] [string] $UserToRemove ) $allSPOSites = m365 spo site list | ConvertFrom-Json $siteCount = $allSPOSites . Count Write-Host \"Processing $siteCount sites...\" -f Green #Loop through each site foreach ( $site in $allSPOSites ) { Write-Host \"Going through $( $site . Url ) \" -f Yellow $users = m365 spo user list - -webUrl $site . Url -o json | ConvertFrom-Json foreach ( $user in $UserToRemove ){ $owners = $users . value | Where-Object { $_ . IsSiteAdmin -eq $true } foreach ( $owner in $owners ) { if ( $owner . Email -eq $UserToRemove ) { #Grab the ID $userToRemoveID = $owner . Id #Remove the user Write-Host \"User $( $UserToRemove ) is an Admin in $( $site . Title ) . Removing...\" -f Blue m365 spo user remove - -webUrl $( $site . Url ) - -id $userToRemoveID - -confirm } } } } }","title":"Remove a Site Collection Admin User from all Site Collections"},{"location":"sample-scripts/spo/replace-site-collection-admin/","tags":["security","users"],"text":"Replace site collection admin with another user \u00b6 Author: Patrick Lamber Inspired By: Salaudeen Rajack The script removes a user from a site collection and adds a new one as site collection admin. PowerShell $userToAdd = \"<upnOfUserToAdd>\" $userToRemove = \"<upnOfUserToRemove>\" $webUrl = \"<spoUrl>\" $m365Status = m365 status - -output text Write-Host $m365Status if ( $m365Status -eq \"Logged Out\" ) { # Connection to Microsoft 365 m365 login $m365Status = m365 status - -output text } m365 spo user remove - -webUrl $webUrl - -loginName \"i:0#.f|membership|$userToRemove\" - -confirm m365 spo site set - -url $webUrl - -owners $userToAdd","title":"Replace site collection admin with another user"},{"location":"sample-scripts/spo/replace-site-collection-admin/#replace-site-collection-admin-with-another-user","text":"Author: Patrick Lamber Inspired By: Salaudeen Rajack The script removes a user from a site collection and adds a new one as site collection admin. PowerShell $userToAdd = \"<upnOfUserToAdd>\" $userToRemove = \"<upnOfUserToRemove>\" $webUrl = \"<spoUrl>\" $m365Status = m365 status - -output text Write-Host $m365Status if ( $m365Status -eq \"Logged Out\" ) { # Connection to Microsoft 365 m365 login $m365Status = m365 status - -output text } m365 spo user remove - -webUrl $webUrl - -loginName \"i:0#.f|membership|$userToRemove\" - -confirm m365 spo site set - -url $webUrl - -owners $userToAdd","title":"Replace site collection admin with another user"},{"location":"sample-scripts/spo/setup-example-site/","tags":["libraries","lists","provisioning","sites"],"text":"Setup example site \u00b6 Author: Adam This script is a good starting point for a setup script to create site with some assets like columns, content types, lists, navigation etc. The given example: creates a site, adds a site column and a content type, adds list and modifies it's settings (add a content type to it and makes it hidden), adds a document library with a custom column and some folder, modifies the all items view of the document library, modifies the site navigation links PowerShell Write-host 'setup script example' Write-host 'ensure logged in' $m365Status = m365 status - -output text if ( $m365Status -eq \"Logged Out\" ) { m365 login } Write-host 'create setup site' $siteRelativeUrl = 'sites/setupTestSite' $tenantUrl = 'https://contoso.sharepoint.com' $siteUrl = \"$tenantUrl/$siteRelativeUrl\" $siteTitle = 'setup test site' $siteType = 'CommunicationSite' $site = m365 spo site get - -url $siteUrl - -output 'json' $site = $site | ConvertFrom-Json if ( $null -eq $site ) { Write-host 'setup site does not exist, I will create it' m365 spo site add - -url $siteUrl - -type $siteType - -title $siteTitle } else { Write-host 'setup site already exists' } Write-host 'add site column' $fieldName = 'Sample Text Column' $field = m365 spo field get - -webUrl $siteUrl - -fieldTitle $fieldName - -output 'json' if ( $null -eq $field ) { Write-host 'sample site column does not exist, I will create it' $fieldXml = \"<Field ID='{13AFECC0-2454-41F3-85E6-E194458C861C}' Type='Text' Name='SampleTextColumn' DisplayName='Sample Text Column' Indexed='FALSE' Group='Sample Columns' Required='FALSE' SourceID='{4f118c69-66e0-497c-96ff-d7855ce0713d}' StaticName='SampleTextColumn' FromBaseType='TRUE' ></Field>\" $field = m365 spo field add - -webUrl $siteUrl - -xml $fieldXml - -output 'json' } else { Write-host 'sample site column already exists' } $field = $field | ConvertFrom-Json Write-host 'add site content type' $contentTypeName = 'sample content type' $contentTypeGroup = 'sample content type group' $parentId = '0x01007926A45D687BA842B947286090B8F67D' # list item content type $contentType = m365 spo contenttype get - -webUrl $siteUrl - -id $parentId - -output 'json' if ( $null -eq $contentType ) { Write-host 'sample site content type does not exist, I will create it' $contentType = m365 spo contenttype add - -webUrl $siteUrl - -name $contentTypeName - -id $parentId - -group $contentTypeGroup - -output 'json' $contentType = m365 spo contenttype get - -webUrl $siteUrl - -id $parentId - -output 'json' } else { Write-host 'sample site content type already exists' } $contentType = $contentType | ConvertFrom-Json Write-host 'add field to content type' $fieldId = $field . Id $contentTypeId = $contentType . StringId m365 spo contenttype field set - -webUrl $siteUrl - -contentTypeId $contentTypeId - -fieldId $fieldId - -required false Write-host 'create generic list' $listName = 'setup test list' $list = m365 spo list get - -title $listName - -webUrl $siteUrl - -output 'json' if ( $null -eq $list ) { Write-host 'sample generic list does not exist, I will create it' $list = m365 spo list add - -title $listName - -baseTemplate 'GenericList' - -webUrl $siteUrl - -output 'json' } else { Write-host 'sample generic list already exists' } $list = $list | ConvertFrom-Json Write-host 'modify list settings to allow content types' m365 spo list set - -webUrl $siteUrl - -id $list . Id - -contentTypesEnabled true Write-host 'add content type to list' $contentTypeAddedToList = m365 spo list contenttype add - -webUrl $siteUrl - -listId $list . Id - -contentTypeId $contentTypeId Write-host 'make list hidden' m365 spo list set - -webUrl $siteUrl - -id $list . Id - -hidden true Write-host 'create document lib' $libName = 'setup test lib' $lib = m365 spo list get - -title $libName - -webUrl $siteUrl - -output 'json' if ( $null -eq $lib ) { Write-host 'sample document lib does not exist, I will create it' $lib = m365 spo list add - -title $libName - -baseTemplate 'DocumentLibrary' - -webUrl $siteUrl - -output 'json' } else { Write-host 'sample document lib already exists' } $lib = $lib | ConvertFrom-Json Write-host 'add sample column' $columnName = 'Sample Text Column' $column = m365 spo field get - -webUrl $siteUrl - -listUrl \"Lists/$libName\" - -fieldTitle $columnName - -output 'json' if ( $null -eq $column ) { Write-host 'sample column in lib does not exist, I will create it' $columnXml = \"<Field ID='{AC827B0C-8B45-4B4F-927B-CDDC4FEEE79E}' Type='Text' Name='SampleTextColumn' DisplayName='Sample Text Column' Required='FALSE' SourceID='http://schemas.microsoft.com/sharepoint/v3' StaticName='SampleTextColumn' FromBaseType='TRUE' />\" $column = m365 spo field add - -webUrl $siteUrl - -listTitle $libName - -xml $columnXml - -output 'json' } else { Write-host 'sample column in lib already exists' } $column = $column | ConvertFrom-Json Write-host 'add sample folder' $folderName = 'sample Folder' $folder = m365 spo folder get - -webUrl $siteUrl - -folderUrl \"/$libName/$folderName\" - -output 'json' if ( $null -eq $folder ) { Write-host 'sample folder in lib does not exist, I will create it' $folder = m365 spo folder add - -webUrl $siteUrl - -parentFolderUrl \"/$libName\" - -name $folderName - -output 'json' } else { Write-host 'sample folder in lib already exists' } Write-host 'modify list view' $views = m365 spo list view list - -webUrl $siteUrl - -listTitle $libName - -output 'json' $views = $views | ConvertFrom-Json $viewName = $views [ 0 ]. Title # all items view m365 spo list view field add - -webUrl $siteUrl - -listTitle $libName - -viewTitle $viewName - -fieldTitle $columnName Write-host 'modify site navigation' $currentNavigation = m365 spo navigation node list - -webUrl $siteUrl - -location QuickLaunch - -output 'json' $currentNavigation = $currentNavigation | ConvertFrom-Json Write-host 'clearing old navigation links' foreach ( $navigationItem in $currentNavigation ) { m365 spo navigation node remove - -webUrl $siteUrl - -location QuickLaunch - -id $navigationItem . Id - -confirm } Write-host 'adding new navigation' $nodeAddedResponse = m365 spo navigation node add - -webUrl $siteUrl - -location QuickLaunch - -title 'Sample Document Library' - -url \"/$siteRelativeUrl/$libName/Forms/AllItems.aspx\" $nodeAddedResponse = m365 spo navigation node add - -webUrl $siteUrl - -location QuickLaunch - -title 'Hidden Sample List' - -url \"/$siteRelativeUrl/Lists/$listName/AllItems.aspx\"","title":"Setup example site"},{"location":"sample-scripts/spo/setup-example-site/#setup-example-site","text":"Author: Adam This script is a good starting point for a setup script to create site with some assets like columns, content types, lists, navigation etc. The given example: creates a site, adds a site column and a content type, adds list and modifies it's settings (add a content type to it and makes it hidden), adds a document library with a custom column and some folder, modifies the all items view of the document library, modifies the site navigation links PowerShell Write-host 'setup script example' Write-host 'ensure logged in' $m365Status = m365 status - -output text if ( $m365Status -eq \"Logged Out\" ) { m365 login } Write-host 'create setup site' $siteRelativeUrl = 'sites/setupTestSite' $tenantUrl = 'https://contoso.sharepoint.com' $siteUrl = \"$tenantUrl/$siteRelativeUrl\" $siteTitle = 'setup test site' $siteType = 'CommunicationSite' $site = m365 spo site get - -url $siteUrl - -output 'json' $site = $site | ConvertFrom-Json if ( $null -eq $site ) { Write-host 'setup site does not exist, I will create it' m365 spo site add - -url $siteUrl - -type $siteType - -title $siteTitle } else { Write-host 'setup site already exists' } Write-host 'add site column' $fieldName = 'Sample Text Column' $field = m365 spo field get - -webUrl $siteUrl - -fieldTitle $fieldName - -output 'json' if ( $null -eq $field ) { Write-host 'sample site column does not exist, I will create it' $fieldXml = \"<Field ID='{13AFECC0-2454-41F3-85E6-E194458C861C}' Type='Text' Name='SampleTextColumn' DisplayName='Sample Text Column' Indexed='FALSE' Group='Sample Columns' Required='FALSE' SourceID='{4f118c69-66e0-497c-96ff-d7855ce0713d}' StaticName='SampleTextColumn' FromBaseType='TRUE' ></Field>\" $field = m365 spo field add - -webUrl $siteUrl - -xml $fieldXml - -output 'json' } else { Write-host 'sample site column already exists' } $field = $field | ConvertFrom-Json Write-host 'add site content type' $contentTypeName = 'sample content type' $contentTypeGroup = 'sample content type group' $parentId = '0x01007926A45D687BA842B947286090B8F67D' # list item content type $contentType = m365 spo contenttype get - -webUrl $siteUrl - -id $parentId - -output 'json' if ( $null -eq $contentType ) { Write-host 'sample site content type does not exist, I will create it' $contentType = m365 spo contenttype add - -webUrl $siteUrl - -name $contentTypeName - -id $parentId - -group $contentTypeGroup - -output 'json' $contentType = m365 spo contenttype get - -webUrl $siteUrl - -id $parentId - -output 'json' } else { Write-host 'sample site content type already exists' } $contentType = $contentType | ConvertFrom-Json Write-host 'add field to content type' $fieldId = $field . Id $contentTypeId = $contentType . StringId m365 spo contenttype field set - -webUrl $siteUrl - -contentTypeId $contentTypeId - -fieldId $fieldId - -required false Write-host 'create generic list' $listName = 'setup test list' $list = m365 spo list get - -title $listName - -webUrl $siteUrl - -output 'json' if ( $null -eq $list ) { Write-host 'sample generic list does not exist, I will create it' $list = m365 spo list add - -title $listName - -baseTemplate 'GenericList' - -webUrl $siteUrl - -output 'json' } else { Write-host 'sample generic list already exists' } $list = $list | ConvertFrom-Json Write-host 'modify list settings to allow content types' m365 spo list set - -webUrl $siteUrl - -id $list . Id - -contentTypesEnabled true Write-host 'add content type to list' $contentTypeAddedToList = m365 spo list contenttype add - -webUrl $siteUrl - -listId $list . Id - -contentTypeId $contentTypeId Write-host 'make list hidden' m365 spo list set - -webUrl $siteUrl - -id $list . Id - -hidden true Write-host 'create document lib' $libName = 'setup test lib' $lib = m365 spo list get - -title $libName - -webUrl $siteUrl - -output 'json' if ( $null -eq $lib ) { Write-host 'sample document lib does not exist, I will create it' $lib = m365 spo list add - -title $libName - -baseTemplate 'DocumentLibrary' - -webUrl $siteUrl - -output 'json' } else { Write-host 'sample document lib already exists' } $lib = $lib | ConvertFrom-Json Write-host 'add sample column' $columnName = 'Sample Text Column' $column = m365 spo field get - -webUrl $siteUrl - -listUrl \"Lists/$libName\" - -fieldTitle $columnName - -output 'json' if ( $null -eq $column ) { Write-host 'sample column in lib does not exist, I will create it' $columnXml = \"<Field ID='{AC827B0C-8B45-4B4F-927B-CDDC4FEEE79E}' Type='Text' Name='SampleTextColumn' DisplayName='Sample Text Column' Required='FALSE' SourceID='http://schemas.microsoft.com/sharepoint/v3' StaticName='SampleTextColumn' FromBaseType='TRUE' />\" $column = m365 spo field add - -webUrl $siteUrl - -listTitle $libName - -xml $columnXml - -output 'json' } else { Write-host 'sample column in lib already exists' } $column = $column | ConvertFrom-Json Write-host 'add sample folder' $folderName = 'sample Folder' $folder = m365 spo folder get - -webUrl $siteUrl - -folderUrl \"/$libName/$folderName\" - -output 'json' if ( $null -eq $folder ) { Write-host 'sample folder in lib does not exist, I will create it' $folder = m365 spo folder add - -webUrl $siteUrl - -parentFolderUrl \"/$libName\" - -name $folderName - -output 'json' } else { Write-host 'sample folder in lib already exists' } Write-host 'modify list view' $views = m365 spo list view list - -webUrl $siteUrl - -listTitle $libName - -output 'json' $views = $views | ConvertFrom-Json $viewName = $views [ 0 ]. Title # all items view m365 spo list view field add - -webUrl $siteUrl - -listTitle $libName - -viewTitle $viewName - -fieldTitle $columnName Write-host 'modify site navigation' $currentNavigation = m365 spo navigation node list - -webUrl $siteUrl - -location QuickLaunch - -output 'json' $currentNavigation = $currentNavigation | ConvertFrom-Json Write-host 'clearing old navigation links' foreach ( $navigationItem in $currentNavigation ) { m365 spo navigation node remove - -webUrl $siteUrl - -location QuickLaunch - -id $navigationItem . Id - -confirm } Write-host 'adding new navigation' $nodeAddedResponse = m365 spo navigation node add - -webUrl $siteUrl - -location QuickLaunch - -title 'Sample Document Library' - -url \"/$siteRelativeUrl/$libName/Forms/AllItems.aspx\" $nodeAddedResponse = m365 spo navigation node add - -webUrl $siteUrl - -location QuickLaunch - -title 'Hidden Sample List' - -url \"/$siteRelativeUrl/Lists/$listName/AllItems.aspx\"","title":"Setup example site"},{"location":"sample-scripts/spo/sync-splib-into-az-storage-container/","tags":["azure","files","migration"],"text":"Sync SharePoint Document Library Documents with Azure Storage Container \u00b6 Author: Joseph Velliah This PowerShell script shows how to download and sync documents in a SharePoint Document Library into an Azure Storage Container using CLI for Microsoft 365 and Azure CLI commands. Prerequisites: Office 365 CLI Azure CLI SharePoint Online Site Document Library with documents Azure Storage Container Azure Storage Account Key with required permission to upload documents PowerShell $spolHostName = \"https://tenant-name.sharepoint.com\" $spolSiteRelativeUrl = \"/sites/site-name\" $spolDocLibTitle = \"document-library-title\" $azStorageAccountKey = \"*****************\" $azStorageAccountName = \"azure-storage-account-name\" $azStorageContainerName = \"azure-storage-container-name\" $localBaseFolderName = \"local-base-folder-name\" $localFileDownloadFolderPath = $PSScriptRoot $spolSiteUrl = $spolHostName + $spolSiteRelativeUrl $spolLibItems = m365 spo listitem list - -webUrl $spolSiteUrl - -title $spolDocLibTitle - -fields 'FileRef,FileLeafRef' - -filter \"FSObjType eq 0\" -o json | ConvertFrom-Json if ( $spolLibItems . Count -gt 0 ) { ForEach ( $spolLibItem in $spolLibItems ) { $spolLibFileRelativeUrl = $spolLibItem . FileRef $spolFileName = $spolLibItem . FileLeafRef $spolLibFolderRelativeUrl = $spolLibFileRelativeUrl . Substring ( 0 , $spolLibFileRelativeUrl . lastIndexOf ( '/' )) $localDownloadFolderPath = Join-Path $localFileDownloadFolderPath $localBaseFolderName $spolLibFolderRelativeUrl If (!( test-path $localDownloadFolderPath )) { $message = \"Target local folder $localDownloadFolderPath not exist\" Write-Host $message -ForegroundColor Yellow New-Item -ItemType Directory -Force -Path $localDownloadFolderPath | Out-Null $message = \"Created target local folder at $localDownloadFolderPath\" Write-Host $message -ForegroundColor Green } else { $message = \"Target local folder exist at $localDownloadFolderPath\" Write-Host $message -ForegroundColor Blue } $localFilePath = Join-Path $localDownloadFolderPath $spolFileName $message = \"Processing SharePoint file $spolFileName\" Write-Host $message -ForegroundColor Green m365 spo file get - -webUrl $spolSiteUrl - -url $spolLibFileRelativeUrl - -asFile - -path $localFilePath $message = \"Downloaded SharePoint file at $localFilePath\" Write-Host $message -ForegroundColor Green } $localFolderToSync = Join-Path $localFileDownloadFolderPath $localBaseFolderName az storage blob sync - -account-key $azStorageAccountKey - -account-name $azStorageAccountName -c $azStorageContainerName -s $localFolderToSync - -only-show-errors | Out-Null $message = \"Syncing local folder $localFolderToSync with Azure Storage Container $azStorageContainerName is completed\" Write-Host $message -ForegroundColor Green } else { Write-Host \"No files in $spolDocLibTitle library\" -ForegroundColor Yellow }","title":"Sync SharePoint Document Library Documents with Azure Storage Container"},{"location":"sample-scripts/spo/sync-splib-into-az-storage-container/#sync-sharepoint-document-library-documents-with-azure-storage-container","text":"Author: Joseph Velliah This PowerShell script shows how to download and sync documents in a SharePoint Document Library into an Azure Storage Container using CLI for Microsoft 365 and Azure CLI commands. Prerequisites: Office 365 CLI Azure CLI SharePoint Online Site Document Library with documents Azure Storage Container Azure Storage Account Key with required permission to upload documents PowerShell $spolHostName = \"https://tenant-name.sharepoint.com\" $spolSiteRelativeUrl = \"/sites/site-name\" $spolDocLibTitle = \"document-library-title\" $azStorageAccountKey = \"*****************\" $azStorageAccountName = \"azure-storage-account-name\" $azStorageContainerName = \"azure-storage-container-name\" $localBaseFolderName = \"local-base-folder-name\" $localFileDownloadFolderPath = $PSScriptRoot $spolSiteUrl = $spolHostName + $spolSiteRelativeUrl $spolLibItems = m365 spo listitem list - -webUrl $spolSiteUrl - -title $spolDocLibTitle - -fields 'FileRef,FileLeafRef' - -filter \"FSObjType eq 0\" -o json | ConvertFrom-Json if ( $spolLibItems . Count -gt 0 ) { ForEach ( $spolLibItem in $spolLibItems ) { $spolLibFileRelativeUrl = $spolLibItem . FileRef $spolFileName = $spolLibItem . FileLeafRef $spolLibFolderRelativeUrl = $spolLibFileRelativeUrl . Substring ( 0 , $spolLibFileRelativeUrl . lastIndexOf ( '/' )) $localDownloadFolderPath = Join-Path $localFileDownloadFolderPath $localBaseFolderName $spolLibFolderRelativeUrl If (!( test-path $localDownloadFolderPath )) { $message = \"Target local folder $localDownloadFolderPath not exist\" Write-Host $message -ForegroundColor Yellow New-Item -ItemType Directory -Force -Path $localDownloadFolderPath | Out-Null $message = \"Created target local folder at $localDownloadFolderPath\" Write-Host $message -ForegroundColor Green } else { $message = \"Target local folder exist at $localDownloadFolderPath\" Write-Host $message -ForegroundColor Blue } $localFilePath = Join-Path $localDownloadFolderPath $spolFileName $message = \"Processing SharePoint file $spolFileName\" Write-Host $message -ForegroundColor Green m365 spo file get - -webUrl $spolSiteUrl - -url $spolLibFileRelativeUrl - -asFile - -path $localFilePath $message = \"Downloaded SharePoint file at $localFilePath\" Write-Host $message -ForegroundColor Green } $localFolderToSync = Join-Path $localFileDownloadFolderPath $localBaseFolderName az storage blob sync - -account-key $azStorageAccountKey - -account-name $azStorageAccountName -c $azStorageContainerName -s $localFolderToSync - -only-show-errors | Out-Null $message = \"Syncing local folder $localFolderToSync with Azure Storage Container $azStorageContainerName is completed\" Write-Host $message -ForegroundColor Green } else { Write-Host \"No files in $spolDocLibTitle library\" -ForegroundColor Yellow }","title":"Sync SharePoint Document Library Documents with Azure Storage Container"},{"location":"sample-scripts/spo/upload-local-files-and-folder/","tags":["files","migration"],"text":"Upload local files and folders to SharePoint Online \u00b6 Author: Patrick Lamber , Adam This script shows how you can use the CLI to upload files located on a local folder to a SharePoint Online library or subfolder. This is a simple script that could be used for simple data migration scenarios. The given example uploads to the given site to Shared Documents library all files and sub folders of ./import local folder PowerShell Write-host 'upload files and folders from directory example' function Import-FilesAndFolders ( [ Parameter ( Mandatory = $True )] [string] $folderPath , [ Parameter ( Mandatory = $True )] [string] $sPFolderPath , [ Parameter ( Mandatory = $True )] [string] $siteUrl ) { $items = Get-ChildItem -Path $folderPath foreach ( $item in $items ) { if (( Get-Item $item . FullName ) -is [System.IO.DirectoryInfo] ) { Write-host \"creating folder $item\" $folderCreated = m365 spo folder add - -webUrl $siteUrl - -parentFolderUrl $sPFolderPath - -name $item . Name Write-host \"importing folder $item\" Import-FilesAndFolders -folderPath $item . FullName -sPFolderPath \"$sPFolderPath/$item\" -siteUrl $siteUrl } else { Write-host \"importing file $item\" m365 spo file add - -webUrl $siteUrl - -folder $sPFolderPath - -path $item . FullName } } } Write-host 'ensure logged in' $m365Status = m365 status - -output text if ( $m365Status -eq \"Logged Out\" ) { m365 login } $importFolderPath = './import' $sPFolderPath = '/Shared Documents' $siteUrl = 'https://contoso.sharepoint.com/sites/TestFileImport' Import-FilesAndFolders -folderPath $importFolderPath -sPFolderPath $sPFolderPath -siteUrl $siteUrl","title":"Upload local files and folders to SharePoint Online"},{"location":"sample-scripts/spo/upload-local-files-and-folder/#upload-local-files-and-folders-to-sharepoint-online","text":"Author: Patrick Lamber , Adam This script shows how you can use the CLI to upload files located on a local folder to a SharePoint Online library or subfolder. This is a simple script that could be used for simple data migration scenarios. The given example uploads to the given site to Shared Documents library all files and sub folders of ./import local folder PowerShell Write-host 'upload files and folders from directory example' function Import-FilesAndFolders ( [ Parameter ( Mandatory = $True )] [string] $folderPath , [ Parameter ( Mandatory = $True )] [string] $sPFolderPath , [ Parameter ( Mandatory = $True )] [string] $siteUrl ) { $items = Get-ChildItem -Path $folderPath foreach ( $item in $items ) { if (( Get-Item $item . FullName ) -is [System.IO.DirectoryInfo] ) { Write-host \"creating folder $item\" $folderCreated = m365 spo folder add - -webUrl $siteUrl - -parentFolderUrl $sPFolderPath - -name $item . Name Write-host \"importing folder $item\" Import-FilesAndFolders -folderPath $item . FullName -sPFolderPath \"$sPFolderPath/$item\" -siteUrl $siteUrl } else { Write-host \"importing file $item\" m365 spo file add - -webUrl $siteUrl - -folder $sPFolderPath - -path $item . FullName } } } Write-host 'ensure logged in' $m365Status = m365 status - -output text if ( $m365Status -eq \"Logged Out\" ) { m365 login } $importFolderPath = './import' $sPFolderPath = '/Shared Documents' $siteUrl = 'https://contoso.sharepoint.com/sites/TestFileImport' Import-FilesAndFolders -folderPath $importFolderPath -sPFolderPath $sPFolderPath -siteUrl $siteUrl","title":"Upload local files and folders to SharePoint Online"},{"location":"sample-scripts/teams/add-bulk-users-teams/","tags":["provisioning","users"],"text":"Bulk add members to Microsoft Teams team from CSV file \u00b6 Inspired by: Rakesh Pandey PowerShell <# .SYNOPSIS Add users to a Microsoft 365 group linked to Teams. .DESCRIPTION This script will add users in existing Teams contained in your .csv file. .EXAMPLE PS C:\\> .\\add-users-teams.ps1 This script will add users in existing Microsoft Teams teams from your .csv file .INPUTS Inputs (if any) .OUTPUTS Output (if any) .NOTES Your .csv file must contain headers called UPN, teamName, teamId, and role. If you change those headers then make sure to amend the script. #> #Check if connected to M365 $m365Status = m365 status - -output text if ( $m365Status -eq \"Logged Out\" ) { m365 login } #Import csv $usersCsvFile = Import-Csv -Path \"<YOUR_CSVFile_PATH_HERE.csv>\" #Add users to the Team foreach ( $row in $usersCsvFile ) { Write-Host \"Adding $( $row . UPN ) to the $( $row . teamName ) Team\" -ForegroundColor Magenta m365 aad o365group user add - -groupId $row . teamId - -userName $( $row . UPN ) - -role $( $row . role ) }","title":"Bulk add members to Microsoft Teams team from CSV file"},{"location":"sample-scripts/teams/add-bulk-users-teams/#bulk-add-members-to-microsoft-teams-team-from-csv-file","text":"Inspired by: Rakesh Pandey PowerShell <# .SYNOPSIS Add users to a Microsoft 365 group linked to Teams. .DESCRIPTION This script will add users in existing Teams contained in your .csv file. .EXAMPLE PS C:\\> .\\add-users-teams.ps1 This script will add users in existing Microsoft Teams teams from your .csv file .INPUTS Inputs (if any) .OUTPUTS Output (if any) .NOTES Your .csv file must contain headers called UPN, teamName, teamId, and role. If you change those headers then make sure to amend the script. #> #Check if connected to M365 $m365Status = m365 status - -output text if ( $m365Status -eq \"Logged Out\" ) { m365 login } #Import csv $usersCsvFile = Import-Csv -Path \"<YOUR_CSVFile_PATH_HERE.csv>\" #Add users to the Team foreach ( $row in $usersCsvFile ) { Write-Host \"Adding $( $row . UPN ) to the $( $row . teamName ) Team\" -ForegroundColor Magenta m365 aad o365group user add - -groupId $row . teamId - -userName $( $row . UPN ) - -role $( $row . role ) }","title":"Bulk add members to Microsoft Teams team from CSV file"},{"location":"sample-scripts/teams/create-team-and-add-members-and-owners/","tags":["provisioning","teams","users"],"text":"Create a Microsoft Teams team and bulk add members from CSV file \u00b6 Inspired by: Rakesh Pandey , Patrick Lamber This sample script shows you how to create a Team and add members and owners using a CSV. PowerShell # This script provisions a Group with owners and members and Teamifies it # The owners and members can be specified using a CSV file following this format ## upn,type ## pla@expertsinside.com,owner ## eba@expertsinside.com,member ## szu@expertsinside.com,member # The CLI will provision the Group adding the current user as owner. You can remove this user from the owners list by using the $removeYourSelfFromOwners parameter $importFile = \"<putyourcsvhere.csv>\" ## parameters for the Group $teamDisplayName = \"Cool team\" $teamDescription = \".\" $mailNickname = \"uniqueNickname18\" $isPrivate = $true $removeYourSelfFromOwners = $false ## parameters for the Group end ## Script starts here # process teams that you have joined only $membersList = Import-Csv $importFile -Delimiter \",\" $m365Status = m365 status - -output text if ( $m365Status -eq \"Logged Out\" ) { # Connection to Microsoft 365 m365 login } $Error . Clear () # configure the CLI to output JSON on each execution m365 cli config set - -key output - -value json $members = ( $membersList | where { $_ . type -eq \"member\" } | Select-Object upn ). upn -join \",\" $owners = ( $membersList | where { $_ . type -eq \"owner\" } | Select-Object upn ). upn -join \",\" $privateString = $( If ( $isPrivate ) { \"true\" } Else { \"false\" }) Write-Host \"Provisioning Group...\" $group = m365 aad o365group add - -displayName $teamDisplayName - -description $teamDescription - -mailNickname $mailNickname - -isPrivate $privateString - -members $members - -owners $owners | ConvertFrom-Json if ( $Error . Count -gt 0 ) { Write-Host \"Aborting operation...\" return } $trial = 0 $maxRetry = 3 $waitingTime = 20 do { $Error . Clear () $trial ++ Write-Host \"Waiting $waitingTime seconds before teamifying the group (trial $trial/$maxRetry)...\" Start-Sleep -Seconds $waitingTime m365 aad o365group teamify - -groupId $( $group . id ) 2 > $null } while ( $Error . Count -gt 0 -and $trial -lt $maxRetry ) # if it still failed, output the error and stop if ( $Error . Count -gt 0 ) { $Error return } $Error . Clear () $whoAmI = m365 status | ConvertFrom-Json # remove yourself from the owners group if ( $removeYourSelfFromOwners -and $owners . IndexOf ( $whoAmI . connectedAs ) -eq - 1 ) { Write-Host \"Removing $( $whoAmI . connectedAs ) from the owners list\" m365 aad o365group user remove - -groupId $group . id - -userName $whoAmI . connectedAs - -confirm } Write-Host \"Completed.\"","title":"Create a Microsoft Teams team and bulk add members from CSV file"},{"location":"sample-scripts/teams/create-team-and-add-members-and-owners/#create-a-microsoft-teams-team-and-bulk-add-members-from-csv-file","text":"Inspired by: Rakesh Pandey , Patrick Lamber This sample script shows you how to create a Team and add members and owners using a CSV. PowerShell # This script provisions a Group with owners and members and Teamifies it # The owners and members can be specified using a CSV file following this format ## upn,type ## pla@expertsinside.com,owner ## eba@expertsinside.com,member ## szu@expertsinside.com,member # The CLI will provision the Group adding the current user as owner. You can remove this user from the owners list by using the $removeYourSelfFromOwners parameter $importFile = \"<putyourcsvhere.csv>\" ## parameters for the Group $teamDisplayName = \"Cool team\" $teamDescription = \".\" $mailNickname = \"uniqueNickname18\" $isPrivate = $true $removeYourSelfFromOwners = $false ## parameters for the Group end ## Script starts here # process teams that you have joined only $membersList = Import-Csv $importFile -Delimiter \",\" $m365Status = m365 status - -output text if ( $m365Status -eq \"Logged Out\" ) { # Connection to Microsoft 365 m365 login } $Error . Clear () # configure the CLI to output JSON on each execution m365 cli config set - -key output - -value json $members = ( $membersList | where { $_ . type -eq \"member\" } | Select-Object upn ). upn -join \",\" $owners = ( $membersList | where { $_ . type -eq \"owner\" } | Select-Object upn ). upn -join \",\" $privateString = $( If ( $isPrivate ) { \"true\" } Else { \"false\" }) Write-Host \"Provisioning Group...\" $group = m365 aad o365group add - -displayName $teamDisplayName - -description $teamDescription - -mailNickname $mailNickname - -isPrivate $privateString - -members $members - -owners $owners | ConvertFrom-Json if ( $Error . Count -gt 0 ) { Write-Host \"Aborting operation...\" return } $trial = 0 $maxRetry = 3 $waitingTime = 20 do { $Error . Clear () $trial ++ Write-Host \"Waiting $waitingTime seconds before teamifying the group (trial $trial/$maxRetry)...\" Start-Sleep -Seconds $waitingTime m365 aad o365group teamify - -groupId $( $group . id ) 2 > $null } while ( $Error . Count -gt 0 -and $trial -lt $maxRetry ) # if it still failed, output the error and stop if ( $Error . Count -gt 0 ) { $Error return } $Error . Clear () $whoAmI = m365 status | ConvertFrom-Json # remove yourself from the owners group if ( $removeYourSelfFromOwners -and $owners . IndexOf ( $whoAmI . connectedAs ) -eq - 1 ) { Write-Host \"Removing $( $whoAmI . connectedAs ) from the owners list\" m365 aad o365group user remove - -groupId $group . id - -userName $whoAmI . connectedAs - -confirm } Write-Host \"Completed.\"","title":"Create a Microsoft Teams team and bulk add members from CSV file"},{"location":"sample-scripts/teams/create-team-from-group/","tags":["groups","provisioning","teams"],"text":"Create a Microsoft Team with channels from a Microsoft 365 Group \u00b6 Inspired by: Patrick Lamber A sample script which creates a Microsoft 365 Group, associates a logo to it and some members. Afterward, it teamyfies the Group and creates two public channels. PowerShell # this examples searches the users in a directory by displayname $memberDisplayName = \"A\" # Group settings $logoPath = \"./pnpImage.png\" $displayName = \"Contoso Group\" $mailNickName = \"contosoGroup\" # add more items to the array to provision channels $channelNames = @( \"Public relations\" , \"CLI Project\" ) Write-Host \"Creating the Group '$displayName'...\" $group = $null $group = m365 aad o365group add - -displayName $displayName ` - -description \".\" - -mailNickname $mailNickName ` -o \"json\" | convertfrom-json if ( $group -eq $null ) { Write-Host \"An error occurred during Group creation\" break } Write-Host \"Created with id $( $group . id ) \" # you might need to wait a little bit after Group creation before you are allowed to assign a logo Write-Host \"Assigning custom logo '$logoPath' in about 10 seconds...\" Start-sleep -Seconds 10 m365 aad o365group set - -id $group . id - -logoPath $logoPath Write-Host \"Searching for members with '$memberDisplayName' in their displayname\" $membersToAdd = m365 aad user list - -displayName $memberDisplayName - -properties \"id,userprincipalname\" - -output \"json\" | convertfrom-json $membersToAdd | ForEach -Object { Write-Host \"Adding member to $( $_ . userPrincipalName ) to Group\" $variable = m365 aad o365group user add - -groupId $group . id - -userName $_ . id -o \"json\" | convertfrom-json } Write-Host \"Teamify the Group\" m365 aad o365group teamify - -groupId $group . id Write-Host \"Provisioning channels\" $channelNames | ForEach -Object { m365 teams channel add - -teamId $group . id - -name $_ }","title":"Create a Microsoft Team with channels from a Microsoft 365 Group"},{"location":"sample-scripts/teams/create-team-from-group/#create-a-microsoft-team-with-channels-from-a-microsoft-365-group","text":"Inspired by: Patrick Lamber A sample script which creates a Microsoft 365 Group, associates a logo to it and some members. Afterward, it teamyfies the Group and creates two public channels. PowerShell # this examples searches the users in a directory by displayname $memberDisplayName = \"A\" # Group settings $logoPath = \"./pnpImage.png\" $displayName = \"Contoso Group\" $mailNickName = \"contosoGroup\" # add more items to the array to provision channels $channelNames = @( \"Public relations\" , \"CLI Project\" ) Write-Host \"Creating the Group '$displayName'...\" $group = $null $group = m365 aad o365group add - -displayName $displayName ` - -description \".\" - -mailNickname $mailNickName ` -o \"json\" | convertfrom-json if ( $group -eq $null ) { Write-Host \"An error occurred during Group creation\" break } Write-Host \"Created with id $( $group . id ) \" # you might need to wait a little bit after Group creation before you are allowed to assign a logo Write-Host \"Assigning custom logo '$logoPath' in about 10 seconds...\" Start-sleep -Seconds 10 m365 aad o365group set - -id $group . id - -logoPath $logoPath Write-Host \"Searching for members with '$memberDisplayName' in their displayname\" $membersToAdd = m365 aad user list - -displayName $memberDisplayName - -properties \"id,userprincipalname\" - -output \"json\" | convertfrom-json $membersToAdd | ForEach -Object { Write-Host \"Adding member to $( $_ . userPrincipalName ) to Group\" $variable = m365 aad o365group user add - -groupId $group . id - -userName $_ . id -o \"json\" | convertfrom-json } Write-Host \"Teamify the Group\" m365 aad o365group teamify - -groupId $group . id Write-Host \"Provisioning channels\" $channelNames | ForEach -Object { m365 teams channel add - -teamId $group . id - -name $_ }","title":"Create a Microsoft Team with channels from a Microsoft 365 Group"},{"location":"sample-scripts/teams/deploy-teams-app/","tags":["apps","pipelines","provisioning"],"text":"Deploy Microsoft Teams app from Azure DevOps \u00b6 Author: Garry Trinder Installs or updates a Microsoft Teams app from an Azure DevOps pipeline. Deploys the app if it hasn't been deployed yet or updates the existing package if it's been previously deployed. PowerShell Bash m365 login -t password -u $( username ) -p $( password ) $apps = m365 teams app list -o json | ConvertFrom-Json $app = $apps | Where-Object { $_ . externalId -eq $env:APPID } if ( $app -eq $null ) { # install app m365 teams app publish -p $( System . DefaultWorkingDirectory )/ teams-app-CI / package / teams-app . zip } else { # update app m365 teams app update -i $app . id -p $( System . DefaultWorkingDirectory )/ teams-app-CI / package / teams-app . zip } m365 login -t password -u $( username ) -p $( password ) app = $( m365 teams app list -o json | jq '.[] | select(.externalId == \"' \" $APPID \" '\")' ) if [ -z \" $app \" ] ; then # install app m365 teams app publish -p \" $( System.DefaultWorkingDirectory ) /teams-app-CI/package/teams-app.zip\" else # update app appId = $( echo $app | jq '.id' ) m365 teams app update -i $appId -p \" $( System.DefaultWorkingDirectory ) /teams-app-CI/package/teams-app.zip\" fi","title":"Deploy Microsoft Teams app from Azure DevOps"},{"location":"sample-scripts/teams/deploy-teams-app/#deploy-microsoft-teams-app-from-azure-devops","text":"Author: Garry Trinder Installs or updates a Microsoft Teams app from an Azure DevOps pipeline. Deploys the app if it hasn't been deployed yet or updates the existing package if it's been previously deployed. PowerShell Bash m365 login -t password -u $( username ) -p $( password ) $apps = m365 teams app list -o json | ConvertFrom-Json $app = $apps | Where-Object { $_ . externalId -eq $env:APPID } if ( $app -eq $null ) { # install app m365 teams app publish -p $( System . DefaultWorkingDirectory )/ teams-app-CI / package / teams-app . zip } else { # update app m365 teams app update -i $app . id -p $( System . DefaultWorkingDirectory )/ teams-app-CI / package / teams-app . zip } m365 login -t password -u $( username ) -p $( password ) app = $( m365 teams app list -o json | jq '.[] | select(.externalId == \"' \" $APPID \" '\")' ) if [ -z \" $app \" ] ; then # install app m365 teams app publish -p \" $( System.DefaultWorkingDirectory ) /teams-app-CI/package/teams-app.zip\" else # update app appId = $( echo $app | jq '.id' ) m365 teams app update -i $appId -p \" $( System.DefaultWorkingDirectory ) /teams-app-CI/package/teams-app.zip\" fi","title":"Deploy Microsoft Teams app from Azure DevOps"},{"location":"sample-scripts/teams/export-all-channels-teams/","tags":["migration","teams"],"text":"Export all channels in Microsoft Teams teams in the tenant \u00b6 Author: Sudharsan Kesavanarayanan Export all the channels from Microsoft Team in a CSV. PowerShell function Get-Channels ( [ Parameter ( Mandatory = $false )] [string] $teamID , [ Parameter ( Mandatory = $false )] [string] $teamName ) { if (! $teamID -and ! $teamName ) { Write-Error \"Either 'teamID' or 'teamName' is required\" return } $channels = $null if ( $teamID ) { $channels = m365 teams channel list - -teamId $teamID -o 'json' | ConvertFrom-Json } if ( $teamName ) { $channels = m365 teams channel list - -teamName $teamName -o 'json' | ConvertFrom-Json } Write-Output $channels . length if ( $channels . length -gt 0 ) { $results = @() foreach ( $channel in $channels ) { $results += [pscustomobject][ordered] @{ ID = $channel . id \"Display Name\" = $channel . displayName Description = $channel . description Email = $channel . email WebURL = $channel . weburl } } Write-Host \"Exporting file to $fileExportPath..\" $results | Export-Csv -Path \"Channels.csv\" -NoTypeInformation Write-Host \"Completed.\" } else { Write-Information \"No channels found!\" } } Write-Host \"Ensure logged in\" $m365Status = m365 status - -output text if ( $m365Status -eq \"Logged Out\" ) { Write-Host \"Logging in the User!\" m365 login - -authType browser } Get-Channels -teamName \"<Team Name>\" Get-Channels -teamID \"<Team ID>\"","title":"Export all channels in Microsoft Teams teams in the tenant"},{"location":"sample-scripts/teams/export-all-channels-teams/#export-all-channels-in-microsoft-teams-teams-in-the-tenant","text":"Author: Sudharsan Kesavanarayanan Export all the channels from Microsoft Team in a CSV. PowerShell function Get-Channels ( [ Parameter ( Mandatory = $false )] [string] $teamID , [ Parameter ( Mandatory = $false )] [string] $teamName ) { if (! $teamID -and ! $teamName ) { Write-Error \"Either 'teamID' or 'teamName' is required\" return } $channels = $null if ( $teamID ) { $channels = m365 teams channel list - -teamId $teamID -o 'json' | ConvertFrom-Json } if ( $teamName ) { $channels = m365 teams channel list - -teamName $teamName -o 'json' | ConvertFrom-Json } Write-Output $channels . length if ( $channels . length -gt 0 ) { $results = @() foreach ( $channel in $channels ) { $results += [pscustomobject][ordered] @{ ID = $channel . id \"Display Name\" = $channel . displayName Description = $channel . description Email = $channel . email WebURL = $channel . weburl } } Write-Host \"Exporting file to $fileExportPath..\" $results | Export-Csv -Path \"Channels.csv\" -NoTypeInformation Write-Host \"Completed.\" } else { Write-Information \"No channels found!\" } } Write-Host \"Ensure logged in\" $m365Status = m365 status - -output text if ( $m365Status -eq \"Logged Out\" ) { Write-Host \"Logging in the User!\" m365 login - -authType browser } Get-Channels -teamName \"<Team Name>\" Get-Channels -teamID \"<Team ID>\"","title":"Export all channels in Microsoft Teams teams in the tenant"},{"location":"sample-scripts/teams/export-teams-conversations/","tags":["migration","teams"],"text":"Export conversations from Microsoft Teams Channels \u00b6 Author: Joseph Velliah Problem Statement \u00b6 We utilize Teams during incidents and create channels for each. We would like to be able to export conversation history. right now the only option we have is to go through Security & Compliance. Teams usage is growing in every organization and it would soon become unreasonably to only have Administrators be the ones doing exports of channels for all the Teams. Solution \u00b6 This script uses CLI for Microsoft 365 to export the conversations from Microsoft Teams Channels. You don't need to be a tenant admin to export conversations but you still can only export conversations of Teams of which you are member. Attention Commands m365 teams message list and m365 teams message reply list are based on an API that is currently in preview and is subject to change once the API reached general availability. PowerShell function Get-Teams { $teams = m365 teams team list -o json | ConvertFrom-Json -AsHashtable return $teams } function Get-Channels { param ( [ Parameter ( Mandatory = $true )] [string] $teamId ) $channels = m365 teams channel list - -teamId $teamId -o json | ConvertFrom-Json -AsHashtable return $channels } function Get-Messages { param ( [ Parameter ( Mandatory = $true )] [string] $teamId , [ Parameter ( Mandatory = $true )] [string] $channelId ) $messages = m365 teams message list - -teamId $teamId - -channelId $channelId -o json | ConvertFrom-Json -AsHashtable return $messages } function Get-MessageReplies { param ( [ Parameter ( Mandatory = $true )] [string] $teamId , [ Parameter ( Mandatory = $true )] [string] $channelId , [ Parameter ( Mandatory = $true )] [string] $messageId ) $messageReplies = m365 teams message reply list - -teamId $teamId - -channelId $channelId - -messageId $messageId -o json | ConvertFrom-Json -AsHashtable return $messageReplies } Try { $teamsCollection = [System.Collections.ArrayList] @() $teams = Get-Teams $progressCountTeam = 1 ; foreach ( $team in $teams ) { Write-Progress -Id 0 -Activity \"Processing channels in Team : $( $team . displayName ) \" -Status \"Team $progressCountTeam of $( $teams . length ) \" -PercentComplete (( $progressCountTeam / $teams . length ) * 100 ) $channelsCollection = [System.Collections.ArrayList] @() $channels = Get-Channels $team . id $progressCountChannel = 1 ; foreach ( $channel in $channels ) { Write-Progress -Id 1 -ParentId 0 -Activity \"Processing messages in channel : $( $channel . displayName ) \" -Status \"Channel $progressCountChannel of $( $channels . length ) \" -PercentComplete (( $progressCountChannel / $channels . length ) * 100 ) $messages = Get-Messages $team . id $channel . id $messagesCollection = [System.Collections.ArrayList] @() foreach ( $message in $messages ) { $messageReplies = Get-MessageReplies $team . id $channel . id $message . id $messageDetails = $message [void] $messageDetails . Add ( \"replies\" , $messageReplies ) [void] $messagesCollection . Add ( $messageDetails ) } $channelDetails = $channel [void] $channelDetails . Add ( \"messages\" , $messagesCollection ) [void] $channelsCollection . Add ( $channelDetails ) $progressCountChannel ++ } $teamDetails = $team [void] $teamDetails . Add ( \"channels\" , $channelsCollection ) [void] $teamsCollection . Add ( $teamDetails ) $progressCountTeam ++ } Write-Progress -Id 0 -Activity \" \" -Status \" \" -Completed Write-Progress -Id 1 -Activity \" \" -Status \" \" -Completed $output = @{} [void] $output . Add ( \"teams\" , $teamsCollection ) $executionDir = $PSScriptRoot $outputFilePath = \"$executionDir/ $( get-date -f yyyyMMdd-HHmmss ) .json\" # ConvertTo-Json cuts off data when exporting to JSON if it nests too deep. The default value of Depth parameter is 2. Set your -Depth parameter whatever depth you need to preserve your data. $output | ConvertTo-Json -Depth 100 | Out-File $outputFilePath Write-Host \"Open $outputFilePath file to review your output\" -F Green } Catch { $ErrorMessage = $_ . Exception . Message Write-Error $ErrorMessage }","title":"Export conversations from Microsoft Teams Channels"},{"location":"sample-scripts/teams/export-teams-conversations/#export-conversations-from-microsoft-teams-channels","text":"Author: Joseph Velliah","title":"Export conversations from Microsoft Teams Channels"},{"location":"sample-scripts/teams/export-teams-conversations/#problem-statement","text":"We utilize Teams during incidents and create channels for each. We would like to be able to export conversation history. right now the only option we have is to go through Security & Compliance. Teams usage is growing in every organization and it would soon become unreasonably to only have Administrators be the ones doing exports of channels for all the Teams.","title":"Problem Statement"},{"location":"sample-scripts/teams/export-teams-conversations/#solution","text":"This script uses CLI for Microsoft 365 to export the conversations from Microsoft Teams Channels. You don't need to be a tenant admin to export conversations but you still can only export conversations of Teams of which you are member. Attention Commands m365 teams message list and m365 teams message reply list are based on an API that is currently in preview and is subject to change once the API reached general availability. PowerShell function Get-Teams { $teams = m365 teams team list -o json | ConvertFrom-Json -AsHashtable return $teams } function Get-Channels { param ( [ Parameter ( Mandatory = $true )] [string] $teamId ) $channels = m365 teams channel list - -teamId $teamId -o json | ConvertFrom-Json -AsHashtable return $channels } function Get-Messages { param ( [ Parameter ( Mandatory = $true )] [string] $teamId , [ Parameter ( Mandatory = $true )] [string] $channelId ) $messages = m365 teams message list - -teamId $teamId - -channelId $channelId -o json | ConvertFrom-Json -AsHashtable return $messages } function Get-MessageReplies { param ( [ Parameter ( Mandatory = $true )] [string] $teamId , [ Parameter ( Mandatory = $true )] [string] $channelId , [ Parameter ( Mandatory = $true )] [string] $messageId ) $messageReplies = m365 teams message reply list - -teamId $teamId - -channelId $channelId - -messageId $messageId -o json | ConvertFrom-Json -AsHashtable return $messageReplies } Try { $teamsCollection = [System.Collections.ArrayList] @() $teams = Get-Teams $progressCountTeam = 1 ; foreach ( $team in $teams ) { Write-Progress -Id 0 -Activity \"Processing channels in Team : $( $team . displayName ) \" -Status \"Team $progressCountTeam of $( $teams . length ) \" -PercentComplete (( $progressCountTeam / $teams . length ) * 100 ) $channelsCollection = [System.Collections.ArrayList] @() $channels = Get-Channels $team . id $progressCountChannel = 1 ; foreach ( $channel in $channels ) { Write-Progress -Id 1 -ParentId 0 -Activity \"Processing messages in channel : $( $channel . displayName ) \" -Status \"Channel $progressCountChannel of $( $channels . length ) \" -PercentComplete (( $progressCountChannel / $channels . length ) * 100 ) $messages = Get-Messages $team . id $channel . id $messagesCollection = [System.Collections.ArrayList] @() foreach ( $message in $messages ) { $messageReplies = Get-MessageReplies $team . id $channel . id $message . id $messageDetails = $message [void] $messageDetails . Add ( \"replies\" , $messageReplies ) [void] $messagesCollection . Add ( $messageDetails ) } $channelDetails = $channel [void] $channelDetails . Add ( \"messages\" , $messagesCollection ) [void] $channelsCollection . Add ( $channelDetails ) $progressCountChannel ++ } $teamDetails = $team [void] $teamDetails . Add ( \"channels\" , $channelsCollection ) [void] $teamsCollection . Add ( $teamDetails ) $progressCountTeam ++ } Write-Progress -Id 0 -Activity \" \" -Status \" \" -Completed Write-Progress -Id 1 -Activity \" \" -Status \" \" -Completed $output = @{} [void] $output . Add ( \"teams\" , $teamsCollection ) $executionDir = $PSScriptRoot $outputFilePath = \"$executionDir/ $( get-date -f yyyyMMdd-HHmmss ) .json\" # ConvertTo-Json cuts off data when exporting to JSON if it nests too deep. The default value of Depth parameter is 2. Set your -Depth parameter whatever depth you need to preserve your data. $output | ConvertTo-Json -Depth 100 | Out-File $outputFilePath Write-Host \"Open $outputFilePath file to review your output\" -F Green } Catch { $ErrorMessage = $_ . Exception . Message Write-Error $ErrorMessage }","title":"Solution"},{"location":"sample-scripts/teams/get-all-teams-specific-user-is-part-of/","tags":["teams","reports","users"],"text":"Get all the Teams a specific user is part of \u00b6 Author: Veronique Lengelle Script \u00b6 PowerShell #Variables $logFile = \"<YOUR-FILE-PATH>\" $userToFind = \"john.doe@contoso.com\" $results = @() #Get all the Teams $allTeams = m365 teams team list -o json | ConvertFrom-Json #Find the user in Azure AD $userToFindInAD = m365 aad user get - -userName $userToFind -o json | ConvertFrom-Json $userToFindID = $userToFindInAD . Id #Loop thru all the Teams foreach ( $team in $allTeams ){ $allTeamsUsers = m365 teams user list - -teamId $team . Id -o json | ConvertFrom-Json #Loop through users TARGETING THE USER ID TO MATCH foreach ( $teamUser in $allTeamsUsers ) { if ( $teamUser . Id -match $userToFindID ) { $results += [pscustomobject] @{ userName = $userToFindInAD . UserPrincipalName userDisplayName = $userToFindInAD . DisplayName userRole = $teamUser . UserType Team = $team . DisplayName ArchivedTeam = $team . isArchived TeamID = $team . Id } } } } $results | Export-Csv -Path $logFile -NoTypeInformation Function \u00b6 PowerShell <# .SYNOPSIS Get all the Microsoft Teams team(s) a specific user is part of. .DESCRIPTION Get all the Microsoft Teams team(s) a specific user is part of, and exports the results into a CSV file. .EXAMPLE PS C:\\> Get-TeamsUserIsPartOf -UserToFind \"john.doe@contoso.com\" -logFile \"C:\\users\\$env:USERNAME\\Desktop\\myFileExport.csv\" .INPUTS Inputs (if any) .OUTPUTS Output (if any) .NOTES The export will contain the username (UPN), user display name, user role in that Team, Team display name, Team archive status, and the Team Id. #> function Get-TeamsUserIsPartOf { [ CmdletBinding ()] param ( [ Parameter ( Mandatory = $true , HelpMessage = \"User's UPN\" )] [string] $userToFind , [ Parameter ( Mandatory = $true , HelpMessage = \"Full path of your .csv file to log the results\" )] [string] $logFile ) $results = @() #Get all the Teams $allTeams = m365 teams team list -o json | ConvertFrom-Json #Find the user in Azure AD $userToFindInAD = m365 aad user get - -userName $userToFind -o json | ConvertFrom-Json $userToFindID = $userToFindInAD . Id #Loop thru all the Teams foreach ( $team in $allTeams ){ $allTeamsUsers = m365 teams user list - -teamId $team . Id -o json | ConvertFrom-Json #Loop through users TARGETING THE USER ID TO MATCH foreach ( $teamUser in $allTeamsUsers ) { if ( $teamUser . Id -match $userToFindID ) { $results += [pscustomobject] @{ userName = $userToFindInAD . UserPrincipalName userDisplayName = $userToFindInAD . DisplayName userRole = $teamUser . UserType Team = $team . DisplayName ArchivedTeam = $team . isArchived TeamID = $team . Id } } } } $results | Export-Csv -Path $logFile -NoTypeInformation }","title":"Get all the Teams a specific user is part of"},{"location":"sample-scripts/teams/get-all-teams-specific-user-is-part-of/#get-all-the-teams-a-specific-user-is-part-of","text":"Author: Veronique Lengelle","title":"Get all the Teams a specific user is part of"},{"location":"sample-scripts/teams/get-all-teams-specific-user-is-part-of/#script","text":"PowerShell #Variables $logFile = \"<YOUR-FILE-PATH>\" $userToFind = \"john.doe@contoso.com\" $results = @() #Get all the Teams $allTeams = m365 teams team list -o json | ConvertFrom-Json #Find the user in Azure AD $userToFindInAD = m365 aad user get - -userName $userToFind -o json | ConvertFrom-Json $userToFindID = $userToFindInAD . Id #Loop thru all the Teams foreach ( $team in $allTeams ){ $allTeamsUsers = m365 teams user list - -teamId $team . Id -o json | ConvertFrom-Json #Loop through users TARGETING THE USER ID TO MATCH foreach ( $teamUser in $allTeamsUsers ) { if ( $teamUser . Id -match $userToFindID ) { $results += [pscustomobject] @{ userName = $userToFindInAD . UserPrincipalName userDisplayName = $userToFindInAD . DisplayName userRole = $teamUser . UserType Team = $team . DisplayName ArchivedTeam = $team . isArchived TeamID = $team . Id } } } } $results | Export-Csv -Path $logFile -NoTypeInformation","title":"Script"},{"location":"sample-scripts/teams/get-all-teams-specific-user-is-part-of/#function","text":"PowerShell <# .SYNOPSIS Get all the Microsoft Teams team(s) a specific user is part of. .DESCRIPTION Get all the Microsoft Teams team(s) a specific user is part of, and exports the results into a CSV file. .EXAMPLE PS C:\\> Get-TeamsUserIsPartOf -UserToFind \"john.doe@contoso.com\" -logFile \"C:\\users\\$env:USERNAME\\Desktop\\myFileExport.csv\" .INPUTS Inputs (if any) .OUTPUTS Output (if any) .NOTES The export will contain the username (UPN), user display name, user role in that Team, Team display name, Team archive status, and the Team Id. #> function Get-TeamsUserIsPartOf { [ CmdletBinding ()] param ( [ Parameter ( Mandatory = $true , HelpMessage = \"User's UPN\" )] [string] $userToFind , [ Parameter ( Mandatory = $true , HelpMessage = \"Full path of your .csv file to log the results\" )] [string] $logFile ) $results = @() #Get all the Teams $allTeams = m365 teams team list -o json | ConvertFrom-Json #Find the user in Azure AD $userToFindInAD = m365 aad user get - -userName $userToFind -o json | ConvertFrom-Json $userToFindID = $userToFindInAD . Id #Loop thru all the Teams foreach ( $team in $allTeams ){ $allTeamsUsers = m365 teams user list - -teamId $team . Id -o json | ConvertFrom-Json #Loop through users TARGETING THE USER ID TO MATCH foreach ( $teamUser in $allTeamsUsers ) { if ( $teamUser . Id -match $userToFindID ) { $results += [pscustomobject] @{ userName = $userToFindInAD . UserPrincipalName userDisplayName = $userToFindInAD . DisplayName userRole = $teamUser . UserType Team = $team . DisplayName ArchivedTeam = $team . isArchived TeamID = $team . Id } } } } $results | Export-Csv -Path $logFile -NoTypeInformation }","title":"Function"},{"location":"sample-scripts/teams/govern-orphan-teams/","tags":["reports","security","teams","users"],"text":"Govern orphaned Microsoft Teams \u00b6 Author: Matti Paukkonen Every team needs an owner, at least one. Common best practice is that you should have at least two users in owner role. Teams is not allowing the last owner to leave the team, but there might occasions when last owner is removed, example when people are leaving the organization and account gets deleted. This script finds those teams that no longer have an owner. PowerShell Bash $availableTeams = m365 teams team list -o json | ConvertFrom-Json $teams = @() foreach ( $team in $availableTeams ) { Write-host \"Handling team: \" -NoNewline -ForegroundColor Yellow Write-host $team . DisplayName -ForegroundColor Yellow $group = m365 aad o365group get - -id $team . id -o json | ConvertFrom-Json $users = m365 teams user list - -teamId $team . id -o json | ConvertFrom-Json $owners = @( $users | Where-Object { $_ . userType -eq \"Owner\" }) $members = @( $users | Where-Object { $_ . userType -eq \"Member\" }). Length $guests = @( $users | Where-Object { $_ . userType -eq \"Guest\" }). Length $teamObject = New-Object -TypeName PSObject $teamObject | Add-Member -MemberType NoteProperty -Name DisplayName -Value $team . displayName $teamObject | Add-Member -MemberType NoteProperty -Name Alias -Value $group . mailNickName $teamObject | Add-Member -MemberType NoteProperty -Name \"Number of Owners\" -Value $owners . Length $teamObject | Add-Member -MemberType NoteProperty -Name \"Number of Members\" -Value $members $teamObject | Add-Member -MemberType NoteProperty -Name \"Number of Guests\" -Value $guests if ( $owners . Count -eq 1 ) { $teamObject | Add-Member -MemberType NoteProperty -Name \"Owner\" -Value $owners [ 0 ]. displayName } write-host \" ...Done\" -ForegroundColor Green $teams += $teamObject } $teams | Format-Table -AutoSize #!/bin/bash # requires jq: https://stedolan.github.io/jq/ defaultIFS = $IFS IFS = $'\\n' availableTeams = ` m365 teams team list -o json ` teams =() for team in ` echo $availableTeams | jq -c '.[]' ` ; do displayName = ` echo $team | jq '.displayName' ` echo \"Handling team: ${ displayName } \" teamId = ` echo $team | jq '.id' ` group = ` m365 aad o365group get --id ${ teamId } -o json ` users = ` m365 teams user list --teamId ${ teamId } -o json ` groupId = ` echo $team | jq '.id' ` alias = ` echo $group | jq '.mailNickName' ` owner = ` echo $users | jq -c 'map(select(.userType == \"Owner\")) | .[0]? | .displayName' ` ownercount = ` echo $users | jq -c 'map(select(.userType == \"Owner\")) | length' ` membercount = ` echo $users | jq -c 'map(select(.userType == \"Member\")) | length' ` guestcount = ` echo $users | jq -c 'map(select(.userType == \"Guest\")) | length' ` teamObject = $( jq -n -c \\ --arg dn \" ${ displayName } \" \\ --arg id \" ${ groupId } \" \\ --arg al \" ${ alias } \" \\ --arg oc \" ${ ownercount } \" \\ --arg mc \" ${ membercount } \" \\ --arg gc \" ${ guestcount } \" \\ --arg ow \" ${ owner } \" \\ '{DisplayName: $dn, GroupID: $id, Alias: $al, OwnerCount: $oc, MemberCount: $mc, GuestCount: $gc, Owner: $ow}' ) echo \"...Done\" teams +=( $teamObject ) done echo ${ teams [@] } | jq -csr '(.[0] |keys_unsorted | @tsv), (.[]|.|map(.) |@tsv)' | column -s $'\\t' -t IFS = defaultIFS exit 1","title":"Govern orphaned Microsoft Teams"},{"location":"sample-scripts/teams/govern-orphan-teams/#govern-orphaned-microsoft-teams","text":"Author: Matti Paukkonen Every team needs an owner, at least one. Common best practice is that you should have at least two users in owner role. Teams is not allowing the last owner to leave the team, but there might occasions when last owner is removed, example when people are leaving the organization and account gets deleted. This script finds those teams that no longer have an owner. PowerShell Bash $availableTeams = m365 teams team list -o json | ConvertFrom-Json $teams = @() foreach ( $team in $availableTeams ) { Write-host \"Handling team: \" -NoNewline -ForegroundColor Yellow Write-host $team . DisplayName -ForegroundColor Yellow $group = m365 aad o365group get - -id $team . id -o json | ConvertFrom-Json $users = m365 teams user list - -teamId $team . id -o json | ConvertFrom-Json $owners = @( $users | Where-Object { $_ . userType -eq \"Owner\" }) $members = @( $users | Where-Object { $_ . userType -eq \"Member\" }). Length $guests = @( $users | Where-Object { $_ . userType -eq \"Guest\" }). Length $teamObject = New-Object -TypeName PSObject $teamObject | Add-Member -MemberType NoteProperty -Name DisplayName -Value $team . displayName $teamObject | Add-Member -MemberType NoteProperty -Name Alias -Value $group . mailNickName $teamObject | Add-Member -MemberType NoteProperty -Name \"Number of Owners\" -Value $owners . Length $teamObject | Add-Member -MemberType NoteProperty -Name \"Number of Members\" -Value $members $teamObject | Add-Member -MemberType NoteProperty -Name \"Number of Guests\" -Value $guests if ( $owners . Count -eq 1 ) { $teamObject | Add-Member -MemberType NoteProperty -Name \"Owner\" -Value $owners [ 0 ]. displayName } write-host \" ...Done\" -ForegroundColor Green $teams += $teamObject } $teams | Format-Table -AutoSize #!/bin/bash # requires jq: https://stedolan.github.io/jq/ defaultIFS = $IFS IFS = $'\\n' availableTeams = ` m365 teams team list -o json ` teams =() for team in ` echo $availableTeams | jq -c '.[]' ` ; do displayName = ` echo $team | jq '.displayName' ` echo \"Handling team: ${ displayName } \" teamId = ` echo $team | jq '.id' ` group = ` m365 aad o365group get --id ${ teamId } -o json ` users = ` m365 teams user list --teamId ${ teamId } -o json ` groupId = ` echo $team | jq '.id' ` alias = ` echo $group | jq '.mailNickName' ` owner = ` echo $users | jq -c 'map(select(.userType == \"Owner\")) | .[0]? | .displayName' ` ownercount = ` echo $users | jq -c 'map(select(.userType == \"Owner\")) | length' ` membercount = ` echo $users | jq -c 'map(select(.userType == \"Member\")) | length' ` guestcount = ` echo $users | jq -c 'map(select(.userType == \"Guest\")) | length' ` teamObject = $( jq -n -c \\ --arg dn \" ${ displayName } \" \\ --arg id \" ${ groupId } \" \\ --arg al \" ${ alias } \" \\ --arg oc \" ${ ownercount } \" \\ --arg mc \" ${ membercount } \" \\ --arg gc \" ${ guestcount } \" \\ --arg ow \" ${ owner } \" \\ '{DisplayName: $dn, GroupID: $id, Alias: $al, OwnerCount: $oc, MemberCount: $mc, GuestCount: $gc, Owner: $ow}' ) echo \"...Done\" teams +=( $teamObject ) done echo ${ teams [@] } | jq -csr '(.[0] |keys_unsorted | @tsv), (.[]|.|map(.) |@tsv)' | column -s $'\\t' -t IFS = defaultIFS exit 1","title":"Govern orphaned Microsoft Teams"},{"location":"sample-scripts/teams/install-personal-app/","tags":["apps","provisioning","users"],"text":"Deploy Microsoft Teams personal app and add it to users \u00b6 Author: S\u00e9bastien Levert Installs or updates a Microsoft Teams app from a provided zipped manifest and then, based on the parameters, add it to the current users and / or to a set of users. PowerShell <# .SYNOPSIS Installs an app to Microsoft Teams and potentially to a set of users .EXAMPLE .\\Install-PersonalApp.ps1 -AppManifestPath \"C:\\_\\Manifest.zip\" -AppId \"2dbace6f-3f3b-4779-9e3f-bb4d27c403fe\" -Publish -Install -CurrentUser .EXAMPLE .\\Install-PersonalApp.ps1 -AppManifestPath \"C:\\_\\Manifest.zip\" -AppId \"2dbace6f-3f3b-4779-9e3f-bb4d27c403fe\" -Publish -Update -Install -Users @(\"user1@contoso.com\", \"user2@contoso.com\") .PARAMETER AppManifestPath Valid Path to an zipped App Manifest representing the Microsoft Teams app .PARAMETER AppId GUID of the Microsoft Teams app. Is the same \"id\" you can find in the manifest.json from your Microsoft Teams app. .PARAMETER Users Array of string representing the usernames of the users to deploy the Microsoft Teams app to. .PARAMETER Publish Switch allowing to Publish (make available) the application to the tenant app catalog .PARAMETER Update Switch allowing to Update an existing application in the tenant app catalog .PARAMETER Install Switch allowing to Install the app for the specified Users or Current User .PARAMETER CurrentUser Switch allowing to Install the app for the current user #> Param ( [ ValidateScript ( { if ( -not ( $_ | Test-Path ) ) { throw \"File or folder does not exist\" } if ( -not ( $_ | Test-Path -PathType Leaf ) ) { throw \"The Path argument must be a file. Folder paths are not allowed.\" } if ( $_ -notmatch \".zip\" ) { throw \"The file specified in the path argument must be a zip\" } return $true })] [System.IO.FileInfo] $AppManifestPath , [string] $AppId , [string[]] $Users , [switch] $Publish , [switch] $Update , [switch] $Install , [switch] $CurrentUser ) $m365Status = m365 status - -output text if ( $m365Status -eq \"Logged Out\" ) { # Connection to Microsoft 365 m365 login } # Validating that the app is not already in the store $app = m365 teams app list - -query \"[?externalId == '$AppId']\" -o json | ConvertFrom-Json if ( $app . Length -gt 0 ) { if ( $Update ) { # Updating the app with the provided manifest m365 teams app update - -id $app . id - -filePath $AppManifestPath $app = m365 teams app list - -query \"[?externalId == '$AppId']\" -o json | ConvertFrom-Json Write-Host \"The App ' $( $app . displayName ) ' with ID ' $( $app . id ) ' and ExternalID ' $( $app . externalId ) ' was updated.\" } } else { if ( $Publish ) { # Publishing the app with the provided manifest m365 teams app publish - -filePath $AppManifestPath $app = m365 teams app list - -query \"[?externalId == '$AppId']\" -o json | ConvertFrom-Json Write-Host \"The App ' $( $app . displayName ) ' with ID ' $( $app . id ) ' and ExternalID ' $( $app . externalId ) ' was published.\" } } if ( $CurrentUser ) { # Getting the reference of the currently connected user $connectedAs = m365 status -o json | ConvertFrom-Json $user = m365 aad user get - -userName $connectedAs . connectedAs -o json | ConvertFrom-Json if ( $user ) { $Users += $user . userPrincipalName } } $user = $null if ( $Users . Length -gt 0 -and $Install ) { $Users | ForEach -Object { # Getting the specified user $user = m365 aad user get - -userName $_ -o json | ConvertFrom-Json if ( $user ) { $userApp = m365 teams user app list - -userId $user . id - -query \"[?appId == ' $( $app . id ) ']\" -o json | ConvertFrom-Json if ( $userApp . Length -eq 0 ) { # Adding the app to the personal apps of the specified user m365 teams user app add - -appId $app . id - -userId $user . id Write-Host \"The App ' $( $app . displayName ) ' with ID ' $( $app . id ) ' was deployed to user ' $( $user . userPrincipalName ) '.\" } else { Write-Warning \"The App ' $( $app . displayName ) ' with ID ' $( $app . id ) ' is already deployed to user ' $( $user . userPrincipalName ) '.\" } } else { Write-Warning \"The user '$_' was not found\" } } }","title":"Deploy Microsoft Teams personal app and add it to users"},{"location":"sample-scripts/teams/install-personal-app/#deploy-microsoft-teams-personal-app-and-add-it-to-users","text":"Author: S\u00e9bastien Levert Installs or updates a Microsoft Teams app from a provided zipped manifest and then, based on the parameters, add it to the current users and / or to a set of users. PowerShell <# .SYNOPSIS Installs an app to Microsoft Teams and potentially to a set of users .EXAMPLE .\\Install-PersonalApp.ps1 -AppManifestPath \"C:\\_\\Manifest.zip\" -AppId \"2dbace6f-3f3b-4779-9e3f-bb4d27c403fe\" -Publish -Install -CurrentUser .EXAMPLE .\\Install-PersonalApp.ps1 -AppManifestPath \"C:\\_\\Manifest.zip\" -AppId \"2dbace6f-3f3b-4779-9e3f-bb4d27c403fe\" -Publish -Update -Install -Users @(\"user1@contoso.com\", \"user2@contoso.com\") .PARAMETER AppManifestPath Valid Path to an zipped App Manifest representing the Microsoft Teams app .PARAMETER AppId GUID of the Microsoft Teams app. Is the same \"id\" you can find in the manifest.json from your Microsoft Teams app. .PARAMETER Users Array of string representing the usernames of the users to deploy the Microsoft Teams app to. .PARAMETER Publish Switch allowing to Publish (make available) the application to the tenant app catalog .PARAMETER Update Switch allowing to Update an existing application in the tenant app catalog .PARAMETER Install Switch allowing to Install the app for the specified Users or Current User .PARAMETER CurrentUser Switch allowing to Install the app for the current user #> Param ( [ ValidateScript ( { if ( -not ( $_ | Test-Path ) ) { throw \"File or folder does not exist\" } if ( -not ( $_ | Test-Path -PathType Leaf ) ) { throw \"The Path argument must be a file. Folder paths are not allowed.\" } if ( $_ -notmatch \".zip\" ) { throw \"The file specified in the path argument must be a zip\" } return $true })] [System.IO.FileInfo] $AppManifestPath , [string] $AppId , [string[]] $Users , [switch] $Publish , [switch] $Update , [switch] $Install , [switch] $CurrentUser ) $m365Status = m365 status - -output text if ( $m365Status -eq \"Logged Out\" ) { # Connection to Microsoft 365 m365 login } # Validating that the app is not already in the store $app = m365 teams app list - -query \"[?externalId == '$AppId']\" -o json | ConvertFrom-Json if ( $app . Length -gt 0 ) { if ( $Update ) { # Updating the app with the provided manifest m365 teams app update - -id $app . id - -filePath $AppManifestPath $app = m365 teams app list - -query \"[?externalId == '$AppId']\" -o json | ConvertFrom-Json Write-Host \"The App ' $( $app . displayName ) ' with ID ' $( $app . id ) ' and ExternalID ' $( $app . externalId ) ' was updated.\" } } else { if ( $Publish ) { # Publishing the app with the provided manifest m365 teams app publish - -filePath $AppManifestPath $app = m365 teams app list - -query \"[?externalId == '$AppId']\" -o json | ConvertFrom-Json Write-Host \"The App ' $( $app . displayName ) ' with ID ' $( $app . id ) ' and ExternalID ' $( $app . externalId ) ' was published.\" } } if ( $CurrentUser ) { # Getting the reference of the currently connected user $connectedAs = m365 status -o json | ConvertFrom-Json $user = m365 aad user get - -userName $connectedAs . connectedAs -o json | ConvertFrom-Json if ( $user ) { $Users += $user . userPrincipalName } } $user = $null if ( $Users . Length -gt 0 -and $Install ) { $Users | ForEach -Object { # Getting the specified user $user = m365 aad user get - -userName $_ -o json | ConvertFrom-Json if ( $user ) { $userApp = m365 teams user app list - -userId $user . id - -query \"[?appId == ' $( $app . id ) ']\" -o json | ConvertFrom-Json if ( $userApp . Length -eq 0 ) { # Adding the app to the personal apps of the specified user m365 teams user app add - -appId $app . id - -userId $user . id Write-Host \"The App ' $( $app . displayName ) ' with ID ' $( $app . id ) ' was deployed to user ' $( $user . userPrincipalName ) '.\" } else { Write-Warning \"The App ' $( $app . displayName ) ' with ID ' $( $app . id ) ' is already deployed to user ' $( $user . userPrincipalName ) '.\" } } else { Write-Warning \"The user '$_' was not found\" } } }","title":"Deploy Microsoft Teams personal app and add it to users"},{"location":"sample-scripts/teams/list-all-tabs-teams/","tags":["reports","teams"],"text":"List all tabs in Microsoft Teams teams in the tenant \u00b6 Inspired by: Patrick Lamber and Veronique Lengelle List all tabs in Microsoft Teams teams in the tenant and exports the results in a CSV. PowerShell $fileExportPath = \"<PUTYOURPATHHERE.csv>\" $m365Status = m365 status - -output text if ( $m365Status -eq \"Logged Out\" ) { # Connection to Microsoft 365 m365 login } $results = @() $allTeams = m365 teams team list -o json | ConvertFrom-Json $teamCount = $allTeams . Count Write-Host \"Processing $teamCount teams...\" #Loop through each Team $counter = 0 foreach ( $team in $allTeams ) { $counter ++ Write-Host \"Processing $( $team . displayName ) ... ($counter/$teamCount)\" $allChannels = m365 teams channel list - -teamId $team . id -o json | ConvertFrom-Json #Loop through each Channel foreach ( $channel in $allChannels ) { $allTabs = m365 teams tab list - -teamId $team . id - -channelId $channel . id -o json | ConvertFrom-Json #Loop through each Tab + get the info! foreach ( $tab in $allTabs ) { $results += [pscustomobject][ordered] @{ TeamId = $team . id TeamDisplayName = $team . displayName TeamIsArchived = $team . isArchived TeamVisibility = $team . visibility ChannelId = $channel . id ChannelDisplayName = $channel . DisplayName ChannelMemberShipType = $channel . membershipType TabId = $tab . id TabNameDisplayName = $tab . DisplayName TeamsAppTabId = $tab . teamsAppTabId } } } } Write-Host \"Exporting file to $fileExportPath..\" $results | Export-Csv -Path $fileExportPath -NoTypeInformation Write-Host \"Completed.\"","title":"List all tabs in Microsoft Teams teams in the tenant"},{"location":"sample-scripts/teams/list-all-tabs-teams/#list-all-tabs-in-microsoft-teams-teams-in-the-tenant","text":"Inspired by: Patrick Lamber and Veronique Lengelle List all tabs in Microsoft Teams teams in the tenant and exports the results in a CSV. PowerShell $fileExportPath = \"<PUTYOURPATHHERE.csv>\" $m365Status = m365 status - -output text if ( $m365Status -eq \"Logged Out\" ) { # Connection to Microsoft 365 m365 login } $results = @() $allTeams = m365 teams team list -o json | ConvertFrom-Json $teamCount = $allTeams . Count Write-Host \"Processing $teamCount teams...\" #Loop through each Team $counter = 0 foreach ( $team in $allTeams ) { $counter ++ Write-Host \"Processing $( $team . displayName ) ... ($counter/$teamCount)\" $allChannels = m365 teams channel list - -teamId $team . id -o json | ConvertFrom-Json #Loop through each Channel foreach ( $channel in $allChannels ) { $allTabs = m365 teams tab list - -teamId $team . id - -channelId $channel . id -o json | ConvertFrom-Json #Loop through each Tab + get the info! foreach ( $tab in $allTabs ) { $results += [pscustomobject][ordered] @{ TeamId = $team . id TeamDisplayName = $team . displayName TeamIsArchived = $team . isArchived TeamVisibility = $team . visibility ChannelId = $channel . id ChannelDisplayName = $channel . DisplayName ChannelMemberShipType = $channel . membershipType TabId = $tab . id TabNameDisplayName = $tab . DisplayName TeamsAppTabId = $tab . teamsAppTabId } } } } Write-Host \"Exporting file to $fileExportPath..\" $results | Export-Csv -Path $fileExportPath -NoTypeInformation Write-Host \"Completed.\"","title":"List all tabs in Microsoft Teams teams in the tenant"},{"location":"sample-scripts/teams/list-all-teammembers-teams/","tags":["users","reports","teams"],"text":"List all team members in Microsoft Teams teams in the tenant \u00b6 List all team members in Microsoft Teams teams in the tenant and exports the results in a CSV. PowerShell function Get-TeamMembers ( [ Parameter ( Mandatory = $false )] [string] $teamID ) { if (! $teamID ) { Write-Error \"'Team ID' is required!\" return } Write-Host \"Retrieving the users..\" $results = @() $users = m365 teams user list - -teamId $teamID -o 'json' | ConvertFrom-Json if ( $users . length -gt 0 ) { foreach ( $user in $users ) { $results += [pscustomobject][ordered] @{ ID = $user . id \"Display Name\" = $user . displayName UPN = $user . userPrincipalName Role = $user . userType } } } else { Write-Output \"No team members!\" } Write-Host \"Exporting the results..\" $results | Export-Csv -Path \"TeamMembers.csv\" -NoTypeInformation Write-Host \"Completed.\" } Write-Host \"Ensure logged in\" $m365Status = m365 status - -output text if ( $m365Status -eq \"Logged Out\" ) { Write-Host \"Logging in the User!\" m365 login - -authType browser }","title":"List all team members in Microsoft Teams teams in the tenant"},{"location":"sample-scripts/teams/list-all-teammembers-teams/#list-all-team-members-in-microsoft-teams-teams-in-the-tenant","text":"List all team members in Microsoft Teams teams in the tenant and exports the results in a CSV. PowerShell function Get-TeamMembers ( [ Parameter ( Mandatory = $false )] [string] $teamID ) { if (! $teamID ) { Write-Error \"'Team ID' is required!\" return } Write-Host \"Retrieving the users..\" $results = @() $users = m365 teams user list - -teamId $teamID -o 'json' | ConvertFrom-Json if ( $users . length -gt 0 ) { foreach ( $user in $users ) { $results += [pscustomobject][ordered] @{ ID = $user . id \"Display Name\" = $user . displayName UPN = $user . userPrincipalName Role = $user . userType } } } else { Write-Output \"No team members!\" } Write-Host \"Exporting the results..\" $results | Export-Csv -Path \"TeamMembers.csv\" -NoTypeInformation Write-Host \"Completed.\" } Write-Host \"Ensure logged in\" $m365Status = m365 status - -output text if ( $m365Status -eq \"Logged Out\" ) { Write-Host \"Logging in the User!\" m365 login - -authType browser }","title":"List all team members in Microsoft Teams teams in the tenant"},{"location":"sample-scripts/teams/list-teams-app-usage/","tags":["apps","reports","teams"],"text":"List app usage in Microsoft Teams \u00b6 Inspired by: Thomy Goelles A sample script which iterates through all the teams in your tenant and lists all apps in each team. This script will be handy if you want to generate a report of available apps in Teams across your tenant. PowerShell Bash $availableTeams = m365 teams team list -o json | ConvertFrom-Json if ( $availableTeams . count -gt 15 ) { $duration = [math] :: Round (( $availableTeams . count / 60 ), 1 ); Write-Host \"There are total of $( $availableTeams . count ) teams. This probably will take around $duration minutes to finish.\" } else { Write-Host \"There are total of $( $availableTeams . count ) teams.\" } foreach ( $team in $availableTeams ) { $apps = m365 teams app list -i $team . Id -a Write-Output \"All apps in team are given below: $( $team . displayName ) $( $team . id ) \" Write-Output $apps } #!/bin/bash # requires jq: https://stedolan.github.io/jq/ defaultIFS = $IFS IFS = $'\\n' availableTeams = $( m365 teams team list -o json ) if [[ $( echo $availableTeams | jq length ) -gt 15 ]] ; then duration = $(( (( $( echo $availableTeams | jq length ) ) + 59 ) / 60 )) echo \"There are total of\" $( echo $availableTeams | jq length ) \"teams. This probably will take around\" $duration \" minutes to finish.\" else echo \"There are total of\" $( echo $availableTeams | jq length ) \"teams available\" fi for team in $( echo $availableTeams | jq -c '.[]' ) ; do apps = $( m365 teams app list -i $( echo $team | jq '' .id ) -a ) echo \"All apps in team are given below: \" $( echo $team | jq '' .displayName ) \" \" $( echo $team | jq '' .id ) echo $apps done","title":"List app usage in Microsoft Teams"},{"location":"sample-scripts/teams/list-teams-app-usage/#list-app-usage-in-microsoft-teams","text":"Inspired by: Thomy Goelles A sample script which iterates through all the teams in your tenant and lists all apps in each team. This script will be handy if you want to generate a report of available apps in Teams across your tenant. PowerShell Bash $availableTeams = m365 teams team list -o json | ConvertFrom-Json if ( $availableTeams . count -gt 15 ) { $duration = [math] :: Round (( $availableTeams . count / 60 ), 1 ); Write-Host \"There are total of $( $availableTeams . count ) teams. This probably will take around $duration minutes to finish.\" } else { Write-Host \"There are total of $( $availableTeams . count ) teams.\" } foreach ( $team in $availableTeams ) { $apps = m365 teams app list -i $team . Id -a Write-Output \"All apps in team are given below: $( $team . displayName ) $( $team . id ) \" Write-Output $apps } #!/bin/bash # requires jq: https://stedolan.github.io/jq/ defaultIFS = $IFS IFS = $'\\n' availableTeams = $( m365 teams team list -o json ) if [[ $( echo $availableTeams | jq length ) -gt 15 ]] ; then duration = $(( (( $( echo $availableTeams | jq length ) ) + 59 ) / 60 )) echo \"There are total of\" $( echo $availableTeams | jq length ) \"teams. This probably will take around\" $duration \" minutes to finish.\" else echo \"There are total of\" $( echo $availableTeams | jq length ) \"teams available\" fi for team in $( echo $availableTeams | jq -c '.[]' ) ; do apps = $( m365 teams app list -i $( echo $team | jq '' .id ) -a ) echo \"All apps in team are given below: \" $( echo $team | jq '' .displayName ) \" \" $( echo $team | jq '' .id ) echo $apps done","title":"List app usage in Microsoft Teams"},{"location":"sample-scripts/teams/list-teams-channels-tabs-for-tenant/","tags":["reports","teams"],"text":"List Microsoft Teams teams, channels, and tabs in the tenant \u00b6 Inspired by: Veronique Lengelle PowerShell <# .SYNOPSIS List Microsoft Teams teams information. .DESCRIPTION This script will list some information about each Teams, channels, and tabs within the tenant. Does not include private channels. .EXAMPLE PS C:\\> Get-TeamsInfoForTenant.ps1 This script will list some information about each Teams, channels, and tabs within the tenant .INPUTS Inputs (if any) .OUTPUTS Output (if any) .NOTES Does not include private channels. #> #Declare variables $exportFile = \"<YOUR_PATH>\" $allTeams = m365 teams team list -o json | ConvertFrom-Json $results = @() foreach ( $team in $allTeams ){ $allChannels = m365 teams channel list - -teamId $team . Id -o json | ConvertFrom-Json foreach ( $channel in $allChannels ){ $allTabs = m365 teams tab list - -teamId $team . Id - -channelId $channel . Id -o json | ConvertFrom-Json # Get the Teams information foreach ( $tab in $allTabs ){ $results += [pscustomobject][ordered] @{ TeamID = $team . Id Team = $team . DisplayName ArchiveStatus = $team . isArchived ChannelName = $channel . DisplayName TabName = $tab . DisplayName } } } } $results | Export-Csv -Path $exportFile -NoTypeInformation","title":"List Microsoft Teams teams, channels, and tabs in the tenant"},{"location":"sample-scripts/teams/list-teams-channels-tabs-for-tenant/#list-microsoft-teams-teams-channels-and-tabs-in-the-tenant","text":"Inspired by: Veronique Lengelle PowerShell <# .SYNOPSIS List Microsoft Teams teams information. .DESCRIPTION This script will list some information about each Teams, channels, and tabs within the tenant. Does not include private channels. .EXAMPLE PS C:\\> Get-TeamsInfoForTenant.ps1 This script will list some information about each Teams, channels, and tabs within the tenant .INPUTS Inputs (if any) .OUTPUTS Output (if any) .NOTES Does not include private channels. #> #Declare variables $exportFile = \"<YOUR_PATH>\" $allTeams = m365 teams team list -o json | ConvertFrom-Json $results = @() foreach ( $team in $allTeams ){ $allChannels = m365 teams channel list - -teamId $team . Id -o json | ConvertFrom-Json foreach ( $channel in $allChannels ){ $allTabs = m365 teams tab list - -teamId $team . Id - -channelId $channel . Id -o json | ConvertFrom-Json # Get the Teams information foreach ( $tab in $allTabs ){ $results += [pscustomobject][ordered] @{ TeamID = $team . Id Team = $team . DisplayName ArchiveStatus = $team . isArchived ChannelName = $channel . DisplayName TabName = $tab . DisplayName } } } } $results | Export-Csv -Path $exportFile -NoTypeInformation","title":"List Microsoft Teams teams, channels, and tabs in the tenant"},{"location":"sample-scripts/teams/list-teams-owners-and-members/","tags":["teams"],"text":"List all Microsoft Teams team's Owners and Members \u00b6 Author: Patrick Lamber This script allows you to list all Teams team's owners and members and export them into a CSV file. This script is inspired by Robin Clarke . PowerShell $fileExportPath = \"<PUTYOURPATHHERE.csv>\" # process teams that you have joined only $joined = $false $m365Status = m365 status - -output text if ( $m365Status -eq \"Logged Out\" ) { # Connection to Microsoft 365 m365 login } # configure the CLI to output JSON on each execution m365 cli config set - -key output - -value json $exportData = @() $teams = m365 teams team list - -joined $joined | ConvertFrom-Json # you can use the next line if you already know the GroupId/TeamId #$teams = @(m365 teams team get --id $teamId | ConvertFrom-Json) $i = 0 $teams | ForEach -Object { $team = $_ $i ++ Write-Host \"Processing Team ' $( $team . displayName ) ' - ($i/ $( $teams . length ) )\" $owners = $null $owners = m365 teams user list - -teamId $team . id - -role Owner - -query \"[].userPrincipalName\" | ConvertFrom-Json $members = $null $members = m365 teams user list - -teamId $team . id - -role Member - -query \"[].userPrincipalName\" | ConvertFrom-Json $exportData += [PSCustomObject] @{ Id = $team . id ; DisplayName = $team . displayName ; Owners = $owners -join ', ' ; Members = $members -join ', ' } } Write-Host \"Exporting file to $fileExportPath...\" $exportData | Export-Csv -Path $fileExportPath -NoTypeInformation Write-Host \"Completed.\"","title":"List all Microsoft Teams team's Owners and Members"},{"location":"sample-scripts/teams/list-teams-owners-and-members/#list-all-microsoft-teams-teams-owners-and-members","text":"Author: Patrick Lamber This script allows you to list all Teams team's owners and members and export them into a CSV file. This script is inspired by Robin Clarke . PowerShell $fileExportPath = \"<PUTYOURPATHHERE.csv>\" # process teams that you have joined only $joined = $false $m365Status = m365 status - -output text if ( $m365Status -eq \"Logged Out\" ) { # Connection to Microsoft 365 m365 login } # configure the CLI to output JSON on each execution m365 cli config set - -key output - -value json $exportData = @() $teams = m365 teams team list - -joined $joined | ConvertFrom-Json # you can use the next line if you already know the GroupId/TeamId #$teams = @(m365 teams team get --id $teamId | ConvertFrom-Json) $i = 0 $teams | ForEach -Object { $team = $_ $i ++ Write-Host \"Processing Team ' $( $team . displayName ) ' - ($i/ $( $teams . length ) )\" $owners = $null $owners = m365 teams user list - -teamId $team . id - -role Owner - -query \"[].userPrincipalName\" | ConvertFrom-Json $members = $null $members = m365 teams user list - -teamId $team . id - -role Member - -query \"[].userPrincipalName\" | ConvertFrom-Json $exportData += [PSCustomObject] @{ Id = $team . id ; DisplayName = $team . displayName ; Owners = $owners -join ', ' ; Members = $members -join ', ' } } Write-Host \"Exporting file to $fileExportPath...\" $exportData | Export-Csv -Path $fileExportPath -NoTypeInformation Write-Host \"Completed.\"","title":"List all Microsoft Teams team's Owners and Members"},{"location":"sample-scripts/teams/recognize-most-active-users-specific-team/","tags":["adoption","users"],"text":"Recognize most active users for a specific Team \u00b6 Author: Albert-Jan Schot Retrieves all activities for a specific Microsoft Teams Team and shares the top 3 contributors based on their score as an adaptive card to the specified webhook url. PowerShell $teamId = \"<PUTYOURTEAMIDHERE>\" $webhookUrl = \"<PUTYOURURLHERE>\" # You can get a delta of messages since the last 'n' days. Currently set to seven. You can go back a maximum of 8 months. $date = ( get-date ). AddDays (- 7 ). ToString ( \"yyyy-MM-ddTHH:mm:ssZ\" ) $channels = m365 teams channel list - -teamId $teamId - -output json | ConvertFrom-Json $results = @() $scoreResults = @() $channelCounter = 0 ; foreach ( $channel in $channels ) { $channelCounter ++; Write-Output \"Processing channel... $channelCounter/ $( $channels . Length ) \" $messages = m365 teams message list - -teamId $teamId - -channelId $channel . id - -since $date - -output json | ConvertFrom-Json $messageCounter = 0 ; foreach ( $message in $messages ) { $messageCounter ++ Write-Output \"Processing message ... $messageCounter/ $( $messages . Length ) \" # Skip messages that are created with an application (bots / adaptive cards) if ( $null -ne $message . from . user . id ) { $results += [pscustomobject][ordered] @{ Type = \"Post\" Details = $message . reactionType UserId = $message . from . user . id HasSubject = $( $null -ne $message . subject ) } } # Process all likes and comments on the initial message foreach ( $reaction in $message . reactions ) { $results += [pscustomobject][ordered] @{ Type = \"Reaction\" Details = $reaction . reactionType UserId = $reaction . user . user . id } } $replies = m365 teams message reply list - -teamId $teamId - -channelId $channel . id - -messageId $message . Id - -output json | ConvertFrom-Json foreach ( $reply in $replies ) { # Skip replies that are created with an application (bots) if ( $null -ne $message . from . user . id ) { $results += [pscustomobject][ordered] @{ Type = \"Reply\" UserId = $reply . from . user . id } } # Process all likes and comments on the reply message foreach ( $reaction in $reply . reactions ) { $results += [pscustomobject][ordered] @{ Type = \"Reaction\" Details = $reaction . reactionType UserId = $reaction . user . user . id } } } } } # Group the results per user $resultsGrouped = $results | Group-Object -Property UserId #Score per user foreach ( $teamsUser in $resultsGrouped ) { $user = m365 aad user get - -id $teamsUser . Name - -output json | ConvertFrom-Json # Count points # Each post is two points, 1 extra point awarded for each Post with Subject # Each reply 1 and each reaction 0.5 $score = (( $teamsUser . Group | Where-Object { $_ . Type -eq \"Post\" }). Count * 2 ) $score += (( $teamsUser . Group | Where-Object { $_ . HasSubject }). Count ) $score += ( $teamsUser . Group | Where-Object { $_ . Type -eq \"Reply\" }). Count $score += (( $teamsUser . Group | Where-Object { $_ . Type -eq \"Reaction\" }). Count / 2 ) $scoreResults += [pscustomobject][ordered] @{ DisplayName = $user . displayName UserPrincipalName = $user . userPrincipalName Score = $score ; } } # Sort our score report based on the score $scoreResults = $scoreResults | Sort-Object { $_ . score } -Descending #Construct adaptive card $title = \"\ud83c\udfc6 Most active team members\" $scoreJson = '{ \\\"title\\\": \\\"\ud83e\udd47 ' +$( $scoreResults [ 0 ]. DisplayName )+ '\\\", \\\"value\\\": \\\"' + $( $scoreResults [ 0 ]. score ) + '\\\" }' if ( $scoreResults [ 1 ]){ $scoreJson += ',{ \\\"title\\\": \\\"\ud83e\udd48 ' +$( $scoreResults [ 1 ]. DisplayName )+ '\\\", \\\"value\\\": \\\"' + $( $scoreResults [ 1 ]. score ) + '\\\" }' } if ( $scoreResults [ 2 ]){ $scoreJson += ',{ \\\"title\\\": \\\"\ud83e\udd49 ' +$( $scoreResults [ 2 ]. DisplayName )+ '\\\", \\\"value\\\": \\\"' + $( $scoreResults [ 2 ]. score ) + '\\\" }' } $card = '{ \\\"type\\\": \\\"AdaptiveCard\\\", \\\"$schema\\\": \\\"http://adaptivecards.io/schemas/adaptive-card.json\\\", \\\"version\\\": \\\"1.2\\\", \\\"body\\\": [ { \\\"type\\\": \\\"TextBlock\\\", \\\"text\\\": \\\"' + $( $title ) + '\\\", \\\"wrap\\\": true, \\\"size\\\": \\\"Medium\\\", \\\"weight\\\": \\\"Bolder\\\", \\\"color\\\": \\\"Attention\\\" }, { \\\"type\\\": \\\"TextBlock\\\", \\\"wrap\\\": true, \\\"text\\\": \\\"Week ' + $( get-date -UFormat % V ) + '\\\", \\\"fontType\\\": \\\"Default\\\", \\\"size\\\": \\\"Small\\\", \\\"weight\\\": \\\"Lighter\\\", \\\"isSubtle\\\": true }, { \\\"type\\\": \\\"FactSet\\\", \\\"facts\\\": [ ' + $scoreJson + ' ] } ] }' m365 adaptivecard send - -url $webhookUrl - -card $card","title":"Recognize most active users for a specific Team"},{"location":"sample-scripts/teams/recognize-most-active-users-specific-team/#recognize-most-active-users-for-a-specific-team","text":"Author: Albert-Jan Schot Retrieves all activities for a specific Microsoft Teams Team and shares the top 3 contributors based on their score as an adaptive card to the specified webhook url. PowerShell $teamId = \"<PUTYOURTEAMIDHERE>\" $webhookUrl = \"<PUTYOURURLHERE>\" # You can get a delta of messages since the last 'n' days. Currently set to seven. You can go back a maximum of 8 months. $date = ( get-date ). AddDays (- 7 ). ToString ( \"yyyy-MM-ddTHH:mm:ssZ\" ) $channels = m365 teams channel list - -teamId $teamId - -output json | ConvertFrom-Json $results = @() $scoreResults = @() $channelCounter = 0 ; foreach ( $channel in $channels ) { $channelCounter ++; Write-Output \"Processing channel... $channelCounter/ $( $channels . Length ) \" $messages = m365 teams message list - -teamId $teamId - -channelId $channel . id - -since $date - -output json | ConvertFrom-Json $messageCounter = 0 ; foreach ( $message in $messages ) { $messageCounter ++ Write-Output \"Processing message ... $messageCounter/ $( $messages . Length ) \" # Skip messages that are created with an application (bots / adaptive cards) if ( $null -ne $message . from . user . id ) { $results += [pscustomobject][ordered] @{ Type = \"Post\" Details = $message . reactionType UserId = $message . from . user . id HasSubject = $( $null -ne $message . subject ) } } # Process all likes and comments on the initial message foreach ( $reaction in $message . reactions ) { $results += [pscustomobject][ordered] @{ Type = \"Reaction\" Details = $reaction . reactionType UserId = $reaction . user . user . id } } $replies = m365 teams message reply list - -teamId $teamId - -channelId $channel . id - -messageId $message . Id - -output json | ConvertFrom-Json foreach ( $reply in $replies ) { # Skip replies that are created with an application (bots) if ( $null -ne $message . from . user . id ) { $results += [pscustomobject][ordered] @{ Type = \"Reply\" UserId = $reply . from . user . id } } # Process all likes and comments on the reply message foreach ( $reaction in $reply . reactions ) { $results += [pscustomobject][ordered] @{ Type = \"Reaction\" Details = $reaction . reactionType UserId = $reaction . user . user . id } } } } } # Group the results per user $resultsGrouped = $results | Group-Object -Property UserId #Score per user foreach ( $teamsUser in $resultsGrouped ) { $user = m365 aad user get - -id $teamsUser . Name - -output json | ConvertFrom-Json # Count points # Each post is two points, 1 extra point awarded for each Post with Subject # Each reply 1 and each reaction 0.5 $score = (( $teamsUser . Group | Where-Object { $_ . Type -eq \"Post\" }). Count * 2 ) $score += (( $teamsUser . Group | Where-Object { $_ . HasSubject }). Count ) $score += ( $teamsUser . Group | Where-Object { $_ . Type -eq \"Reply\" }). Count $score += (( $teamsUser . Group | Where-Object { $_ . Type -eq \"Reaction\" }). Count / 2 ) $scoreResults += [pscustomobject][ordered] @{ DisplayName = $user . displayName UserPrincipalName = $user . userPrincipalName Score = $score ; } } # Sort our score report based on the score $scoreResults = $scoreResults | Sort-Object { $_ . score } -Descending #Construct adaptive card $title = \"\ud83c\udfc6 Most active team members\" $scoreJson = '{ \\\"title\\\": \\\"\ud83e\udd47 ' +$( $scoreResults [ 0 ]. DisplayName )+ '\\\", \\\"value\\\": \\\"' + $( $scoreResults [ 0 ]. score ) + '\\\" }' if ( $scoreResults [ 1 ]){ $scoreJson += ',{ \\\"title\\\": \\\"\ud83e\udd48 ' +$( $scoreResults [ 1 ]. DisplayName )+ '\\\", \\\"value\\\": \\\"' + $( $scoreResults [ 1 ]. score ) + '\\\" }' } if ( $scoreResults [ 2 ]){ $scoreJson += ',{ \\\"title\\\": \\\"\ud83e\udd49 ' +$( $scoreResults [ 2 ]. DisplayName )+ '\\\", \\\"value\\\": \\\"' + $( $scoreResults [ 2 ]. score ) + '\\\" }' } $card = '{ \\\"type\\\": \\\"AdaptiveCard\\\", \\\"$schema\\\": \\\"http://adaptivecards.io/schemas/adaptive-card.json\\\", \\\"version\\\": \\\"1.2\\\", \\\"body\\\": [ { \\\"type\\\": \\\"TextBlock\\\", \\\"text\\\": \\\"' + $( $title ) + '\\\", \\\"wrap\\\": true, \\\"size\\\": \\\"Medium\\\", \\\"weight\\\": \\\"Bolder\\\", \\\"color\\\": \\\"Attention\\\" }, { \\\"type\\\": \\\"TextBlock\\\", \\\"wrap\\\": true, \\\"text\\\": \\\"Week ' + $( get-date -UFormat % V ) + '\\\", \\\"fontType\\\": \\\"Default\\\", \\\"size\\\": \\\"Small\\\", \\\"weight\\\": \\\"Lighter\\\", \\\"isSubtle\\\": true }, { \\\"type\\\": \\\"FactSet\\\", \\\"facts\\\": [ ' + $scoreJson + ' ] } ] }' m365 adaptivecard send - -url $webhookUrl - -card $card","title":"Recognize most active users for a specific Team"},{"location":"sample-scripts/teams/remove-personal-app/","tags":["apps","cleanup"],"text":"Removes Microsoft Teams personal app from users and Microsoft Teams app catalog \u00b6 Author: S\u00e9bastien Levert Uninstalls an app from the specified users and / or unpublish it from the Microsoft Teams app catalog based on the App Id available in the manifest.json of the Teams app. PowerShell <# .SYNOPSIS Removes an app from the personal scope of a set of users .EXAMPLE .\\Remove-PersonalApp.ps1 -AppId \"2dbace6f-3f3b-4779-9e3f-bb4d27c403fe\" -Unpublish -Uninstall -CurrentUser .EXAMPLE .\\Remove-PersonalApp.ps1 -AppId \"2dbace6f-3f3b-4779-9e3f-bb4d27c403fe\" -Unpublish -Uninstall -CurrentUser -Users @(\"user1@contoso.com\", \"user2@contoso.com\") .EXAMPLE .\\Remove-PersonalApp.ps1 -AppId \"2dbace6f-3f3b-4779-9e3f-bb4d27c403fe\" -Unpublish .PARAMETER AppId GUID of the Microsoft Teams app. Is the same \"id\" you can find in the manifest.json from your Microsoft Teams app. .PARAMETER Users Array of string representing the usernames of the users to deploy the Microsoft Teams app to. .PARAMETER CurrentUser Switch allowing to Install the app for the current user #> Param ( [string] $AppId , [string[]] $Users , [switch] $Uninstall , [switch] $Unpublish , [switch] $CurrentUser ) $m365Status = m365 status - -output text if ( $m365Status -eq \"Logged Out\" ) { # Connection to Microsoft 365 m365 login } # Validating that the app is not already in the store $app = m365 teams app list - -query \"[?externalId == '$AppId']\" -o json | ConvertFrom-Json if ( $app . Length -gt 0 ) { if ( $Uninstall ) { if ( $CurrentUser ) { # Getting the reference of the currently connected user $connectedAs = m365 status -o json | ConvertFrom-Json $user = m365 aad user get - -userName $connectedAs . connectedAs -o json | ConvertFrom-Json if ( $user ) { $Users += $user . userPrincipalName } } if ( $Users . Length -gt 0 ) { $Users | ForEach -Object { $user = m365 aad user get - -userName $_ -o json | ConvertFrom-Json $userApp = m365 teams user app list - -userId $user . id - -query \"[?appId == ' $( $app . id ) ']\" -o json | ConvertFrom-Json if ( $userApp ) { # Removing the app from the personal apps of the specified user m365 teams user app remove - -appId $userApp . id - -userId $user . id - -confirm Write-Host \"The App ' $( $app . displayName ) ' with ID ' $( $app . id ) ' was removed for user ' $( $user . userPrincipalName ) '.\" } else { Write-Warning \"The App ' $( $app . displayName ) ' with ID ' $( $app . id ) ' is not installed for user ' $( $user . userPrincipalName ) '.\" } } } } if ( $Unpublish ) { # Removing the app from the app catalog m365 teams app remove - -id $app . id - -confirm Write-Host \"The App ' $( $app . displayName ) ' with ID ' $( $app . id ) ' was removed from the app catalog.\" } } else { Write-Warning \"The App with ID '$AppId' does not exist.\" }","title":"Removes Microsoft Teams personal app from users and Microsoft Teams app catalog"},{"location":"sample-scripts/teams/remove-personal-app/#removes-microsoft-teams-personal-app-from-users-and-microsoft-teams-app-catalog","text":"Author: S\u00e9bastien Levert Uninstalls an app from the specified users and / or unpublish it from the Microsoft Teams app catalog based on the App Id available in the manifest.json of the Teams app. PowerShell <# .SYNOPSIS Removes an app from the personal scope of a set of users .EXAMPLE .\\Remove-PersonalApp.ps1 -AppId \"2dbace6f-3f3b-4779-9e3f-bb4d27c403fe\" -Unpublish -Uninstall -CurrentUser .EXAMPLE .\\Remove-PersonalApp.ps1 -AppId \"2dbace6f-3f3b-4779-9e3f-bb4d27c403fe\" -Unpublish -Uninstall -CurrentUser -Users @(\"user1@contoso.com\", \"user2@contoso.com\") .EXAMPLE .\\Remove-PersonalApp.ps1 -AppId \"2dbace6f-3f3b-4779-9e3f-bb4d27c403fe\" -Unpublish .PARAMETER AppId GUID of the Microsoft Teams app. Is the same \"id\" you can find in the manifest.json from your Microsoft Teams app. .PARAMETER Users Array of string representing the usernames of the users to deploy the Microsoft Teams app to. .PARAMETER CurrentUser Switch allowing to Install the app for the current user #> Param ( [string] $AppId , [string[]] $Users , [switch] $Uninstall , [switch] $Unpublish , [switch] $CurrentUser ) $m365Status = m365 status - -output text if ( $m365Status -eq \"Logged Out\" ) { # Connection to Microsoft 365 m365 login } # Validating that the app is not already in the store $app = m365 teams app list - -query \"[?externalId == '$AppId']\" -o json | ConvertFrom-Json if ( $app . Length -gt 0 ) { if ( $Uninstall ) { if ( $CurrentUser ) { # Getting the reference of the currently connected user $connectedAs = m365 status -o json | ConvertFrom-Json $user = m365 aad user get - -userName $connectedAs . connectedAs -o json | ConvertFrom-Json if ( $user ) { $Users += $user . userPrincipalName } } if ( $Users . Length -gt 0 ) { $Users | ForEach -Object { $user = m365 aad user get - -userName $_ -o json | ConvertFrom-Json $userApp = m365 teams user app list - -userId $user . id - -query \"[?appId == ' $( $app . id ) ']\" -o json | ConvertFrom-Json if ( $userApp ) { # Removing the app from the personal apps of the specified user m365 teams user app remove - -appId $userApp . id - -userId $user . id - -confirm Write-Host \"The App ' $( $app . displayName ) ' with ID ' $( $app . id ) ' was removed for user ' $( $user . userPrincipalName ) '.\" } else { Write-Warning \"The App ' $( $app . displayName ) ' with ID ' $( $app . id ) ' is not installed for user ' $( $user . userPrincipalName ) '.\" } } } } if ( $Unpublish ) { # Removing the app from the app catalog m365 teams app remove - -id $app . id - -confirm Write-Host \"The App ' $( $app . displayName ) ' with ID ' $( $app . id ) ' was removed from the app catalog.\" } } else { Write-Warning \"The App with ID '$AppId' does not exist.\" }","title":"Removes Microsoft Teams personal app from users and Microsoft Teams app catalog"},{"location":"sample-scripts/teams/remove-wikitab-teams/","tags":["cleanup","teams"],"text":"Remove Wiki tab in a Microsoft Teams channel \u00b6 Inspired by: Garry Trinder and Laura Kokkarinen Removes the wiki tab of a Microsoft Teams Team's channel. PowerShell Bash $groupMailNickname = \"Architecture\" $channelName = \"General\" $groups = m365 aad o365group list - -query \"[?mailNickname=='$groupMailNickname']\" -o json | ConvertFrom-Json if ( $null -eq $groups ) { Write-Error \"A team with the mailNickname $groupMailNickname was not found\" } else { $channels = m365 teams channel list - -teamId $groups [ 0 ]. id - -query \"[?displayName=='$channelName']\" -o json | ConvertFrom-Json if ( $null -eq $channels ) { Write-Error \"A channel with the name $channelName was not found in the team\" } else { $tabs = m365 teams tab list - -teamId $groups [ 0 ]. id - -channelId $channels [ 0 ]. id - -query \"[?teamsApp.id=='com.microsoft.teamspace.tab.wiki']\" -o json | ConvertFrom-Json if ( $null -eq $tabs ) { Write-Error \"A Wiki tab was not found in the channel\" } else { write-host \"Removing wiki tab for the channel..\" -ForegroundColor Green m365 teams tab remove - -teamId $groups [ 0 ]. id - -channelId $channels [ 0 ]. id - -tabId $tabs [ 0 ]. id - -confirm write-host \" ...Done\" -ForegroundColor Green } } } #!/bin/bash # requires jq: https://stedolan.github.io/jq/ groupMailNickname = \"Architecture\" channelName = \"Channel\" wikiTabId = \"com.microsoft.teamspace.tab.wiki\" groups = $( m365 aad o365group list -o json | jq '.[] | select(.mailNickname == \"' \" $groupMailNickname \" '\")' ) if [ -z \" $groups \" ] ; then echo \"A team with the mailNickname $groupMailNickname was not found\" else teamId = $( echo $groups | jq '.id' ) channels = $( m365 teams channel list --teamId $teamId -o json | jq '.[] | select(.displayName == \"' \" $channelName \" '\")' ) if [ -z \" $channels \" ] ; then echo \"A channel with the name $channelName was not found in the team\" else channelId = $( echo $channels | jq '.id' ) tabs = $( m365 teams tab list --teamId $teamId --channelId $channelId -o json | jq '.[] | select(.teamsApp.id == \"' \" $wikiTabId \" '\")' ) if [ -z \" $tabs \" ] ; then echo \"A Wiki tab was not found in the channel\" else tabId = $( echo $tabs | jq '.id' ) echo \"Removing wiki tab for the channel..\" m365 teams tab remove --teamId $teamId --channelId $channelId --tabId $tabId --confirm echo \"...Done\" fi fi fi","title":"Remove Wiki tab in a Microsoft Teams channel"},{"location":"sample-scripts/teams/remove-wikitab-teams/#remove-wiki-tab-in-a-microsoft-teams-channel","text":"Inspired by: Garry Trinder and Laura Kokkarinen Removes the wiki tab of a Microsoft Teams Team's channel. PowerShell Bash $groupMailNickname = \"Architecture\" $channelName = \"General\" $groups = m365 aad o365group list - -query \"[?mailNickname=='$groupMailNickname']\" -o json | ConvertFrom-Json if ( $null -eq $groups ) { Write-Error \"A team with the mailNickname $groupMailNickname was not found\" } else { $channels = m365 teams channel list - -teamId $groups [ 0 ]. id - -query \"[?displayName=='$channelName']\" -o json | ConvertFrom-Json if ( $null -eq $channels ) { Write-Error \"A channel with the name $channelName was not found in the team\" } else { $tabs = m365 teams tab list - -teamId $groups [ 0 ]. id - -channelId $channels [ 0 ]. id - -query \"[?teamsApp.id=='com.microsoft.teamspace.tab.wiki']\" -o json | ConvertFrom-Json if ( $null -eq $tabs ) { Write-Error \"A Wiki tab was not found in the channel\" } else { write-host \"Removing wiki tab for the channel..\" -ForegroundColor Green m365 teams tab remove - -teamId $groups [ 0 ]. id - -channelId $channels [ 0 ]. id - -tabId $tabs [ 0 ]. id - -confirm write-host \" ...Done\" -ForegroundColor Green } } } #!/bin/bash # requires jq: https://stedolan.github.io/jq/ groupMailNickname = \"Architecture\" channelName = \"Channel\" wikiTabId = \"com.microsoft.teamspace.tab.wiki\" groups = $( m365 aad o365group list -o json | jq '.[] | select(.mailNickname == \"' \" $groupMailNickname \" '\")' ) if [ -z \" $groups \" ] ; then echo \"A team with the mailNickname $groupMailNickname was not found\" else teamId = $( echo $groups | jq '.id' ) channels = $( m365 teams channel list --teamId $teamId -o json | jq '.[] | select(.displayName == \"' \" $channelName \" '\")' ) if [ -z \" $channels \" ] ; then echo \"A channel with the name $channelName was not found in the team\" else channelId = $( echo $channels | jq '.id' ) tabs = $( m365 teams tab list --teamId $teamId --channelId $channelId -o json | jq '.[] | select(.teamsApp.id == \"' \" $wikiTabId \" '\")' ) if [ -z \" $tabs \" ] ; then echo \"A Wiki tab was not found in the channel\" else tabId = $( echo $tabs | jq '.id' ) echo \"Removing wiki tab for the channel..\" m365 teams tab remove --teamId $teamId --channelId $channelId --tabId $tabId --confirm echo \"...Done\" fi fi fi","title":"Remove Wiki tab in a Microsoft Teams channel"},{"location":"sample-scripts/teams/share-socialchampions/","tags":["adoption","users"],"text":"Share social champions to Teams \u00b6 Author: Albert-Jan Schot Inspired by: Emily Mancini Retrieves activities for SharePoint Online, Teams and Yammer and shares the top 3 contributors for each category as an adaptive card to the specified webhook url. Note As of September 1st 2021 reports pseudonymize user-level information. In order to use the user display name make sure to disable this option to provide the report with the UPN value Privacy changes to Microsoft 365 Usage Analytics . Without changing this value the sample will work but will return a hashed value that is not recognizable. PowerShell $m365Status = m365 status - -output text if ( $m365Status -eq \"Logged Out\" ) { # Connection to Microsoft 365 m365 login } $webhookUrl = \"<PUTYOURURLHERE>\" # Send top 3 for SharePoint based on file actions. $activityUsers = m365 spo report activityuserdetail - -period D7 - -output json - -query 'reverse(sort_by(@, &\\\"Viewed Or Edited File Count\\\")) | [0:3].\\\"User Principal Name\\\"' | ConvertFrom-Json $title = \"SharePoint Weekly Social Champions\" $card = '{ \\\"type\\\": \\\"AdaptiveCard\\\", \\\"$schema\\\": \\\"http://adaptivecards.io/schemas/adaptive-card.json\\\", \\\"version\\\": \\\"1.2\\\", \\\"body\\\": [ { \\\"type\\\": \\\"TextBlock\\\", \\\"text\\\": \\\"' +$( $title )+ '\\\", \\\"wrap\\\": true, \\\"size\\\": \\\"Medium\\\", \\\"weight\\\": \\\"Bolder\\\", \\\"color\\\": \\\"Attention\\\" }, { \\\"type\\\": \\\"TextBlock\\\", \\\"wrap\\\": true, \\\"text\\\": \\\"Week ' +$( get-date -UFormat % V )+ '\\\", \\\"fontType\\\": \\\"Default\\\", \\\"size\\\": \\\"Small\\\", \\\"weight\\\": \\\"Lighter\\\", \\\"isSubtle\\\": true }, { \\\"type\\\": \\\"FactSet\\\", \\\"facts\\\": [ { \\\"title\\\": \\\"First place\\\", \\\"value\\\": \\\"' +$( $activityUsers [ 0 ])+ '\\\" }, { \\\"title\\\": \\\"Second place\\\", \\\"value\\\": \\\"' +$( $activityUsers [ 1 ])+ '\\\" }, { \\\"title\\\": \\\"Third place\\\", \\\"value\\\": \\\"' +$( $activityUsers [ 2 ])+ '\\\" } ] } ] }' m365 adaptivecard send - -url $webhookUrl - -card $card # Send top 3 for Teams based on chat messages $activityUsers = m365 teams report useractivityuserdetail - -period D7 - -output json - -query 'reverse(sort_by(@, &\\\"Team Chat Message Count\\\")) | [0:3].\\\"User Principal Name\\\"' | ConvertFrom-Json $title = \"Teams Weekly Social Champions\" $card = '{ \\\"type\\\": \\\"AdaptiveCard\\\", \\\"$schema\\\": \\\"http://adaptivecards.io/schemas/adaptive-card.json\\\", \\\"version\\\": \\\"1.2\\\", \\\"body\\\": [ { \\\"type\\\": \\\"TextBlock\\\", \\\"text\\\": \\\"' +$( $title )+ '\\\", \\\"wrap\\\": true, \\\"size\\\": \\\"Medium\\\", \\\"weight\\\": \\\"Bolder\\\", \\\"color\\\": \\\"Attention\\\" }, { \\\"type\\\": \\\"TextBlock\\\", \\\"wrap\\\": true, \\\"text\\\": \\\"Week ' +$( get-date -UFormat % V )+ '\\\", \\\"fontType\\\": \\\"Default\\\", \\\"size\\\": \\\"Small\\\", \\\"weight\\\": \\\"Lighter\\\", \\\"isSubtle\\\": true }, { \\\"type\\\": \\\"FactSet\\\", \\\"facts\\\": [ { \\\"title\\\": \\\"First place\\\", \\\"value\\\": \\\"' +$( $activityUsers [ 0 ])+ '\\\" }, { \\\"title\\\": \\\"Second place\\\", \\\"value\\\": \\\"' +$( $activityUsers [ 1 ])+ '\\\" }, { \\\"title\\\": \\\"Third place\\\", \\\"value\\\": \\\"' +$( $activityUsers [ 2 ])+ '\\\" } ] } ] }' m365 adaptivecard send - -url $webhookUrl - -card $card # Send top 3 for Yammer based on posts $activityUsers = m365 yammer report activityuserdetail - -period D7 - -output json - -query 'reverse(sort_by(@, &\\\"Posted Count\\\")) | [0:3].\\\"User Principal Name\\\"' | ConvertFrom-Json $title = \"Yammer Weekly Social Champions\" $card = '{ \\\"type\\\": \\\"AdaptiveCard\\\", \\\"$schema\\\": \\\"http://adaptivecards.io/schemas/adaptive-card.json\\\", \\\"version\\\": \\\"1.2\\\", \\\"body\\\": [ { \\\"type\\\": \\\"TextBlock\\\", \\\"text\\\": \\\"' +$( $title )+ '\\\", \\\"wrap\\\": true, \\\"size\\\": \\\"Medium\\\", \\\"weight\\\": \\\"Bolder\\\", \\\"color\\\": \\\"Attention\\\" }, { \\\"type\\\": \\\"TextBlock\\\", \\\"wrap\\\": true, \\\"text\\\": \\\"Week ' +$( get-date -UFormat % V )+ '\\\", \\\"fontType\\\": \\\"Default\\\", \\\"size\\\": \\\"Small\\\", \\\"weight\\\": \\\"Lighter\\\", \\\"isSubtle\\\": true }, { \\\"type\\\": \\\"FactSet\\\", \\\"facts\\\": [ { \\\"title\\\": \\\"First place\\\", \\\"value\\\": \\\"' +$( $activityUsers [ 0 ])+ '\\\" }, { \\\"title\\\": \\\"Second place\\\", \\\"value\\\": \\\"' +$( $activityUsers [ 1 ])+ '\\\" }, { \\\"title\\\": \\\"Third place\\\", \\\"value\\\": \\\"' +$( $activityUsers [ 2 ])+ '\\\" } ] } ] }' m365 adaptivecard send - -url $webhookUrl - -card $card","title":"Share social champions to Teams"},{"location":"sample-scripts/teams/share-socialchampions/#share-social-champions-to-teams","text":"Author: Albert-Jan Schot Inspired by: Emily Mancini Retrieves activities for SharePoint Online, Teams and Yammer and shares the top 3 contributors for each category as an adaptive card to the specified webhook url. Note As of September 1st 2021 reports pseudonymize user-level information. In order to use the user display name make sure to disable this option to provide the report with the UPN value Privacy changes to Microsoft 365 Usage Analytics . Without changing this value the sample will work but will return a hashed value that is not recognizable. PowerShell $m365Status = m365 status - -output text if ( $m365Status -eq \"Logged Out\" ) { # Connection to Microsoft 365 m365 login } $webhookUrl = \"<PUTYOURURLHERE>\" # Send top 3 for SharePoint based on file actions. $activityUsers = m365 spo report activityuserdetail - -period D7 - -output json - -query 'reverse(sort_by(@, &\\\"Viewed Or Edited File Count\\\")) | [0:3].\\\"User Principal Name\\\"' | ConvertFrom-Json $title = \"SharePoint Weekly Social Champions\" $card = '{ \\\"type\\\": \\\"AdaptiveCard\\\", \\\"$schema\\\": \\\"http://adaptivecards.io/schemas/adaptive-card.json\\\", \\\"version\\\": \\\"1.2\\\", \\\"body\\\": [ { \\\"type\\\": \\\"TextBlock\\\", \\\"text\\\": \\\"' +$( $title )+ '\\\", \\\"wrap\\\": true, \\\"size\\\": \\\"Medium\\\", \\\"weight\\\": \\\"Bolder\\\", \\\"color\\\": \\\"Attention\\\" }, { \\\"type\\\": \\\"TextBlock\\\", \\\"wrap\\\": true, \\\"text\\\": \\\"Week ' +$( get-date -UFormat % V )+ '\\\", \\\"fontType\\\": \\\"Default\\\", \\\"size\\\": \\\"Small\\\", \\\"weight\\\": \\\"Lighter\\\", \\\"isSubtle\\\": true }, { \\\"type\\\": \\\"FactSet\\\", \\\"facts\\\": [ { \\\"title\\\": \\\"First place\\\", \\\"value\\\": \\\"' +$( $activityUsers [ 0 ])+ '\\\" }, { \\\"title\\\": \\\"Second place\\\", \\\"value\\\": \\\"' +$( $activityUsers [ 1 ])+ '\\\" }, { \\\"title\\\": \\\"Third place\\\", \\\"value\\\": \\\"' +$( $activityUsers [ 2 ])+ '\\\" } ] } ] }' m365 adaptivecard send - -url $webhookUrl - -card $card # Send top 3 for Teams based on chat messages $activityUsers = m365 teams report useractivityuserdetail - -period D7 - -output json - -query 'reverse(sort_by(@, &\\\"Team Chat Message Count\\\")) | [0:3].\\\"User Principal Name\\\"' | ConvertFrom-Json $title = \"Teams Weekly Social Champions\" $card = '{ \\\"type\\\": \\\"AdaptiveCard\\\", \\\"$schema\\\": \\\"http://adaptivecards.io/schemas/adaptive-card.json\\\", \\\"version\\\": \\\"1.2\\\", \\\"body\\\": [ { \\\"type\\\": \\\"TextBlock\\\", \\\"text\\\": \\\"' +$( $title )+ '\\\", \\\"wrap\\\": true, \\\"size\\\": \\\"Medium\\\", \\\"weight\\\": \\\"Bolder\\\", \\\"color\\\": \\\"Attention\\\" }, { \\\"type\\\": \\\"TextBlock\\\", \\\"wrap\\\": true, \\\"text\\\": \\\"Week ' +$( get-date -UFormat % V )+ '\\\", \\\"fontType\\\": \\\"Default\\\", \\\"size\\\": \\\"Small\\\", \\\"weight\\\": \\\"Lighter\\\", \\\"isSubtle\\\": true }, { \\\"type\\\": \\\"FactSet\\\", \\\"facts\\\": [ { \\\"title\\\": \\\"First place\\\", \\\"value\\\": \\\"' +$( $activityUsers [ 0 ])+ '\\\" }, { \\\"title\\\": \\\"Second place\\\", \\\"value\\\": \\\"' +$( $activityUsers [ 1 ])+ '\\\" }, { \\\"title\\\": \\\"Third place\\\", \\\"value\\\": \\\"' +$( $activityUsers [ 2 ])+ '\\\" } ] } ] }' m365 adaptivecard send - -url $webhookUrl - -card $card # Send top 3 for Yammer based on posts $activityUsers = m365 yammer report activityuserdetail - -period D7 - -output json - -query 'reverse(sort_by(@, &\\\"Posted Count\\\")) | [0:3].\\\"User Principal Name\\\"' | ConvertFrom-Json $title = \"Yammer Weekly Social Champions\" $card = '{ \\\"type\\\": \\\"AdaptiveCard\\\", \\\"$schema\\\": \\\"http://adaptivecards.io/schemas/adaptive-card.json\\\", \\\"version\\\": \\\"1.2\\\", \\\"body\\\": [ { \\\"type\\\": \\\"TextBlock\\\", \\\"text\\\": \\\"' +$( $title )+ '\\\", \\\"wrap\\\": true, \\\"size\\\": \\\"Medium\\\", \\\"weight\\\": \\\"Bolder\\\", \\\"color\\\": \\\"Attention\\\" }, { \\\"type\\\": \\\"TextBlock\\\", \\\"wrap\\\": true, \\\"text\\\": \\\"Week ' +$( get-date -UFormat % V )+ '\\\", \\\"fontType\\\": \\\"Default\\\", \\\"size\\\": \\\"Small\\\", \\\"weight\\\": \\\"Lighter\\\", \\\"isSubtle\\\": true }, { \\\"type\\\": \\\"FactSet\\\", \\\"facts\\\": [ { \\\"title\\\": \\\"First place\\\", \\\"value\\\": \\\"' +$( $activityUsers [ 0 ])+ '\\\" }, { \\\"title\\\": \\\"Second place\\\", \\\"value\\\": \\\"' +$( $activityUsers [ 1 ])+ '\\\" }, { \\\"title\\\": \\\"Third place\\\", \\\"value\\\": \\\"' +$( $activityUsers [ 2 ])+ '\\\" } ] } ] }' m365 adaptivecard send - -url $webhookUrl - -card $card","title":"Share social champions to Teams"},{"location":"sample-scripts/tenant/tenant-monitor-notify-healthstatus/","tags":["reports"],"text":"Monitor and notify Microsoft 365 health status \u00b6 Author: Arjun Menon This is a script which monitors the health status of your Microsoft 365 tenant and notifies if something is not normal. Script creates a SharePoint List and will add the outage content to that. It will also send an email notification to the configured user. Script Overview \u00b6 Following is the overview of the script package We use the command tenant serviceannouncement health list for getting the current status. If there is an outage or some of the service is not normal, we will be adding the information to SharePoint list using the command spo listitem add Advantage of adding to SharePoint list - You can configure Power Automate for List item Added so that you can define your business process if needed Script also will send an email to the configured user/s using the command spo mail send so that concerned team could be notified Bonus Action \u00b6 All the pre-requisites would be completed by the script. Script checks whether SharePoint List exists in the SharePoint site. If it does not exist, it will create a SharePoint List using spo list add command and will also add the needed fields . Person who is executing the script just need to have Edit permission in the site against which the script will be executed. If you want to schedule the script directly, you can go ahead without the need of any other configurations. PowerShell #Ensure that you are logged in to the site mentioned in the webURL as a user who has Edit Permission $webURL = \"https://contoso.sharepoint.com/sites/contososite\" $listName = \"M365HealthStatus\" #Email address to which an outage email will be sent $notifyEmail = \"itpro@contoso.onmicrosoft.com\" $CurrentList = ( m365 spo list get - -title $listName - -webUrl $webURL - -output json ) | ConvertFrom-Json #Checking whether List exists. Will create the list if the List doest not exist if ( $CurrentList -eq $null ) { Write-Host \"List does not exist. Hence creating the SharePoint List\" #Creating the list - Conventional $CurrentList = m365 spo list add - -baseTemplate GenericList - -title $listName - -webUrl $webURL #Adding the fields $FieldLists = @( @{ fieldname = \"Workload\" ; fieldtype = \"Text\" ; }, @{ fieldname = \"FirstIdentifiedDate\" ; fieldtype = \"DateTime\" ; }, @{ fieldname = \"WorkflowJSONData\" ; fieldtype = \"Note\" ; } ) Foreach ( $field in $FieldLists ) { $addedField = m365 spo field add - -webUrl $webURL - -listTitle $listName - -xml \"<Field Type=' $( $field . fieldtype ) ' DisplayName=' $( $field . fieldname ) ' Required='FALSE' EnforceUniqueValues='FALSE' Indexed='FALSE' StaticName=' $( $field . fieldname ) ' Name=' $( $field . fieldname ) '></Field>\" - -options AddFieldToDefaultView } Write-Host \"Created SharePoint List $listName for logging the Outages.\" } #Getting current Tenant Status and do the needed operations $workLoads = m365 tenant serviceannouncement health list - -issues - -query \"[?status != 'serviceOperational']\" - -output json | ConvertFrom-Json $currentOutageServices = ( m365 spo listitem list - -webUrl $webURL - -listTitle $listName - -fields \"Title, Workload, Id\" - -output json ). Replace ( \"ID\" , \"_ID\" ) | ConvertFrom-Json #Checking for any new outages $updateSinceLastExecution = $false Write-Host \" `n ### New Outages ###\" Foreach ( $workload in $workLoads ) { if ( $workload . id -notin $currentOutageServices . Workload ) { #Add outage information to SharePoint List $addedWorkLoad = m365 spo listitem add - -webUrl $webURL - -listTitle $listName - -contentType Item - -Title $workload . service - -Workload $workload . id - -FirstIdentifiedDate ( Get-Date -Date $workload . issues [ $workload . issues . Count - 1 ]. startDateTime ) - -WorkflowJSONData ( Out-String -InputObject $workload -Width 400 ) #Send notification using CLI Commands m365 outlook mail send - -to $notifyEmail - -subject \"Outage Reported in $( $workload . service ) \" - -bodyContents \"An outage has been reported for the Service : $( $workload . service ) <a href='$webURL/Lists/$listName'>Access the Health Status List</a>\" - -bodyContentType HTML - -saveToSentItems false Write-Host \"Outage is Reported for Service : $( $workload . service ) . Please access $webURL/Lists/$listName for more information\" $updateSinceLastExecution = $true } } if ( $updateSinceLastExecution -eq $false ) { Write-Host \"NO New Outages are reported yet.\" } #Checking whether any existing outages are resolved $updateSinceLastExecution = $false Write-Host \" `n ### Resolved Outages ###\" Foreach ( $Service in $currentOutageServices ) { if ( $Service . Workload -notin $workLoads . id ) { #Removing the outage information from SharePoint List $removedRecord = m365 spo listitem remove - -webUrl $webURL - -listTitle $listName - -id $Service . Id - -confirm #Send notification using CLI Commands m365 outlook mail send - -to $notifyEmail - -subject \"Outage RESOLVED for $( $Service . Title ) \" - -bodyContents \"Outage which was reported for the Service : $( $Service . Title ) is RESOLVED.\" - -bodyContentType HTML - -saveToSentItems false Write-Host \"Outage which was reported for the Service : $( $Service . Title ) is now RESOLVED.\" $updateSinceLastExecution = $true } } if ( $updateSinceLastExecution -eq $false ) { Write-Host \"No further updates on the existing outages\" }","title":"Monitor and notify Microsoft 365 health status"},{"location":"sample-scripts/tenant/tenant-monitor-notify-healthstatus/#monitor-and-notify-microsoft-365-health-status","text":"Author: Arjun Menon This is a script which monitors the health status of your Microsoft 365 tenant and notifies if something is not normal. Script creates a SharePoint List and will add the outage content to that. It will also send an email notification to the configured user.","title":"Monitor and notify Microsoft 365 health status"},{"location":"sample-scripts/tenant/tenant-monitor-notify-healthstatus/#script-overview","text":"Following is the overview of the script package We use the command tenant serviceannouncement health list for getting the current status. If there is an outage or some of the service is not normal, we will be adding the information to SharePoint list using the command spo listitem add Advantage of adding to SharePoint list - You can configure Power Automate for List item Added so that you can define your business process if needed Script also will send an email to the configured user/s using the command spo mail send so that concerned team could be notified","title":"Script Overview"},{"location":"sample-scripts/tenant/tenant-monitor-notify-healthstatus/#bonus-action","text":"All the pre-requisites would be completed by the script. Script checks whether SharePoint List exists in the SharePoint site. If it does not exist, it will create a SharePoint List using spo list add command and will also add the needed fields . Person who is executing the script just need to have Edit permission in the site against which the script will be executed. If you want to schedule the script directly, you can go ahead without the need of any other configurations. PowerShell #Ensure that you are logged in to the site mentioned in the webURL as a user who has Edit Permission $webURL = \"https://contoso.sharepoint.com/sites/contososite\" $listName = \"M365HealthStatus\" #Email address to which an outage email will be sent $notifyEmail = \"itpro@contoso.onmicrosoft.com\" $CurrentList = ( m365 spo list get - -title $listName - -webUrl $webURL - -output json ) | ConvertFrom-Json #Checking whether List exists. Will create the list if the List doest not exist if ( $CurrentList -eq $null ) { Write-Host \"List does not exist. Hence creating the SharePoint List\" #Creating the list - Conventional $CurrentList = m365 spo list add - -baseTemplate GenericList - -title $listName - -webUrl $webURL #Adding the fields $FieldLists = @( @{ fieldname = \"Workload\" ; fieldtype = \"Text\" ; }, @{ fieldname = \"FirstIdentifiedDate\" ; fieldtype = \"DateTime\" ; }, @{ fieldname = \"WorkflowJSONData\" ; fieldtype = \"Note\" ; } ) Foreach ( $field in $FieldLists ) { $addedField = m365 spo field add - -webUrl $webURL - -listTitle $listName - -xml \"<Field Type=' $( $field . fieldtype ) ' DisplayName=' $( $field . fieldname ) ' Required='FALSE' EnforceUniqueValues='FALSE' Indexed='FALSE' StaticName=' $( $field . fieldname ) ' Name=' $( $field . fieldname ) '></Field>\" - -options AddFieldToDefaultView } Write-Host \"Created SharePoint List $listName for logging the Outages.\" } #Getting current Tenant Status and do the needed operations $workLoads = m365 tenant serviceannouncement health list - -issues - -query \"[?status != 'serviceOperational']\" - -output json | ConvertFrom-Json $currentOutageServices = ( m365 spo listitem list - -webUrl $webURL - -listTitle $listName - -fields \"Title, Workload, Id\" - -output json ). Replace ( \"ID\" , \"_ID\" ) | ConvertFrom-Json #Checking for any new outages $updateSinceLastExecution = $false Write-Host \" `n ### New Outages ###\" Foreach ( $workload in $workLoads ) { if ( $workload . id -notin $currentOutageServices . Workload ) { #Add outage information to SharePoint List $addedWorkLoad = m365 spo listitem add - -webUrl $webURL - -listTitle $listName - -contentType Item - -Title $workload . service - -Workload $workload . id - -FirstIdentifiedDate ( Get-Date -Date $workload . issues [ $workload . issues . Count - 1 ]. startDateTime ) - -WorkflowJSONData ( Out-String -InputObject $workload -Width 400 ) #Send notification using CLI Commands m365 outlook mail send - -to $notifyEmail - -subject \"Outage Reported in $( $workload . service ) \" - -bodyContents \"An outage has been reported for the Service : $( $workload . service ) <a href='$webURL/Lists/$listName'>Access the Health Status List</a>\" - -bodyContentType HTML - -saveToSentItems false Write-Host \"Outage is Reported for Service : $( $workload . service ) . Please access $webURL/Lists/$listName for more information\" $updateSinceLastExecution = $true } } if ( $updateSinceLastExecution -eq $false ) { Write-Host \"NO New Outages are reported yet.\" } #Checking whether any existing outages are resolved $updateSinceLastExecution = $false Write-Host \" `n ### Resolved Outages ###\" Foreach ( $Service in $currentOutageServices ) { if ( $Service . Workload -notin $workLoads . id ) { #Removing the outage information from SharePoint List $removedRecord = m365 spo listitem remove - -webUrl $webURL - -listTitle $listName - -id $Service . Id - -confirm #Send notification using CLI Commands m365 outlook mail send - -to $notifyEmail - -subject \"Outage RESOLVED for $( $Service . Title ) \" - -bodyContents \"Outage which was reported for the Service : $( $Service . Title ) is RESOLVED.\" - -bodyContentType HTML - -saveToSentItems false Write-Host \"Outage which was reported for the Service : $( $Service . Title ) is now RESOLVED.\" $updateSinceLastExecution = $true } } if ( $updateSinceLastExecution -eq $false ) { Write-Host \"No further updates on the existing outages\" }","title":"Bonus Action"},{"location":"sample-scripts/todo/cleanup-completed-todos/","tags":["cleanup","tasks"],"text":"Cleanup completed Microsoft To Do tasks \u00b6 Author: Garry Trinder Microsoft To Do is my task management tool of choice, I use it for tracking everything I do, which means I generate and complete a lot of tasks during a working week. This script iterates across all of the task lists and removes the tasks that have been marked as complete. PowerShell Bash Write-Output \"Getting Microsoft To Do task lists ...\" $lists = m365 todo list list -o json | ConvertFrom-Json Write-Output \"Iterating Microsoft To Do task lists ...\" $lists | ForEach -Object { $listId = $_ . Id Write-Output \"Getting completed tasks from ' $( $_ . displayName ) ' task list ...\" $tasks = m365 todo task list - -listId $listId -o json - -query '[?status==`completed`]' | ConvertFrom-Json Write-Output \" $( $tasks . Count ) completed tasks found ...\" $tasks | ForEach -Object { Write-Output \"Removing ' $( $_ . Title ) ' task ...\" m365 todo task remove - -listId $listId - -id $_ . Id - -confirm } } Write-Output \"Done\" #!/usr/bin/env bash # -*- coding: utf-8 -*- echo \"Getting Microsoft To Do task lists ...\" strListIds = ` m365 todo list list --query '[].id' ` arrListIds =( $strListIds ) echo \"Iterating Microsoft To Do task lists ...\" for strlistId in \" ${ arrListIds [@] } \" ; do echo \"Getting completed tasks from ' ${ strlistId } ' task list ...\" strTaskIds = $( m365 todo task list --listId \" ${ strlistId } \" --query '[?status==`completed`].id' ) arrTaskIds =( $strTaskIds ) strCount = ${# arrTaskIds [@] } echo \" ${ strCount } completed tasks found ...\" for strTaskId in \" ${ arrTaskIds [@] } \" ; do echo \"Removing ' ${ strTaskId } ' task ...\" m365 todo task remove --listId \" ${ strlistId } \" --id \" $strTaskId \" --confirm done done echo \"Done\"","title":"Cleanup completed Microsoft To Do tasks"},{"location":"sample-scripts/todo/cleanup-completed-todos/#cleanup-completed-microsoft-to-do-tasks","text":"Author: Garry Trinder Microsoft To Do is my task management tool of choice, I use it for tracking everything I do, which means I generate and complete a lot of tasks during a working week. This script iterates across all of the task lists and removes the tasks that have been marked as complete. PowerShell Bash Write-Output \"Getting Microsoft To Do task lists ...\" $lists = m365 todo list list -o json | ConvertFrom-Json Write-Output \"Iterating Microsoft To Do task lists ...\" $lists | ForEach -Object { $listId = $_ . Id Write-Output \"Getting completed tasks from ' $( $_ . displayName ) ' task list ...\" $tasks = m365 todo task list - -listId $listId -o json - -query '[?status==`completed`]' | ConvertFrom-Json Write-Output \" $( $tasks . Count ) completed tasks found ...\" $tasks | ForEach -Object { Write-Output \"Removing ' $( $_ . Title ) ' task ...\" m365 todo task remove - -listId $listId - -id $_ . Id - -confirm } } Write-Output \"Done\" #!/usr/bin/env bash # -*- coding: utf-8 -*- echo \"Getting Microsoft To Do task lists ...\" strListIds = ` m365 todo list list --query '[].id' ` arrListIds =( $strListIds ) echo \"Iterating Microsoft To Do task lists ...\" for strlistId in \" ${ arrListIds [@] } \" ; do echo \"Getting completed tasks from ' ${ strlistId } ' task list ...\" strTaskIds = $( m365 todo task list --listId \" ${ strlistId } \" --query '[?status==`completed`].id' ) arrTaskIds =( $strTaskIds ) strCount = ${# arrTaskIds [@] } echo \" ${ strCount } completed tasks found ...\" for strTaskId in \" ${ arrTaskIds [@] } \" ; do echo \"Removing ' ${ strTaskId } ' task ...\" m365 todo task remove --listId \" ${ strlistId } \" --id \" $strTaskId \" --confirm done done echo \"Done\"","title":"Cleanup completed Microsoft To Do tasks"},{"location":"user-guide/cli-certificate-caveats/","text":"Caveats when working with the CLI and certificate login \u00b6 I get error \"AADSTS700027 Client assertion contains an invalid signature\" when I login the CLI with certificate, what am I doing wrong \u00b6 There is an article \"Using your own Azure AD identity\" dedicated to using the CLI with your own identity, and you should have a look at it and see if it can help you. Many of the cases we've seen in the Github issues list are that people forget to set the CLIMICROSOFT365_AADAPPID or CLIMICROSOFT365_TENANT environment variables. Setting these variables could be as easy as adding them before your command on the bash command line like CLIMICROSOFT365_AADAPPID=value1 CLIMICROSOFT365_TENANT=value2 m365 command (see #1532 or #1496 ). If you are Windows user the syntax should be like set CLIMICROSOFT365_AADAPPID=value1 and set CLIMICROSOFT365_TENANT=value2 then your cli command ( #1121 ). I get \"Error: AADSTS700025: Client is public so 'client_assertion' should not be presented\" \u00b6 If you want to authenticate the CLI using and certificate, you shouldn't treat the application as a public client. You should set the default client type your Azure AD application to \"NO.\" More information can be found in this issue #948 . What is the minimum set of Azure AD app permissions to execute SharePoint commands with a certificate CLI login \u00b6 When you decide to use the CLI with your own Azure AD app to execute SharePoint CLI commands, you need to grant it at least the Microsoft Graph Sites.Read.All permission, and then any other scopes required by the commands you'd like to execute. For example, if you'd like to list all the sites within your tenant using the m365 spo site list command, then the minimum permissions for your app would be Microsoft Graph Sites.Read.All and SharePoint Sites.Manage.All . your application requires the Microsoft Graph Sites.Read.All permission because the m365 login command is using https://graph.microsoft.com/v1.0/sites/root?$select=webUrl API to dynamically find the root SharePoint site URL and use it to get a token for the SharePoint resource from Microsoft Identity dynamically. your application requires the SharePoint Sites.Manage.All permission to list the sites since the CLI uses SharePoint APIs to do that from the spo site list command, and the minimum permissions to list sites is Sites.Manage.All . I get an error: 403, \"AccessDenied Either scp or roles claim need to be present in the token\" when executing a CLI for Microsoft 365 SharePoint command. What does it mean \u00b6 It means that the Azure AD application that the CLI is running under does not have Microsoft Graph Sites.Read.All application permission granted. If you are trying to use the CLI with a certificate login and SharePoint, you would have to allow Microsoft Graph Sites.Read.All application permissions to the Azure AD app. I am using CLI with a certificate, but when I execute the spo site add I get error \"Insufficient privileges to complete the operation.\" \u00b6 This error can occur when you use the CLI with a certificate login and try to create a new SharePoint Team site that uses Microsoft 365 group (WebTemplate: #GROUP). Getting this error is a known issue with the CLI and the SharePoint APIs, but there is a workaround. The workaround is to use the m365 aad o365group add command to create Team Sites. If your goal is to create team sites, you can use the m365 aad o365group add command. The command is calling a Microsoft API that creates a Microsoft 365 group with a SharePoint site collection associated with the group. When creating a Microsoft 365 Group, the Microsoft 365 APIs create a site collection with it. The mailNickname property is the last portion of the site URL of the SharePoint Online site collection (https://yourtentantName.sharepoint.com/sites/mailNickname}). You can combine the m365 aad o365group add command with m365 spo site set to change additional properties of the site not available in the m365 aad o365group add command. What are the minimum permissions required to use the m365 aad o365group add command \u00b6 You would need the Microsoft Graph Group.Create and User.Read.All application permissions. What are the minimum permissions required to use the m365 aad o365group add command and the m365 spo site set command \u00b6 You would need the Microsoft Graph Group.Create and User.Read.All application permissions together with SharePoint Sites.FullControl.All application permission. Will the spo site add command and CLI certificate login work for creating Communication sites and Classic sites \u00b6 Yes, it will. There is a known issue with creating modern Team sites, but the workaround above should sort that as well. Why not make the Team Sites being created by just executing spo site add \u00b6 We are discussing this with the rest of the CLI team, and we might implement a fallback to the Microsoft Graph Group APIs to create the site in case of a CLI certificate login. So, it will use the same APIs as the aad o365group add command uses. Until this is implemented in the CLI we recommend to use the workaround described earlier. There is a well-documented API from Microsoft. Why does the CLI not use it to create the modern Team Sites \u00b6 There is a well-documented API for the creation of modern sites indeed. Unfortunately, the document mentions that we cannot create a new Team site based on Microsoft 365 Group.","title":"Caveats when working with the CLI and certificate login"},{"location":"user-guide/cli-certificate-caveats/#caveats-when-working-with-the-cli-and-certificate-login","text":"","title":"Caveats when working with the CLI and certificate login"},{"location":"user-guide/cli-certificate-caveats/#i-get-error-aadsts700027-client-assertion-contains-an-invalid-signature-when-i-login-the-cli-with-certificate-what-am-i-doing-wrong","text":"There is an article \"Using your own Azure AD identity\" dedicated to using the CLI with your own identity, and you should have a look at it and see if it can help you. Many of the cases we've seen in the Github issues list are that people forget to set the CLIMICROSOFT365_AADAPPID or CLIMICROSOFT365_TENANT environment variables. Setting these variables could be as easy as adding them before your command on the bash command line like CLIMICROSOFT365_AADAPPID=value1 CLIMICROSOFT365_TENANT=value2 m365 command (see #1532 or #1496 ). If you are Windows user the syntax should be like set CLIMICROSOFT365_AADAPPID=value1 and set CLIMICROSOFT365_TENANT=value2 then your cli command ( #1121 ).","title":"I get error \"AADSTS700027 Client assertion contains an invalid signature\" when I login the CLI with certificate, what am I doing wrong"},{"location":"user-guide/cli-certificate-caveats/#i-get-error-aadsts700025-client-is-public-so-client_assertion-should-not-be-presented","text":"If you want to authenticate the CLI using and certificate, you shouldn't treat the application as a public client. You should set the default client type your Azure AD application to \"NO.\" More information can be found in this issue #948 .","title":"I get \"Error: AADSTS700025: Client is public so 'client_assertion' should not be presented\""},{"location":"user-guide/cli-certificate-caveats/#what-is-the-minimum-set-of-azure-ad-app-permissions-to-execute-sharepoint-commands-with-a-certificate-cli-login","text":"When you decide to use the CLI with your own Azure AD app to execute SharePoint CLI commands, you need to grant it at least the Microsoft Graph Sites.Read.All permission, and then any other scopes required by the commands you'd like to execute. For example, if you'd like to list all the sites within your tenant using the m365 spo site list command, then the minimum permissions for your app would be Microsoft Graph Sites.Read.All and SharePoint Sites.Manage.All . your application requires the Microsoft Graph Sites.Read.All permission because the m365 login command is using https://graph.microsoft.com/v1.0/sites/root?$select=webUrl API to dynamically find the root SharePoint site URL and use it to get a token for the SharePoint resource from Microsoft Identity dynamically. your application requires the SharePoint Sites.Manage.All permission to list the sites since the CLI uses SharePoint APIs to do that from the spo site list command, and the minimum permissions to list sites is Sites.Manage.All .","title":"What is the minimum set of Azure AD app permissions to execute SharePoint commands with a certificate CLI login"},{"location":"user-guide/cli-certificate-caveats/#i-get-an-error-403-accessdenied-either-scp-or-roles-claim-need-to-be-present-in-the-token-when-executing-a-cli-for-microsoft-365-sharepoint-command-what-does-it-mean","text":"It means that the Azure AD application that the CLI is running under does not have Microsoft Graph Sites.Read.All application permission granted. If you are trying to use the CLI with a certificate login and SharePoint, you would have to allow Microsoft Graph Sites.Read.All application permissions to the Azure AD app.","title":"I get an error: 403, \"AccessDenied Either scp or roles claim need to be present in the token\" when executing a CLI for Microsoft 365 SharePoint command. What does it mean"},{"location":"user-guide/cli-certificate-caveats/#i-am-using-cli-with-a-certificate-but-when-i-execute-the-spo-site-add-i-get-error-insufficient-privileges-to-complete-the-operation","text":"This error can occur when you use the CLI with a certificate login and try to create a new SharePoint Team site that uses Microsoft 365 group (WebTemplate: #GROUP). Getting this error is a known issue with the CLI and the SharePoint APIs, but there is a workaround. The workaround is to use the m365 aad o365group add command to create Team Sites. If your goal is to create team sites, you can use the m365 aad o365group add command. The command is calling a Microsoft API that creates a Microsoft 365 group with a SharePoint site collection associated with the group. When creating a Microsoft 365 Group, the Microsoft 365 APIs create a site collection with it. The mailNickname property is the last portion of the site URL of the SharePoint Online site collection (https://yourtentantName.sharepoint.com/sites/mailNickname}). You can combine the m365 aad o365group add command with m365 spo site set to change additional properties of the site not available in the m365 aad o365group add command.","title":"I am using CLI with a certificate, but when I execute the spo site add I get error \"Insufficient privileges to complete the operation.\""},{"location":"user-guide/cli-certificate-caveats/#what-are-the-minimum-permissions-required-to-use-the-m365-aad-o365group-add-command","text":"You would need the Microsoft Graph Group.Create and User.Read.All application permissions.","title":"What are the minimum permissions required to use the m365 aad o365group add command"},{"location":"user-guide/cli-certificate-caveats/#what-are-the-minimum-permissions-required-to-use-the-m365-aad-o365group-add-command-and-the-m365-spo-site-set-command","text":"You would need the Microsoft Graph Group.Create and User.Read.All application permissions together with SharePoint Sites.FullControl.All application permission.","title":"What are the minimum permissions required to use the m365 aad o365group add command and the m365 spo site set command"},{"location":"user-guide/cli-certificate-caveats/#will-the-spo-site-add-command-and-cli-certificate-login-work-for-creating-communication-sites-and-classic-sites","text":"Yes, it will. There is a known issue with creating modern Team sites, but the workaround above should sort that as well.","title":"Will the spo site add command and CLI certificate login work for creating Communication sites and Classic sites"},{"location":"user-guide/cli-certificate-caveats/#why-not-make-the-team-sites-being-created-by-just-executing-spo-site-add","text":"We are discussing this with the rest of the CLI team, and we might implement a fallback to the Microsoft Graph Group APIs to create the site in case of a CLI certificate login. So, it will use the same APIs as the aad o365group add command uses. Until this is implemented in the CLI we recommend to use the workaround described earlier.","title":"Why not make the Team Sites being created by just executing spo site add"},{"location":"user-guide/cli-certificate-caveats/#there-is-a-well-documented-api-from-microsoft-why-does-the-cli-not-use-it-to-create-the-modern-team-sites","text":"There is a well-documented API for the creation of modern sites indeed. Unfortunately, the document mentions that we cannot create a new Team site based on Microsoft 365 Group.","title":"There is a well-documented API from Microsoft. Why does the CLI not use it to create the modern Team Sites"},{"location":"user-guide/cli-output-mode/","text":"CLI for Microsoft 365 output mode \u00b6 CLI for Microsoft 365 commands can present their output either as plain-text, JSON, or as CSV. Following is information on these two output modes along with information when to use which. Choose the command output mode \u00b6 All commands in CLI for Microsoft 365 can present their output as plain-text, JSON, or as CSV. By default, all commands use the JSON output mode, but by setting the --output , or -o for short, option to text , you can change the output mode for that command to text. By setting the output option to csv , you can change the output mode for that command to csv. JSON output mode \u00b6 By default, all commands in CLI for Microsoft 365 present their output as JSON strings. This is invaluable when building scripts using the CLI, where the output of one command, has to be processed by another command. Simple values \u00b6 Simple values in JSON output, are returned as-is. For example, if the Microsoft 365 Public CDN is enabled on the currently connected tenant, executing the spo cdn get command, will return true : $ m365 spo cdn get -o json true Objects \u00b6 If the command returns an object, that object will be formatted as a JSON string. For example, getting information about a specific app, will return output similar to: $ m365 spo app get -i e6362993-d4fd-4c5a-8254-fd095a7291ad { \"AppCatalogVersion\" : \"1.0.0.0\" , \"CanUpgrade\" : false, \"CurrentVersionDeployed\" : false, \"Deployed\" : false, \"ID\" : \"e6362993-d4fd-4c5a-8254-fd095a7291ad\" , \"InstalledVersion\" : \"\" , \"IsClientSideSolution\" : true, \"Title\" : \"spfx-140-online-client-side-solution\" } Arrays \u00b6 If the command returns information about multiple objects, the command will return a JSON array with each array item representing one object. For example, getting the list of available app, will return output similar to: $ m365 spo app list -o json [ { \"AppCatalogVersion\" : \"1.0.0.0\" , \"CanUpgrade\" : false, \"CurrentVersionDeployed\" : false, \"Deployed\" : false, \"ID\" : \"e6362993-d4fd-4c5a-8254-fd095a7291ad\" , \"InstalledVersion\" : \"\" , \"IsClientSideSolution\" : true, \"Title\" : \"spfx-140-online-client-side-solution\" } , { \"AppCatalogVersion\" : \"1.0.0.0\" , \"CanUpgrade\" : false, \"CurrentVersionDeployed\" : false, \"Deployed\" : false, \"ID\" : \"5ae74650-b00b-46a9-925f-9c9bd70a0cb6\" , \"InstalledVersion\" : \"\" , \"IsClientSideSolution\" : true, \"Title\" : \"spfx-134-client-side-solution\" } ] Even if the array contains only one item, for consistency it will be returned as a one-element JSON array: $ m365 spo app list -o json [ { \"AppCatalogVersion\" : \"1.0.0.0\" , \"CanUpgrade\" : false, \"CurrentVersionDeployed\" : false, \"Deployed\" : false, \"ID\" : \"e6362993-d4fd-4c5a-8254-fd095a7291ad\" , \"InstalledVersion\" : \"\" , \"IsClientSideSolution\" : true, \"Title\" : \"spfx-140-online-client-side-solution\" } ] Tip Some list commands return different output in text and JSON mode. For readability, in the text mode they only include a few properties, so that the output can be formatted as a table and will fit on the screen. In JSON mode however, they will include all available properties so that it's possible to process the full set of information about the particular object. For more details, refer to the help of the particular command. Verbose and debug output in JSON mode \u00b6 When executing commands in JSON output mode with the --verbose or --debug flag, the verbose and debug logging statements will be also formatted as JSON and will be added to the output. When processing the command output, you would have to determine yourself which of the returned JSON objects represents the actual command result and which are additional verbose and debug logging statements. Text output mode \u00b6 Optionally, you can have all CLI for Microsoft 365 commands return their output as plain-text. Depending on the command output, the value is presented as-is or formatted for readability. Simple values \u00b6 If the command output is a simple value, such as a number, boolean or a string, the value is returned as-is. For example, if the Microsoft 365 Public CDN is enabled on the currently connected tenant, executing the spo cdn get command, will return true : $ m365 spo cdn get -o text true Objects \u00b6 If the command returns information about an object such as a site, list or an app, that contains a number of properties, the output in text mode is formatted as key-value pairs. For example, getting information about a specific app, will return output similar to: $ m365 spo app get -i e6362993-d4fd-4c5a-8254-fd095a7291ad -o text AppCatalogVersion : 1 .0.0.0 CanUpgrade : false CurrentVersionDeployed: false Deployed : false ID : e6362993-d4fd-4c5a-8254-fd095a7291ad InstalledVersion : IsClientSideSolution : true Title : spfx-140-online-client-side-solution Arrays \u00b6 If the command returns information about multiple objects, the output is formatted as a table. For example, getting the list of available app, will return output similar to: $ m365 spo app list -o text Title ID Deployed AppCatalogVersion ------------------------------------ ------------------------------------ -------- ----------------- spfx-140-online-client-side-solution e6362993-d4fd-4c5a-8254-fd095a7291ad false 1 .0.0.0 spfx-134-client-side-solution 5ae74650-b00b-46a9-925f-9c9bd70a0cb6 false 1 .0.0.0 If only one app is returned, it will be displayed as key-value pairs: $ m365 spo app list -o text AppCatalogVersion: 1 .0.0.0 Deployed : false ID : e6362993-d4fd-4c5a-8254-fd095a7291ad Title : spfx-140-online-client-side-solution Processing command output with JMESPath \u00b6 CLI for Microsoft 365 supports filtering, sorting and querying data returned by its commands using JMESPath queries. Queries can be specified using the --query option on each command and are applied just before the data retrieved by the command is sent to the console. While you can apply JMESPath queries in all output modes, they are the most powerful in combination with JSON output where the data is unfiltered and the complete data set is sent to output. For example, you can retrieve the list of all SharePoint site collections in your tenant, by executing: $ m365 spo site list -o text Title Url ----------------------------------- ------------------------------------------------------------------------- Digital Initiative Public Relations https://contoso.sharepoint.com/sites/DigitalInitiativePublicRelations Leadership Team https://contoso.sharepoint.com/sites/leadership Mark 8 Project Team https://contoso.sharepoint.com/sites/Mark8ProjectTeam Operations https://contoso.sharepoint.com/sites/operations Retail https://contoso.sharepoint.com/sites/Retail Sales and Marketing https://contoso.sharepoint.com/sites/SalesAndMarketing To retrieve information only about sites matching a specific title or URL, you could execute: $ m365 spo site list --query \"[?Title == 'Retail']\" -o text Title: Retail Url : https://contoso.sharepoint.com/sites/Retail To make the output more readable, you could pass it to a JSON processor such as jq : $ m365 spo site list --output json --query \"[?Template == 'GROUP#0'].{Title: Title, Url: Url}\" | jq [ { \"Title\" : \"Mark 8 Project Team\" , \"Url\" : \"https://contoso.sharepoint.com/sites/Mark8ProjectTeam\" } , { \"Title\" : \"Operations\" , \"Url\" : \"https://contoso.sharepoint.com/sites/operations\" } , { \"Title\" : \"Digital Initiative Public Relations\" , \"Url\" : \"https://contoso.sharepoint.com/sites/DigitalInitiativePublicRelations\" } , { \"Title\" : \"Retail\" , \"Url\" : \"https://contoso.sharepoint.com/sites/Retail\" } , { \"Title\" : \"Leadership Team\" , \"Url\" : \"https://contoso.sharepoint.com/sites/leadership\" } , { \"Title\" : \"Sales and Marketing\" , \"Url\" : \"https://contoso.sharepoint.com/sites/SalesAndMarketing\" } ] When to use which output mode \u00b6 Generally, you will use the text output when interacting with the CLI yourself. When building scripts using the CLI for Microsoft 365, you will use the default JSON output mode, because processing JSON strings is much more convenient and reliable than processing plain-text output. Sample script \u00b6 Using the JSON output mode allows you to build scripts using the CLI for Microsoft 365. The CLI works on any platform, but as there is no common way to work with objects and command output on all platforms and shells, we chose JSON as the format to serialize objects in the CLI for Microsoft 365. Following, is a sample script, that you could build using the CLI for Microsoft 365 in Bash: m365 # get all apps available in the tenant app catalog apps = $( m365 spo app list -o json ) # get IDs of all apps that are not deployed notDeployedAppsIds =( $( echo $apps | jq -r '.[] | select(.Deployed == false) | {ID} | .[]' ) ) # deploy all not deployed apps for appId in $notDeployedAppsIds ; do m365 spo app deploy -i $appId done First, you use the CLI for Microsoft 365 to get the list of all apps from the tenant app catalog using the spo app list command. You set the output type to JSON and store it in a shell variable apps . Next, you parse the JSON string using jq and get IDs of apps that are not deployed. Finally, for each ID you run the spo app deploy CLI for Microsoft 365 command passing the ID as a command argument. Notice, that in the script, both spo commands are prepended with m365 and executed as separate commands directly in the shell. The same could be accomplished in PowerShell as well: # get all apps available in the tenant app catalog $apps = m365 spo app list -o json | ConvertFrom-Json # get all apps that are not yet deployed and deploy them $apps | ? Deployed -eq $false | % { m365 spo app deploy -i $_ . ID } Because PowerShell offers native support for working with JSON strings and objects, the same script written in PowerShell is simpler than the one in Bash. At the end of the day it's up to you to choose if you want to use the CLI for Microsoft 365 in Bash, PowerShell or some other shell. Both Bash and PowerShell are available on multiple platforms, and if you have a team using different platforms, writing scripts using CLI for Microsoft 365 in Bash or PowerShell will let everyone in your team use them.","title":"CLI output mode"},{"location":"user-guide/cli-output-mode/#cli-for-microsoft-365-output-mode","text":"CLI for Microsoft 365 commands can present their output either as plain-text, JSON, or as CSV. Following is information on these two output modes along with information when to use which.","title":"CLI for Microsoft 365 output mode"},{"location":"user-guide/cli-output-mode/#choose-the-command-output-mode","text":"All commands in CLI for Microsoft 365 can present their output as plain-text, JSON, or as CSV. By default, all commands use the JSON output mode, but by setting the --output , or -o for short, option to text , you can change the output mode for that command to text. By setting the output option to csv , you can change the output mode for that command to csv.","title":"Choose the command output mode"},{"location":"user-guide/cli-output-mode/#json-output-mode","text":"By default, all commands in CLI for Microsoft 365 present their output as JSON strings. This is invaluable when building scripts using the CLI, where the output of one command, has to be processed by another command.","title":"JSON output mode"},{"location":"user-guide/cli-output-mode/#simple-values","text":"Simple values in JSON output, are returned as-is. For example, if the Microsoft 365 Public CDN is enabled on the currently connected tenant, executing the spo cdn get command, will return true : $ m365 spo cdn get -o json true","title":"Simple values"},{"location":"user-guide/cli-output-mode/#objects","text":"If the command returns an object, that object will be formatted as a JSON string. For example, getting information about a specific app, will return output similar to: $ m365 spo app get -i e6362993-d4fd-4c5a-8254-fd095a7291ad { \"AppCatalogVersion\" : \"1.0.0.0\" , \"CanUpgrade\" : false, \"CurrentVersionDeployed\" : false, \"Deployed\" : false, \"ID\" : \"e6362993-d4fd-4c5a-8254-fd095a7291ad\" , \"InstalledVersion\" : \"\" , \"IsClientSideSolution\" : true, \"Title\" : \"spfx-140-online-client-side-solution\" }","title":"Objects"},{"location":"user-guide/cli-output-mode/#arrays","text":"If the command returns information about multiple objects, the command will return a JSON array with each array item representing one object. For example, getting the list of available app, will return output similar to: $ m365 spo app list -o json [ { \"AppCatalogVersion\" : \"1.0.0.0\" , \"CanUpgrade\" : false, \"CurrentVersionDeployed\" : false, \"Deployed\" : false, \"ID\" : \"e6362993-d4fd-4c5a-8254-fd095a7291ad\" , \"InstalledVersion\" : \"\" , \"IsClientSideSolution\" : true, \"Title\" : \"spfx-140-online-client-side-solution\" } , { \"AppCatalogVersion\" : \"1.0.0.0\" , \"CanUpgrade\" : false, \"CurrentVersionDeployed\" : false, \"Deployed\" : false, \"ID\" : \"5ae74650-b00b-46a9-925f-9c9bd70a0cb6\" , \"InstalledVersion\" : \"\" , \"IsClientSideSolution\" : true, \"Title\" : \"spfx-134-client-side-solution\" } ] Even if the array contains only one item, for consistency it will be returned as a one-element JSON array: $ m365 spo app list -o json [ { \"AppCatalogVersion\" : \"1.0.0.0\" , \"CanUpgrade\" : false, \"CurrentVersionDeployed\" : false, \"Deployed\" : false, \"ID\" : \"e6362993-d4fd-4c5a-8254-fd095a7291ad\" , \"InstalledVersion\" : \"\" , \"IsClientSideSolution\" : true, \"Title\" : \"spfx-140-online-client-side-solution\" } ] Tip Some list commands return different output in text and JSON mode. For readability, in the text mode they only include a few properties, so that the output can be formatted as a table and will fit on the screen. In JSON mode however, they will include all available properties so that it's possible to process the full set of information about the particular object. For more details, refer to the help of the particular command.","title":"Arrays"},{"location":"user-guide/cli-output-mode/#verbose-and-debug-output-in-json-mode","text":"When executing commands in JSON output mode with the --verbose or --debug flag, the verbose and debug logging statements will be also formatted as JSON and will be added to the output. When processing the command output, you would have to determine yourself which of the returned JSON objects represents the actual command result and which are additional verbose and debug logging statements.","title":"Verbose and debug output in JSON mode"},{"location":"user-guide/cli-output-mode/#text-output-mode","text":"Optionally, you can have all CLI for Microsoft 365 commands return their output as plain-text. Depending on the command output, the value is presented as-is or formatted for readability.","title":"Text output mode"},{"location":"user-guide/cli-output-mode/#simple-values_1","text":"If the command output is a simple value, such as a number, boolean or a string, the value is returned as-is. For example, if the Microsoft 365 Public CDN is enabled on the currently connected tenant, executing the spo cdn get command, will return true : $ m365 spo cdn get -o text true","title":"Simple values"},{"location":"user-guide/cli-output-mode/#objects_1","text":"If the command returns information about an object such as a site, list or an app, that contains a number of properties, the output in text mode is formatted as key-value pairs. For example, getting information about a specific app, will return output similar to: $ m365 spo app get -i e6362993-d4fd-4c5a-8254-fd095a7291ad -o text AppCatalogVersion : 1 .0.0.0 CanUpgrade : false CurrentVersionDeployed: false Deployed : false ID : e6362993-d4fd-4c5a-8254-fd095a7291ad InstalledVersion : IsClientSideSolution : true Title : spfx-140-online-client-side-solution","title":"Objects"},{"location":"user-guide/cli-output-mode/#arrays_1","text":"If the command returns information about multiple objects, the output is formatted as a table. For example, getting the list of available app, will return output similar to: $ m365 spo app list -o text Title ID Deployed AppCatalogVersion ------------------------------------ ------------------------------------ -------- ----------------- spfx-140-online-client-side-solution e6362993-d4fd-4c5a-8254-fd095a7291ad false 1 .0.0.0 spfx-134-client-side-solution 5ae74650-b00b-46a9-925f-9c9bd70a0cb6 false 1 .0.0.0 If only one app is returned, it will be displayed as key-value pairs: $ m365 spo app list -o text AppCatalogVersion: 1 .0.0.0 Deployed : false ID : e6362993-d4fd-4c5a-8254-fd095a7291ad Title : spfx-140-online-client-side-solution","title":"Arrays"},{"location":"user-guide/cli-output-mode/#processing-command-output-with-jmespath","text":"CLI for Microsoft 365 supports filtering, sorting and querying data returned by its commands using JMESPath queries. Queries can be specified using the --query option on each command and are applied just before the data retrieved by the command is sent to the console. While you can apply JMESPath queries in all output modes, they are the most powerful in combination with JSON output where the data is unfiltered and the complete data set is sent to output. For example, you can retrieve the list of all SharePoint site collections in your tenant, by executing: $ m365 spo site list -o text Title Url ----------------------------------- ------------------------------------------------------------------------- Digital Initiative Public Relations https://contoso.sharepoint.com/sites/DigitalInitiativePublicRelations Leadership Team https://contoso.sharepoint.com/sites/leadership Mark 8 Project Team https://contoso.sharepoint.com/sites/Mark8ProjectTeam Operations https://contoso.sharepoint.com/sites/operations Retail https://contoso.sharepoint.com/sites/Retail Sales and Marketing https://contoso.sharepoint.com/sites/SalesAndMarketing To retrieve information only about sites matching a specific title or URL, you could execute: $ m365 spo site list --query \"[?Title == 'Retail']\" -o text Title: Retail Url : https://contoso.sharepoint.com/sites/Retail To make the output more readable, you could pass it to a JSON processor such as jq : $ m365 spo site list --output json --query \"[?Template == 'GROUP#0'].{Title: Title, Url: Url}\" | jq [ { \"Title\" : \"Mark 8 Project Team\" , \"Url\" : \"https://contoso.sharepoint.com/sites/Mark8ProjectTeam\" } , { \"Title\" : \"Operations\" , \"Url\" : \"https://contoso.sharepoint.com/sites/operations\" } , { \"Title\" : \"Digital Initiative Public Relations\" , \"Url\" : \"https://contoso.sharepoint.com/sites/DigitalInitiativePublicRelations\" } , { \"Title\" : \"Retail\" , \"Url\" : \"https://contoso.sharepoint.com/sites/Retail\" } , { \"Title\" : \"Leadership Team\" , \"Url\" : \"https://contoso.sharepoint.com/sites/leadership\" } , { \"Title\" : \"Sales and Marketing\" , \"Url\" : \"https://contoso.sharepoint.com/sites/SalesAndMarketing\" } ]","title":"Processing command output with JMESPath"},{"location":"user-guide/cli-output-mode/#when-to-use-which-output-mode","text":"Generally, you will use the text output when interacting with the CLI yourself. When building scripts using the CLI for Microsoft 365, you will use the default JSON output mode, because processing JSON strings is much more convenient and reliable than processing plain-text output.","title":"When to use which output mode"},{"location":"user-guide/cli-output-mode/#sample-script","text":"Using the JSON output mode allows you to build scripts using the CLI for Microsoft 365. The CLI works on any platform, but as there is no common way to work with objects and command output on all platforms and shells, we chose JSON as the format to serialize objects in the CLI for Microsoft 365. Following, is a sample script, that you could build using the CLI for Microsoft 365 in Bash: m365 # get all apps available in the tenant app catalog apps = $( m365 spo app list -o json ) # get IDs of all apps that are not deployed notDeployedAppsIds =( $( echo $apps | jq -r '.[] | select(.Deployed == false) | {ID} | .[]' ) ) # deploy all not deployed apps for appId in $notDeployedAppsIds ; do m365 spo app deploy -i $appId done First, you use the CLI for Microsoft 365 to get the list of all apps from the tenant app catalog using the spo app list command. You set the output type to JSON and store it in a shell variable apps . Next, you parse the JSON string using jq and get IDs of apps that are not deployed. Finally, for each ID you run the spo app deploy CLI for Microsoft 365 command passing the ID as a command argument. Notice, that in the script, both spo commands are prepended with m365 and executed as separate commands directly in the shell. The same could be accomplished in PowerShell as well: # get all apps available in the tenant app catalog $apps = m365 spo app list -o json | ConvertFrom-Json # get all apps that are not yet deployed and deploy them $apps | ? Deployed -eq $false | % { m365 spo app deploy -i $_ . ID } Because PowerShell offers native support for working with JSON strings and objects, the same script written in PowerShell is simpler than the one in Bash. At the end of the day it's up to you to choose if you want to use the CLI for Microsoft 365 in Bash, PowerShell or some other shell. Both Bash and PowerShell are available on multiple platforms, and if you have a team using different platforms, writing scripts using CLI for Microsoft 365 in Bash or PowerShell will let everyone in your team use them.","title":"Sample script"},{"location":"user-guide/completion/","text":"Command completion \u00b6 To help you use its commands, CLI for Microsoft 365 offers you the ability to autocomplete commands and options that you're typing in the prompt. Some additional setup, specific for the shell and terminal that you use, is required to enable command completion for CLI for Microsoft 365. Clink (cmder) \u00b6 On Windows, the CLI for Microsoft 365 offers support for completing commands in cmder and other shells using Clink . Enable Clink completion \u00b6 To enable completion: Start your shell Change the working directory to where your shell stores completion plugins. For cmder, it's %CMDER_ROOT%\\vendor\\clink-completions , where %CMDER_ROOT% is the folder where you installed cmder. Execute: m365 cli completion clink update > m365.lua . This will create the m365.lua file with information about m365 commands which is used by Clink to provide completion Restart your shell You should now be able to complete your input, eg. typing m365 s<tab> will complete it to m365 spo and typing m365 spo <tab><tab> will list all SharePoint Online commands available in CLI for Microsoft 365. To see the options available for the current command, type -<tab><tab> , for example m365 spo app list -<tab><tab> will list all options available for the m365 spo app list command. Update Clink completion \u00b6 Command completion is based on a static file. After updating the CLI for Microsoft 365, you should update the completion file as described in the Enable completion section so that the completion file reflects the latest commands in the CLI for Microsoft 365. Disable Clink completion \u00b6 To disable completion, delete the m365.lua file you generated previously and restart your shell. Zsh, Bash and Fish \u00b6 If you're using Zsh, Bash or Fish as your shell, you can benefit of CLI for Microsoft 365 command completion as well, when typing commands directly in the shell. The completion is based on the Omelette package. For Mac Terminal, you'll need to add source /usr/local/etc/profile.d/bash_completion.sh to ~/.bashrc Enable sh completion \u00b6 To enable completion: Start your shell Execute m365 cli completion sh setup . This will generate the commands.json file in the same folder where the CLI for Microsoft 365 is installed, listing all available commands and their options. Additionally, it will register completion in your shell profile file (for Zsh ~/.zshrc ) using the Omelette's automated install . Restart your shell You should now be able to complete your input, eg. typing m365 s<tab> will complete it to m365 spo and typing m365 spo <tab><tab> will list all SharePoint Online commands available in CLI for Microsoft 365. To see the options available for the command, type -<tab><tab> , for example m365 spo app list -<tab><tab> will list all options available for the m365 spo app list command. If the command is completed, the completion will automatically start suggestions with a - indicating that you have matched a command and can now specify its options. Command options you've already used are removed from the suggestions list, but the completion doesn't take into account short and long variant of the same option. If you specified the --output option in your command, --option will not be displayed in the list of suggestions, but -o will. Update sh completion \u00b6 Command completion is based on the static commands.json file located in the folder where the CLI for Microsoft 365 is installed. After updating the CLI for Microsoft 365, you should update the completion file by executing m365 cli completion sh update in the command line. After running this command, it's not necessary to restart the shell to see the latest changes. Disable sh completion \u00b6 To disable completion, edit your shell's profile file (for Zsh ~/.zshrc ) and remove the following lines: m365 # begin m365 completion . < ( m365 --completion ) # end m365 completion Save the profile file and restart the shell for the changes to take effect. PowerShell \u00b6 If you use CLI for Microsoft 365 in PowerShell you can use the custom argument completer provided with the CLI for Microsoft 365 to get command completion when typing commands directly in the shell. Enable PowerShell completion \u00b6 To enable completion in your current PowerShell profile: Start PowerShell Execute m365 cli completion pwsh setup --profile $profile . This will generate the commands.json file in the same folder where the CLI for Microsoft 365 is installed, listing all available commands and their options. Additionally, it will register completion in your PowerShell profile Restart PowerShell You should now be able to complete your input, eg. typing m365 s<tab> will complete it to m365 spo and typing m365 spo <tab><tab> will list all SharePoint Online commands available in CLI for Microsoft 365. To see the options available for the command, type -<tab><tab> , for example m365 spo app list -<tab><tab> will list all options available for the m365 spo app list command. If the command is completed, the completion will automatically start suggestions with a - indicating that you have matched a command and can now specify its options. Command options you've already used are removed from the suggestions list, but the completion doesn't take into account short and long variant of the same option. If you specified the --output option in your command, --option will not be displayed in the list of suggestions, but -o will. Update PowerShell completion \u00b6 Command completion is based on the static commands.json file located in the folder where the CLI for Microsoft 365 is installed. After updating the CLI for Microsoft 365, you should update the completion file by executing m365 cli completion pwsh update in the command line. After running this command, it's not necessary to restart PowerShell to see the latest changes. Disable PowerShell completion \u00b6 To disable CLI for Microsoft 365 command completion in your PowerShell profile, open the profile file in a code editor, and remove the reference to the Register-CLIM365Completion.ps1 script. Restart PowerShell for the changes to take effect.","title":"Command completion"},{"location":"user-guide/completion/#command-completion","text":"To help you use its commands, CLI for Microsoft 365 offers you the ability to autocomplete commands and options that you're typing in the prompt. Some additional setup, specific for the shell and terminal that you use, is required to enable command completion for CLI for Microsoft 365.","title":"Command completion"},{"location":"user-guide/completion/#clink-cmder","text":"On Windows, the CLI for Microsoft 365 offers support for completing commands in cmder and other shells using Clink .","title":"Clink (cmder)"},{"location":"user-guide/completion/#enable-clink-completion","text":"To enable completion: Start your shell Change the working directory to where your shell stores completion plugins. For cmder, it's %CMDER_ROOT%\\vendor\\clink-completions , where %CMDER_ROOT% is the folder where you installed cmder. Execute: m365 cli completion clink update > m365.lua . This will create the m365.lua file with information about m365 commands which is used by Clink to provide completion Restart your shell You should now be able to complete your input, eg. typing m365 s<tab> will complete it to m365 spo and typing m365 spo <tab><tab> will list all SharePoint Online commands available in CLI for Microsoft 365. To see the options available for the current command, type -<tab><tab> , for example m365 spo app list -<tab><tab> will list all options available for the m365 spo app list command.","title":"Enable Clink completion"},{"location":"user-guide/completion/#update-clink-completion","text":"Command completion is based on a static file. After updating the CLI for Microsoft 365, you should update the completion file as described in the Enable completion section so that the completion file reflects the latest commands in the CLI for Microsoft 365.","title":"Update Clink completion"},{"location":"user-guide/completion/#disable-clink-completion","text":"To disable completion, delete the m365.lua file you generated previously and restart your shell.","title":"Disable Clink completion"},{"location":"user-guide/completion/#zsh-bash-and-fish","text":"If you're using Zsh, Bash or Fish as your shell, you can benefit of CLI for Microsoft 365 command completion as well, when typing commands directly in the shell. The completion is based on the Omelette package. For Mac Terminal, you'll need to add source /usr/local/etc/profile.d/bash_completion.sh to ~/.bashrc","title":"Zsh, Bash and Fish"},{"location":"user-guide/completion/#enable-sh-completion","text":"To enable completion: Start your shell Execute m365 cli completion sh setup . This will generate the commands.json file in the same folder where the CLI for Microsoft 365 is installed, listing all available commands and their options. Additionally, it will register completion in your shell profile file (for Zsh ~/.zshrc ) using the Omelette's automated install . Restart your shell You should now be able to complete your input, eg. typing m365 s<tab> will complete it to m365 spo and typing m365 spo <tab><tab> will list all SharePoint Online commands available in CLI for Microsoft 365. To see the options available for the command, type -<tab><tab> , for example m365 spo app list -<tab><tab> will list all options available for the m365 spo app list command. If the command is completed, the completion will automatically start suggestions with a - indicating that you have matched a command and can now specify its options. Command options you've already used are removed from the suggestions list, but the completion doesn't take into account short and long variant of the same option. If you specified the --output option in your command, --option will not be displayed in the list of suggestions, but -o will.","title":"Enable sh completion"},{"location":"user-guide/completion/#update-sh-completion","text":"Command completion is based on the static commands.json file located in the folder where the CLI for Microsoft 365 is installed. After updating the CLI for Microsoft 365, you should update the completion file by executing m365 cli completion sh update in the command line. After running this command, it's not necessary to restart the shell to see the latest changes.","title":"Update sh completion"},{"location":"user-guide/completion/#disable-sh-completion","text":"To disable completion, edit your shell's profile file (for Zsh ~/.zshrc ) and remove the following lines: m365 # begin m365 completion . < ( m365 --completion ) # end m365 completion Save the profile file and restart the shell for the changes to take effect.","title":"Disable sh completion"},{"location":"user-guide/completion/#powershell","text":"If you use CLI for Microsoft 365 in PowerShell you can use the custom argument completer provided with the CLI for Microsoft 365 to get command completion when typing commands directly in the shell.","title":"PowerShell"},{"location":"user-guide/completion/#enable-powershell-completion","text":"To enable completion in your current PowerShell profile: Start PowerShell Execute m365 cli completion pwsh setup --profile $profile . This will generate the commands.json file in the same folder where the CLI for Microsoft 365 is installed, listing all available commands and their options. Additionally, it will register completion in your PowerShell profile Restart PowerShell You should now be able to complete your input, eg. typing m365 s<tab> will complete it to m365 spo and typing m365 spo <tab><tab> will list all SharePoint Online commands available in CLI for Microsoft 365. To see the options available for the command, type -<tab><tab> , for example m365 spo app list -<tab><tab> will list all options available for the m365 spo app list command. If the command is completed, the completion will automatically start suggestions with a - indicating that you have matched a command and can now specify its options. Command options you've already used are removed from the suggestions list, but the completion doesn't take into account short and long variant of the same option. If you specified the --output option in your command, --option will not be displayed in the list of suggestions, but -o will.","title":"Enable PowerShell completion"},{"location":"user-guide/completion/#update-powershell-completion","text":"Command completion is based on the static commands.json file located in the folder where the CLI for Microsoft 365 is installed. After updating the CLI for Microsoft 365, you should update the completion file by executing m365 cli completion pwsh update in the command line. After running this command, it's not necessary to restart PowerShell to see the latest changes.","title":"Update PowerShell completion"},{"location":"user-guide/completion/#disable-powershell-completion","text":"To disable CLI for Microsoft 365 command completion in your PowerShell profile, open the profile file in a code editor, and remove the reference to the Register-CLIM365Completion.ps1 script. Restart PowerShell for the changes to take effect.","title":"Disable PowerShell completion"},{"location":"user-guide/configuring-cli/","text":"Configure CLI for Microsoft 365 \u00b6 You can configure CLI for Microsoft 365 to your personal preferences using its settings. Settings are stored on the disk in the current user's folder: C:\\Users\\user\\.config\\configstore\\cli-m365-config.json on Windows and /Users/user/.config/configstore/cli-m365-config.json on macOS. The configuration file is created when you set the settings for the first time. To reset settings to their default values, remove them from the configuration file or remove the whole configuration file. Configuring settings \u00b6 You can configure the specific setting using the cli config set command. For example, to configure CLI to automatically show help when executing a command failed, execute: m365 cli config set --key showHelpOnFailure --value true Available settings \u00b6 Following is the list of configuration settings available in CLI for Microsoft 365. Setting name Definition Default value autoOpenLinksInBrowser Automatically open the browser for all commands which return a url and expect the user to copy paste this to the browser. For example when logging in, using m365 login in device code mode. false copyDeviceCodeToClipboard Automatically copy the device code to the clipboard when running m365 login command in device code mode false csvEscape Single character used for escaping; only apply to characters matching the quote and the escape options \" csvHeader Display the column names on the first line true csvQuote The quote characters surrounding a field. An empty quote value will preserve the original field, whether it contains quotation marks or not. csvQuoted Quote all the non-empty fields even if not required false csvQuotedEmpty Quote empty strings and overrides quoted_string on empty strings when defined false errorOutput Defines if errors should be written to stdout or stderr stderr output Defines the default output when issuing a command json printErrorsAsPlainText When output mode is set to json , print error messages as plain-text rather than JSON true prompt Prompts for missing values in required options false showHelpOnFailure Automatically display help when executing a command failed true","title":"Configure CLI"},{"location":"user-guide/configuring-cli/#configure-cli-for-microsoft-365","text":"You can configure CLI for Microsoft 365 to your personal preferences using its settings. Settings are stored on the disk in the current user's folder: C:\\Users\\user\\.config\\configstore\\cli-m365-config.json on Windows and /Users/user/.config/configstore/cli-m365-config.json on macOS. The configuration file is created when you set the settings for the first time. To reset settings to their default values, remove them from the configuration file or remove the whole configuration file.","title":"Configure CLI for Microsoft 365"},{"location":"user-guide/configuring-cli/#configuring-settings","text":"You can configure the specific setting using the cli config set command. For example, to configure CLI to automatically show help when executing a command failed, execute: m365 cli config set --key showHelpOnFailure --value true","title":"Configuring settings"},{"location":"user-guide/configuring-cli/#available-settings","text":"Following is the list of configuration settings available in CLI for Microsoft 365. Setting name Definition Default value autoOpenLinksInBrowser Automatically open the browser for all commands which return a url and expect the user to copy paste this to the browser. For example when logging in, using m365 login in device code mode. false copyDeviceCodeToClipboard Automatically copy the device code to the clipboard when running m365 login command in device code mode false csvEscape Single character used for escaping; only apply to characters matching the quote and the escape options \" csvHeader Display the column names on the first line true csvQuote The quote characters surrounding a field. An empty quote value will preserve the original field, whether it contains quotation marks or not. csvQuoted Quote all the non-empty fields even if not required false csvQuotedEmpty Quote empty strings and overrides quoted_string on empty strings when defined false errorOutput Defines if errors should be written to stdout or stderr stderr output Defines the default output when issuing a command json printErrorsAsPlainText When output mode is set to json , print error messages as plain-text rather than JSON true prompt Prompts for missing values in required options false showHelpOnFailure Automatically display help when executing a command failed true","title":"Available settings"},{"location":"user-guide/connecting-office-365/","text":"Log in to Microsoft 365 \u00b6 Before you can use CLI for Microsoft 365 commands to manage your tenant, you have to log in to Microsoft 365. Following section explains how you can log in and check the Microsoft 365 login status. Microsoft 365 services \u00b6 Using the CLI for Microsoft 365 you can manage different areas of an Microsoft 365 tenant. Currently, commands for working with SharePoint Online, Azure Active Directory, Microsoft Graph and the Azure Management Service are available, but more commands for other services will be added in the future. Commands in the CLI for Microsoft 365 are organized into services. For example, all commands that manage SharePoint Online begin with spo ( spo app list , spo cdn get , etc.) and commands for working with the Azure AD begin with aad . After logging in to Microsoft 365, you can communicate with any Microsoft 365 service supported by the CLI for Microsoft 365 and it will automatically retrieve the necessary access token. Log in to Microsoft 365 \u00b6 CLI for Microsoft 365 offers you a number of ways to log in to Microsoft 365. Log in using the default device code flow \u00b6 The default way to log in to Microsoft 365 using the CLI for Microsoft 365 is through the device code flow. To log in to Microsoft 365, use the login command. After executing the login command, you will be prompted to navigate to https://aka.ms/devicelogin in your web browser and enter the login code presented to you by the CLI for Microsoft 365 in the command line. After entering the code, you will see the prompt that you are about to authenticate the PnP Microsoft 365 Management Shell application to access your tenant on your behalf. If you are using the CLI for Microsoft 365 for the first time, you will be also prompted to verify the permissions you are about to grant the CLI for Microsoft 365. This is referred to as consent . The device code flow is the recommended approach for command-line tools to authenticate with resources secured with Azure AD. Because the authentication process is handled in the browser by Azure AD itself, it allows you to benefit of rich security features such as multi-factor authentication or conditional access. The device code flow is interactive and requires user interaction which might be limiting if you want to use the CLI for Microsoft 365 in your continuous deployment setup which is fully automated and doesn't involve user interaction. Log in using user name and password \u00b6 An alternative way to log in to Microsoft 365 in the CLI for Microsoft 365 is by using a user name and password. To use this way of authenticating, set the authType option to password and specify your credentials using the userName and password options. To log in to Microsoft 365 using your user name and password, execute: m365 login --authType password --userName user@contoso.com --password pass@word1 Using credentials to log in to Microsoft 365 is convenient in automation scenarios where you cannot authenticate interactively. The downside of this way of authenticating is, that it doesn't allow you to use any of the advanced security features that Azure AD offers. If your account for example uses multi-factor authentication, logging in to Microsoft 365 using credentials will fail. Attention When logging in to Microsoft 365 using credentials, CLI for Microsoft 365 will persist not only the retrieved access and refresh token, but also the credentials you specified when logging in. This is necessary for the CLI to be able to retrieve a new refresh token, in case the previously retrieved refresh token expired or has been invalidated. Generally, you should use the default device code flow. If you need to use a non-interactive authentication flow, you can authenticate using a certificate or credentials of an account that has sufficient privileges in your tenant and doesn't have multi-factor authentication or other advanced security features enabled. Log in using a certificate \u00b6 Another way to log in to Microsoft 365 in the CLI for Microsoft 365 is by using a certificate. To use this authentication method, set the CLIMICROSOFT365_AADAPPID environment variable to the ID of the Azure AD application that you want to use to authenticate the CLI for Microsoft 365 and the CLIMICROSOFT365_TENANT environment variable to the ID of your Azure AD directory. When calling the login command, set the authType option to certificate and specify the path to the certificate private key using the certificateFile option. Optionally, you can specify the certificate's thumbprint using the thumbprint option. If not specified, CLI will automatically calculate it from the specified certificate. To log in to Microsoft 365 using a Personal Information Exchange (.pfx) file, execute: m365 login --authType certificate --certificateFile /Users/user/dev/localhost.pfx --password 'pass@word1' To log in to Microsoft 365 using a Privacy Enhanced Mail (PEM) certificate, execute: m365 login --authType certificate --certificateFile /Users/user/dev/localhost.pem Logging in to Microsoft 365 using a certificate is convenient for automation scenarios where you cannot authenticate interactively but also don't want to use credentials. Because there is no user context when logging in using a certificate, you will typically create a new Azure AD application, specific to your organization and grant it the required permissions. Attention You should keep in mind, that because the CLI for Microsoft 365 will be accessing these APIs with app-only context, you need to grant the correct application permissions rather than delegated permissions that would be used in other authentication methods. Logging in using a certificate gives the CLI for Microsoft 365 app-only access to Microsoft 365 services. Not all operations support app-only access so it is possible, that some CLI commands will fail when executed while logged in to Microsoft 365 using a certificate. Attention When logging in to Microsoft 365 using a certificate, CLI for Microsoft 365 will persist not only the retrieved access token but also the contents of the certificate's private key and its thumbprint. This is necessary for the CLI to be able to retrieve a new access token in case of the previously retrieved access token expired or has been invalidated. Generally, you should use the default device code flow. If you need to use a non-interactive authentication flow, to for example integrate the CLI for Microsoft 365 in your build pipeline, you can login using a certificate or user credentials. Attention PFX files exported from a Windows key store will not work as they are protected with either a password or Active Directory account. The private key must either be exported from the protected .pfx or newly created using 3rd party tools like OpenSSL (https://www.openssl.org/). Create a new self signed certificate: openssl req -x509 -sha256 -nodes -days 365 -newkey rsa:2048 -keyout privateKey.key -out certificate.cer Create a new Personal Information Exchange (.pfx) file openssl pkcs12 -export -out protected.pfx -inkey privateKey.key -in certificate.cer -password pass: \"pass@word1\" At this point the protected.pfx file can be used to log in the CLI for Microsoft 365 following the instructions above for logging in using a .pfx file. If login with the .pfx file does not work then extract the private key from a protected .pfx and unprotect it: openssl pkcs12 -in protected.pfx -out privateKeyWithPassphrase.pem -nodes At this point the privateKeyWithPassphrase.pem file can be used to log in the CLI for Microsoft 365 following the instructions above for logging in using a PEM certificate. Log in using a secret \u00b6 CLI for Microsoft 365 also supports login using a secret. To use this authentication method, set the CLIMICROSOFT365_AADAPPID environment variable to the ID of the Azure AD application that you want to use to authenticate the CLI for Microsoft 365 and the CLIMICROSOFT365_TENANT environment variable to the ID of your Azure AD directory. When calling the login command, set the authType option to secret and specify the client secret value. To log in to Microsoft 365 using a secret, execute: m365 login --authType secret --secret topSeCr3t@007 Logging in to Microsoft 365 using a secret is convenient for automation scenarios where you cannot authenticate interactively but also don't want to use credentials. Because there is no user context when logging in using a secret, you will typically create a new Azure AD application, specific to your organization and grant it the required permissions. Attention You should keep in mind, that because the CLI for Microsoft 365 will be accessing these APIs with app-only context, you need to grant the correct application permissions rather than delegated permissions that would be used in other authentication methods. Logging in using a secret gives the CLI for Microsoft 365 app-only access to Microsoft 365 services. Not all operations support app-only access so it is possible, that some CLI commands will fail when executed while logged in to Microsoft 365 using a secret. Attention Currently, SharePoint does not support authentication using Azure AD App ID and Secret. CLI for Microsoft 365 commands that call the SharePoint APIs will fail while logged in to Microsoft 365 using a Secret. Attention When logging in to Microsoft 365 using a secret, CLI for Microsoft 365 will persist not only the retrieved access token but also the secret. This is necessary for the CLI to be able to retrieve a new access token in case of the previously retrieved access token expired or has been invalidated. Log in using a browser authentication \u00b6 Yet another way to log in to Microsoft 365 in the CLI for Microsoft 365 is by using a an interactive browser authentication. To use this authentication method, call the login command with the authType option set to browser : m365 login --authType browser This option is especially useful if you have conditional access policies configured in your tenant but you can also use it instead of the default device code flow. Check login status \u00b6 To see if you're logged in to Microsoft 365 and if so, with which account, use the status command. If you're logged in to Microsoft 365 using a certificate, the status command will show the name of the Azure AD application used to log in. Log out from Microsoft 365 \u00b6 To log out from Microsoft 365, use the logout command. Executing the logout command removes all connection information such as user name, refresh or access tokens stored on your computer. Working with SharePoint Online \u00b6 CLI for Microsoft 365 automatically detects the URL of your SharePoint Online tenant when executing SharePoint commands. All you need to do is to log in to Microsoft 365 with your account. Commands, that operate on specific site collections or sites, allow you to specify the URL of the site on which you want to perform the operation and you can execute them without having to specifically connect or login to the given site. CLI for Microsoft 365 will automatically retrieve the necessary access token to execute the given command. Important Some SharePoint commands in the CLI for Microsoft 365 require access to tenant-level resources. To execute these commands, you have to have permissions to access the tenant admin site. Authorize with Microsoft 365 \u00b6 To authorize for communicating with Microsoft 365 API, the CLI for Microsoft 365 uses the OAuth 2.0 protocol. When using the default device code flow, you authenticate with Azure AD in the web browser. After authenticating, CLI for Microsoft 365 will attempt to retrieve a valid access token for the specified Microsoft 365 service. If you have insufficient permissions to access the particular service, authorization will fail with an adequate error. If you authenticate using credentials, the authentication and authorization are a part of the same request that CLI for Microsoft 365 issues towards Azure AD. If either authentication or authorization fails, you will see a corresponding error message explaining what went wrong. Re-consent the PnP Microsoft 365 Management Shell Azure AD application \u00b6 CLI for Microsoft 365 uses the PnP Microsoft 365 Management Shell Azure AD application to log in to your Microsoft 365 tenant on your behalf. As we add new commands to the CLI, it's possible, that new permissions will be added to the PnP Microsoft 365 Management Shell Azure AD application. To be able to use the newly added commands which depend on these new permissions, you will have to re-approve the PnP Microsoft 365 Management Shell Azure AD application in your Azure AD. This process is also known as re-consenting the Azure AD application . To re-consent the PnP Microsoft 365 Management Shell application in your Azure AD, in the command line execute: m365 cli reconsent CLI for Microsoft 365 will provide you with a URL that you should open in the web browser and sign in with your organizational account. After authenticating, Azure AD will prompt you to approve the new set of permissions. Once you approved the permissions, you will be redirected to an empty page. You can now use all commands in the CLI for Microsoft 365. Logging in to Microsoft 365 via a proxy \u00b6 All communication between the CLI for Microsoft 365 and Microsoft 365 APIs happens via web requests. If you're behind a proxy, you should set up an environment variable to allow CLI for Microsoft 365 to log in to Microsoft 365. More information about the necessary configuration steps is available at https://github.com/request/request#controlling-proxy-behaviour-using-environment-variables . Persisted connections \u00b6 After logging in to Microsoft 365, the CLI for Microsoft 365 will persist that connection information until you explicitly log out from Microsoft 365. This is necessary to support building scripts using the CLI for Microsoft 365, where each command is executed independently of other commands. Persisted connection contains information about the user name used to establish the connection as well as the retrieved refresh- and access tokens. To secure this information from unprivileged access, it's stored securely in the password store specific to the platform on which you're using the CLI. For more information, see the separate article dedicated to persisting connection information in the CLI for Microsoft 365.","title":"Log in to Microsoft 365"},{"location":"user-guide/connecting-office-365/#log-in-to-microsoft-365","text":"Before you can use CLI for Microsoft 365 commands to manage your tenant, you have to log in to Microsoft 365. Following section explains how you can log in and check the Microsoft 365 login status.","title":"Log in to Microsoft 365"},{"location":"user-guide/connecting-office-365/#microsoft-365-services","text":"Using the CLI for Microsoft 365 you can manage different areas of an Microsoft 365 tenant. Currently, commands for working with SharePoint Online, Azure Active Directory, Microsoft Graph and the Azure Management Service are available, but more commands for other services will be added in the future. Commands in the CLI for Microsoft 365 are organized into services. For example, all commands that manage SharePoint Online begin with spo ( spo app list , spo cdn get , etc.) and commands for working with the Azure AD begin with aad . After logging in to Microsoft 365, you can communicate with any Microsoft 365 service supported by the CLI for Microsoft 365 and it will automatically retrieve the necessary access token.","title":"Microsoft 365 services"},{"location":"user-guide/connecting-office-365/#log-in-to-microsoft-365_1","text":"CLI for Microsoft 365 offers you a number of ways to log in to Microsoft 365.","title":"Log in to Microsoft 365"},{"location":"user-guide/connecting-office-365/#log-in-using-the-default-device-code-flow","text":"The default way to log in to Microsoft 365 using the CLI for Microsoft 365 is through the device code flow. To log in to Microsoft 365, use the login command. After executing the login command, you will be prompted to navigate to https://aka.ms/devicelogin in your web browser and enter the login code presented to you by the CLI for Microsoft 365 in the command line. After entering the code, you will see the prompt that you are about to authenticate the PnP Microsoft 365 Management Shell application to access your tenant on your behalf. If you are using the CLI for Microsoft 365 for the first time, you will be also prompted to verify the permissions you are about to grant the CLI for Microsoft 365. This is referred to as consent . The device code flow is the recommended approach for command-line tools to authenticate with resources secured with Azure AD. Because the authentication process is handled in the browser by Azure AD itself, it allows you to benefit of rich security features such as multi-factor authentication or conditional access. The device code flow is interactive and requires user interaction which might be limiting if you want to use the CLI for Microsoft 365 in your continuous deployment setup which is fully automated and doesn't involve user interaction.","title":"Log in using the default device code flow"},{"location":"user-guide/connecting-office-365/#log-in-using-user-name-and-password","text":"An alternative way to log in to Microsoft 365 in the CLI for Microsoft 365 is by using a user name and password. To use this way of authenticating, set the authType option to password and specify your credentials using the userName and password options. To log in to Microsoft 365 using your user name and password, execute: m365 login --authType password --userName user@contoso.com --password pass@word1 Using credentials to log in to Microsoft 365 is convenient in automation scenarios where you cannot authenticate interactively. The downside of this way of authenticating is, that it doesn't allow you to use any of the advanced security features that Azure AD offers. If your account for example uses multi-factor authentication, logging in to Microsoft 365 using credentials will fail. Attention When logging in to Microsoft 365 using credentials, CLI for Microsoft 365 will persist not only the retrieved access and refresh token, but also the credentials you specified when logging in. This is necessary for the CLI to be able to retrieve a new refresh token, in case the previously retrieved refresh token expired or has been invalidated. Generally, you should use the default device code flow. If you need to use a non-interactive authentication flow, you can authenticate using a certificate or credentials of an account that has sufficient privileges in your tenant and doesn't have multi-factor authentication or other advanced security features enabled.","title":"Log in using user name and password"},{"location":"user-guide/connecting-office-365/#log-in-using-a-certificate","text":"Another way to log in to Microsoft 365 in the CLI for Microsoft 365 is by using a certificate. To use this authentication method, set the CLIMICROSOFT365_AADAPPID environment variable to the ID of the Azure AD application that you want to use to authenticate the CLI for Microsoft 365 and the CLIMICROSOFT365_TENANT environment variable to the ID of your Azure AD directory. When calling the login command, set the authType option to certificate and specify the path to the certificate private key using the certificateFile option. Optionally, you can specify the certificate's thumbprint using the thumbprint option. If not specified, CLI will automatically calculate it from the specified certificate. To log in to Microsoft 365 using a Personal Information Exchange (.pfx) file, execute: m365 login --authType certificate --certificateFile /Users/user/dev/localhost.pfx --password 'pass@word1' To log in to Microsoft 365 using a Privacy Enhanced Mail (PEM) certificate, execute: m365 login --authType certificate --certificateFile /Users/user/dev/localhost.pem Logging in to Microsoft 365 using a certificate is convenient for automation scenarios where you cannot authenticate interactively but also don't want to use credentials. Because there is no user context when logging in using a certificate, you will typically create a new Azure AD application, specific to your organization and grant it the required permissions. Attention You should keep in mind, that because the CLI for Microsoft 365 will be accessing these APIs with app-only context, you need to grant the correct application permissions rather than delegated permissions that would be used in other authentication methods. Logging in using a certificate gives the CLI for Microsoft 365 app-only access to Microsoft 365 services. Not all operations support app-only access so it is possible, that some CLI commands will fail when executed while logged in to Microsoft 365 using a certificate. Attention When logging in to Microsoft 365 using a certificate, CLI for Microsoft 365 will persist not only the retrieved access token but also the contents of the certificate's private key and its thumbprint. This is necessary for the CLI to be able to retrieve a new access token in case of the previously retrieved access token expired or has been invalidated. Generally, you should use the default device code flow. If you need to use a non-interactive authentication flow, to for example integrate the CLI for Microsoft 365 in your build pipeline, you can login using a certificate or user credentials. Attention PFX files exported from a Windows key store will not work as they are protected with either a password or Active Directory account. The private key must either be exported from the protected .pfx or newly created using 3rd party tools like OpenSSL (https://www.openssl.org/). Create a new self signed certificate: openssl req -x509 -sha256 -nodes -days 365 -newkey rsa:2048 -keyout privateKey.key -out certificate.cer Create a new Personal Information Exchange (.pfx) file openssl pkcs12 -export -out protected.pfx -inkey privateKey.key -in certificate.cer -password pass: \"pass@word1\" At this point the protected.pfx file can be used to log in the CLI for Microsoft 365 following the instructions above for logging in using a .pfx file. If login with the .pfx file does not work then extract the private key from a protected .pfx and unprotect it: openssl pkcs12 -in protected.pfx -out privateKeyWithPassphrase.pem -nodes At this point the privateKeyWithPassphrase.pem file can be used to log in the CLI for Microsoft 365 following the instructions above for logging in using a PEM certificate.","title":"Log in using a certificate"},{"location":"user-guide/connecting-office-365/#log-in-using-a-secret","text":"CLI for Microsoft 365 also supports login using a secret. To use this authentication method, set the CLIMICROSOFT365_AADAPPID environment variable to the ID of the Azure AD application that you want to use to authenticate the CLI for Microsoft 365 and the CLIMICROSOFT365_TENANT environment variable to the ID of your Azure AD directory. When calling the login command, set the authType option to secret and specify the client secret value. To log in to Microsoft 365 using a secret, execute: m365 login --authType secret --secret topSeCr3t@007 Logging in to Microsoft 365 using a secret is convenient for automation scenarios where you cannot authenticate interactively but also don't want to use credentials. Because there is no user context when logging in using a secret, you will typically create a new Azure AD application, specific to your organization and grant it the required permissions. Attention You should keep in mind, that because the CLI for Microsoft 365 will be accessing these APIs with app-only context, you need to grant the correct application permissions rather than delegated permissions that would be used in other authentication methods. Logging in using a secret gives the CLI for Microsoft 365 app-only access to Microsoft 365 services. Not all operations support app-only access so it is possible, that some CLI commands will fail when executed while logged in to Microsoft 365 using a secret. Attention Currently, SharePoint does not support authentication using Azure AD App ID and Secret. CLI for Microsoft 365 commands that call the SharePoint APIs will fail while logged in to Microsoft 365 using a Secret. Attention When logging in to Microsoft 365 using a secret, CLI for Microsoft 365 will persist not only the retrieved access token but also the secret. This is necessary for the CLI to be able to retrieve a new access token in case of the previously retrieved access token expired or has been invalidated.","title":"Log in using a secret"},{"location":"user-guide/connecting-office-365/#log-in-using-a-browser-authentication","text":"Yet another way to log in to Microsoft 365 in the CLI for Microsoft 365 is by using a an interactive browser authentication. To use this authentication method, call the login command with the authType option set to browser : m365 login --authType browser This option is especially useful if you have conditional access policies configured in your tenant but you can also use it instead of the default device code flow.","title":"Log in using a browser authentication"},{"location":"user-guide/connecting-office-365/#check-login-status","text":"To see if you're logged in to Microsoft 365 and if so, with which account, use the status command. If you're logged in to Microsoft 365 using a certificate, the status command will show the name of the Azure AD application used to log in.","title":"Check login status"},{"location":"user-guide/connecting-office-365/#log-out-from-microsoft-365","text":"To log out from Microsoft 365, use the logout command. Executing the logout command removes all connection information such as user name, refresh or access tokens stored on your computer.","title":"Log out from Microsoft 365"},{"location":"user-guide/connecting-office-365/#working-with-sharepoint-online","text":"CLI for Microsoft 365 automatically detects the URL of your SharePoint Online tenant when executing SharePoint commands. All you need to do is to log in to Microsoft 365 with your account. Commands, that operate on specific site collections or sites, allow you to specify the URL of the site on which you want to perform the operation and you can execute them without having to specifically connect or login to the given site. CLI for Microsoft 365 will automatically retrieve the necessary access token to execute the given command. Important Some SharePoint commands in the CLI for Microsoft 365 require access to tenant-level resources. To execute these commands, you have to have permissions to access the tenant admin site.","title":"Working with SharePoint Online"},{"location":"user-guide/connecting-office-365/#authorize-with-microsoft-365","text":"To authorize for communicating with Microsoft 365 API, the CLI for Microsoft 365 uses the OAuth 2.0 protocol. When using the default device code flow, you authenticate with Azure AD in the web browser. After authenticating, CLI for Microsoft 365 will attempt to retrieve a valid access token for the specified Microsoft 365 service. If you have insufficient permissions to access the particular service, authorization will fail with an adequate error. If you authenticate using credentials, the authentication and authorization are a part of the same request that CLI for Microsoft 365 issues towards Azure AD. If either authentication or authorization fails, you will see a corresponding error message explaining what went wrong.","title":"Authorize with Microsoft 365"},{"location":"user-guide/connecting-office-365/#re-consent-the-pnp-microsoft-365-management-shell-azure-ad-application","text":"CLI for Microsoft 365 uses the PnP Microsoft 365 Management Shell Azure AD application to log in to your Microsoft 365 tenant on your behalf. As we add new commands to the CLI, it's possible, that new permissions will be added to the PnP Microsoft 365 Management Shell Azure AD application. To be able to use the newly added commands which depend on these new permissions, you will have to re-approve the PnP Microsoft 365 Management Shell Azure AD application in your Azure AD. This process is also known as re-consenting the Azure AD application . To re-consent the PnP Microsoft 365 Management Shell application in your Azure AD, in the command line execute: m365 cli reconsent CLI for Microsoft 365 will provide you with a URL that you should open in the web browser and sign in with your organizational account. After authenticating, Azure AD will prompt you to approve the new set of permissions. Once you approved the permissions, you will be redirected to an empty page. You can now use all commands in the CLI for Microsoft 365.","title":"Re-consent the PnP Microsoft 365 Management Shell Azure AD application"},{"location":"user-guide/connecting-office-365/#logging-in-to-microsoft-365-via-a-proxy","text":"All communication between the CLI for Microsoft 365 and Microsoft 365 APIs happens via web requests. If you're behind a proxy, you should set up an environment variable to allow CLI for Microsoft 365 to log in to Microsoft 365. More information about the necessary configuration steps is available at https://github.com/request/request#controlling-proxy-behaviour-using-environment-variables .","title":"Logging in to Microsoft 365 via a proxy"},{"location":"user-guide/connecting-office-365/#persisted-connections","text":"After logging in to Microsoft 365, the CLI for Microsoft 365 will persist that connection information until you explicitly log out from Microsoft 365. This is necessary to support building scripts using the CLI for Microsoft 365, where each command is executed independently of other commands. Persisted connection contains information about the user name used to establish the connection as well as the retrieved refresh- and access tokens. To secure this information from unprivileged access, it's stored securely in the password store specific to the platform on which you're using the CLI. For more information, see the separate article dedicated to persisting connection information in the CLI for Microsoft 365.","title":"Persisted connections"},{"location":"user-guide/filter-cli-data/","text":"Filter CLI data using JMESPath queries \u00b6 CLI for Microsoft 365 supports filtering, sorting, and querying data using JMESPath queries. By specifying the --query option on each command you can create complex queries. There are two types of data returned by the CLI for Microsoft 365 when retrieving data as JSON. In most cases, it returns an array of items, but some of the older commands the response is encapsulated in a value object. For both scenario's you can use JMESPath to filter, but the queries are a bit different. Testing JMESPath queries \u00b6 You can test your queries using the JMESPath interactive homepage. You can execute a CLI for Microsoft 365 command, get the JSON response and paste it on the homepage and test your queries from there if you do not want to test them while writing scripts. It is a great way to learn what's possible! Basic array filters \u00b6 Let's start with a basic command and return some results using the following command: m365 spo site list . To simplify the testing most of the properties are removed, but the result would look similarly to: [{ \"_ObjectType_\" : \"Microsoft.Online.SharePoint.TenantAdministration.SiteProperties\" , \"AllowDownloadingNonWebViewableFiles\" : true , \"AllowEditing\" : false , \"Title\" : \"Demo 1\" , \"Status\" : \"Active\" , \"StorageMaximumLevel\" : 26214400 , \"StorageQuotaType\" : null }, { \"_ObjectType_\" : \"Microsoft.Online.SharePoint.TenantAdministration.SiteProperties\" , \"AllowDownloadingNonWebViewableFiles\" : false , \"AllowEditing\" : false , \"Title\" : \"A Demo 2\" , \"Status\" : \"Active\" , \"StorageMaximumLevel\" : 26214400 , \"StorageQuotaType\" : null }, { \"_ObjectType_\" : \"Microsoft.Online.SharePoint.TenantAdministration.SiteProperties\" , \"AllowDownloadingNonWebViewableFiles\" : true , \"AllowEditing\" : false , \"Title\" : \"Sample 1\" , \"Status\" : \"Active\" , \"StorageMaximumLevel\" : 26214400 , \"StorageQuotaType\" : null }] Using JMESPath queries you can do basic filtering as well as more complex scenario's like starts_with or ends_with . [?Title == 'Demo 1'] returns only the first item from the array as it matches on the title Demo 1 . [?contains(Title, 'Demo')] would return the first two items as it matches the title on the word Demo . [?contains(*, 'Demo 1')] would return any item in the array where the value of any property is Demo 1 , currently only the first item . [?starts_with(Title, 'Demo')] would only return the first item as it filters the title to start with Demo . [?ends_with(Title, '1')] returns the first and last item , as the title ends with a 1 . [?contains(Title, 'Demo') && AllowDownloadingNonWebViewableFiles] returns only the first item as it combines a title filter, and a check on AllowDownloadingNonWebViewableFiles two filters. Besides filtering, you can also scope what will be returned as a result: [*].Title returns only the Title for all items. [*].{Title: Title} returns all items as array with a Title property. Or you can combine both a filter query and scope the results: [?contains(Title, 'Demo') && AllowDownloadingNonWebViewableFiles].Title returns only the first item title Other array filters \u00b6 Some of the commands return complex types. Querying or filtering based on values in complex types can be done with JMESPath as well. The query, however, will look different. Executing the following command m365 flow environment list --output json will return a complex type and the result will be similar to the sample below: [ { \"name\" : \"4be50206-9576-4237-8b17-36d8aadfaa36\" , \"location\" : \"europe\" , \"type\" : \"Microsoft.ProcessSimple/environments\" , \"id\" : \"/providers/Microsoft.ProcessSimple/environments/4be50206-9576-4237-8b17-36d8aadfaa36\" , \"properties\" : { \"displayName\" : \"Contoso Dev Environment\" , \"createdTime\" : \"2021-06-18T16:36:20.5687306Z\" , \"createdBy\" : { \"id\" : \"SYSTEM\" , \"displayName\" : \"SYSTEM\" , \"type\" : \"NotSpecified\" }, \"lastModifiedTime\" : \"2021-06-18T16:40:32.7592868Z\" , \"provisioningState\" : \"Succeeded\" , \"creationType\" : \"Developer\" , \"environmentSku\" : \"Developer\" , \"environmentType\" : \"NotSpecified\" , \"states\" : { \"management\" : { \"id\" : \"Ready\" }, \"runtime\" : { \"id\" : \"Enabled\" } }, \"isDefault\" : false , \"azureRegionHint\" : \"westeurope\" , \"runtimeEndpoints\" : { \"microsoft.BusinessAppPlatform\" : \"https://europe.api.bap.microsoft.com\" , \"microsoft.CommonDataModel\" : \"https://europe.api.cds.microsoft.com\" , \"microsoft.PowerApps\" : \"https://europe.api.powerapps.com\" , \"microsoft.Flow\" : \"https://europe.api.flow.microsoft.com\" , \"microsoft.PowerAppsAdvisor\" : \"https://europe.api.advisor.powerapps.com\" , \"microsoft.ApiManagement\" : \"https://management.EUR.azure-apihub.net\" }, \"environmentFeatures\" : { \"isOpenApiEnabled\" : false } }, \"displayName\" : \"Contoso Dev Environment\" }, { \"name\" : \"Default-3ca3eaa6-140f-4175-9563-2272edf9f338\" , \"location\" : \"europe\" , \"type\" : \"Microsoft.ProcessSimple/environments\" , \"id\" : \"/providers/Microsoft.ProcessSimple/environments/Default-3ca3eaa6-140f-4175-9563-2272edf9f338\" , \"properties\" : { \"displayName\" : \"contoso (default)\" , \"createdTime\" : \"2016-10-28T10:32:54.1945519Z\" , \"createdBy\" : { \"id\" : \"88e85b64-e687-4e0b-bbf4-f42f5f8e674e\" , \"displayName\" : \"Garth Fort\" , \"type\" : \"NotSpecified\" }, \"lastModifiedTime\" : \"2020-07-28T08:58:12.5785779Z\" , \"lastModifiedBy\" : { \"id\" : \"88e85b64-e687-4e0b-bbf4-f42f5f8e674e\" , \"displayName\" : \"Garth Fort\" , \"email\" : \"garthf@contoso.nl\" , \"type\" : \"User\" , \"tenantId\" : \"3ca3eaa6-140f-4175-9563-2272edf9f338\" , \"userPrincipalName\" : \"garthf@contoso.nl\" }, \"provisioningState\" : \"Succeeded\" , \"creationType\" : \"DefaultTenant\" , \"environmentSku\" : \"Default\" , \"environmentType\" : \"NotSpecified\" , \"states\" : { \"management\" : { \"id\" : \"NotSpecified\" }, \"runtime\" : { \"id\" : \"Enabled\" } }, \"isDefault\" : true , \"azureRegionHint\" : \"westeurope\" , \"runtimeEndpoints\" : { \"microsoft.BusinessAppPlatform\" : \"https://europe.api.bap.microsoft.com\" , \"microsoft.CommonDataModel\" : \"https://europe.api.cds.microsoft.com\" , \"microsoft.PowerApps\" : \"https://europe.api.powerapps.com\" , \"microsoft.Flow\" : \"https://europe.api.flow.microsoft.com\" , \"microsoft.PowerAppsAdvisor\" : \"https://europe.api.advisor.powerapps.com\" , \"microsoft.ApiManagement\" : \"https://management.EUR.azure-apihub.net\" }, \"environmentFeatures\" : { \"isOpenApiEnabled\" : false } }, \"displayName\" : \"contoso (default)\" } ] [?name == '4be50206-9576-4237-8b17-36d8aadfaa36'] returns only the first item from the array as it matches on 4be50206-9576-4237-8b17-36d8aadfaa36 . [?properties.displayName == 'Contoso Dev Environment'] would return the first item from the array as it matches on Contoso Dev Environment . [?properties.provisioningState == 'Succeeded'] would return the both items from the array as both had provisioningState Succeeded . [?starts_with(properties.displayName, 'Contoso')] or [?starts_with(displayName, 'Contoso')] would return the first item of the array as it filters on the displayName for Contoso and each filter is case-sensitive. [?ends_with(properties.azureRegionHint, 'europe')] would return both items as it filters on europe . Important All JMESPath queries are case sensitive Ordering the dataset \u00b6 Besides filtering, there are several use cases where it makes sense to order the returned result set. Lets say you want to retrieve SharePoint Online user activity, something that can be achieved using the following command m365 spo report activityuserdetail --period D7 --output json . You then might want to filter, but perhaps you want to also sort the result set based on dates or activity. The returned result looks similar to the json sample: [ { \"Report Refresh Date\" : \"2021-06-15\" , \"User Principal Name\" : \"garthf@contoso.com\" , \"Is Deleted\" : \"False\" , \"Deleted Date\" : \"\" , \"Last Activity Date\" : \"2020-07-07\" , \"Viewed Or Edited File Count\" : \"0\" , \"Synced File Count\" : \"0\" , \"Shared Internally File Count\" : \"0\" , \"Shared Externally File Count\" : \"0\" , \"Visited Page Count\" : \"0\" , \"Assigned Products\" : \"OFFICE 365 E3\" , \"Report Period\" : \"7\" }, { \"Report Refresh Date\" : \"2021-06-15\" , \"User Principal Name\" : \"sands@contoso.com\" , \"Is Deleted\" : \"False\" , \"Deleted Date\" : \"\" , \"Last Activity Date\" : \"\" , \"Viewed Or Edited File Count\" : \"152\" , \"Synced File Count\" : \"0\" , \"Shared Internally File Count\" : \"0\" , \"Shared Externally File Count\" : \"0\" , \"Visited Page Count\" : \"0\" , \"Assigned Products\" : \"OFFICE 365 E3\" , \"Report Period\" : \"7\" }, { \"Report Refresh Date\" : \"2021-06-15\" , \"User Principal Name\" : \"janets@contoso.com\" , \"Is Deleted\" : \"True\" , \"Deleted Date\" : \"2021-05-15\" , \"Last Activity Date\" : \"\" , \"Viewed Or Edited File Count\" : \"0\" , \"Synced File Count\" : \"0\" , \"Shared Internally File Count\" : \"0\" , \"Shared Externally File Count\" : \"0\" , \"Visited Page Count\" : \"0\" , \"Assigned Products\" : \"OFFICE 365 E3\" , \"Report Period\" : \"7\" } ] sort_by(@, &\"Last Activity Date\") would return the result set with the first Last Activity Date on top. That means empty dates first. reverse(sort_by(@, &\"Last Activity Date\")) returns the result in reversed order, it thus shows the most recent last activity date on top. reverse(sort_by(@, &\"Viewed Or Edited File Count\")) return the user with the most edited items on top. reverse(sort_by(@, &\"Viewed Or Edited File Count\"))[*].\"User Principal Name would sort and only return the User Principal Name property. The result is sorted to show the username ordered by the most edited files on top. reverse(sort_by(@, &\"Viewed Or Edited File Count\")) | [0].\"User Principal Name\" would sort and return the User Principal Name for the user with the most edited files. It thus only returns one name. reverse(sort_by(@, &\"Viewed Or Edited File Count\")) | [?\"Is Deleted\" == 'False'].\"User Principal Name\" sorts by then Viewed Or Edited File Count , then filters out deleted users and finally returns the User Principal Name Combining sorting and filtering makes for a powerful cross-platform way of presenting your data. You are not dependent on PowerShell or Bash to get the result you are looking for. For complete list of filter options check out the JMESPath Examples .","title":"Filter CLI data"},{"location":"user-guide/filter-cli-data/#filter-cli-data-using-jmespath-queries","text":"CLI for Microsoft 365 supports filtering, sorting, and querying data using JMESPath queries. By specifying the --query option on each command you can create complex queries. There are two types of data returned by the CLI for Microsoft 365 when retrieving data as JSON. In most cases, it returns an array of items, but some of the older commands the response is encapsulated in a value object. For both scenario's you can use JMESPath to filter, but the queries are a bit different.","title":"Filter CLI data using JMESPath queries"},{"location":"user-guide/filter-cli-data/#testing-jmespath-queries","text":"You can test your queries using the JMESPath interactive homepage. You can execute a CLI for Microsoft 365 command, get the JSON response and paste it on the homepage and test your queries from there if you do not want to test them while writing scripts. It is a great way to learn what's possible!","title":"Testing JMESPath queries"},{"location":"user-guide/filter-cli-data/#basic-array-filters","text":"Let's start with a basic command and return some results using the following command: m365 spo site list . To simplify the testing most of the properties are removed, but the result would look similarly to: [{ \"_ObjectType_\" : \"Microsoft.Online.SharePoint.TenantAdministration.SiteProperties\" , \"AllowDownloadingNonWebViewableFiles\" : true , \"AllowEditing\" : false , \"Title\" : \"Demo 1\" , \"Status\" : \"Active\" , \"StorageMaximumLevel\" : 26214400 , \"StorageQuotaType\" : null }, { \"_ObjectType_\" : \"Microsoft.Online.SharePoint.TenantAdministration.SiteProperties\" , \"AllowDownloadingNonWebViewableFiles\" : false , \"AllowEditing\" : false , \"Title\" : \"A Demo 2\" , \"Status\" : \"Active\" , \"StorageMaximumLevel\" : 26214400 , \"StorageQuotaType\" : null }, { \"_ObjectType_\" : \"Microsoft.Online.SharePoint.TenantAdministration.SiteProperties\" , \"AllowDownloadingNonWebViewableFiles\" : true , \"AllowEditing\" : false , \"Title\" : \"Sample 1\" , \"Status\" : \"Active\" , \"StorageMaximumLevel\" : 26214400 , \"StorageQuotaType\" : null }] Using JMESPath queries you can do basic filtering as well as more complex scenario's like starts_with or ends_with . [?Title == 'Demo 1'] returns only the first item from the array as it matches on the title Demo 1 . [?contains(Title, 'Demo')] would return the first two items as it matches the title on the word Demo . [?contains(*, 'Demo 1')] would return any item in the array where the value of any property is Demo 1 , currently only the first item . [?starts_with(Title, 'Demo')] would only return the first item as it filters the title to start with Demo . [?ends_with(Title, '1')] returns the first and last item , as the title ends with a 1 . [?contains(Title, 'Demo') && AllowDownloadingNonWebViewableFiles] returns only the first item as it combines a title filter, and a check on AllowDownloadingNonWebViewableFiles two filters. Besides filtering, you can also scope what will be returned as a result: [*].Title returns only the Title for all items. [*].{Title: Title} returns all items as array with a Title property. Or you can combine both a filter query and scope the results: [?contains(Title, 'Demo') && AllowDownloadingNonWebViewableFiles].Title returns only the first item title","title":"Basic array filters"},{"location":"user-guide/filter-cli-data/#other-array-filters","text":"Some of the commands return complex types. Querying or filtering based on values in complex types can be done with JMESPath as well. The query, however, will look different. Executing the following command m365 flow environment list --output json will return a complex type and the result will be similar to the sample below: [ { \"name\" : \"4be50206-9576-4237-8b17-36d8aadfaa36\" , \"location\" : \"europe\" , \"type\" : \"Microsoft.ProcessSimple/environments\" , \"id\" : \"/providers/Microsoft.ProcessSimple/environments/4be50206-9576-4237-8b17-36d8aadfaa36\" , \"properties\" : { \"displayName\" : \"Contoso Dev Environment\" , \"createdTime\" : \"2021-06-18T16:36:20.5687306Z\" , \"createdBy\" : { \"id\" : \"SYSTEM\" , \"displayName\" : \"SYSTEM\" , \"type\" : \"NotSpecified\" }, \"lastModifiedTime\" : \"2021-06-18T16:40:32.7592868Z\" , \"provisioningState\" : \"Succeeded\" , \"creationType\" : \"Developer\" , \"environmentSku\" : \"Developer\" , \"environmentType\" : \"NotSpecified\" , \"states\" : { \"management\" : { \"id\" : \"Ready\" }, \"runtime\" : { \"id\" : \"Enabled\" } }, \"isDefault\" : false , \"azureRegionHint\" : \"westeurope\" , \"runtimeEndpoints\" : { \"microsoft.BusinessAppPlatform\" : \"https://europe.api.bap.microsoft.com\" , \"microsoft.CommonDataModel\" : \"https://europe.api.cds.microsoft.com\" , \"microsoft.PowerApps\" : \"https://europe.api.powerapps.com\" , \"microsoft.Flow\" : \"https://europe.api.flow.microsoft.com\" , \"microsoft.PowerAppsAdvisor\" : \"https://europe.api.advisor.powerapps.com\" , \"microsoft.ApiManagement\" : \"https://management.EUR.azure-apihub.net\" }, \"environmentFeatures\" : { \"isOpenApiEnabled\" : false } }, \"displayName\" : \"Contoso Dev Environment\" }, { \"name\" : \"Default-3ca3eaa6-140f-4175-9563-2272edf9f338\" , \"location\" : \"europe\" , \"type\" : \"Microsoft.ProcessSimple/environments\" , \"id\" : \"/providers/Microsoft.ProcessSimple/environments/Default-3ca3eaa6-140f-4175-9563-2272edf9f338\" , \"properties\" : { \"displayName\" : \"contoso (default)\" , \"createdTime\" : \"2016-10-28T10:32:54.1945519Z\" , \"createdBy\" : { \"id\" : \"88e85b64-e687-4e0b-bbf4-f42f5f8e674e\" , \"displayName\" : \"Garth Fort\" , \"type\" : \"NotSpecified\" }, \"lastModifiedTime\" : \"2020-07-28T08:58:12.5785779Z\" , \"lastModifiedBy\" : { \"id\" : \"88e85b64-e687-4e0b-bbf4-f42f5f8e674e\" , \"displayName\" : \"Garth Fort\" , \"email\" : \"garthf@contoso.nl\" , \"type\" : \"User\" , \"tenantId\" : \"3ca3eaa6-140f-4175-9563-2272edf9f338\" , \"userPrincipalName\" : \"garthf@contoso.nl\" }, \"provisioningState\" : \"Succeeded\" , \"creationType\" : \"DefaultTenant\" , \"environmentSku\" : \"Default\" , \"environmentType\" : \"NotSpecified\" , \"states\" : { \"management\" : { \"id\" : \"NotSpecified\" }, \"runtime\" : { \"id\" : \"Enabled\" } }, \"isDefault\" : true , \"azureRegionHint\" : \"westeurope\" , \"runtimeEndpoints\" : { \"microsoft.BusinessAppPlatform\" : \"https://europe.api.bap.microsoft.com\" , \"microsoft.CommonDataModel\" : \"https://europe.api.cds.microsoft.com\" , \"microsoft.PowerApps\" : \"https://europe.api.powerapps.com\" , \"microsoft.Flow\" : \"https://europe.api.flow.microsoft.com\" , \"microsoft.PowerAppsAdvisor\" : \"https://europe.api.advisor.powerapps.com\" , \"microsoft.ApiManagement\" : \"https://management.EUR.azure-apihub.net\" }, \"environmentFeatures\" : { \"isOpenApiEnabled\" : false } }, \"displayName\" : \"contoso (default)\" } ] [?name == '4be50206-9576-4237-8b17-36d8aadfaa36'] returns only the first item from the array as it matches on 4be50206-9576-4237-8b17-36d8aadfaa36 . [?properties.displayName == 'Contoso Dev Environment'] would return the first item from the array as it matches on Contoso Dev Environment . [?properties.provisioningState == 'Succeeded'] would return the both items from the array as both had provisioningState Succeeded . [?starts_with(properties.displayName, 'Contoso')] or [?starts_with(displayName, 'Contoso')] would return the first item of the array as it filters on the displayName for Contoso and each filter is case-sensitive. [?ends_with(properties.azureRegionHint, 'europe')] would return both items as it filters on europe . Important All JMESPath queries are case sensitive","title":"Other array filters"},{"location":"user-guide/filter-cli-data/#ordering-the-dataset","text":"Besides filtering, there are several use cases where it makes sense to order the returned result set. Lets say you want to retrieve SharePoint Online user activity, something that can be achieved using the following command m365 spo report activityuserdetail --period D7 --output json . You then might want to filter, but perhaps you want to also sort the result set based on dates or activity. The returned result looks similar to the json sample: [ { \"Report Refresh Date\" : \"2021-06-15\" , \"User Principal Name\" : \"garthf@contoso.com\" , \"Is Deleted\" : \"False\" , \"Deleted Date\" : \"\" , \"Last Activity Date\" : \"2020-07-07\" , \"Viewed Or Edited File Count\" : \"0\" , \"Synced File Count\" : \"0\" , \"Shared Internally File Count\" : \"0\" , \"Shared Externally File Count\" : \"0\" , \"Visited Page Count\" : \"0\" , \"Assigned Products\" : \"OFFICE 365 E3\" , \"Report Period\" : \"7\" }, { \"Report Refresh Date\" : \"2021-06-15\" , \"User Principal Name\" : \"sands@contoso.com\" , \"Is Deleted\" : \"False\" , \"Deleted Date\" : \"\" , \"Last Activity Date\" : \"\" , \"Viewed Or Edited File Count\" : \"152\" , \"Synced File Count\" : \"0\" , \"Shared Internally File Count\" : \"0\" , \"Shared Externally File Count\" : \"0\" , \"Visited Page Count\" : \"0\" , \"Assigned Products\" : \"OFFICE 365 E3\" , \"Report Period\" : \"7\" }, { \"Report Refresh Date\" : \"2021-06-15\" , \"User Principal Name\" : \"janets@contoso.com\" , \"Is Deleted\" : \"True\" , \"Deleted Date\" : \"2021-05-15\" , \"Last Activity Date\" : \"\" , \"Viewed Or Edited File Count\" : \"0\" , \"Synced File Count\" : \"0\" , \"Shared Internally File Count\" : \"0\" , \"Shared Externally File Count\" : \"0\" , \"Visited Page Count\" : \"0\" , \"Assigned Products\" : \"OFFICE 365 E3\" , \"Report Period\" : \"7\" } ] sort_by(@, &\"Last Activity Date\") would return the result set with the first Last Activity Date on top. That means empty dates first. reverse(sort_by(@, &\"Last Activity Date\")) returns the result in reversed order, it thus shows the most recent last activity date on top. reverse(sort_by(@, &\"Viewed Or Edited File Count\")) return the user with the most edited items on top. reverse(sort_by(@, &\"Viewed Or Edited File Count\"))[*].\"User Principal Name would sort and only return the User Principal Name property. The result is sorted to show the username ordered by the most edited files on top. reverse(sort_by(@, &\"Viewed Or Edited File Count\")) | [0].\"User Principal Name\" would sort and return the User Principal Name for the user with the most edited files. It thus only returns one name. reverse(sort_by(@, &\"Viewed Or Edited File Count\")) | [?\"Is Deleted\" == 'False'].\"User Principal Name\" sorts by then Viewed Or Edited File Count , then filters out deleted users and finally returns the User Principal Name Combining sorting and filtering makes for a powerful cross-platform way of presenting your data. You are not dependent on PowerShell or Bash to get the result you are looking for. For complete list of filter options check out the JMESPath Examples .","title":"Ordering the dataset"},{"location":"user-guide/github-actions/","text":"Automate your CI/CD workflow using CLI for Microsoft 365 GitHub Actions \u00b6 GitHub Actions help you automate your software development workflows in the same place you store code and collaborate on pull requests and issues. You can write individual tasks, called actions, and combine them to create a custom workflow. Actions \u00b6 We have built and published actions to the GitHub Marketplace that will enable you to easily install and execute CLI for Microsoft 365 commands from within your own custom workflows. CLI for Microsoft 365 Login \u00b6 This action performs two roles, firstly it installs the CLI for Microsoft 365 into your build host agent and secondly, it creates a connection to your Microsoft 365 tenant which can then be used by other actions. Important This action is required to be executed in a step before any other CLI for Microsoft 365 actions CLI for Microsoft 365 Deploy App \u00b6 This action simplifies the installation and deployment of a SharePoint Framework app to either a tenant level or site collection level app catalog. Microsoft 365 Run Script \u00b6 This action provides the ability to execute an inline script or script file using either bash or PowerShell as the executing shell. Tutorial \u00b6 Creating a basic workflow which authenticates with an Microsoft 365 tenant \u00b6 We are going to assume that you have a GitHub repository already created, which you are also the owner of. Create secrets \u00b6 When connecting to any system or service, we need to make sure that the account details used to connect are kept in a safe and secure way. GitHub provides a way of storing these credentials in encrypted form in your repository, which can then be reused in your custom workflows. First you will need to need to navigate, in your browser, to your repository on GitHub.com and go to the Settings tab, from here choose the Secrets item on the left hand menu. Using the Add new secret link, enter the ADMIN_USERNAME into the Name field and the username of the account that you are to use to connect to your Microsoft 365 tenant with, e.g. user@tenant.onmicrosoft.com . Note: This account should not be protected with multi factor authentication Repeat the above step to also store the account password which should be named ADMIN_PASSWORD . Setup workflow \u00b6 Now that we have secured the account credentials, we can start to create the workflow. Select Actions tab and you will be presented with the Get started with GitHub Actions page. This will display a selection of templates to start your workflow from, however, for the purpose of this tutorial we will create a new workflow from scratch. To do that, click the Setup a workflow yourself button which is placed on the far right of the page. Update the build definition file \u00b6 You will be presented with a screen displaying a file editor which has the below yaml . The YAML file represents a custom workflow and is sometimes referred to as Build Definition as Code . name : CI on : [ push ] jobs : build : runs-on : ubuntu-latest steps : - uses : actions/checkout@v1 - name : Run a one-line script run : echo Hello, world! - name : Run a multi-line script run : | echo Add other actions to build, echo test, and deploy your project. The above configuration defines a simple workflow named CI that is triggered on the push of new code to the repository, it contains a single build that is executed on an ubuntu hosted agent and has multiple steps that, execute a single line script and multi line script, both printing text to the logs. We will update the initial configuration as shown below, replacing the existing steps with the CLI for Microsoft 365 Login action instead. name : CI on : [ push ] jobs : build : runs-on : ubuntu-latest steps : - name : Login to tenant uses : pnp/action-cli-login@v1.0.0 with : ADMIN_USERNAME : ${{ secrets.ADMIN_USERNAME }} ADMIN_PASSWORD : ${{ secrets.ADMIN_PASSWORD }} The uses property tells the build agent to use the CLI for Microsoft 365 GitHub Action for the step, this will automatically become available when the workflow is triggered, no installation is required. The action accepts an admin username and password, which are used to authenticate with your Microsoft 365 tenant, these credentials are provided by an environment variable called secrets which contains properties exposing the secured credentials that we saved earlier. Lastly, we need to commit the main.yaml file to the repository, click the Start Commit button and click Commit new file . You may want enter a custom commit message at this point, however the default will be fine for this tutorial. Confirm the build has completed successfully \u00b6 As we setup the workflow to be triggered on the push of new code to the repository, the CI workflow is automatically run when we initially created the workflow in the repository. Select the Actions tab, this time you will be presented with a table that displays the CI run either in progress or completed, click on the run called CI in the table to view the workflow output logs. You will see that all steps have a green tick, expanding the Login tenant step will display further detail generated from the CLI for Microsoft 365 Login action, with the last log confirming that the login was successful. Congratulations! You have just setup your first custom workflow in a GitHub repository and successfully logged into Microsoft 365 using the Microsoft 365 Login action. How-To Guides \u00b6 These guides presuppose some familiarity with using GitHub Actions and CLI for Microsoft 365. Deploy an app using the CLI for Microsoft 365 Deploy App action \u00b6 Create a .yaml file within the .github/workflow folder with the below build definition to deploy an app to a tenant level app catalog. name : SPFx CI/CD with CLI for Microsoft 365 on : [ push ] jobs : build : ## ## Build code omitted ## deploy : needs : build runs-on : ubuntu-latest strategy : matrix : node-version : [ 10.x ] steps : ## ## Code to get the package omitted ## - name : Login to tenant uses : pnp/action-cli-login@v1.0.0 with : ADMIN_USERNAME : ${{ secrets.ADMIN_USERNAME }} ADMIN_PASSWORD : ${{ secrets.ADMIN_PASSWORD }} - name : Deploy app to tenant app catalog id : o365clideploy uses : pnp/action-cli-deploy@v1.0.0 with : APP_FILE_PATH : sharepoint/solution/spfx-m365-cli-action.sppkg SKIP_FEATURE_DEPLOYMENT : true OVERWRITE : true - name : Get the id of the app deployed run : echo \"The id of the app deployed is ${{ steps.o365clideploy.outputs.APP_ID }}\" Alternatively, you can deploy the app to a site collection based app catalog by using the below step in replacement of the Deploy app to tenant app catalog step. - name : Deploy app to a site collection app catalog id : o365clideploy uses : pnp/action-cli-deploy@v1.0.0 with : APP_FILE_PATH : sharepoint/solution/spfx-m365-cli-action.sppkg SCOPE : sitecollection SITE_COLLECTION_URL : https://contoso.sharepoint.com/sites/teamsite Execute an inline script using the CLI for Microsoft 365 Run Script action \u00b6 Add this step to a .yaml build file contained within the .github/workflows folder to send an email from SharePoint to a user by executing the spo mail send command as an inline script. - name : Send email uses : pnp/action-cli-runscript@v1.0.0 with : O365_CLI_SCRIPT : m365 spo mail send --webUrl https://contoso.sharepoint.com/sites/teamsite --to 'user@contoso.onmicrosoft.com' --subject 'Deployment done' --body '<h2>CLI for Microsoft 365</h2> <p>The deployment is complete.</p> <br/> Email sent via CLI for Microsoft 365 GitHub Action.' Execute a script file using the CLI for Microsoft 365 Run Script action \u00b6 Add the respective script file to your repository and this step to a .yaml build file contained within the .github/workflows folder to create lists by executing the commands contained within the script file. - name : Create lists uses : pnp/action-cli-runscript@v1.0.0 with : O365_CLI_SCRIPT_PATH : ./script/lists.ps1 Reference \u00b6 CLI for Microsoft 365 Login \u00b6 View on GitHub Marketplace Inputs \u00b6 Name Description ADMIN_USERNAME The username of the account used to login Required ADMIN_PASSWORD The password of the account used to login Required Microsoft 365 Deploy App \u00b6 View on GitHub Marketplace Inputs \u00b6 Name Description APP_FILE_PATH Relative path of the app in your repo Required SCOPE Scope of the app catalog: tenant,sitecollection . Default is tenant Optional SITE_COLLECTION_URL The URL of the site collection where the solution package will be added Required if scope is set to sitecollection SKIP_FEATURE_DEPLOYMENT true,false If the app supports tenant-wide deployment, deploy it to the whole tenant. Default is false Optional OVERWRITE true,false Set to overwrite the existing package file. Default is false Optional Output \u00b6 The APP_ID of the app that has been deployed. Microsoft 365 Run Script \u00b6 View on GitHub Marketplace Inputs \u00b6 Name Description O365_CLI_SCRIPT_PATH Relative path to the script Required O365_CLI_SCRIPT The script to run Required IS_POWERSHELL Used only with O365_CLI_SCRIPT . If true , O365_CLI_SCRIPT will be passed as a PowerShell script, otherwise the assumption is bash script. Default is false Optional Attention One of O365_CLI_SCRIPT_PATH / O365_CLI_SCRIPT is mandatory, in case both are defined O365_CLI_SCRIPT_PATH gets preference. Contributions and Issues \u00b6 Due to the requirement that a GitHub action must be located within its own repository, these actions are not managed within the main CLI for Microsoft 365 repository. If you have any ideas or issues regarding any of the actions, please raise them within the issue list of their respective repositories. CLI for Microsoft 365 Login Issues CLI for Microsoft 365 Deploy Issues CLI for Microsoft 365 Run Script Issues","title":"GitHub Actions"},{"location":"user-guide/github-actions/#automate-your-cicd-workflow-using-cli-for-microsoft-365-github-actions","text":"GitHub Actions help you automate your software development workflows in the same place you store code and collaborate on pull requests and issues. You can write individual tasks, called actions, and combine them to create a custom workflow.","title":"Automate your CI/CD workflow using CLI for Microsoft 365 GitHub Actions"},{"location":"user-guide/github-actions/#actions","text":"We have built and published actions to the GitHub Marketplace that will enable you to easily install and execute CLI for Microsoft 365 commands from within your own custom workflows.","title":"Actions"},{"location":"user-guide/github-actions/#cli-for-microsoft-365-login","text":"This action performs two roles, firstly it installs the CLI for Microsoft 365 into your build host agent and secondly, it creates a connection to your Microsoft 365 tenant which can then be used by other actions. Important This action is required to be executed in a step before any other CLI for Microsoft 365 actions","title":"CLI for Microsoft 365 Login"},{"location":"user-guide/github-actions/#cli-for-microsoft-365-deploy-app","text":"This action simplifies the installation and deployment of a SharePoint Framework app to either a tenant level or site collection level app catalog.","title":"CLI for Microsoft 365 Deploy App"},{"location":"user-guide/github-actions/#microsoft-365-run-script","text":"This action provides the ability to execute an inline script or script file using either bash or PowerShell as the executing shell.","title":"Microsoft 365 Run Script"},{"location":"user-guide/github-actions/#tutorial","text":"","title":"Tutorial"},{"location":"user-guide/github-actions/#creating-a-basic-workflow-which-authenticates-with-an-microsoft-365-tenant","text":"We are going to assume that you have a GitHub repository already created, which you are also the owner of.","title":"Creating a basic workflow which authenticates with an Microsoft 365 tenant"},{"location":"user-guide/github-actions/#create-secrets","text":"When connecting to any system or service, we need to make sure that the account details used to connect are kept in a safe and secure way. GitHub provides a way of storing these credentials in encrypted form in your repository, which can then be reused in your custom workflows. First you will need to need to navigate, in your browser, to your repository on GitHub.com and go to the Settings tab, from here choose the Secrets item on the left hand menu. Using the Add new secret link, enter the ADMIN_USERNAME into the Name field and the username of the account that you are to use to connect to your Microsoft 365 tenant with, e.g. user@tenant.onmicrosoft.com . Note: This account should not be protected with multi factor authentication Repeat the above step to also store the account password which should be named ADMIN_PASSWORD .","title":"Create secrets"},{"location":"user-guide/github-actions/#setup-workflow","text":"Now that we have secured the account credentials, we can start to create the workflow. Select Actions tab and you will be presented with the Get started with GitHub Actions page. This will display a selection of templates to start your workflow from, however, for the purpose of this tutorial we will create a new workflow from scratch. To do that, click the Setup a workflow yourself button which is placed on the far right of the page.","title":"Setup workflow"},{"location":"user-guide/github-actions/#update-the-build-definition-file","text":"You will be presented with a screen displaying a file editor which has the below yaml . The YAML file represents a custom workflow and is sometimes referred to as Build Definition as Code . name : CI on : [ push ] jobs : build : runs-on : ubuntu-latest steps : - uses : actions/checkout@v1 - name : Run a one-line script run : echo Hello, world! - name : Run a multi-line script run : | echo Add other actions to build, echo test, and deploy your project. The above configuration defines a simple workflow named CI that is triggered on the push of new code to the repository, it contains a single build that is executed on an ubuntu hosted agent and has multiple steps that, execute a single line script and multi line script, both printing text to the logs. We will update the initial configuration as shown below, replacing the existing steps with the CLI for Microsoft 365 Login action instead. name : CI on : [ push ] jobs : build : runs-on : ubuntu-latest steps : - name : Login to tenant uses : pnp/action-cli-login@v1.0.0 with : ADMIN_USERNAME : ${{ secrets.ADMIN_USERNAME }} ADMIN_PASSWORD : ${{ secrets.ADMIN_PASSWORD }} The uses property tells the build agent to use the CLI for Microsoft 365 GitHub Action for the step, this will automatically become available when the workflow is triggered, no installation is required. The action accepts an admin username and password, which are used to authenticate with your Microsoft 365 tenant, these credentials are provided by an environment variable called secrets which contains properties exposing the secured credentials that we saved earlier. Lastly, we need to commit the main.yaml file to the repository, click the Start Commit button and click Commit new file . You may want enter a custom commit message at this point, however the default will be fine for this tutorial.","title":"Update the build definition file"},{"location":"user-guide/github-actions/#confirm-the-build-has-completed-successfully","text":"As we setup the workflow to be triggered on the push of new code to the repository, the CI workflow is automatically run when we initially created the workflow in the repository. Select the Actions tab, this time you will be presented with a table that displays the CI run either in progress or completed, click on the run called CI in the table to view the workflow output logs. You will see that all steps have a green tick, expanding the Login tenant step will display further detail generated from the CLI for Microsoft 365 Login action, with the last log confirming that the login was successful. Congratulations! You have just setup your first custom workflow in a GitHub repository and successfully logged into Microsoft 365 using the Microsoft 365 Login action.","title":"Confirm the build has completed successfully"},{"location":"user-guide/github-actions/#how-to-guides","text":"These guides presuppose some familiarity with using GitHub Actions and CLI for Microsoft 365.","title":"How-To Guides"},{"location":"user-guide/github-actions/#deploy-an-app-using-the-cli-for-microsoft-365-deploy-app-action","text":"Create a .yaml file within the .github/workflow folder with the below build definition to deploy an app to a tenant level app catalog. name : SPFx CI/CD with CLI for Microsoft 365 on : [ push ] jobs : build : ## ## Build code omitted ## deploy : needs : build runs-on : ubuntu-latest strategy : matrix : node-version : [ 10.x ] steps : ## ## Code to get the package omitted ## - name : Login to tenant uses : pnp/action-cli-login@v1.0.0 with : ADMIN_USERNAME : ${{ secrets.ADMIN_USERNAME }} ADMIN_PASSWORD : ${{ secrets.ADMIN_PASSWORD }} - name : Deploy app to tenant app catalog id : o365clideploy uses : pnp/action-cli-deploy@v1.0.0 with : APP_FILE_PATH : sharepoint/solution/spfx-m365-cli-action.sppkg SKIP_FEATURE_DEPLOYMENT : true OVERWRITE : true - name : Get the id of the app deployed run : echo \"The id of the app deployed is ${{ steps.o365clideploy.outputs.APP_ID }}\" Alternatively, you can deploy the app to a site collection based app catalog by using the below step in replacement of the Deploy app to tenant app catalog step. - name : Deploy app to a site collection app catalog id : o365clideploy uses : pnp/action-cli-deploy@v1.0.0 with : APP_FILE_PATH : sharepoint/solution/spfx-m365-cli-action.sppkg SCOPE : sitecollection SITE_COLLECTION_URL : https://contoso.sharepoint.com/sites/teamsite","title":"Deploy an app using the CLI for Microsoft 365 Deploy App action"},{"location":"user-guide/github-actions/#execute-an-inline-script-using-the-cli-for-microsoft-365-run-script-action","text":"Add this step to a .yaml build file contained within the .github/workflows folder to send an email from SharePoint to a user by executing the spo mail send command as an inline script. - name : Send email uses : pnp/action-cli-runscript@v1.0.0 with : O365_CLI_SCRIPT : m365 spo mail send --webUrl https://contoso.sharepoint.com/sites/teamsite --to 'user@contoso.onmicrosoft.com' --subject 'Deployment done' --body '<h2>CLI for Microsoft 365</h2> <p>The deployment is complete.</p> <br/> Email sent via CLI for Microsoft 365 GitHub Action.'","title":"Execute an inline script using the CLI for Microsoft 365 Run Script action"},{"location":"user-guide/github-actions/#execute-a-script-file-using-the-cli-for-microsoft-365-run-script-action","text":"Add the respective script file to your repository and this step to a .yaml build file contained within the .github/workflows folder to create lists by executing the commands contained within the script file. - name : Create lists uses : pnp/action-cli-runscript@v1.0.0 with : O365_CLI_SCRIPT_PATH : ./script/lists.ps1","title":"Execute a script file using the CLI for Microsoft 365 Run Script action"},{"location":"user-guide/github-actions/#reference","text":"","title":"Reference"},{"location":"user-guide/github-actions/#cli-for-microsoft-365-login_1","text":"View on GitHub Marketplace","title":"CLI for Microsoft 365 Login"},{"location":"user-guide/github-actions/#inputs","text":"Name Description ADMIN_USERNAME The username of the account used to login Required ADMIN_PASSWORD The password of the account used to login Required","title":"Inputs"},{"location":"user-guide/github-actions/#microsoft-365-deploy-app","text":"View on GitHub Marketplace","title":"Microsoft 365 Deploy App"},{"location":"user-guide/github-actions/#inputs_1","text":"Name Description APP_FILE_PATH Relative path of the app in your repo Required SCOPE Scope of the app catalog: tenant,sitecollection . Default is tenant Optional SITE_COLLECTION_URL The URL of the site collection where the solution package will be added Required if scope is set to sitecollection SKIP_FEATURE_DEPLOYMENT true,false If the app supports tenant-wide deployment, deploy it to the whole tenant. Default is false Optional OVERWRITE true,false Set to overwrite the existing package file. Default is false Optional","title":"Inputs"},{"location":"user-guide/github-actions/#output","text":"The APP_ID of the app that has been deployed.","title":"Output"},{"location":"user-guide/github-actions/#microsoft-365-run-script_1","text":"View on GitHub Marketplace","title":"Microsoft 365 Run Script"},{"location":"user-guide/github-actions/#inputs_2","text":"Name Description O365_CLI_SCRIPT_PATH Relative path to the script Required O365_CLI_SCRIPT The script to run Required IS_POWERSHELL Used only with O365_CLI_SCRIPT . If true , O365_CLI_SCRIPT will be passed as a PowerShell script, otherwise the assumption is bash script. Default is false Optional Attention One of O365_CLI_SCRIPT_PATH / O365_CLI_SCRIPT is mandatory, in case both are defined O365_CLI_SCRIPT_PATH gets preference.","title":"Inputs"},{"location":"user-guide/github-actions/#contributions-and-issues","text":"Due to the requirement that a GitHub action must be located within its own repository, these actions are not managed within the main CLI for Microsoft 365 repository. If you have any ideas or issues regarding any of the actions, please raise them within the issue list of their respective repositories. CLI for Microsoft 365 Login Issues CLI for Microsoft 365 Deploy Issues CLI for Microsoft 365 Run Script Issues","title":"Contributions and Issues"},{"location":"user-guide/installing-cli/","text":"Install the CLI for Microsoft 365 \u00b6 Thank you for your interest in the CLI for Microsoft 365. Following information will help you install the CLI for Microsoft 365 and keep it up to date. Prerequisites \u00b6 To use the CLI for Microsoft 365 you need Node.js. The CLI has been tested with Node.js versions 6 and higher, but we recommend you to use the Node.js LTS version available at the moment. For more information on installing Node.js for your platform visit https://nodejs.org . CLI for Microsoft 365 works on Windows, macOS and Linux and you can use it with any shell on these platforms. Install the CLI for Microsoft 365 \u00b6 CLI for Microsoft 365 is distributed as a Node.js package and published on npmjs.com . You can install it using your Node package manager, such as npm or Yarn. To install the CLI for Microsoft 365, in the command line execute: npm install -g @pnp/cli-microsoft365 If you're using Yarn, you can install the CLI for Microsoft 365 by executing: yarn global add @pnp/cli-microsoft365 Tip We are regularly publishing beta versions of the CLI for Microsoft 365 with latest features and fixes. If you want to use the beta version of the CLI, add @next to the package name when installing the CLI, for example npm install -g @pnp/cli-microsoft365@next . Please note, that you can have installed either the beta version or the public version of the CLI but not both. Check the installed version \u00b6 To check which version of the CLI for Microsoft 365 you have installed on your computer, execute in the command line: m365 version Alternatively, you can check the version of the Node.js package you have installed, by executing: npm ls -g --depth = 0 The version of the CLI is the same as the version of the Node.js package distributing the CLI, so by using either of the commands you can control which version of the CLI you have installed. Check if a new version is available \u00b6 We are continuously evolving the CLI for Microsoft 365 and adding more features to it. You can download new versions of the CLI from npmjs.com. To check, if a new version of the CLI for Microsoft 365 is available, execute in the command line: npm outdated -g For each package that you have installed globally, npm will show the version you have currently installed as well as the latest version available on npm. If you want to check if a new beta version of the CLI for Microsoft 365 is available, execute in the command line npm view @pnp/cli-microsoft365 . Next, compare the version listed as the @next tag with the version you have installed. Beta versions of the CLI for Microsoft 365 are tagged with source code commits so that it's easy for the team to debug it in case of any issues. $ npm view @pnp/cli-microsoft365 { name: '@pnp/cli-microsoft365' , description: 'CLI for managing Microsoft 365 configuration' , 'dist-tags' : { next: '0.5.0-beta.fe510b6' , latest: '0.4.0' } , versions: [ '0.1.0-beta.b35346a' , '0.1.0-beta.b7db425' , '0.1.0-beta.b85510d' , '0.1.1-beta.25b1725' , ... Update the CLI \u00b6 To update the CLI, execute in the command line: npm install -g @pnp/cli-microsoft365@latest This will download and install the latest public version of the CLI for Microsoft 365. If you want to update to the latest beta version of the CLI, replace @latest with @next . Important New version of the CLI for Microsoft 365 often contains new commands. Don't forget to update command completion for your terminal to get suggestions for the latest commands added in the CLI. For more information see the article on command completion . Uninstall the CLI \u00b6 Attention Before uninstalling the CLI, log out from Microsoft 365 using the logout command. CLI for Microsoft 365 persists connection information on your computer and if you don't log out before uninstalling the CLI, this information will be left on your computer and you will have to remove it manually. For more information see the article on persisting connection information To uninstall the CLI for Microsoft 365, execute in the command line: npm uninstall -g @pnp/cli-microsoft365 This command will remove all CLI for Microsoft 365 files from your computer. If you have configured command completion for the CLI for Microsoft 365 in your terminal, remove the completion following instructions specific to your terminal, to avoid errors in your terminal.","title":"Install the CLI"},{"location":"user-guide/installing-cli/#install-the-cli-for-microsoft-365","text":"Thank you for your interest in the CLI for Microsoft 365. Following information will help you install the CLI for Microsoft 365 and keep it up to date.","title":"Install the CLI for Microsoft 365"},{"location":"user-guide/installing-cli/#prerequisites","text":"To use the CLI for Microsoft 365 you need Node.js. The CLI has been tested with Node.js versions 6 and higher, but we recommend you to use the Node.js LTS version available at the moment. For more information on installing Node.js for your platform visit https://nodejs.org . CLI for Microsoft 365 works on Windows, macOS and Linux and you can use it with any shell on these platforms.","title":"Prerequisites"},{"location":"user-guide/installing-cli/#install-the-cli-for-microsoft-365_1","text":"CLI for Microsoft 365 is distributed as a Node.js package and published on npmjs.com . You can install it using your Node package manager, such as npm or Yarn. To install the CLI for Microsoft 365, in the command line execute: npm install -g @pnp/cli-microsoft365 If you're using Yarn, you can install the CLI for Microsoft 365 by executing: yarn global add @pnp/cli-microsoft365 Tip We are regularly publishing beta versions of the CLI for Microsoft 365 with latest features and fixes. If you want to use the beta version of the CLI, add @next to the package name when installing the CLI, for example npm install -g @pnp/cli-microsoft365@next . Please note, that you can have installed either the beta version or the public version of the CLI but not both.","title":"Install the CLI for Microsoft 365"},{"location":"user-guide/installing-cli/#check-the-installed-version","text":"To check which version of the CLI for Microsoft 365 you have installed on your computer, execute in the command line: m365 version Alternatively, you can check the version of the Node.js package you have installed, by executing: npm ls -g --depth = 0 The version of the CLI is the same as the version of the Node.js package distributing the CLI, so by using either of the commands you can control which version of the CLI you have installed.","title":"Check the installed version"},{"location":"user-guide/installing-cli/#check-if-a-new-version-is-available","text":"We are continuously evolving the CLI for Microsoft 365 and adding more features to it. You can download new versions of the CLI from npmjs.com. To check, if a new version of the CLI for Microsoft 365 is available, execute in the command line: npm outdated -g For each package that you have installed globally, npm will show the version you have currently installed as well as the latest version available on npm. If you want to check if a new beta version of the CLI for Microsoft 365 is available, execute in the command line npm view @pnp/cli-microsoft365 . Next, compare the version listed as the @next tag with the version you have installed. Beta versions of the CLI for Microsoft 365 are tagged with source code commits so that it's easy for the team to debug it in case of any issues. $ npm view @pnp/cli-microsoft365 { name: '@pnp/cli-microsoft365' , description: 'CLI for managing Microsoft 365 configuration' , 'dist-tags' : { next: '0.5.0-beta.fe510b6' , latest: '0.4.0' } , versions: [ '0.1.0-beta.b35346a' , '0.1.0-beta.b7db425' , '0.1.0-beta.b85510d' , '0.1.1-beta.25b1725' , ...","title":"Check if a new version is available"},{"location":"user-guide/installing-cli/#update-the-cli","text":"To update the CLI, execute in the command line: npm install -g @pnp/cli-microsoft365@latest This will download and install the latest public version of the CLI for Microsoft 365. If you want to update to the latest beta version of the CLI, replace @latest with @next . Important New version of the CLI for Microsoft 365 often contains new commands. Don't forget to update command completion for your terminal to get suggestions for the latest commands added in the CLI. For more information see the article on command completion .","title":"Update the CLI"},{"location":"user-guide/installing-cli/#uninstall-the-cli","text":"Attention Before uninstalling the CLI, log out from Microsoft 365 using the logout command. CLI for Microsoft 365 persists connection information on your computer and if you don't log out before uninstalling the CLI, this information will be left on your computer and you will have to remove it manually. For more information see the article on persisting connection information To uninstall the CLI for Microsoft 365, execute in the command line: npm uninstall -g @pnp/cli-microsoft365 This command will remove all CLI for Microsoft 365 files from your computer. If you have configured command completion for the CLI for Microsoft 365 in your terminal, remove the completion following instructions specific to your terminal, to avoid errors in your terminal.","title":"Uninstall the CLI"},{"location":"user-guide/manage-microsoft-365-apps/","text":"Manage Microsoft 365 apps \u00b6 When developing Microsoft 365 apps, you need to register them with the Microsoft cloud. You do this by creating an Azure AD app registration. An Azure AD app registration contains information about your app such as its name, type (for example if it's a client app or a web app) or API permissions. Typically, you manage these settings through the Azure portal. CLI for Microsoft 365 contains a set of commands that simplify managing Azure AD app registrations for your Microsoft 365 apps. What's more, using CLI for Microsoft 365 you can automate create Azure AD apps to allow developers in your team share their configuration without blocking each other. Step 1: Create Azure AD app registration \u00b6 You start bringing your app to Microsoft 365 by creating an application registration in Azure Active Directory. Using CLI for Microsoft 365, you can do this using the m365 aad app add command. For example, if you're building a single-page application, you'd execute: m365 aad app add --name 'My single-page app' --platform spa --redirectUris 'https://myspa.azurewebsites.net,http://localhost' With this one command, CLI for Microsoft 365 will create a new Azure AD application registration and configure its authentication mode to a single-page application with the specified two redirect URLs. Tip There are many settings that you can configure for Azure AD app registrations, so be sure to check the documentation for the m365 aad app add command for more examples. This one-liner is great to share with your dev team so that each developer can create their own app registration that they can manage as they work on the app. If your app's configuration is complex, you can also choose to export the existing manifest and create a new Azure AD app registration from it! But there's more. Step 2: Store information about your Azure AD app in your project \u00b6 As you work with Microsoft 365 apps, you'll be creating quite a few application registrations in Azure AD. Over time, it might be hard for you to keep track of which one is which and where you need to apply changes. To help you, CLI for Microsoft 365 offers you two things. First, when creating an Azure AD app registration for your Microsoft 365 app, store a reference to it. You do this, by extending the m365 aad app add command with the --save flag: m365 aad app add --name 'My single-page app' --platform spa --redirectUris 'https://myspa.azurewebsites.net,http://localhost' --save When you use the --save flag, CLI for Microsoft 365 will create the .m365rc.json file in the current working directory and write to it the ID and name of the newly created Azure AD app registration. If the file exists already, CLI for Microsoft 365 will add the new information to it. That way you can track which Azure AD app registration belongs to your project without having to manually locate them in the Azure Portal! And if you're building complex solutions with multiple Azure AD apps, you can keep track of all of them in one place too! After you stored the reference to your Azure AD apps in your projects, you're ready to use the app commands from CLI for Microsoft 365. Step 3: Manage Azure AD app registrations for Microsoft 365 apps \u00b6 CLI for Microsoft 365 exposes a set of app commands ( m365 app * ) that let you manage your Microsoft 365 app projects. For example, using the m365 app permission list command, you can easily retrieve API permissions for your AAD app. See the list of app commands in the Commands section of this documentation for the complete reference of supported operations.","title":"Manage Microsoft 365 apps with the CLI"},{"location":"user-guide/manage-microsoft-365-apps/#manage-microsoft-365-apps","text":"When developing Microsoft 365 apps, you need to register them with the Microsoft cloud. You do this by creating an Azure AD app registration. An Azure AD app registration contains information about your app such as its name, type (for example if it's a client app or a web app) or API permissions. Typically, you manage these settings through the Azure portal. CLI for Microsoft 365 contains a set of commands that simplify managing Azure AD app registrations for your Microsoft 365 apps. What's more, using CLI for Microsoft 365 you can automate create Azure AD apps to allow developers in your team share their configuration without blocking each other.","title":"Manage Microsoft 365 apps"},{"location":"user-guide/manage-microsoft-365-apps/#step-1-create-azure-ad-app-registration","text":"You start bringing your app to Microsoft 365 by creating an application registration in Azure Active Directory. Using CLI for Microsoft 365, you can do this using the m365 aad app add command. For example, if you're building a single-page application, you'd execute: m365 aad app add --name 'My single-page app' --platform spa --redirectUris 'https://myspa.azurewebsites.net,http://localhost' With this one command, CLI for Microsoft 365 will create a new Azure AD application registration and configure its authentication mode to a single-page application with the specified two redirect URLs. Tip There are many settings that you can configure for Azure AD app registrations, so be sure to check the documentation for the m365 aad app add command for more examples. This one-liner is great to share with your dev team so that each developer can create their own app registration that they can manage as they work on the app. If your app's configuration is complex, you can also choose to export the existing manifest and create a new Azure AD app registration from it! But there's more.","title":"Step 1: Create Azure AD app registration"},{"location":"user-guide/manage-microsoft-365-apps/#step-2-store-information-about-your-azure-ad-app-in-your-project","text":"As you work with Microsoft 365 apps, you'll be creating quite a few application registrations in Azure AD. Over time, it might be hard for you to keep track of which one is which and where you need to apply changes. To help you, CLI for Microsoft 365 offers you two things. First, when creating an Azure AD app registration for your Microsoft 365 app, store a reference to it. You do this, by extending the m365 aad app add command with the --save flag: m365 aad app add --name 'My single-page app' --platform spa --redirectUris 'https://myspa.azurewebsites.net,http://localhost' --save When you use the --save flag, CLI for Microsoft 365 will create the .m365rc.json file in the current working directory and write to it the ID and name of the newly created Azure AD app registration. If the file exists already, CLI for Microsoft 365 will add the new information to it. That way you can track which Azure AD app registration belongs to your project without having to manually locate them in the Azure Portal! And if you're building complex solutions with multiple Azure AD apps, you can keep track of all of them in one place too! After you stored the reference to your Azure AD apps in your projects, you're ready to use the app commands from CLI for Microsoft 365.","title":"Step 2: Store information about your Azure AD app in your project"},{"location":"user-guide/manage-microsoft-365-apps/#step-3-manage-azure-ad-app-registrations-for-microsoft-365-apps","text":"CLI for Microsoft 365 exposes a set of app commands ( m365 app * ) that let you manage your Microsoft 365 app projects. For example, using the m365 app permission list command, you can easily retrieve API permissions for your AAD app. See the list of app commands in the Commands section of this documentation for the complete reference of supported operations.","title":"Step 3: Manage Azure AD app registrations for Microsoft 365 apps"},{"location":"user-guide/run-cli-in-docker-container/","text":"Run CLI for Microsoft 365 in a Docker Container \u00b6 You can use Docker to run a standalone Linux container with CLI for Microsoft 365 and PowerShell pre-installed, with command completion (tab) automatically configured for you in both bash and pwsh , without having to install any of the required dependencies on your host machine. We've also included some useful utilities in the container for you such as curl , jq and jmespath-terminal . Prerequisites \u00b6 To use the published Docker images, you will first need to have Docker installed and configured on your host machine. Please refer to the Docker documentation on how to install Docker on Windows, Mac and Linux. Install and run latest \u00b6 To install and run the latest version of CLI for Microsoft 365, use the docker run command and specify the CLI docker image name. docker run --rm -it m365pnp/cli-microsoft365:latest Executing this command for the first time will download the image onto your machine and start the container and invoke an interactive session automatically (-it) , displaying a bash shell prompt. You can exit from the prompt by closing the terminal window or typing exit . When you exit the container it will be automatically stopped to free up system resources (--rm) . Alternatively, you can use PowerShell as the default shell by passing pwsh into the docker run command after the image name. docker run --rm -it m365pnp/cli-microsoft365:latest pwsh Info Authentication information is not persisted in the Docker container. When you exit from the container, you will need to authenticate with your Microsoft 365 tenant the next time you run the container. Install and run beta \u00b6 We regularly release beta versions of the CLI, to install and run the latest beta release use the next tag. docker run --rm -it m365pnp/cli-microsoft365:next Install and run specific versions \u00b6 We have published Docker images for every minor release of v3 of CLI for Microsoft 365 to date. To install and run a specific version of the CLI, state the version number as a tag after the image name. docker run --rm -it m365pnp/cli-microsoft365:3.0.0 You can also install and run specific beta versions of the CLI, state the beta version as a tag after the image name. docker run --rm -it m365pnp/cli-microsoft365:3.4.0-beta.0dbd08d Using JMESPath Terminal to author JMESPath queries \u00b6 One of the best ways to learn the JMESPath language is to experiment by creating your own JMESPath expressions, to make this easier for you we have bundled the JMESPath Terminal library to make it easy for you to see the results of your JMESPath expressions immediately as you type. The JMESPath Terminal accepts piped JSON input in both bash and pwsh prompts, for example, executing m365 tenant serviceannouncement health list | jpterm will pipe the response output from the command into a JMESPath Terminal interactive session. Info For more information on how to use JMESPath Terminal, please consult the documenation . Execute script in container \u00b6 In scenarios where you may already have a script that uses the CLI for Microsoft 365 and you want to execute it within the container, you can use a volume mount to share files on your host machine with the Docker container. For example, lets say we have a script called test.sh and we want to execute that script inside the container. We can do this by mapping the current working directory on our host machine to the working directory in the container (-v) , pass bash as the shell we want to use and the name of the file that we want to execute as additional arguments. docker run -it -v ${ PWD } :/home/cli-microsoft365/scripts m365pnp/cli-microsoft365:latest bash scripts/test.sh Alternatively, if we want to execute a PowerShell script, you can do this in the same way. docker run -it -v ${ PWD } :/home/cli-microsoft365/scripts m365pnp/cli-microsoft365:latest pwsh scripts/test.ps1 Info We have created a non-root user called cli-microsoft365 inside the container. When the container starts, the working directory is set to the home directory of this user, hence the need to add /home/cli-microsoft365 to the volume mapping. Set Environment Variables \u00b6 In scenarios where you need to set environment variables, for example, you want to use a custom Azure AD identity when logging into your Microsoft 365 tenant using the CLI. You can set these variables by passing them in as options arguments (-e) into the docker run command. docker run --rm -it -e \"CLIMICROSOFT365_AADAPPID=51078274-0353-4f6a-b9f5-8674ab2e524c\" -e \"CLIMICROSOFT365_TENANT=9455bc83-d5af-4ccf-93f6-0af3f71aaf8e\" m365pnp/cli-microsoft365:latest Combining script and environment variables \u00b6 Combining scripts and environment variables is a powerful way to run the CLI in Docker, we can set environment variables which we can reference in the script that is executed in the running container and also. docker run --rm -it -v ${ PWD } :/home/cli-microsoft365/scripts -e \"CLIMICROSOFT365_AADAPPID=da049853-dd90-49df-aa21-4e0c8b646a36\" -e \"CLIMICROSOFT365_TENANT=e8954f17-a373-4b61-b54d-45c038fe3188\" -e \"M365_USER=user@contoso.com\" -e \"M365_PASSWORD=password\" m365pnp/cli-microsoft365:next pwsh scripts/script.ps1 We can reference the environment variables passed in to the docker run command and use them in the script, in this example, passing the username and password variables into the m365 login command to login in to Microsoft 365 using password authentication. m365 login --authType password --userName $env :M365_USER --password $env :M365_PASSWORD Update Docker Image \u00b6 We will be regularly updating the images of the latest and next tags, to ensure you have the most upto date version of these images, you can update your local image using docker pull specifying the version you want to update using the relevant tag. docker pull m365pnp/cli-microsoft365:latest Uninstall Docker Image \u00b6 If you would like to remove an image from your host machine, you can use the rmi command, specifying the version you wish to remove as a tag after the image name. docker rmi m365pnp/cli-microsoft365:latest Published Tags \u00b6 See the list of available tags on the m365pnp/cli-microsoft365 repository on Docker Hub .","title":"Run CLI in a Docker Container"},{"location":"user-guide/run-cli-in-docker-container/#run-cli-for-microsoft-365-in-a-docker-container","text":"You can use Docker to run a standalone Linux container with CLI for Microsoft 365 and PowerShell pre-installed, with command completion (tab) automatically configured for you in both bash and pwsh , without having to install any of the required dependencies on your host machine. We've also included some useful utilities in the container for you such as curl , jq and jmespath-terminal .","title":"Run CLI for Microsoft 365 in a Docker Container"},{"location":"user-guide/run-cli-in-docker-container/#prerequisites","text":"To use the published Docker images, you will first need to have Docker installed and configured on your host machine. Please refer to the Docker documentation on how to install Docker on Windows, Mac and Linux.","title":"Prerequisites"},{"location":"user-guide/run-cli-in-docker-container/#install-and-run-latest","text":"To install and run the latest version of CLI for Microsoft 365, use the docker run command and specify the CLI docker image name. docker run --rm -it m365pnp/cli-microsoft365:latest Executing this command for the first time will download the image onto your machine and start the container and invoke an interactive session automatically (-it) , displaying a bash shell prompt. You can exit from the prompt by closing the terminal window or typing exit . When you exit the container it will be automatically stopped to free up system resources (--rm) . Alternatively, you can use PowerShell as the default shell by passing pwsh into the docker run command after the image name. docker run --rm -it m365pnp/cli-microsoft365:latest pwsh Info Authentication information is not persisted in the Docker container. When you exit from the container, you will need to authenticate with your Microsoft 365 tenant the next time you run the container.","title":"Install and run latest"},{"location":"user-guide/run-cli-in-docker-container/#install-and-run-beta","text":"We regularly release beta versions of the CLI, to install and run the latest beta release use the next tag. docker run --rm -it m365pnp/cli-microsoft365:next","title":"Install and run beta"},{"location":"user-guide/run-cli-in-docker-container/#install-and-run-specific-versions","text":"We have published Docker images for every minor release of v3 of CLI for Microsoft 365 to date. To install and run a specific version of the CLI, state the version number as a tag after the image name. docker run --rm -it m365pnp/cli-microsoft365:3.0.0 You can also install and run specific beta versions of the CLI, state the beta version as a tag after the image name. docker run --rm -it m365pnp/cli-microsoft365:3.4.0-beta.0dbd08d","title":"Install and run specific versions"},{"location":"user-guide/run-cli-in-docker-container/#using-jmespath-terminal-to-author-jmespath-queries","text":"One of the best ways to learn the JMESPath language is to experiment by creating your own JMESPath expressions, to make this easier for you we have bundled the JMESPath Terminal library to make it easy for you to see the results of your JMESPath expressions immediately as you type. The JMESPath Terminal accepts piped JSON input in both bash and pwsh prompts, for example, executing m365 tenant serviceannouncement health list | jpterm will pipe the response output from the command into a JMESPath Terminal interactive session. Info For more information on how to use JMESPath Terminal, please consult the documenation .","title":"Using JMESPath Terminal to author JMESPath queries"},{"location":"user-guide/run-cli-in-docker-container/#execute-script-in-container","text":"In scenarios where you may already have a script that uses the CLI for Microsoft 365 and you want to execute it within the container, you can use a volume mount to share files on your host machine with the Docker container. For example, lets say we have a script called test.sh and we want to execute that script inside the container. We can do this by mapping the current working directory on our host machine to the working directory in the container (-v) , pass bash as the shell we want to use and the name of the file that we want to execute as additional arguments. docker run -it -v ${ PWD } :/home/cli-microsoft365/scripts m365pnp/cli-microsoft365:latest bash scripts/test.sh Alternatively, if we want to execute a PowerShell script, you can do this in the same way. docker run -it -v ${ PWD } :/home/cli-microsoft365/scripts m365pnp/cli-microsoft365:latest pwsh scripts/test.ps1 Info We have created a non-root user called cli-microsoft365 inside the container. When the container starts, the working directory is set to the home directory of this user, hence the need to add /home/cli-microsoft365 to the volume mapping.","title":"Execute script in container"},{"location":"user-guide/run-cli-in-docker-container/#set-environment-variables","text":"In scenarios where you need to set environment variables, for example, you want to use a custom Azure AD identity when logging into your Microsoft 365 tenant using the CLI. You can set these variables by passing them in as options arguments (-e) into the docker run command. docker run --rm -it -e \"CLIMICROSOFT365_AADAPPID=51078274-0353-4f6a-b9f5-8674ab2e524c\" -e \"CLIMICROSOFT365_TENANT=9455bc83-d5af-4ccf-93f6-0af3f71aaf8e\" m365pnp/cli-microsoft365:latest","title":"Set Environment Variables"},{"location":"user-guide/run-cli-in-docker-container/#combining-script-and-environment-variables","text":"Combining scripts and environment variables is a powerful way to run the CLI in Docker, we can set environment variables which we can reference in the script that is executed in the running container and also. docker run --rm -it -v ${ PWD } :/home/cli-microsoft365/scripts -e \"CLIMICROSOFT365_AADAPPID=da049853-dd90-49df-aa21-4e0c8b646a36\" -e \"CLIMICROSOFT365_TENANT=e8954f17-a373-4b61-b54d-45c038fe3188\" -e \"M365_USER=user@contoso.com\" -e \"M365_PASSWORD=password\" m365pnp/cli-microsoft365:next pwsh scripts/script.ps1 We can reference the environment variables passed in to the docker run command and use them in the script, in this example, passing the username and password variables into the m365 login command to login in to Microsoft 365 using password authentication. m365 login --authType password --userName $env :M365_USER --password $env :M365_PASSWORD","title":"Combining script and environment variables"},{"location":"user-guide/run-cli-in-docker-container/#update-docker-image","text":"We will be regularly updating the images of the latest and next tags, to ensure you have the most upto date version of these images, you can update your local image using docker pull specifying the version you want to update using the relevant tag. docker pull m365pnp/cli-microsoft365:latest","title":"Update Docker Image"},{"location":"user-guide/run-cli-in-docker-container/#uninstall-docker-image","text":"If you would like to remove an image from your host machine, you can use the rmi command, specifying the version you wish to remove as a tag after the image name. docker rmi m365pnp/cli-microsoft365:latest","title":"Uninstall Docker Image"},{"location":"user-guide/run-cli-in-docker-container/#published-tags","text":"See the list of available tags on the m365pnp/cli-microsoft365 repository on Docker Hub .","title":"Published Tags"},{"location":"user-guide/use-cli-api/","text":"Use CLI for Microsoft 365 programmatically \u00b6 Typically, you'll work with CLI for Microsoft 365 in a command line. You'll either call specific commands or build automation scripts to combine multiple tasks. But if you're building software, you might want to use CLI for Microsoft 365 from your code. Integrate CLI for Microsoft 365 in your app \u00b6 If you build apps in Node.js, you can integrate CLI for Microsoft 365 using its API. This API lets you call any of CLI's commands. The following example shows how you could call several CLI for Microsoft 365 commands in a Node.js app: const { executeCommand } = require ( '@pnp/cli-microsoft365' ); executeCommand ( 'status' , { output : 'text' }) . then ( res => { if ( res . stdout === 'Logged out' ) { return executeCommand ( 'login' , { output : 'text' }, { stdout : message => console . log ( message ) }); } return Promise . resolve (); }) . then ( _ => executeCommand ( 'spo site list' , { output : 'json' })) . then ( res => { const sites = JSON . parse ( res . stdout ); if ( sites . length === 0 ) { return Promise . reject ( 'No sites found' ); } const siteUrl = sites [ 0 ]. Url ; return executeCommand ( 'spo web get' , { webUrl : siteUrl , output : 'json' }); }) . then ( res => console . log ( res . stdout )) . catch ( err => console . error ( err )); You start with importing the executeCommand function from CLI for Microsoft 365. CLI doesn't expose all of its logic externally, but rather just the function that allows you to run CLI's commands. This could change in the future. Next, you execute a command by passing the command's name without the m365 prefix, and its options. After the command completed its execution, it resolves a Promise with the command's output. The stdout property contains the main command output. The stderr property would contain verbose, debug and error output that in command line would be sent to stderr. The output in the Promise is a string in the format specified in the output option passed to executeCommand . In some cases, like when calling the login command, you might need to get the command output while it executes. In the case of the login command, it will contain the instructions to complete the device login flow. You can get this output by passing to the executeCommand function a third argument with listeners attached to stdout and stderr output. executeCommand ( 'login' , { output : 'text' }, { stdout : message => console . log ( message ) }); Important You shouldn't use both listeners and output from Promises. All command output is sent to the registered listeners and exposed in the end through the resolved Promise. If you would send output from both the listener and Promise to the console, you'd end up with the same output printed twice. In the code sample above you see that for all commands you work with the output from Promises but for the login command you use a listener because you want to get login instructions while the command is still running.","title":"Use CLI programmatically"},{"location":"user-guide/use-cli-api/#use-cli-for-microsoft-365-programmatically","text":"Typically, you'll work with CLI for Microsoft 365 in a command line. You'll either call specific commands or build automation scripts to combine multiple tasks. But if you're building software, you might want to use CLI for Microsoft 365 from your code.","title":"Use CLI for Microsoft 365 programmatically"},{"location":"user-guide/use-cli-api/#integrate-cli-for-microsoft-365-in-your-app","text":"If you build apps in Node.js, you can integrate CLI for Microsoft 365 using its API. This API lets you call any of CLI's commands. The following example shows how you could call several CLI for Microsoft 365 commands in a Node.js app: const { executeCommand } = require ( '@pnp/cli-microsoft365' ); executeCommand ( 'status' , { output : 'text' }) . then ( res => { if ( res . stdout === 'Logged out' ) { return executeCommand ( 'login' , { output : 'text' }, { stdout : message => console . log ( message ) }); } return Promise . resolve (); }) . then ( _ => executeCommand ( 'spo site list' , { output : 'json' })) . then ( res => { const sites = JSON . parse ( res . stdout ); if ( sites . length === 0 ) { return Promise . reject ( 'No sites found' ); } const siteUrl = sites [ 0 ]. Url ; return executeCommand ( 'spo web get' , { webUrl : siteUrl , output : 'json' }); }) . then ( res => console . log ( res . stdout )) . catch ( err => console . error ( err )); You start with importing the executeCommand function from CLI for Microsoft 365. CLI doesn't expose all of its logic externally, but rather just the function that allows you to run CLI's commands. This could change in the future. Next, you execute a command by passing the command's name without the m365 prefix, and its options. After the command completed its execution, it resolves a Promise with the command's output. The stdout property contains the main command output. The stderr property would contain verbose, debug and error output that in command line would be sent to stderr. The output in the Promise is a string in the format specified in the output option passed to executeCommand . In some cases, like when calling the login command, you might need to get the command output while it executes. In the case of the login command, it will contain the instructions to complete the device login flow. You can get this output by passing to the executeCommand function a third argument with listeners attached to stdout and stderr output. executeCommand ( 'login' , { output : 'text' }, { stdout : message => console . log ( message ) }); Important You shouldn't use both listeners and output from Promises. All command output is sent to the registered listeners and exposed in the end through the resolved Promise. If you would send output from both the listener and Promise to the console, you'd end up with the same output printed twice. In the code sample above you see that for all commands you work with the output from Promises but for the login command you use a listener because you want to get login instructions while the command is still running.","title":"Integrate CLI for Microsoft 365 in your app"},{"location":"user-guide/using-cli/","text":"Use the CLI for Microsoft 365 \u00b6 Information in this section will help you understand how the CLI for Microsoft 365 works and how you can use it most effectively. Start the CLI \u00b6 To use CLI for Microsoft 365, execute specific commands directly from the command line. Attention When using the CLI for Microsoft 365, each CLI command must be prepended with microsoft365 or m365 for short. Without this, your shell will not know how the particular command should be executed. Using the CLI for Microsoft 365 directly from the command line is invaluable if you want to write scripts consisting of a number of CLI for Microsoft 365 and other commands combined together. Additionally, you keep the access to all system commands and other CLIs available on your computer. List available commands \u00b6 To list commands available with the CLI for Microsoft 365 type help in the CLI prompt, or m365 help directly in your shell. Commands in the CLI for Microsoft 365 are combined into groups. You can list the commands available in the particular group by typing help <group> , for example help spo to list all commands related to SharePoint Online, or m365 help spo directly in your shell. Get command help \u00b6 Each command in the CLI for Microsoft 365 comes with help describing the command's purpose, available options and any other relevant details as well as related resources. To get the basic help information with command's description and available options, type help <command> or m365 help <command> in the shell, for example to get help for the spo cdn get command, type in the shell m365 help spo cdn get . To get the complete help information including background information, examples and links to related information, use the --help option, for example m365 spo cdn get --help . This ability is also useful if you've already typed some options and don't want to lose your input but want to access the help, for example: m365 spo cdn get --type Private --help . Required and optional command options \u00b6 Commands in the CLI for Microsoft 365 often contain options that determine what the particular command should do. Command options vary from the URL of the site for which you would like to retrieve more information, to the type of Microsoft 365 CDN that you would like to manage. Some options are required and necessary for the particular command to execute, while other are optional. When listing available options for the particular command, CLI for Microsoft 365 follows the naming convention where required options are wrapped in angle brackets ( < > ) while optional options are wrapped in square brackets ( [ ] ). For example, in the spo cdn origin add command, the origin you want to add is required ( -r, --origin <origin> ), while the type of CDN for which this origin should be added is optional ( -t, --type [type] ) and its value defaults to Public . Values with quotes \u00b6 In cases, when the option's value contains spaces, it should be wrapped in quotes. For example, to create a modern team site for the CLI for Microsoft 365 team, you would execute in the shell: m365 spo site add --alias office365cli --title \"CLI for Microsoft 365\" When the value, that you want to provide contains quotes, it needs to be wrapped in quotes as well, for example to pass a JSON value in the CLI prompt, you would execute: m365 spo sitescript add --title \"Contoso\" --description \"Contoso theme script\" --content '{\"abc\": \"def\"}' Working with SharePoint URLs in spo commands \u00b6 CLI for Microsoft 365 contains a number of commands for managing SharePoint Online. Each of these commands requires you to specify the site or web on which you want to execute the command. For example, to get information about a site collection located at https://contoso.sharepoint.com/sites/contoso , you'd execute: m365 spo site get --url https://contoso.sharepoint.com/sites/contoso If you executed an spo command previously, CLI for Microsoft 365 already knows the hostname of your SharePoint Online tenant. In such case, you can use a server-relative URL as well: m365 spo site get --url /sites/contoso If you try to use a server-relative URL but CLI for Microsoft 365 doesn't know of your SharePoint Online URL yet, you will see an error prompting you to either use an absolute URL or set the SPO URL using the spo set command: m365 spo set --url https://contoso.sharepoint.com You can also execute a command like m365 spo site list that will automatically detect your SharePoint Online tenant URL for you. To check if CLI detected the SPO URL previously, use the m365 spo get command. Passing complex content into CLI options \u00b6 When passing complex content into CLI options, such as JSON strings, you will need to properly escape nested quotes. The exact way to do it, depends on the shell that you're using. Alternatively, you can choose to pass complex content by storing the complex content in a file and passing the path to the file prefixed with an @ , for example: m365 spo sitescript add --title \"Contoso\" --description \"Contoso theme script\" --content @themeScript.json CLI for Microsoft 365 will load the contents from the specified file and use it in the command that you specified. You can use the @ token in any command, with any option that accepts a value. @ is a special character in PowerShell. If you use CLI for Microsoft 365 in PowerShell and want to use the @ token, you'll need to escape with a backtick, for example: m365 spo sitescript add - -title \"Contoso\" - -description \"Contoso theme script\" - -content `@ themeScript . json Escaping double quotes in PowerShell \u00b6 PowerShell Versions 5 to 7.2 have an issue with escaping double quotes . Command arguments are being parsed twice for tools like the CLI. Once by PowerShell and once by the CLI for Microsoft 365 executable that's being called by PowerShell. The result is that you need to escape quotes twice. The issue should be resolved from version 7.3. As an example, see the following code: m365 spo listitem set - -webUrl \"<some-url>\" - -id 1 - -listTitle somelist - -SomeField \"{ `\" test1 `\" : `\" test2 `\" }\" While correctly escaped, it would result in the following being saved to sharepoint: { test1: test2 } . The double quotes are missing. The following two methods resolve this: Method 1: Escaping twice \u00b6 Escape the double quotes twice. Once for powershell using the backtick (`) and once for the executable, using a backslash. m365 spo listitem set - -webUrl \"<some-url>\" - -id 1 - -listTitle somelist - -SomeField \"{ \\ `\" test1\\ `\" : \\ `\" test2\\ `\" }\" Method 2: Using verbatim strings with single quotes \u00b6 Use single quotes to start a verbatim string. The double quotes need not be escaped for powershell using the backtick. However, they do need to be escaped for the executable, using a backslash. m365 spo listitem set - -webUrl \"<some-url>\" - -id 1 - -listTitle somelist - -SomeField '{ \\\"test1\\\": \\\"test2\\\" }' Info Remember, instead of escaping, it's also possible to feed complex content from a file . @meId and @meUserName tokens \u00b6 CLI for Microsoft 365 contains a number of commands that require you to provide a user ID or username. If you want to pass these values for the current user, instead of looking them up, you can use the built-in tokens. With the @meId token you can specify the ID of the current user. Using the @meUserName token you can specify the username of the current user. For example: m365 aad user get --id \"@meId\" will execute as m365 aad user get --id \"d1a97db6-ab08-41a9-94fe-bfa104e83f69\" . When you execute: m365 aad user get --userName \"@meUserName\" it will run as m365 aad user get --userName \"admin@contoso.onmicrosoft.com\" . Both tokens are resolved based on the information stored in the access token. You can use the @ token in any command, with any option that accepts a value. Verbose and debug mode \u00b6 By default, commands output only the information returned by the corresponding Microsoft 365 API, whether the command result or error. You can choose for a more user-friendly output by using the --verbose option or setting the CLIMICROSOFT365_VERBOSE environment variable to 1 . For example: by default, when checking status of the Microsoft 365 Public CDN, you would see: $ m365 spo cdn get true After adding the --verbose option, the output would change to: $ m365 spo cdn get --verbose Retrieving status of Public CDN... Public CDN at https://contoso-admin.sharepoint.com is enabled If you're experiencing problems when using the CLI for Microsoft 365, you can use the --debug option or set the CLIMICROSOFT365_DEBUG environment variable to 1 . On top of the output from the verbose mode, the debug mode will provide you with detailed information about all requests and responses from the Microsoft 365 APIs used by the command. Command completion \u00b6 To help you use its commands, CLI for Microsoft 365 offers you the ability to autocomplete commands and options that you're typing in the prompt. Some additional setup, specific for the shell and terminal that you use, is required to enable command completion for CLI for Microsoft 365. For more information on configuring command completion for the CLI for Microsoft 365 see the command completion article. Disable automatic checking for updates \u00b6 Each time you run CLI for Microsoft 365, it will automatically check if there is a new version available and prompt you with update instructions if that's the case. If you use CLI for Microsoft 365 in CI/CD or in scripts and want to make it run faster, you can disable the check by setting the CLIMICROSOFT365_NOUPDATE environment variable to 1 .","title":"Use the CLI in command line"},{"location":"user-guide/using-cli/#use-the-cli-for-microsoft-365","text":"Information in this section will help you understand how the CLI for Microsoft 365 works and how you can use it most effectively.","title":"Use the CLI for Microsoft 365"},{"location":"user-guide/using-cli/#start-the-cli","text":"To use CLI for Microsoft 365, execute specific commands directly from the command line. Attention When using the CLI for Microsoft 365, each CLI command must be prepended with microsoft365 or m365 for short. Without this, your shell will not know how the particular command should be executed. Using the CLI for Microsoft 365 directly from the command line is invaluable if you want to write scripts consisting of a number of CLI for Microsoft 365 and other commands combined together. Additionally, you keep the access to all system commands and other CLIs available on your computer.","title":"Start the CLI"},{"location":"user-guide/using-cli/#list-available-commands","text":"To list commands available with the CLI for Microsoft 365 type help in the CLI prompt, or m365 help directly in your shell. Commands in the CLI for Microsoft 365 are combined into groups. You can list the commands available in the particular group by typing help <group> , for example help spo to list all commands related to SharePoint Online, or m365 help spo directly in your shell.","title":"List available commands"},{"location":"user-guide/using-cli/#get-command-help","text":"Each command in the CLI for Microsoft 365 comes with help describing the command's purpose, available options and any other relevant details as well as related resources. To get the basic help information with command's description and available options, type help <command> or m365 help <command> in the shell, for example to get help for the spo cdn get command, type in the shell m365 help spo cdn get . To get the complete help information including background information, examples and links to related information, use the --help option, for example m365 spo cdn get --help . This ability is also useful if you've already typed some options and don't want to lose your input but want to access the help, for example: m365 spo cdn get --type Private --help .","title":"Get command help"},{"location":"user-guide/using-cli/#required-and-optional-command-options","text":"Commands in the CLI for Microsoft 365 often contain options that determine what the particular command should do. Command options vary from the URL of the site for which you would like to retrieve more information, to the type of Microsoft 365 CDN that you would like to manage. Some options are required and necessary for the particular command to execute, while other are optional. When listing available options for the particular command, CLI for Microsoft 365 follows the naming convention where required options are wrapped in angle brackets ( < > ) while optional options are wrapped in square brackets ( [ ] ). For example, in the spo cdn origin add command, the origin you want to add is required ( -r, --origin <origin> ), while the type of CDN for which this origin should be added is optional ( -t, --type [type] ) and its value defaults to Public .","title":"Required and optional command options"},{"location":"user-guide/using-cli/#values-with-quotes","text":"In cases, when the option's value contains spaces, it should be wrapped in quotes. For example, to create a modern team site for the CLI for Microsoft 365 team, you would execute in the shell: m365 spo site add --alias office365cli --title \"CLI for Microsoft 365\" When the value, that you want to provide contains quotes, it needs to be wrapped in quotes as well, for example to pass a JSON value in the CLI prompt, you would execute: m365 spo sitescript add --title \"Contoso\" --description \"Contoso theme script\" --content '{\"abc\": \"def\"}'","title":"Values with quotes"},{"location":"user-guide/using-cli/#working-with-sharepoint-urls-in-spo-commands","text":"CLI for Microsoft 365 contains a number of commands for managing SharePoint Online. Each of these commands requires you to specify the site or web on which you want to execute the command. For example, to get information about a site collection located at https://contoso.sharepoint.com/sites/contoso , you'd execute: m365 spo site get --url https://contoso.sharepoint.com/sites/contoso If you executed an spo command previously, CLI for Microsoft 365 already knows the hostname of your SharePoint Online tenant. In such case, you can use a server-relative URL as well: m365 spo site get --url /sites/contoso If you try to use a server-relative URL but CLI for Microsoft 365 doesn't know of your SharePoint Online URL yet, you will see an error prompting you to either use an absolute URL or set the SPO URL using the spo set command: m365 spo set --url https://contoso.sharepoint.com You can also execute a command like m365 spo site list that will automatically detect your SharePoint Online tenant URL for you. To check if CLI detected the SPO URL previously, use the m365 spo get command.","title":"Working with SharePoint URLs in spo commands"},{"location":"user-guide/using-cli/#passing-complex-content-into-cli-options","text":"When passing complex content into CLI options, such as JSON strings, you will need to properly escape nested quotes. The exact way to do it, depends on the shell that you're using. Alternatively, you can choose to pass complex content by storing the complex content in a file and passing the path to the file prefixed with an @ , for example: m365 spo sitescript add --title \"Contoso\" --description \"Contoso theme script\" --content @themeScript.json CLI for Microsoft 365 will load the contents from the specified file and use it in the command that you specified. You can use the @ token in any command, with any option that accepts a value. @ is a special character in PowerShell. If you use CLI for Microsoft 365 in PowerShell and want to use the @ token, you'll need to escape with a backtick, for example: m365 spo sitescript add - -title \"Contoso\" - -description \"Contoso theme script\" - -content `@ themeScript . json","title":"Passing complex content into CLI options"},{"location":"user-guide/using-cli/#escaping-double-quotes-in-powershell","text":"PowerShell Versions 5 to 7.2 have an issue with escaping double quotes . Command arguments are being parsed twice for tools like the CLI. Once by PowerShell and once by the CLI for Microsoft 365 executable that's being called by PowerShell. The result is that you need to escape quotes twice. The issue should be resolved from version 7.3. As an example, see the following code: m365 spo listitem set - -webUrl \"<some-url>\" - -id 1 - -listTitle somelist - -SomeField \"{ `\" test1 `\" : `\" test2 `\" }\" While correctly escaped, it would result in the following being saved to sharepoint: { test1: test2 } . The double quotes are missing. The following two methods resolve this:","title":"Escaping double quotes in PowerShell"},{"location":"user-guide/using-cli/#method-1-escaping-twice","text":"Escape the double quotes twice. Once for powershell using the backtick (`) and once for the executable, using a backslash. m365 spo listitem set - -webUrl \"<some-url>\" - -id 1 - -listTitle somelist - -SomeField \"{ \\ `\" test1\\ `\" : \\ `\" test2\\ `\" }\"","title":"Method 1: Escaping twice"},{"location":"user-guide/using-cli/#method-2-using-verbatim-strings-with-single-quotes","text":"Use single quotes to start a verbatim string. The double quotes need not be escaped for powershell using the backtick. However, they do need to be escaped for the executable, using a backslash. m365 spo listitem set - -webUrl \"<some-url>\" - -id 1 - -listTitle somelist - -SomeField '{ \\\"test1\\\": \\\"test2\\\" }' Info Remember, instead of escaping, it's also possible to feed complex content from a file .","title":"Method 2: Using verbatim strings with single quotes"},{"location":"user-guide/using-cli/#meid-and-meusername-tokens","text":"CLI for Microsoft 365 contains a number of commands that require you to provide a user ID or username. If you want to pass these values for the current user, instead of looking them up, you can use the built-in tokens. With the @meId token you can specify the ID of the current user. Using the @meUserName token you can specify the username of the current user. For example: m365 aad user get --id \"@meId\" will execute as m365 aad user get --id \"d1a97db6-ab08-41a9-94fe-bfa104e83f69\" . When you execute: m365 aad user get --userName \"@meUserName\" it will run as m365 aad user get --userName \"admin@contoso.onmicrosoft.com\" . Both tokens are resolved based on the information stored in the access token. You can use the @ token in any command, with any option that accepts a value.","title":"@meId and @meUserName tokens"},{"location":"user-guide/using-cli/#verbose-and-debug-mode","text":"By default, commands output only the information returned by the corresponding Microsoft 365 API, whether the command result or error. You can choose for a more user-friendly output by using the --verbose option or setting the CLIMICROSOFT365_VERBOSE environment variable to 1 . For example: by default, when checking status of the Microsoft 365 Public CDN, you would see: $ m365 spo cdn get true After adding the --verbose option, the output would change to: $ m365 spo cdn get --verbose Retrieving status of Public CDN... Public CDN at https://contoso-admin.sharepoint.com is enabled If you're experiencing problems when using the CLI for Microsoft 365, you can use the --debug option or set the CLIMICROSOFT365_DEBUG environment variable to 1 . On top of the output from the verbose mode, the debug mode will provide you with detailed information about all requests and responses from the Microsoft 365 APIs used by the command.","title":"Verbose and debug mode"},{"location":"user-guide/using-cli/#command-completion","text":"To help you use its commands, CLI for Microsoft 365 offers you the ability to autocomplete commands and options that you're typing in the prompt. Some additional setup, specific for the shell and terminal that you use, is required to enable command completion for CLI for Microsoft 365. For more information on configuring command completion for the CLI for Microsoft 365 see the command completion article.","title":"Command completion"},{"location":"user-guide/using-cli/#disable-automatic-checking-for-updates","text":"Each time you run CLI for Microsoft 365, it will automatically check if there is a new version available and prompt you with update instructions if that's the case. If you use CLI for Microsoft 365 in CI/CD or in scripts and want to make it run faster, you can disable the check by setting the CLIMICROSOFT365_NOUPDATE environment variable to 1 .","title":"Disable automatic checking for updates"},{"location":"user-guide/using-own-identity/","text":"Use your own Azure AD identity \u00b6 When you use the CLI for Microsoft 365 to connect to your tenant for the first time, you are presented with a Permissions requested prompt from Azure, by accepting this prompt you are consenting to using the PnP Microsoft 365 Management Shell Azure AD application with your tenant as well as the permissions that it requires. We ask for a wide range to permissions upfront, including permissions that require administrative level consent, so that it is easy to get started with the CLI and try out the commands across many CLI for Microsoft 365 workloads in your tenant without having to handle the complexity of managing the permissions for the different commands manually in Azure. Whilst this is fine for working against development and test environments, using these levels of permissions against production environments is inconvenient and administrators are not comfortable with granting such permissions to a multi-tenant application within their environment. In this scenario, administrators will want to provide their own Azure AD app registration to use with the CLI to enable greater control over the permissions that are granted. This tutorial will walk you through how to create your own Azure AD application with permissions restricted to only read information about SharePoint Online Site Collections and how to use this custom application with the CLI for Microsoft 365. Register Azure AD application in your tenant \u00b6 We first need to register a new Azure AD application in your tenant, to do this we will need to navigate to the Azure Portal . Select Azure Active Directory from the global menu, select App registrations in the Azure Active Directory blade and then select the New registration action button to open the Register an application form. In the form, enter a name for your new application, for the purpose of this tutorial let's use Custom PnP CLI for Microsoft 365 . You can always change this later if you want. Leave the Supported account types and Redirect URI values as they are and select the Register button at the foot of the form to create your custom application. After the application has been created, you will be presented with the blade for your application displaying an overview of some properties of the application. At this point it is a good idea to take note of two key pieces of information that we will need later. Take a copy of both the Application (client) ID and Directory (tenant) ID values and save them to a place for you to refer back to them later. Configure Authentication settings \u00b6 We next need to configure our new application so that it can be used with the CLI for Microsoft 365. To do this we need to select Authentication in the Custom PnP CLI for Microsoft 365 blade menu. This will present you with three sections: Platform configuration , Supported account type and Advanced settings . Select the Add a platform button to open up the Configure platforms menu and under the Mobile and desktop applications heading, select Mobile and desktop applications . This will open another menu called Configure Desktop + Devices displaying a section called Redirect URIs and a list of checkboxes with some pre-defined URIs. Select the first option in the list, https://login.microsoftonline.com/common/oauth2/nativeclient and select the Configure button at the foot of the menu. This will refresh the Authentication blade and will display the Redirect URI we just chose from the menu. Info This Redirect URI is specific to the use of authentication methods that do not use a web interface for authenticating users and are therefore called Native Clients . This is the category that the CLI for Microsoft 365 falls into. Moving on, we can skip over the Supported account type section, as this is defaulted to Accounts in this organizational directory only (<tenant> only - Single tenant) meaning, that only users within the current tenant directory can use this application. In the Advanced settings section, we need to enable the Allow public client flows toggle, as we are using the Device code flow method to authenticate to our tenant using the CLI for Microsoft 365. To make sure all these changes are applied, select the Save button before moving on. Configure API Permissions \u00b6 Now that we have configured the application to work with the CLI for Microsoft 365, we next need to grant what permissions the CLI will have within our tenant. Select the API permissions in the Custom PnP CLI for Microsoft 365 blade menu. You will see a section called Configured permissions with one permission already granted. This is the default permission which allows the application to sign in the user account used when authenticating to the Microsoft Graph. Select the Add a permission button to open the Request API permissions menu. As we are only interested in granting our application access to SharePoint Online for the purpose of this tutorial, select SharePoint in the list of APIs that are available. This opens the menu with two options: Delegated permissions or Application permissions . As we are going to be communicating with the SharePoint Online APIs as the authenticated user, select Delegated permissions . This will display a list of available permissions that we can choose from. For the purpose of this tutorial we only want to grant read access to SharePoint Online, so expand the AllSites grouping and select the AllSites.Read permission. Next, select the Add permissions button to apply these permissions. Attention Note that the AllSites.Read permission does not directly grant the signed-in user access to all sites in SharePoint Online. As we authenticate as the signed-in user, that user must still have access to the SharePoint sites that we want to return information about, otherwise the SharePoint Online API calls will fail with a 401 Unauthorized error. You will be presented with the Configured permissions section again but this time the AllSites.Read permission will be shown under the SharePoint grouping. Attention Note that when executing tenant level SharePoint Online commands, the CLI will attempt to autodiscover your tenant URL. It will first check for the presence of an environment variable containing the tenant URL, which can be set by using m365 spo set command. If this cannot be found, a request will be made to the Microsoft Graph. For this request to be successful, you must ensure that you have at least the Sites.Read.All permission granted to your application. This completes the configuration required in the Azure portal. We can now move onto configuring the CLI for Microsoft 365 to use our custom application to login to Microsoft 365. Create environment variables \u00b6 To configure the CLI for Microsoft 365 to use our newly created custom application, we need to tell it the Client ID of our custom application and the Tenant ID of where the custom application has been created. To do that, we need to create two environment variables, named CLIMICROSOFT365_AADAPPID and CLIMICROSOFT365_TENANT , giving them the values that you saved earlier. How you set the environment variables depends on the operating system and shell that you are using. If you are on Windows, you can set the environment variables using the $env:<variable-name> approach in a PowerShell session. $env:CLIMICROSOFT365_AADAPPID = \"506af689-32aa-46c8-afb5-972ebf9d218a\" $env:CLIMICROSOFT365_TENANT = \"e8954f17-a373-4b61-b54d-45c038fe3188\" Tip Execute $env:CLIMICROSOFT365_AADAPPID and $env:CLIMICROSOFT365_TENANT to verify that the environment variables have been created correctly If you are using Linux or macOS, you can set the environment variables using the export command from your terminal prompt. export CLIMICROSOFT365_AADAPPID = 506af689-32aa-46c8-afb5-972ebf9d218a export CLIMICROSOFT365_TENANT = e8954f17-a373-4b61-b54d-45c038fe3188 Tip Execute printenv to verify that the environment variables have been created correctly Now that we have set our environment variables, we are now ready to use our custom application to log in with using the CLI for Microsoft 365. Login and consent \u00b6 For the purpose of this tutorial, we will be using the Device code flow to interactively authenticate with an Microsoft 365 tenant. As this is the first time that we will have used the custom application to authenticate, we will also be required to give our consent. At your terminal session, execute m365 login to start the authentication process, a login device code will be displayed along with a link to a web page where it needs to be entered. Navigate to https://microsoft.com/devicelogin , enter the code into the input field and select Next . You will then be presented with either a login screen or accounts that you have already logged in to Microsoft 365 with. Login with or choose the account from the list that you want to use with CLI for Microsoft 365. You will now be prompted to consent that the custom application, Custom PnP CLI for Microsoft 365 , can use the two permissions that we configure earlier, Read items in all site collections and Sign you in and read your profile on your behalf. Select Accept to consent and complete the sign-in process. Returning back to your command line, you can now verify that the sign in has been successful by executing the m365 status command. Finally, to test that we can indeed read SharePoint Online site collections, let's invoke the following command m365 spo site get --url https://trinder365dev.sharepoint.com -o json The JSON representation of the SharePoint Online site will be returned to the console. Congratulations! You have just configured the CLI for Microsoft 365 to use your own custom application with custom permissions from your own Azure Active Directory. Persisting environment variables \u00b6 As mentioned earlier, the way in which we set the environment variables meant that they are only set for the lifetime of the session, if the terminal session is closed, you will need to repeat those steps, which may be undesirable. How you permanently set the environment variable is dependant on the operating system and shell you are using. If you are on Windows, you can set the environment variables using the Edit the system environment variables approach in the Windows UI. Search for Edit the system environment variables in Start Menu and launch it. Select Environment Variables , under the User variables for <user-name> section, select New... to add a new variable. In the dialog, in the variable name field enter CLIMICROSOFT365_AADAPPID and set the value using the Client ID (quotes should be omitted). Select OK to save the value and repeat the process for the CLIMICROSOFT365_TENANT variable. Select OK until all windows are closed to persist the changes. Open a new PowerShell session and execute $env:CLIMICROSOFT365_AADAPPID and $env:CLIMICROSOFT365_TENANT to verify that the environment variables have been created correctly. If you are on Linux or MacOS, depending on your terminal, add the export lines to .bashrc or .zshrc file in your home directory. If you are using PowerShell, it is worth noting that environment variables set in bash or zsh will persist to the pwsh session and the same applies to Windows.","title":"Use your own Azure AD identity"},{"location":"user-guide/using-own-identity/#use-your-own-azure-ad-identity","text":"When you use the CLI for Microsoft 365 to connect to your tenant for the first time, you are presented with a Permissions requested prompt from Azure, by accepting this prompt you are consenting to using the PnP Microsoft 365 Management Shell Azure AD application with your tenant as well as the permissions that it requires. We ask for a wide range to permissions upfront, including permissions that require administrative level consent, so that it is easy to get started with the CLI and try out the commands across many CLI for Microsoft 365 workloads in your tenant without having to handle the complexity of managing the permissions for the different commands manually in Azure. Whilst this is fine for working against development and test environments, using these levels of permissions against production environments is inconvenient and administrators are not comfortable with granting such permissions to a multi-tenant application within their environment. In this scenario, administrators will want to provide their own Azure AD app registration to use with the CLI to enable greater control over the permissions that are granted. This tutorial will walk you through how to create your own Azure AD application with permissions restricted to only read information about SharePoint Online Site Collections and how to use this custom application with the CLI for Microsoft 365.","title":"Use your own Azure AD identity"},{"location":"user-guide/using-own-identity/#register-azure-ad-application-in-your-tenant","text":"We first need to register a new Azure AD application in your tenant, to do this we will need to navigate to the Azure Portal . Select Azure Active Directory from the global menu, select App registrations in the Azure Active Directory blade and then select the New registration action button to open the Register an application form. In the form, enter a name for your new application, for the purpose of this tutorial let's use Custom PnP CLI for Microsoft 365 . You can always change this later if you want. Leave the Supported account types and Redirect URI values as they are and select the Register button at the foot of the form to create your custom application. After the application has been created, you will be presented with the blade for your application displaying an overview of some properties of the application. At this point it is a good idea to take note of two key pieces of information that we will need later. Take a copy of both the Application (client) ID and Directory (tenant) ID values and save them to a place for you to refer back to them later.","title":"Register Azure AD application in your tenant"},{"location":"user-guide/using-own-identity/#configure-authentication-settings","text":"We next need to configure our new application so that it can be used with the CLI for Microsoft 365. To do this we need to select Authentication in the Custom PnP CLI for Microsoft 365 blade menu. This will present you with three sections: Platform configuration , Supported account type and Advanced settings . Select the Add a platform button to open up the Configure platforms menu and under the Mobile and desktop applications heading, select Mobile and desktop applications . This will open another menu called Configure Desktop + Devices displaying a section called Redirect URIs and a list of checkboxes with some pre-defined URIs. Select the first option in the list, https://login.microsoftonline.com/common/oauth2/nativeclient and select the Configure button at the foot of the menu. This will refresh the Authentication blade and will display the Redirect URI we just chose from the menu. Info This Redirect URI is specific to the use of authentication methods that do not use a web interface for authenticating users and are therefore called Native Clients . This is the category that the CLI for Microsoft 365 falls into. Moving on, we can skip over the Supported account type section, as this is defaulted to Accounts in this organizational directory only (<tenant> only - Single tenant) meaning, that only users within the current tenant directory can use this application. In the Advanced settings section, we need to enable the Allow public client flows toggle, as we are using the Device code flow method to authenticate to our tenant using the CLI for Microsoft 365. To make sure all these changes are applied, select the Save button before moving on.","title":"Configure Authentication settings"},{"location":"user-guide/using-own-identity/#configure-api-permissions","text":"Now that we have configured the application to work with the CLI for Microsoft 365, we next need to grant what permissions the CLI will have within our tenant. Select the API permissions in the Custom PnP CLI for Microsoft 365 blade menu. You will see a section called Configured permissions with one permission already granted. This is the default permission which allows the application to sign in the user account used when authenticating to the Microsoft Graph. Select the Add a permission button to open the Request API permissions menu. As we are only interested in granting our application access to SharePoint Online for the purpose of this tutorial, select SharePoint in the list of APIs that are available. This opens the menu with two options: Delegated permissions or Application permissions . As we are going to be communicating with the SharePoint Online APIs as the authenticated user, select Delegated permissions . This will display a list of available permissions that we can choose from. For the purpose of this tutorial we only want to grant read access to SharePoint Online, so expand the AllSites grouping and select the AllSites.Read permission. Next, select the Add permissions button to apply these permissions. Attention Note that the AllSites.Read permission does not directly grant the signed-in user access to all sites in SharePoint Online. As we authenticate as the signed-in user, that user must still have access to the SharePoint sites that we want to return information about, otherwise the SharePoint Online API calls will fail with a 401 Unauthorized error. You will be presented with the Configured permissions section again but this time the AllSites.Read permission will be shown under the SharePoint grouping. Attention Note that when executing tenant level SharePoint Online commands, the CLI will attempt to autodiscover your tenant URL. It will first check for the presence of an environment variable containing the tenant URL, which can be set by using m365 spo set command. If this cannot be found, a request will be made to the Microsoft Graph. For this request to be successful, you must ensure that you have at least the Sites.Read.All permission granted to your application. This completes the configuration required in the Azure portal. We can now move onto configuring the CLI for Microsoft 365 to use our custom application to login to Microsoft 365.","title":"Configure API Permissions"},{"location":"user-guide/using-own-identity/#create-environment-variables","text":"To configure the CLI for Microsoft 365 to use our newly created custom application, we need to tell it the Client ID of our custom application and the Tenant ID of where the custom application has been created. To do that, we need to create two environment variables, named CLIMICROSOFT365_AADAPPID and CLIMICROSOFT365_TENANT , giving them the values that you saved earlier. How you set the environment variables depends on the operating system and shell that you are using. If you are on Windows, you can set the environment variables using the $env:<variable-name> approach in a PowerShell session. $env:CLIMICROSOFT365_AADAPPID = \"506af689-32aa-46c8-afb5-972ebf9d218a\" $env:CLIMICROSOFT365_TENANT = \"e8954f17-a373-4b61-b54d-45c038fe3188\" Tip Execute $env:CLIMICROSOFT365_AADAPPID and $env:CLIMICROSOFT365_TENANT to verify that the environment variables have been created correctly If you are using Linux or macOS, you can set the environment variables using the export command from your terminal prompt. export CLIMICROSOFT365_AADAPPID = 506af689-32aa-46c8-afb5-972ebf9d218a export CLIMICROSOFT365_TENANT = e8954f17-a373-4b61-b54d-45c038fe3188 Tip Execute printenv to verify that the environment variables have been created correctly Now that we have set our environment variables, we are now ready to use our custom application to log in with using the CLI for Microsoft 365.","title":"Create environment variables"},{"location":"user-guide/using-own-identity/#login-and-consent","text":"For the purpose of this tutorial, we will be using the Device code flow to interactively authenticate with an Microsoft 365 tenant. As this is the first time that we will have used the custom application to authenticate, we will also be required to give our consent. At your terminal session, execute m365 login to start the authentication process, a login device code will be displayed along with a link to a web page where it needs to be entered. Navigate to https://microsoft.com/devicelogin , enter the code into the input field and select Next . You will then be presented with either a login screen or accounts that you have already logged in to Microsoft 365 with. Login with or choose the account from the list that you want to use with CLI for Microsoft 365. You will now be prompted to consent that the custom application, Custom PnP CLI for Microsoft 365 , can use the two permissions that we configure earlier, Read items in all site collections and Sign you in and read your profile on your behalf. Select Accept to consent and complete the sign-in process. Returning back to your command line, you can now verify that the sign in has been successful by executing the m365 status command. Finally, to test that we can indeed read SharePoint Online site collections, let's invoke the following command m365 spo site get --url https://trinder365dev.sharepoint.com -o json The JSON representation of the SharePoint Online site will be returned to the console. Congratulations! You have just configured the CLI for Microsoft 365 to use your own custom application with custom permissions from your own Azure Active Directory.","title":"Login and consent"},{"location":"user-guide/using-own-identity/#persisting-environment-variables","text":"As mentioned earlier, the way in which we set the environment variables meant that they are only set for the lifetime of the session, if the terminal session is closed, you will need to repeat those steps, which may be undesirable. How you permanently set the environment variable is dependant on the operating system and shell you are using. If you are on Windows, you can set the environment variables using the Edit the system environment variables approach in the Windows UI. Search for Edit the system environment variables in Start Menu and launch it. Select Environment Variables , under the User variables for <user-name> section, select New... to add a new variable. In the dialog, in the variable name field enter CLIMICROSOFT365_AADAPPID and set the value using the Client ID (quotes should be omitted). Select OK to save the value and repeat the process for the CLIMICROSOFT365_TENANT variable. Select OK until all windows are closed to persist the changes. Open a new PowerShell session and execute $env:CLIMICROSOFT365_AADAPPID and $env:CLIMICROSOFT365_TENANT to verify that the environment variables have been created correctly. If you are on Linux or MacOS, depending on your terminal, add the export lines to .bashrc or .zshrc file in your home directory. If you are using PowerShell, it is worth noting that environment variables set in bash or zsh will persist to the pwsh session and the same applies to Windows.","title":"Persisting environment variables"},{"location":"sample-scripts/","text":"Sample Scripts \u00b6 This section contains a collection of sample scripts that automate managing the different services in Microsoft 365. If you'd like to add your script to the collection, let us know by submitting an issue on GitHub. You can browse the scripts by workload, using the navigation, or by topics, using the list below. adaptivecards \u00b6 Flow runs day summary report adoption \u00b6 Recognize most active users for a specific Team Share social champions to Teams ai \u00b6 Analyze User Profile Photos using Azure Computer Vision API apps \u00b6 List all Power Platform Environments and their Flows and Apps Deploy Microsoft Teams app from Azure DevOps Deploy Microsoft Teams personal app and add it to users List app usage in Microsoft Teams Removes Microsoft Teams personal app from users and Microsoft Teams app catalog azure \u00b6 Analyze User Profile Photos using Azure Computer Vision API Export a single flow to a Logic App Sync SharePoint Document Library Documents with Azure Storage Container cleanup \u00b6 Delete all Microsoft 365 groups and SharePoint sites Delete all Microsoft 365 groups Replace a user's membership in selected Microsoft 365 Groups or Teams Cancel all running flow runs for a flow in an environment Delete all (non-group connected) modern SharePoint sites Empty the tenant recycle bin Delete custom color themes from SharePoint Remove orphaned redirect sites Remove pending SharePoint API permission requests Delete custom SharePoint site designs Delete custom SharePoint site scripts Remove a Site Collection Admin User from all Site Collections Removes Microsoft Teams personal app from users and Microsoft Teams app catalog Remove Wiki tab in a Microsoft Teams channel Cleanup completed Microsoft To Do tasks compliance \u00b6 Detecting PII exists in SharePoint List using AWS Comprehend customizations \u00b6 Disable specified Tenant-wide Extension Export Configurations of Tenant Wide Extensions List all application customizers in a tenant List all tenant-wide extensions files \u00b6 Add multiple folders in libraries using a csv file Copy files to another SharePoint Library in another site Insert pictures in a SharePoint Document Library into a Word document List all checked out files in SharePoint List all documents with a specific name within a SharePoint site Lists number of files in all lists and folders for the given site List Attachment Names From SharePoint Lists For A Site List all large files within a SharePoint Site How to perform operations if a command is not covered by the CLI for Microsoft 365 Sync SharePoint Document Library Documents with Azure Storage Container Upload local files and folders to SharePoint Online flows \u00b6 Cancel all running flow runs for a flow in an environment Export all flows in environment Export a single flow to a Logic App Flow runs day summary report Inventory Flows By Creator Resubmit all failed flow runs for a flow in an environment Search flows for connections List all Power Platform Environments and their Flows and Apps groups \u00b6 Delete all Microsoft 365 groups and SharePoint sites Delete all Microsoft 365 groups Scan for Microsoft 365 Groups created with user's first or last name Bulk add/remove users to Microsoft Teams and Microsoft 365 Groups Replace a user's membership in selected Microsoft 365 Groups or Teams Replace an owner in a Microsoft 365 Group or Microsoft Team Add users to the Associated SharePoint Groups of a site from a CSV File Change group membership of all SharePoint Online sites List all external users in site groups across all site collections Create a Microsoft Team with channels from a Microsoft 365 Group guests \u00b6 List all external users in site groups across all site collections List all external users in all site collections libraries \u00b6 Add multiple folders in libraries using a csv file Add multiple lists in multiple sites Copy files to another SharePoint Library in another site Insert pictures in a SharePoint Document Library into a Word document Lists number of files in all lists and folders for the given site Setup example site listitems \u00b6 Copy list items between SharePoint lists List all items with unique permissions How to perform operations if a command is not covered by the CLI for Microsoft 365 lists \u00b6 Copy list items between SharePoint lists Ensure the Site Assets Library is created Hide SharePoint list from Site Contents List Attachment Names From SharePoint Lists For A Site List site collections and their lists Planner migration to SharePoint list Setup example site migration \u00b6 Export all flows in environment Export a single flow to a Logic App Add multiple tasks in Planner Add custom client-side web part to modern page Copy files to another SharePoint Library in another site Copy list items between SharePoint lists Planner migration to SharePoint list Sync SharePoint Document Library Documents with Azure Storage Container Upload local files and folders to SharePoint Online Export all channels in Microsoft Teams teams in the tenant Export conversations from Microsoft Teams Channels pages \u00b6 Add custom client-side web part to modern page pipelines \u00b6 Deploy Microsoft Teams app from Azure DevOps provisioning \u00b6 Add App Catalog to SharePoint site Add custom client-side web part to modern page Add multiple folders in libraries using a csv file Add multiple lists in multiple sites Disable specified Tenant-wide Extension Ensure the Site Assets Library is created Delete custom color themes from SharePoint Setup example site Bulk add members to Microsoft Teams team from CSV file Create a Microsoft Teams team and bulk add members from CSV file Create a Microsoft Team with channels from a Microsoft 365 Group Deploy Microsoft Teams app from Azure DevOps Deploy Microsoft Teams personal app and add it to users reports \u00b6 Scan for Microsoft 365 Groups created with user's first or last name Flow runs day summary report Inventory Flows By Creator Search flows for connections List all Power Platform Environments and their Flows and Apps Export Configurations of Tenant Wide Extensions List all application customizers in a tenant List all checked out files in SharePoint List all documents with a specific name within a SharePoint site Lists number of files in all lists and folders for the given site List Attachment Names From SharePoint Lists For A Site List all external users in site groups across all site collections List all failed site design for all sites List all large files within a SharePoint Site Lists active SharePoint site collection application catalogs List site collections and their lists List site collection owners List all tenant-wide extensions Monitor Site Collections Storage Usage Get all the Teams a specific user is part of Govern orphaned Microsoft Teams List all tabs in Microsoft Teams teams in the tenant List all team members in Microsoft Teams teams in the tenant List app usage in Microsoft Teams List Microsoft Teams teams, channels, and tabs in the tenant Monitor and notify Microsoft 365 health status security \u00b6 Analyze users for known data breaches with have i been pwned Bulk add/remove users to Microsoft Teams and Microsoft 365 Groups Replace a user's membership in selected Microsoft 365 Groups or Teams Replace an owner in a Microsoft 365 Group or Microsoft Team Replace an owner in a Microsoft 365 Group or Microsoft Team Add a Site Collection Admin using a csv file Add users to the Associated SharePoint Groups of a site from a CSV File Change group membership of all SharePoint Online sites Grant API permissions to SharePoint Azure AD Application List all items with unique permissions List site collection owners List all external users in all site collections Remove SharePoint API permissions Remove pending SharePoint API permission requests Remove a Site Collection Admin User from all Site Collections Replace site collection admin with another user Govern orphaned Microsoft Teams sites \u00b6 Delete all Microsoft 365 groups and SharePoint sites Add App Catalog to SharePoint site Delete all (non-group connected) modern SharePoint sites List all external users in site groups across all site collections List site collections and their lists Monitor Site Collections Storage Usage Remove orphaned redirect sites Remove a Site Collection Admin User from all Site Collections Setup example site tasks \u00b6 Add multiple tasks in Planner Planner migration to SharePoint list Cleanup completed Microsoft To Do tasks teams \u00b6 Bulk add/remove users to Microsoft Teams and Microsoft 365 Groups Replace a user's membership in selected Microsoft 365 Groups or Teams Replace an owner in a Microsoft 365 Group or Microsoft Team Create a Microsoft Teams team and bulk add members from CSV file Create a Microsoft Team with channels from a Microsoft 365 Group Export all channels in Microsoft Teams teams in the tenant Export conversations from Microsoft Teams Channels Get all the Teams a specific user is part of Govern orphaned Microsoft Teams List all tabs in Microsoft Teams teams in the tenant List all team members in Microsoft Teams teams in the tenant List app usage in Microsoft Teams List Microsoft Teams teams, channels, and tabs in the tenant List all Microsoft Teams team's Owners and Members Remove Wiki tab in a Microsoft Teams channel users \u00b6 Analyze User Profile Photos using Azure Computer Vision API Analyze users for known data breaches with have i been pwned Scan for Microsoft 365 Groups created with user's first or last name Bulk add/remove users to Microsoft Teams and Microsoft 365 Groups Replace a user's membership in selected Microsoft 365 Groups or Teams Replace an owner in a Microsoft 365 Group or Microsoft Team Inventory Flows By Creator Add a Site Collection Admin using a csv file Add users to the Associated SharePoint Groups of a site from a CSV File Change group membership of all SharePoint Online sites List all external users in site groups across all site collections List site collection owners List all external users in all site collections Remove a Site Collection Admin User from all Site Collections Replace site collection admin with another user Bulk add members to Microsoft Teams team from CSV file Create a Microsoft Teams team and bulk add members from CSV file Get all the Teams a specific user is part of Govern orphaned Microsoft Teams Deploy Microsoft Teams personal app and add it to users List all team members in Microsoft Teams teams in the tenant Recognize most active users for a specific Team Share social champions to Teams","title":"Introduction"},{"location":"sample-scripts/#sample-scripts","text":"This section contains a collection of sample scripts that automate managing the different services in Microsoft 365. If you'd like to add your script to the collection, let us know by submitting an issue on GitHub. You can browse the scripts by workload, using the navigation, or by topics, using the list below.","title":"Sample Scripts"},{"location":"sample-scripts/#adaptivecards","text":"Flow runs day summary report","title":"adaptivecards"},{"location":"sample-scripts/#adoption","text":"Recognize most active users for a specific Team Share social champions to Teams","title":"adoption"},{"location":"sample-scripts/#ai","text":"Analyze User Profile Photos using Azure Computer Vision API","title":"ai"},{"location":"sample-scripts/#apps","text":"List all Power Platform Environments and their Flows and Apps Deploy Microsoft Teams app from Azure DevOps Deploy Microsoft Teams personal app and add it to users List app usage in Microsoft Teams Removes Microsoft Teams personal app from users and Microsoft Teams app catalog","title":"apps"},{"location":"sample-scripts/#azure","text":"Analyze User Profile Photos using Azure Computer Vision API Export a single flow to a Logic App Sync SharePoint Document Library Documents with Azure Storage Container","title":"azure"},{"location":"sample-scripts/#cleanup","text":"Delete all Microsoft 365 groups and SharePoint sites Delete all Microsoft 365 groups Replace a user's membership in selected Microsoft 365 Groups or Teams Cancel all running flow runs for a flow in an environment Delete all (non-group connected) modern SharePoint sites Empty the tenant recycle bin Delete custom color themes from SharePoint Remove orphaned redirect sites Remove pending SharePoint API permission requests Delete custom SharePoint site designs Delete custom SharePoint site scripts Remove a Site Collection Admin User from all Site Collections Removes Microsoft Teams personal app from users and Microsoft Teams app catalog Remove Wiki tab in a Microsoft Teams channel Cleanup completed Microsoft To Do tasks","title":"cleanup"},{"location":"sample-scripts/#compliance","text":"Detecting PII exists in SharePoint List using AWS Comprehend","title":"compliance"},{"location":"sample-scripts/#customizations","text":"Disable specified Tenant-wide Extension Export Configurations of Tenant Wide Extensions List all application customizers in a tenant List all tenant-wide extensions","title":"customizations"},{"location":"sample-scripts/#files","text":"Add multiple folders in libraries using a csv file Copy files to another SharePoint Library in another site Insert pictures in a SharePoint Document Library into a Word document List all checked out files in SharePoint List all documents with a specific name within a SharePoint site Lists number of files in all lists and folders for the given site List Attachment Names From SharePoint Lists For A Site List all large files within a SharePoint Site How to perform operations if a command is not covered by the CLI for Microsoft 365 Sync SharePoint Document Library Documents with Azure Storage Container Upload local files and folders to SharePoint Online","title":"files"},{"location":"sample-scripts/#flows","text":"Cancel all running flow runs for a flow in an environment Export all flows in environment Export a single flow to a Logic App Flow runs day summary report Inventory Flows By Creator Resubmit all failed flow runs for a flow in an environment Search flows for connections List all Power Platform Environments and their Flows and Apps","title":"flows"},{"location":"sample-scripts/#groups","text":"Delete all Microsoft 365 groups and SharePoint sites Delete all Microsoft 365 groups Scan for Microsoft 365 Groups created with user's first or last name Bulk add/remove users to Microsoft Teams and Microsoft 365 Groups Replace a user's membership in selected Microsoft 365 Groups or Teams Replace an owner in a Microsoft 365 Group or Microsoft Team Add users to the Associated SharePoint Groups of a site from a CSV File Change group membership of all SharePoint Online sites List all external users in site groups across all site collections Create a Microsoft Team with channels from a Microsoft 365 Group","title":"groups"},{"location":"sample-scripts/#guests","text":"List all external users in site groups across all site collections List all external users in all site collections","title":"guests"},{"location":"sample-scripts/#libraries","text":"Add multiple folders in libraries using a csv file Add multiple lists in multiple sites Copy files to another SharePoint Library in another site Insert pictures in a SharePoint Document Library into a Word document Lists number of files in all lists and folders for the given site Setup example site","title":"libraries"},{"location":"sample-scripts/#listitems","text":"Copy list items between SharePoint lists List all items with unique permissions How to perform operations if a command is not covered by the CLI for Microsoft 365","title":"listitems"},{"location":"sample-scripts/#lists","text":"Copy list items between SharePoint lists Ensure the Site Assets Library is created Hide SharePoint list from Site Contents List Attachment Names From SharePoint Lists For A Site List site collections and their lists Planner migration to SharePoint list Setup example site","title":"lists"},{"location":"sample-scripts/#migration","text":"Export all flows in environment Export a single flow to a Logic App Add multiple tasks in Planner Add custom client-side web part to modern page Copy files to another SharePoint Library in another site Copy list items between SharePoint lists Planner migration to SharePoint list Sync SharePoint Document Library Documents with Azure Storage Container Upload local files and folders to SharePoint Online Export all channels in Microsoft Teams teams in the tenant Export conversations from Microsoft Teams Channels","title":"migration"},{"location":"sample-scripts/#pages","text":"Add custom client-side web part to modern page","title":"pages"},{"location":"sample-scripts/#pipelines","text":"Deploy Microsoft Teams app from Azure DevOps","title":"pipelines"},{"location":"sample-scripts/#provisioning","text":"Add App Catalog to SharePoint site Add custom client-side web part to modern page Add multiple folders in libraries using a csv file Add multiple lists in multiple sites Disable specified Tenant-wide Extension Ensure the Site Assets Library is created Delete custom color themes from SharePoint Setup example site Bulk add members to Microsoft Teams team from CSV file Create a Microsoft Teams team and bulk add members from CSV file Create a Microsoft Team with channels from a Microsoft 365 Group Deploy Microsoft Teams app from Azure DevOps Deploy Microsoft Teams personal app and add it to users","title":"provisioning"},{"location":"sample-scripts/#reports","text":"Scan for Microsoft 365 Groups created with user's first or last name Flow runs day summary report Inventory Flows By Creator Search flows for connections List all Power Platform Environments and their Flows and Apps Export Configurations of Tenant Wide Extensions List all application customizers in a tenant List all checked out files in SharePoint List all documents with a specific name within a SharePoint site Lists number of files in all lists and folders for the given site List Attachment Names From SharePoint Lists For A Site List all external users in site groups across all site collections List all failed site design for all sites List all large files within a SharePoint Site Lists active SharePoint site collection application catalogs List site collections and their lists List site collection owners List all tenant-wide extensions Monitor Site Collections Storage Usage Get all the Teams a specific user is part of Govern orphaned Microsoft Teams List all tabs in Microsoft Teams teams in the tenant List all team members in Microsoft Teams teams in the tenant List app usage in Microsoft Teams List Microsoft Teams teams, channels, and tabs in the tenant Monitor and notify Microsoft 365 health status","title":"reports"},{"location":"sample-scripts/#security","text":"Analyze users for known data breaches with have i been pwned Bulk add/remove users to Microsoft Teams and Microsoft 365 Groups Replace a user's membership in selected Microsoft 365 Groups or Teams Replace an owner in a Microsoft 365 Group or Microsoft Team Replace an owner in a Microsoft 365 Group or Microsoft Team Add a Site Collection Admin using a csv file Add users to the Associated SharePoint Groups of a site from a CSV File Change group membership of all SharePoint Online sites Grant API permissions to SharePoint Azure AD Application List all items with unique permissions List site collection owners List all external users in all site collections Remove SharePoint API permissions Remove pending SharePoint API permission requests Remove a Site Collection Admin User from all Site Collections Replace site collection admin with another user Govern orphaned Microsoft Teams","title":"security"},{"location":"sample-scripts/#sites","text":"Delete all Microsoft 365 groups and SharePoint sites Add App Catalog to SharePoint site Delete all (non-group connected) modern SharePoint sites List all external users in site groups across all site collections List site collections and their lists Monitor Site Collections Storage Usage Remove orphaned redirect sites Remove a Site Collection Admin User from all Site Collections Setup example site","title":"sites"},{"location":"sample-scripts/#tasks","text":"Add multiple tasks in Planner Planner migration to SharePoint list Cleanup completed Microsoft To Do tasks","title":"tasks"},{"location":"sample-scripts/#teams","text":"Bulk add/remove users to Microsoft Teams and Microsoft 365 Groups Replace a user's membership in selected Microsoft 365 Groups or Teams Replace an owner in a Microsoft 365 Group or Microsoft Team Create a Microsoft Teams team and bulk add members from CSV file Create a Microsoft Team with channels from a Microsoft 365 Group Export all channels in Microsoft Teams teams in the tenant Export conversations from Microsoft Teams Channels Get all the Teams a specific user is part of Govern orphaned Microsoft Teams List all tabs in Microsoft Teams teams in the tenant List all team members in Microsoft Teams teams in the tenant List app usage in Microsoft Teams List Microsoft Teams teams, channels, and tabs in the tenant List all Microsoft Teams team's Owners and Members Remove Wiki tab in a Microsoft Teams channel","title":"teams"},{"location":"sample-scripts/#users","text":"Analyze User Profile Photos using Azure Computer Vision API Analyze users for known data breaches with have i been pwned Scan for Microsoft 365 Groups created with user's first or last name Bulk add/remove users to Microsoft Teams and Microsoft 365 Groups Replace a user's membership in selected Microsoft 365 Groups or Teams Replace an owner in a Microsoft 365 Group or Microsoft Team Inventory Flows By Creator Add a Site Collection Admin using a csv file Add users to the Associated SharePoint Groups of a site from a CSV File Change group membership of all SharePoint Online sites List all external users in site groups across all site collections List site collection owners List all external users in all site collections Remove a Site Collection Admin User from all Site Collections Replace site collection admin with another user Bulk add members to Microsoft Teams team from CSV file Create a Microsoft Teams team and bulk add members from CSV file Get all the Teams a specific user is part of Govern orphaned Microsoft Teams Deploy Microsoft Teams personal app and add it to users List all team members in Microsoft Teams teams in the tenant Recognize most active users for a specific Team Share social champions to Teams","title":"users"}]}